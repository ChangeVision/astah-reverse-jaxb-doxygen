<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="featdefs_8cpp" kind="file">
    <compoundname>featdefs.cpp</compoundname>
    <includes refid="featdefs_8h" local="yes">featdefs.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="danerror_8h" local="yes">danerror.h</includes>
    <includes refid="scanutils_8h" local="yes">scanutils.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="24238">
        <label>assert.h</label>
      </node>
      <node id="24227">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="24215">
        <label>stdlib.h</label>
      </node>
      <node id="24212">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="24213" relation="include">
        </childnode>
      </node>
      <node id="24242">
        <label>scanutils.h</label>
        <link refid="scanutils_8h"/>
      </node>
      <node id="24228">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="24210" relation="include">
        </childnode>
      </node>
      <node id="24214">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="24215" relation="include">
        </childnode>
        <childnode refid="24216" relation="include">
        </childnode>
        <childnode refid="24210" relation="include">
        </childnode>
        <childnode refid="24217" relation="include">
        </childnode>
        <childnode refid="24219" relation="include">
        </childnode>
        <childnode refid="24220" relation="include">
        </childnode>
      </node>
      <node id="24209">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="24210" relation="include">
        </childnode>
        <childnode refid="24211" relation="include">
        </childnode>
        <childnode refid="24214" relation="include">
        </childnode>
        <childnode refid="24221" relation="include">
        </childnode>
      </node>
      <node id="24218">
        <label>stddef.h</label>
      </node>
      <node id="24240">
        <label>memory.h</label>
      </node>
      <node id="24237">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="24238" relation="include">
        </childnode>
        <childnode refid="24211" relation="include">
        </childnode>
        <childnode refid="24230" relation="include">
        </childnode>
        <childnode refid="24239" relation="include">
        </childnode>
      </node>
      <node id="24219">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="24211" relation="include">
        </childnode>
      </node>
      <node id="24213">
        <label>limits.h</label>
      </node>
      <node id="24226">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="24223" relation="include">
        </childnode>
      </node>
      <node id="24216">
        <label>string.h</label>
      </node>
      <node id="24239">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="24240" relation="include">
        </childnode>
        <childnode refid="24216" relation="include">
        </childnode>
      </node>
      <node id="24222">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="24223" relation="include">
        </childnode>
        <childnode refid="24224" relation="include">
        </childnode>
        <childnode refid="24227" relation="include">
        </childnode>
        <childnode refid="24228" relation="include">
        </childnode>
        <childnode refid="24229" relation="include">
        </childnode>
      </node>
      <node id="24232">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="24211" relation="include">
        </childnode>
      </node>
      <node id="24205">
        <label>classify/featdefs.cpp</label>
        <link refid="featdefs.cpp"/>
        <childnode refid="24206" relation="include">
        </childnode>
        <childnode refid="24236" relation="include">
        </childnode>
        <childnode refid="24241" relation="include">
        </childnode>
        <childnode refid="24242" relation="include">
        </childnode>
        <childnode refid="24216" relation="include">
        </childnode>
        <childnode refid="24210" relation="include">
        </childnode>
      </node>
      <node id="24241">
        <label>danerror.h</label>
        <link refid="danerror_8h"/>
      </node>
      <node id="24220">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="24219" relation="include">
        </childnode>
      </node>
      <node id="24223">
        <label>math.h</label>
      </node>
      <node id="24221">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="24219" relation="include">
        </childnode>
      </node>
      <node id="24236">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="24211" relation="include">
        </childnode>
        <childnode refid="24237" relation="include">
        </childnode>
      </node>
      <node id="24235">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="24223" relation="include">
        </childnode>
        <childnode refid="24208" relation="include">
        </childnode>
      </node>
      <node id="24207">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="24208" relation="include">
        </childnode>
        <childnode refid="24210" relation="include">
        </childnode>
      </node>
      <node id="24230">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="24210" relation="include">
        </childnode>
        <childnode refid="24231" relation="include">
        </childnode>
        <childnode refid="24234" relation="include">
        </childnode>
      </node>
      <node id="24231">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="24210" relation="include">
        </childnode>
        <childnode refid="24215" relation="include">
        </childnode>
        <childnode refid="24232" relation="include">
        </childnode>
        <childnode refid="24219" relation="include">
        </childnode>
        <childnode refid="24233" relation="include">
        </childnode>
        <childnode refid="24227" relation="include">
        </childnode>
      </node>
      <node id="24217">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="24218" relation="include">
        </childnode>
        <childnode refid="24211" relation="include">
        </childnode>
      </node>
      <node id="24206">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="24207" relation="include">
        </childnode>
      </node>
      <node id="24225">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="24210" relation="include">
        </childnode>
        <childnode refid="24211" relation="include">
        </childnode>
        <childnode refid="24214" relation="include">
        </childnode>
        <childnode refid="24221" relation="include">
        </childnode>
      </node>
      <node id="24224">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="24210" relation="include">
        </childnode>
        <childnode refid="24223" relation="include">
        </childnode>
        <childnode refid="24225" relation="include">
        </childnode>
        <childnode refid="24226" relation="include">
        </childnode>
      </node>
      <node id="24229">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="24230" relation="include">
        </childnode>
      </node>
      <node id="24211">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="24212" relation="include">
        </childnode>
      </node>
      <node id="24210">
        <label>stdio.h</label>
      </node>
      <node id="24234">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="24210" relation="include">
        </childnode>
        <childnode refid="24216" relation="include">
        </childnode>
        <childnode refid="24212" relation="include">
        </childnode>
        <childnode refid="24217" relation="include">
        </childnode>
      </node>
      <node id="24208">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="24209" relation="include">
        </childnode>
        <childnode refid="24222" relation="include">
        </childnode>
        <childnode refid="24235" relation="include">
        </childnode>
      </node>
      <node id="24233">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="24210" relation="include">
        </childnode>
        <childnode refid="24216" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="featdefs_8cpp_1ada39950713e21f70f302841f185fba09" prot="public" static="no">
        <name>ILLEGAL_NUM_SETS</name>
        <initializer>3001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>define errors triggered by this module </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="34" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="featdefs_8cpp_1af9508e257a32a6046ee5b30079a50bdb" prot="public" static="no">
        <name>PICO_FEATURE_LENGTH</name>
        <initializer>0.05</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="36" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="featdefs_8cpp_1af83d597eb1e077f4ad2b082be6698d20" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* kMicroFeatureType</definition>
        <argsstring></argsstring>
        <name>kMicroFeatureType</name>
        <initializer>= &quot;mf&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="41" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1aba437789a6614f23dc6d18a5a803ccc8" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* kCNFeatureType</definition>
        <argsstring></argsstring>
        <name>kCNFeatureType</name>
        <initializer>= &quot;cn&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1abf5c61b4ecdfe9301e0f998156474c6b" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* kIntFeatureType</definition>
        <argsstring></argsstring>
        <name>kIntFeatureType</name>
        <initializer>= &quot;if&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="43" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1abada1502d146a88fadcc73af54ae7540" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* kGeoFeatureType</definition>
        <argsstring></argsstring>
        <name>kGeoFeatureType</name>
        <initializer>= &quot;tb&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1acceb0a7b1c526c8a77183836a4501f86" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
        <definition>const PARAM_DESC MicroFeatureParams[]</definition>
        <argsstring>[]</argsstring>
        <name>MicroFeatureParams</name>
        <initializer>= {
{ 0 ,  0 ,  -0.5 ,  0.5 ,   ( 0.5 ) - ( -0.5 ), ((( 0.5 ) - ( -0.5 ))/2.0), ((( 0.5 ) + ( -0.5 ))/2.0)},
{ 0 ,  0 ,  -0.25 ,  0.75 ,   ( 0.75 ) - ( -0.25 ), ((( 0.75 ) - ( -0.25 ))/2.0), ((( 0.75 ) + ( -0.25 ))/2.0)},
{ 0 ,  1 ,  0.0 ,  1.0 ,   ( 1.0 ) - ( 0.0 ), ((( 1.0 ) - ( 0.0 ))/2.0), ((( 1.0 ) + ( 0.0 ))/2.0)},
{ 1 ,  0 ,  0.0 ,  1.0 ,   ( 1.0 ) - ( 0.0 ), ((( 1.0 ) - ( 0.0 ))/2.0), ((( 1.0 ) + ( 0.0 ))/2.0)},
{ 0 ,  1 ,  -0.5 ,  0.5 ,   ( 0.5 ) - ( -0.5 ), ((( 0.5 ) - ( -0.5 ))/2.0), ((( 0.5 ) + ( -0.5 ))/2.0)},
{ 0 ,  1 ,  -0.5 ,  0.5 ,   ( 0.5 ) - ( -0.5 ), ((( 0.5 ) - ( -0.5 ))/2.0), ((( 0.5 ) + ( -0.5 ))/2.0)},
 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1aa889ab53df925b2ccc5a2871eca3eff7" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t" kindref="compound">FEATURE_DESC_STRUCT</ref></type>
        <definition>const FEATURE_DESC_STRUCT MicroFeatureDesc</definition>
        <argsstring></argsstring>
        <name>MicroFeatureDesc</name>
        <initializer>= {   (( 5 ) + ( 1 )),  <ref refid="featdefs_8h_1af83d597eb1e077f4ad2b082be6698d20" kindref="member">kMicroFeatureType</ref> ,  <ref refid="featdefs_8cpp_1acceb0a7b1c526c8a77183836a4501f86" kindref="member">MicroFeatureParams</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <heading level="2">Global Data Definitions and Declarations </heading>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1a05b1d59076376b9fd62b1cf08f8ece14" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
        <definition>const PARAM_DESC CharNormParams[]</definition>
        <argsstring>[]</argsstring>
        <name>CharNormParams</name>
        <initializer>= {
{ 0 ,  0 ,  -0.25 ,  0.75 ,   ( 0.75 ) - ( -0.25 ), ((( 0.75 ) - ( -0.25 ))/2.0), ((( 0.75 ) + ( -0.25 ))/2.0)},
{ 0 ,  1 ,  0.0 ,  1.0 ,   ( 1.0 ) - ( 0.0 ), ((( 1.0 ) - ( 0.0 ))/2.0), ((( 1.0 ) + ( 0.0 ))/2.0)},
{ 0 ,  0 ,  0.0 ,  1.0 ,   ( 1.0 ) - ( 0.0 ), ((( 1.0 ) - ( 0.0 ))/2.0), ((( 1.0 ) + ( 0.0 ))/2.0)},
{ 0 ,  0 ,  0.0 ,  1.0 ,   ( 1.0 ) - ( 0.0 ), ((( 1.0 ) - ( 0.0 ))/2.0), ((( 1.0 ) + ( 0.0 ))/2.0)},
 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1aeaae0c3ba332fe6addd19ed202a3ecb7" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t" kindref="compound">FEATURE_DESC_STRUCT</ref></type>
        <definition>const FEATURE_DESC_STRUCT CharNormDesc</definition>
        <argsstring></argsstring>
        <name>CharNormDesc</name>
        <initializer>= {   (( 4 ) + ( 0 )),  <ref refid="featdefs_8h_1aba437789a6614f23dc6d18a5a803ccc8" kindref="member">kCNFeatureType</ref> ,  <ref refid="featdefs_8cpp_1a05b1d59076376b9fd62b1cf08f8ece14" kindref="member">CharNormParams</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="66" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1ad7b86875046c115cf864734efccaad6d" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
        <definition>const PARAM_DESC IntFeatParams[]</definition>
        <argsstring>[]</argsstring>
        <name>IntFeatParams</name>
        <initializer>= {
{ 0 ,  0 ,  0.0 ,  255.0 ,   ( 255.0 ) - ( 0.0 ), ((( 255.0 ) - ( 0.0 ))/2.0), ((( 255.0 ) + ( 0.0 ))/2.0)},
{ 0 ,  0 ,  0.0 ,  255.0 ,   ( 255.0 ) - ( 0.0 ), ((( 255.0 ) - ( 0.0 ))/2.0), ((( 255.0 ) + ( 0.0 ))/2.0)},
{ 1 ,  0 ,  0.0 ,  255.0 ,   ( 255.0 ) - ( 0.0 ), ((( 255.0 ) - ( 0.0 ))/2.0), ((( 255.0 ) + ( 0.0 ))/2.0)},
 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="69" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1abcae860ec494b3a15b6db31638a1d2f2" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t" kindref="compound">FEATURE_DESC_STRUCT</ref></type>
        <definition>const FEATURE_DESC_STRUCT IntFeatDesc</definition>
        <argsstring></argsstring>
        <name>IntFeatDesc</name>
        <initializer>= {   (( 2 ) + ( 1 )),  <ref refid="featdefs_8h_1abf5c61b4ecdfe9301e0f998156474c6b" kindref="member">kIntFeatureType</ref> ,  <ref refid="featdefs_8cpp_1ad7b86875046c115cf864734efccaad6d" kindref="member">IntFeatParams</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="75" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1a34b80bf1dae114fcc41876f49cf839b8" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
        <definition>const PARAM_DESC GeoFeatParams[]</definition>
        <argsstring>[]</argsstring>
        <name>GeoFeatParams</name>
        <initializer>= {
{ 0 ,  0 ,  0.0 ,  255.0 ,   ( 255.0 ) - ( 0.0 ), ((( 255.0 ) - ( 0.0 ))/2.0), ((( 255.0 ) + ( 0.0 ))/2.0)},
{ 0 ,  0 ,  0.0 ,  255.0 ,   ( 255.0 ) - ( 0.0 ), ((( 255.0 ) - ( 0.0 ))/2.0), ((( 255.0 ) + ( 0.0 ))/2.0)},
{ 0 ,  0 ,  0.0 ,  255.0 ,   ( 255.0 ) - ( 0.0 ), ((( 255.0 ) - ( 0.0 ))/2.0), ((( 255.0 ) + ( 0.0 ))/2.0)},
 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="78" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1ad083578933c187809f33f7e7cb6aac48" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t" kindref="compound">FEATURE_DESC_STRUCT</ref></type>
        <definition>const FEATURE_DESC_STRUCT GeoFeatDesc</definition>
        <argsstring></argsstring>
        <name>GeoFeatDesc</name>
        <initializer>= {   (( 3 ) + ( 0 )),  <ref refid="featdefs_8h_1abada1502d146a88fadcc73af54ae7540" kindref="member">kGeoFeatureType</ref> ,  <ref refid="featdefs_8cpp_1a34b80bf1dae114fcc41876f49cf839b8" kindref="member">GeoFeatParams</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="84" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1af494eeed1e7b08eba0c73678dde32e31" prot="public" static="no" mutable="no">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 PicoFeatureLength</definition>
        <argsstring></argsstring>
        <name>PicoFeatureLength</name>
        <initializer>=  0.05</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <heading level="2">Global Data Definitions and Declarations </heading>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="91" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1ac8504ebb63a3f88458e5b78e5754d4a6" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
        <definition>const PARAM_DESC PicoFeatParams[]</definition>
        <argsstring>[]</argsstring>
        <name>PicoFeatParams</name>
        <initializer>= {
{ 0 ,  0 ,  -0.25 ,  0.75 ,   ( 0.75 ) - ( -0.25 ), ((( 0.75 ) - ( -0.25 ))/2.0), ((( 0.75 ) + ( -0.25 ))/2.0)},
{ 1 ,  0 ,  0.0 ,  1.0 ,   ( 1.0 ) - ( 0.0 ), ((( 1.0 ) - ( 0.0 ))/2.0), ((( 1.0 ) + ( 0.0 ))/2.0)},
{ 0 ,  0 ,  -0.5 ,  0.5 ,   ( 0.5 ) - ( -0.5 ), ((( 0.5 ) - ( -0.5 ))/2.0), ((( 0.5 ) + ( -0.5 ))/2.0)},
 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1af5839e8b451629f606795826909f221b" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t" kindref="compound">FEATURE_DESC_STRUCT</ref></type>
        <definition>const FEATURE_DESC_STRUCT PicoFeatDesc</definition>
        <argsstring></argsstring>
        <name>PicoFeatDesc</name>
        <initializer>= {   (( 2 ) + ( 1 )),  &quot;pf&quot; ,  PicoFeatParams }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="98" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1ad515470d81cc6cf011b68624575a76b8" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
        <definition>const PARAM_DESC OutlineFeatParams[]</definition>
        <argsstring>[]</argsstring>
        <name>OutlineFeatParams</name>
        <initializer>= {
{ 0 ,  0 ,  -0.5 ,  0.5 ,   ( 0.5 ) - ( -0.5 ), ((( 0.5 ) - ( -0.5 ))/2.0), ((( 0.5 ) + ( -0.5 ))/2.0)},
{ 0 ,  0 ,  -0.25 ,  0.75 ,   ( 0.75 ) - ( -0.25 ), ((( 0.75 ) - ( -0.25 ))/2.0), ((( 0.75 ) + ( -0.25 ))/2.0)},
{ 0 ,  0 ,  0.0 ,  1.0 ,   ( 1.0 ) - ( 0.0 ), ((( 1.0 ) - ( 0.0 ))/2.0), ((( 1.0 ) + ( 0.0 ))/2.0)},
{ 1 ,  0 ,  0.0 ,  1.0 ,   ( 1.0 ) - ( 0.0 ), ((( 1.0 ) - ( 0.0 ))/2.0), ((( 1.0 ) + ( 0.0 ))/2.0)},
 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="101" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1a72a26e08f0fd9771c2b6af211bb1a6c3" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t" kindref="compound">FEATURE_DESC_STRUCT</ref></type>
        <definition>const FEATURE_DESC_STRUCT OutlineFeatDesc</definition>
        <argsstring></argsstring>
        <name>OutlineFeatDesc</name>
        <initializer>= {   (( 3 ) + ( 1 )),  &quot;of&quot; ,  OutlineFeatParams }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="108" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="featdefs_8cpp_1a6b5fe89e2a17210e0f58766352b28cb9" prot="public" static="yes" mutable="no">
        <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t" kindref="compound">FEATURE_DESC_STRUCT</ref> *</type>
        <definition>const FEATURE_DESC_STRUCT* DescDefs[4]</definition>
        <argsstring>[4]</argsstring>
        <name>DescDefs</name>
        <initializer>= {
  &amp;<ref refid="featdefs_8h_1aa889ab53df925b2ccc5a2871eca3eff7" kindref="member">MicroFeatureDesc</ref>,
  &amp;<ref refid="featdefs_8h_1aeaae0c3ba332fe6addd19ed202a3ecb7" kindref="member">CharNormDesc</ref>,
  &amp;<ref refid="featdefs_8h_1abcae860ec494b3a15b6db31638a1d2f2" kindref="member">IntFeatDesc</ref>,
  &amp;<ref refid="featdefs_8h_1ad083578933c187809f33f7e7cb6aac48" kindref="member">GeoFeatDesc</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="111" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="featdefs_8cpp_1a6e4c84ab01e39577e4a74d9ab1eff68b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitFeatureDefs</definition>
        <argsstring>(FEATURE_DEFS_STRUCT *featuredefs)</argsstring>
        <name>InitFeatureDefs</name>
        <param>
          <type><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> *</type>
          <declname>featuredefs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="121" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="121" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="featdefs_8cpp_1ae2a92eefc3755300284119692527e3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeCharDescription</definition>
        <argsstring>(CHAR_DESC CharDesc)</argsstring>
        <name>FreeCharDescription</name>
        <param>
          <type><ref refid="featdefs_8h_1a41cfd9e7d2129a4e068683b2bafab0ee" kindref="member">CHAR_DESC</ref></type>
          <declname>CharDesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release the memory consumed by the specified character description and all of the features in that description.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>CharDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>character description to be deallocated</para></parameterdescription>
</parameteritem>
</parameterlist>
Globals:<itemizedlist>
<listitem><para>none</para></listitem></itemizedlist>
</para><para><simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Wed May 23 13:52:19 1990, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="141" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="featdefs_8cpp_1a860f7517bac9477e79551e501df549ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="featdefs_8h_1a41cfd9e7d2129a4e068683b2bafab0ee" kindref="member">CHAR_DESC</ref></type>
        <definition>CHAR_DESC NewCharDescription</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;FeatureDefs)</argsstring>
        <name>NewCharDescription</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>FeatureDefs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate a new character description, initialize its feature sets to be empty, and return it.</para><para>Globals:<itemizedlist>
<listitem><para>none</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>New character description structure. </para></simplesect>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Wed May 23 15:27:10 1990, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="164" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="164" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="featdefs_8cpp_1a52fa2e188f92a8642277f83873efa212" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteCharDescription</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;FeatureDefs, FILE *File, CHAR_DESC CharDesc)</argsstring>
        <name>WriteCharDescription</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>FeatureDefs</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="featdefs_8h_1a41cfd9e7d2129a4e068683b2bafab0ee" kindref="member">CHAR_DESC</ref></type>
          <declname>CharDesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a textual representation of CharDesc to File. The format used is to write out the number of feature sets which will be written followed by a representation of each feature set.</para><para>Each set starts with the short name for that feature followed by a description of the feature set. Feature sets which are not present are not written.</para><para>Globals:<itemizedlist>
<listitem><para>none</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FeatureDefs</parametername>
</parameternamelist>
<parameterdescription>
<para>definitions of feature types/extractors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>open text file to write CharDesc to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>CharDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>character description to write to File</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Wed May 23 17:21:18 1990, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="200" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="200" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="featdefs_8cpp_1af8fa799b7b0c0c8e18648a521ef2775f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ValidCharDescription</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;FeatureDefs, CHAR_DESC CharDesc)</argsstring>
        <name>ValidCharDescription</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>FeatureDefs</declname>
        </param>
        <param>
          <type><ref refid="featdefs_8h_1a41cfd9e7d2129a4e068683b2bafab0ee" kindref="member">CHAR_DESC</ref></type>
          <declname>CharDesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="219" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="219" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="featdefs_8cpp_1ae1558f5d4119a9e651a85e10887be9f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="featdefs_8h_1a41cfd9e7d2129a4e068683b2bafab0ee" kindref="member">CHAR_DESC</ref></type>
        <definition>CHAR_DESC ReadCharDescription</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;FeatureDefs, FILE *File)</argsstring>
        <name>ReadCharDescription</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>FeatureDefs</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a character description from File, and return a data structure containing this information. The data is formatted as follows: <verbatim>  NumberOfSets
          ShortNameForSet1 Set1
          ShortNameForSet2 Set2
          ...
</verbatim></para><para>Globals:<itemizedlist>
<listitem><para>none</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FeatureDefs</parametername>
</parameternamelist>
<parameterdescription>
<para>definitions of feature types/extractors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>open text file to read character description from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Character description read from File. </para></simplesect>
<simplesect kind="note"><para>Exceptions:<itemizedlist>
<listitem><para>ILLEGAL_NUM_SETS </para></listitem></itemizedlist>
</para><simplesectsep/><para>History: Wed May 23 17:32:48 1990, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="261" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="261" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="featdefs_8cpp_1a46a09d60beb44b9c9156346595f352ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ShortNameToFeatureType</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;FeatureDefs, const char *ShortName)</argsstring>
        <name>ShortNameToFeatureType</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>FeatureDefs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ShortName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search thru all features currently defined and return the feature type for the feature with the specified short name. Trap an error if the specified name is not found.</para><para>Globals:<itemizedlist>
<listitem><para>none</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FeatureDefs</parametername>
</parameternamelist>
<parameterdescription>
<para>definitions of feature types/extractors </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ShortName</parametername>
</parameternamelist>
<parameterdescription>
<para>short name of a feature type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Feature type which corresponds to ShortName. </para></simplesect>
<simplesect kind="note"><para>Exceptions:<itemizedlist>
<listitem><para>ILLEGAL_SHORT_NAME </para></listitem></itemizedlist>
</para><simplesectsep/><para>History: Wed May 23 15:36:05 1990, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" line="300" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/featdefs.cpp" bodystart="300" bodyend="310"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/><sp/>featdefs.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Definitions<sp/>of<sp/>currently<sp/>defined<sp/>feature<sp/>types.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>May<sp/>21<sp/>10:26:21<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Include<sp/>Files<sp/>and<sp/>Type<sp/>Defines</highlight></codeline>
<codeline lineno="20"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mathfix_8h" kindref="compound">mathfix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="featdefs_8h" kindref="compound">featdefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="danerror_8h" kindref="compound">danerror.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scanutils_8h" kindref="compound">scanutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor">#define<sp/>ILLEGAL_NUM_SETS<sp/><sp/>3001</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PICO_FEATURE_LENGTH<sp/>0.05</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Global<sp/>Data<sp/>Definitions<sp/>and<sp/>Declarations</highlight></codeline>
<codeline lineno="40"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="featdefs_8cpp_1af83d597eb1e077f4ad2b082be6698d20" kindref="member">kMicroFeatureType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;mf&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="featdefs_8cpp_1aba437789a6614f23dc6d18a5a803ccc8" kindref="member">kCNFeatureType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;cn&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="featdefs_8cpp_1abf5c61b4ecdfe9301e0f998156474c6b" kindref="member">kIntFeatureType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;if&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="featdefs_8cpp_1abada1502d146a88fadcc73af54ae7540" kindref="member">kGeoFeatureType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;tb&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>all<sp/>of<sp/>the<sp/>parameters<sp/>for<sp/>the<sp/>MicroFeature<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="ocrfeatures_8h_1ab167eb0dd11bcdc485185da17528554e" kindref="member">StartParamDesc</ref>(<ref refid="featdefs_8cpp_1acceb0a7b1c526c8a77183836a4501f86" kindref="member">MicroFeatureParams</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="ocrfeatures_8h_1a2c9b19bf68ac985b694b63908c903ac7" kindref="member">DefineParam</ref>(0,<sp/>0,<sp/>-0.5,<sp/>0.5)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>-0.25,<sp/>0.75)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">DefineParam(0,<sp/>1,<sp/>0.0,<sp/>1.0)</highlight></codeline>
<codeline lineno="51"><highlight class="normal">DefineParam(1,<sp/>0,<sp/>0.0,<sp/>1.0)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">DefineParam<sp/>(0,<sp/>1,<sp/>-0.5,<sp/>0.5)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">DefineParam<sp/>(0,<sp/>1,<sp/>-0.5,<sp/>0.5)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="ocrfeatures_8h_1a24f96cc11dfea22b55b18b2e991be813" kindref="member">EndParamDesc</ref></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>define<sp/>the<sp/>feature<sp/>type<sp/>itself<sp/>(see<sp/>features.h<sp/>for<sp/>parameters).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="ocrfeatures_8h_1a6998a902eeedeb654f5209cd390c69c3" kindref="member">DefineFeature</ref>(<ref refid="featdefs_8cpp_1aa889ab53df925b2ccc5a2871eca3eff7" kindref="member">MicroFeatureDesc</ref>,<sp/>5,<sp/>1,<sp/><ref refid="featdefs_8cpp_1af83d597eb1e077f4ad2b082be6698d20" kindref="member">kMicroFeatureType</ref>,<sp/><ref refid="featdefs_8cpp_1acceb0a7b1c526c8a77183836a4501f86" kindref="member">MicroFeatureParams</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>all<sp/>of<sp/>the<sp/>parameters<sp/>for<sp/>the<sp/>NormFeat<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="ocrfeatures_8h_1ab167eb0dd11bcdc485185da17528554e" kindref="member">StartParamDesc</ref><sp/>(<ref refid="featdefs_8cpp_1a05b1d59076376b9fd62b1cf08f8ece14" kindref="member">CharNormParams</ref>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>-0.25,<sp/>0.75)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">DefineParam(0,<sp/>1,<sp/>0.0,<sp/>1.0)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>0.0,<sp/>1.0)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>0.0,<sp/>1.0)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="ocrfeatures_8h_1a24f96cc11dfea22b55b18b2e991be813" kindref="member">EndParamDesc</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>define<sp/>the<sp/>feature<sp/>type<sp/>itself<sp/>(see<sp/>features.h<sp/>for<sp/>parameters).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="ocrfeatures_8h_1a6998a902eeedeb654f5209cd390c69c3" kindref="member">DefineFeature</ref>(<ref refid="featdefs_8cpp_1aeaae0c3ba332fe6addd19ed202a3ecb7" kindref="member">CharNormDesc</ref>,<sp/>4,<sp/>0,<sp/><ref refid="featdefs_8cpp_1aba437789a6614f23dc6d18a5a803ccc8" kindref="member">kCNFeatureType</ref>,<sp/><ref refid="featdefs_8cpp_1a05b1d59076376b9fd62b1cf08f8ece14" kindref="member">CharNormParams</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>all<sp/>of<sp/>the<sp/>parameters<sp/>for<sp/>the<sp/>IntFeature<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="ocrfeatures_8h_1ab167eb0dd11bcdc485185da17528554e" kindref="member">StartParamDesc</ref>(<ref refid="featdefs_8cpp_1ad7b86875046c115cf864734efccaad6d" kindref="member">IntFeatParams</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>0.0,<sp/>255.0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>0.0,<sp/>255.0)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">DefineParam(1,<sp/>0,<sp/>0.0,<sp/>255.0)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="ocrfeatures_8h_1a24f96cc11dfea22b55b18b2e991be813" kindref="member">EndParamDesc</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>define<sp/>the<sp/>feature<sp/>type<sp/>itself<sp/>(see<sp/>features.h<sp/>for<sp/>parameters).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="ocrfeatures_8h_1a6998a902eeedeb654f5209cd390c69c3" kindref="member">DefineFeature</ref>(<ref refid="featdefs_8cpp_1abcae860ec494b3a15b6db31638a1d2f2" kindref="member">IntFeatDesc</ref>,<sp/>2,<sp/>1,<sp/><ref refid="featdefs_8cpp_1abf5c61b4ecdfe9301e0f998156474c6b" kindref="member">kIntFeatureType</ref>,<sp/><ref refid="featdefs_8cpp_1ad7b86875046c115cf864734efccaad6d" kindref="member">IntFeatParams</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>all<sp/>of<sp/>the<sp/>parameters<sp/>for<sp/>the<sp/>GeoFeature<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="ocrfeatures_8h_1ab167eb0dd11bcdc485185da17528554e" kindref="member">StartParamDesc</ref>(<ref refid="featdefs_8cpp_1a34b80bf1dae114fcc41876f49cf839b8" kindref="member">GeoFeatParams</ref>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>0.0,<sp/>255.0)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>0.0,<sp/>255.0)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>0.0,<sp/>255.0)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="ocrfeatures_8h_1a24f96cc11dfea22b55b18b2e991be813" kindref="member">EndParamDesc</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>define<sp/>the<sp/>feature<sp/>type<sp/>itself<sp/>(see<sp/>features.h<sp/>for<sp/>parameters).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="ocrfeatures_8h_1a6998a902eeedeb654f5209cd390c69c3" kindref="member">DefineFeature</ref>(<ref refid="featdefs_8cpp_1ad083578933c187809f33f7e7cb6aac48" kindref="member">GeoFeatDesc</ref>,<sp/>3,<sp/>0,<sp/><ref refid="featdefs_8cpp_1abada1502d146a88fadcc73af54ae7540" kindref="member">kGeoFeatureType</ref>,<sp/><ref refid="featdefs_8cpp_1a34b80bf1dae114fcc41876f49cf839b8" kindref="member">GeoFeatParams</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Other<sp/>features<sp/>used<sp/>for<sp/>training<sp/>the<sp/>adaptive<sp/>classifier,<sp/>but<sp/>not<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>during<sp/>normal<sp/>training,<sp/>therefore<sp/>not<sp/>in<sp/>the<sp/>DescDefs<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>all<sp/>of<sp/>the<sp/>parameters<sp/>for<sp/>the<sp/>PicoFeature<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>knob<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>adjust<sp/>pico-feature<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="featdefs_8cpp_1af494eeed1e7b08eba0c73678dde32e31" kindref="member">PicoFeatureLength</ref><sp/>=<sp/><ref refid="featdefs_8cpp_1af9508e257a32a6046ee5b30079a50bdb" kindref="member">PICO_FEATURE_LENGTH</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="ocrfeatures_8h_1ab167eb0dd11bcdc485185da17528554e" kindref="member">StartParamDesc</ref>(<ref refid="featdefs_8cpp_1ac8504ebb63a3f88458e5b78e5754d4a6" kindref="member">PicoFeatParams</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>-0.25,<sp/>0.75)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">DefineParam(1,<sp/>0,<sp/>0.0,<sp/>1.0)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>-0.5,<sp/>0.5)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="ocrfeatures_8h_1a24f96cc11dfea22b55b18b2e991be813" kindref="member">EndParamDesc</ref></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>define<sp/>the<sp/>feature<sp/>type<sp/>itself<sp/>(see<sp/>features.h<sp/>for<sp/>parameters).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="ocrfeatures_8h_1a6998a902eeedeb654f5209cd390c69c3" kindref="member">DefineFeature</ref>(<ref refid="featdefs_8cpp_1af5839e8b451629f606795826909f221b" kindref="member">PicoFeatDesc</ref>,<sp/>2,<sp/>1,<sp/>&quot;pf&quot;,<sp/><ref refid="featdefs_8cpp_1ac8504ebb63a3f88458e5b78e5754d4a6" kindref="member">PicoFeatParams</ref>)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>all<sp/>of<sp/>the<sp/>parameters<sp/>for<sp/>the<sp/>OutlineFeature<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="ocrfeatures_8h_1ab167eb0dd11bcdc485185da17528554e" kindref="member">StartParamDesc</ref>(<ref refid="featdefs_8cpp_1ad515470d81cc6cf011b68624575a76b8" kindref="member">OutlineFeatParams</ref>)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>-0.5,<sp/>0.5)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>-0.25,<sp/>0.75)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">DefineParam(0,<sp/>0,<sp/>0.0,<sp/>1.0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">DefineParam(1,<sp/>0,<sp/>0.0,<sp/>1.0)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="ocrfeatures_8h_1a24f96cc11dfea22b55b18b2e991be813" kindref="member">EndParamDesc</ref></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Now<sp/>define<sp/>the<sp/>feature<sp/>type<sp/>itself<sp/>(see<sp/>features.h<sp/>for<sp/>parameters).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="ocrfeatures_8h_1a6998a902eeedeb654f5209cd390c69c3" kindref="member">DefineFeature</ref>(<ref refid="featdefs_8cpp_1a72a26e08f0fd9771c2b6af211bb1a6c3" kindref="member">OutlineFeatDesc</ref>,<sp/>3,<sp/>1,<sp/>&quot;of&quot;,<sp/><ref refid="featdefs_8cpp_1ad515470d81cc6cf011b68624575a76b8" kindref="member">OutlineFeatParams</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MUST<sp/>be<sp/>kept<sp/>in-sync<sp/>with<sp/>ExtractorDefs<sp/>in<sp/>fxdefs.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">static<sp/>const<sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t" kindref="compound">FEATURE_DESC_STRUCT</ref><sp/>*DescDefs[<ref refid="featdefs_8h_1aff5d3186888ac3dbd87adcc54b7f2ecf" kindref="member">NUM_FEATURE_TYPES</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>&amp;<ref refid="featdefs_8cpp_1aa889ab53df925b2ccc5a2871eca3eff7" kindref="member">MicroFeatureDesc</ref>,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>&amp;<ref refid="featdefs_8cpp_1aeaae0c3ba332fe6addd19ed202a3ecb7" kindref="member">CharNormDesc</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>&amp;<ref refid="featdefs_8cpp_1abcae860ec494b3a15b6db31638a1d2f2" kindref="member">IntFeatDesc</ref>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>&amp;GeoFeatDesc</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Code</highlight></codeline>
<codeline lineno="120"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="featdefs_8cpp_1a6e4c84ab01e39577e4a74d9ab1eff68b" kindref="member">InitFeatureDefs</ref>(<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/>*featuredefs)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>featuredefs-&gt;<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1af53b55f15e4be4712c2c713057e27d2f" kindref="member">NumFeatureTypes</ref><sp/>=<sp/><ref refid="featdefs_8h_1aff5d3186888ac3dbd87adcc54b7f2ecf" kindref="member">NUM_FEATURE_TYPES</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="featdefs_8h_1aff5d3186888ac3dbd87adcc54b7f2ecf" kindref="member">NUM_FEATURE_TYPES</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>featuredefs-&gt;<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1a6c85dba3393ddc9311e59b515fd7cf82" kindref="member">FeatureDesc</ref>[i]<sp/>=<sp/>DescDefs[i];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="141"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="featdefs_8cpp_1ae2a92eefc3755300284119692527e3b9" kindref="member">FreeCharDescription</ref>(<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t" kindref="compound">CHAR_DESC</ref><sp/>CharDesc)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CharDesc)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a44c9d1024eb43636b98d19c92f4e4b0f" kindref="member">NumFeatureSets</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1a72b29c3d875eb9a2241385b1f1388b2d" kindref="member">FreeFeatureSet</ref><sp/>(CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[i]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" kindref="member">Efree</ref>(CharDesc);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeCharDescription<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t" kindref="compound">CHAR_DESC</ref><sp/><ref refid="featdefs_8cpp_1a860f7517bac9477e79551e501df549ed" kindref="member">NewCharDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/>&amp;FeatureDefs)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t" kindref="compound">CHAR_DESC</ref><sp/>CharDesc;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>CharDesc<sp/>=<sp/>(<ref refid="featdefs_8h_1a41cfd9e7d2129a4e068683b2bafab0ee" kindref="member">CHAR_DESC</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t" kindref="compound">CHAR_DESC_STRUCT</ref>));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a44c9d1024eb43636b98d19c92f4e4b0f" kindref="member">NumFeatureSets</ref><sp/>=<sp/>FeatureDefs.<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1af53b55f15e4be4712c2c713057e27d2f" kindref="member">NumFeatureTypes</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a44c9d1024eb43636b98d19c92f4e4b0f" kindref="member">NumFeatureSets</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[i]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>return<sp/>(CharDesc);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NewCharDescription<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="200"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="featdefs_8cpp_1a52fa2e188f92a8642277f83873efa212" kindref="member">WriteCharDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/>&amp;FeatureDefs,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*File,<sp/><ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t" kindref="compound">CHAR_DESC</ref><sp/>CharDesc)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Type;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSetsToWrite<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Type<sp/>=<sp/>0;<sp/>Type<sp/>&lt;<sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a44c9d1024eb43636b98d19c92f4e4b0f" kindref="member">NumFeatureSets</ref>;<sp/>Type++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[Type])</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NumSetsToWrite++;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>NumSetsToWrite);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Type<sp/>=<sp/>0;<sp/>Type<sp/>&lt;<sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a44c9d1024eb43636b98d19c92f4e4b0f" kindref="member">NumFeatureSets</ref>;<sp/>Type++)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[Type])<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>(FeatureDefs.<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1a6c85dba3393ddc9311e59b515fd7cf82" kindref="member">FeatureDesc</ref>[Type])-&gt;ShortName);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1a9a2f4672497a1aa6d8378d083c0b70c8" kindref="member">WriteFeatureSet</ref><sp/>(File,<sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[Type]);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WriteCharDescription<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>all<sp/>of<sp/>the<sp/>fields<sp/>of<sp/>the<sp/>given<sp/>feature<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>well<sp/>defined<sp/>(not<sp/>inf<sp/>or<sp/>nan).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="featdefs_8cpp_1af8fa799b7b0c0c8e18648a521ef2775f" kindref="member">ValidCharDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/>&amp;FeatureDefs,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t" kindref="compound">CHAR_DESC</ref><sp/>CharDesc)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>anything_written<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>well_formed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Type<sp/>=<sp/>0;<sp/>Type<sp/>&lt;<sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a44c9d1024eb43636b98d19c92f4e4b0f" kindref="member">NumFeatureSets</ref>;<sp/>Type++)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[Type])<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[Type]-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a154a6ca419f3f16fccf11b7217351570" kindref="member">NumFeatures</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">FEATURE</ref><sp/>feat<sp/>=<sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[Type]-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a4664d6a22a9d12f4011de4d877664c45" kindref="member">Features</ref>[i];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0;<sp/>p<sp/>&lt;<sp/>feat-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1a1a034f275ff504afd63bd99643fae589" kindref="member">Type</ref>-&gt;<ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t_1a0edbab02900ae01549f742582236eb6d" kindref="member">NumParams</ref>;<sp/>p++)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mathfix_8h_1a2e1baae9134e580910322362dc23290e" kindref="member">isnan</ref>(feat-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[p])<sp/>||<sp/><ref refid="mathfix_8h_1a2a266c767456556e5c0da234b602b18b" kindref="member">isinf</ref>(feat-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[p]))</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>well_formed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>anything_written<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>anything_written<sp/>&amp;&amp;<sp/>well_formed;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ValidCharDescription<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t" kindref="compound">CHAR_DESC</ref><sp/><ref refid="featdefs_8cpp_1ae1558f5d4119a9e651a85e10887be9f3" kindref="member">ReadCharDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/>&amp;FeatureDefs,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*File)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumSetsToRead;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ShortName[<ref refid="ocrfeatures_8h_1a988007e06743db204d076f3c68161469" kindref="member">FEAT_NAME_SIZE</ref>];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t" kindref="compound">CHAR_DESC</ref><sp/>CharDesc;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Type;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;NumSetsToRead)<sp/>!=<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>NumSetsToRead<sp/>&lt;<sp/>0<sp/>||<sp/>NumSetsToRead<sp/>&gt;<sp/>FeatureDefs.<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1af53b55f15e4be4712c2c713057e27d2f" kindref="member">NumFeatureTypes</ref>)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="featdefs_8cpp_1ada39950713e21f70f302841f185fba09" kindref="member">ILLEGAL_NUM_SETS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>number<sp/>of<sp/>feature<sp/>sets&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>CharDesc<sp/>=<sp/><ref refid="featdefs_8cpp_1a860f7517bac9477e79551e501df549ed" kindref="member">NewCharDescription</ref>(FeatureDefs);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>NumSetsToRead<sp/>&gt;<sp/>0;<sp/>NumSetsToRead--)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>ShortName);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>Type<sp/>=<sp/><ref refid="featdefs_8cpp_1a46a09d60beb44b9c9156346595f352ee" kindref="member">ShortNameToFeatureType</ref>(FeatureDefs,<sp/>ShortName);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>CharDesc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[Type]<sp/>=</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1adbac3342338c1fb0f38aad20c3c324d8" kindref="member">ReadFeatureSet</ref><sp/>(File,<sp/>FeatureDefs.<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1a6c85dba3393ddc9311e59b515fd7cf82" kindref="member">FeatureDesc</ref>[Type]);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(CharDesc);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ReadCharDescription</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="300"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="featdefs_8cpp_1a46a09d60beb44b9c9156346595f352ee" kindref="member">ShortNameToFeatureType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/>&amp;FeatureDefs,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ShortName)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>FeatureDefs.<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1af53b55f15e4be4712c2c713057e27d2f" kindref="member">NumFeatureTypes</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp<sp/>((FeatureDefs.<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1a6c85dba3393ddc9311e59b515fd7cf82" kindref="member">FeatureDesc</ref>[i]-&gt;<ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t_1a11853141d8e7d72bdb9bc320001fa3d0" kindref="member">ShortName</ref>),<sp/>ShortName))</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(i);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="featdefs_8h_1a868936345759056133e0fbbc97d1a656" kindref="member">ILLEGAL_SHORT_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>short<sp/>name<sp/>for<sp/>a<sp/>feature&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ShortNameToFeatureType</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/featdefs.cpp"/>
  </compounddef>
</doxygen>
