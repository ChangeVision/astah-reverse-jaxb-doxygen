<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="neural__net_8cpp" kind="file">
    <compoundname>neural_net.cpp</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes refid="neural__net_8h" local="yes">neural_net.h</includes>
    <includes refid="input__file__buffer_8h" local="yes">input_file_buffer.h</includes>
    <incdepgraph>
      <node id="36296">
        <label>neuron.h</label>
        <link refid="neuron_8h"/>
        <childnode refid="36297" relation="include">
        </childnode>
        <childnode refid="36293" relation="include">
        </childnode>
      </node>
      <node id="36295">
        <label>neural_net.h</label>
        <link refid="neural__net_8h"/>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36293" relation="include">
        </childnode>
        <childnode refid="36296" relation="include">
        </childnode>
        <childnode refid="36298" relation="include">
        </childnode>
      </node>
      <node id="36294">
        <label>string</label>
      </node>
      <node id="36292">
        <label>neural_networks/runtime/neural_net.cpp</label>
        <link refid="neural_net.cpp"/>
        <childnode refid="36293" relation="include">
        </childnode>
        <childnode refid="36294" relation="include">
        </childnode>
        <childnode refid="36295" relation="include">
        </childnode>
        <childnode refid="36298" relation="include">
        </childnode>
      </node>
      <node id="36293">
        <label>vector</label>
      </node>
      <node id="36297">
        <label>math.h</label>
      </node>
      <node id="36299">
        <label>stdio.h</label>
      </node>
      <node id="36298">
        <label>input_file_buffer.h</label>
        <link refid="input__file__buffer_8h"/>
        <childnode refid="36299" relation="include">
        </childnode>
        <childnode refid="36294" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2008<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>ahmadab@google.com<sp/>(Ahmad<sp/>Abdulkader)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>neural_net.cpp:<sp/>Declarations<sp/>of<sp/>a<sp/>class<sp/>for<sp/>an<sp/>object<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>represents<sp/>an<sp/>arbitrary<sp/>network<sp/>of<sp/>neurons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="neural__net_8h" kindref="compound">neural_net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input__file__buffer_8h" kindref="compound">input_file_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><ref refid="classtesseract_1_1_neural_net_1acad221017f155837c316063a76ee3a22" kindref="member">NeuralNet::NeuralNet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a46a5af1940cf873c8cddb2c91e14b121" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="classtesseract_1_1_neural_net_1a0a0f8a13c536da068fad17a12b39c7b6" kindref="member">NeuralNet::~NeuralNet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>up<sp/>the<sp/>wts<sp/>chunks<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vec<sp/>=<sp/>0;<sp/>vec<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1aa7b901ea43bae46e569d68f476c7b318" kindref="member">wts_vec_</ref>.size();<sp/>vec++)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1aa7b901ea43bae46e569d68f476c7b318" kindref="member">wts_vec_</ref>[vec];</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>up<sp/>neurons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>up<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_idx<sp/>=<sp/>0;<sp/>node_idx<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1a3772cb00bf4f74adf163fc5705bf1f0d" kindref="member">neuron_cnt_</ref>;<sp/>node_idx++)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<ref refid="classtesseract_1_1_neural_net_1a769b5db25072f73c1f7c57fe6d2142c0" kindref="member">fast_nodes_</ref>[node_idx].inputs;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initiaization<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a46a5af1940cf873c8cddb2c91e14b121" kindref="member">NeuralNet::Init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a680ddffcb4d92f115e1a7b8221811a81" kindref="member">read_only_</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a6cc1b21c513a3bbd8de7d5435c649048" kindref="member">auto_encoder_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1aaba48ba8a449a805ef8802ea3308d69d" kindref="member">alloc_wgt_cnt_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1ae260161c01b9d853d9d7ddf114d72ea9" kindref="member">wts_cnt_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a3772cb00bf4f74adf163fc5705bf1f0d" kindref="member">neuron_cnt_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a3f9506819852a7c66e83775f92f95610" kindref="member">in_cnt_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a3e1f6cb07479e2e6d9fcb11625a715c1" kindref="member">out_cnt_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1aa7b901ea43bae46e569d68f476c7b318" kindref="member">wts_vec_</ref>.clear();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a45298b08d5c9e41901911b99f0e172ca" kindref="member">inputs_mean_</ref>.clear();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a8d03fb672b6283010bbd32135303b60a" kindref="member">inputs_std_dev_</ref>.clear();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1aa05bfd6191232cf25b79752fd1a38117" kindref="member">inputs_min_</ref>.clear();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1acc363035dc53cc103d2cadaa54333efa" kindref="member">inputs_max_</ref>.clear();</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Does<sp/>a<sp/>fast<sp/>feedforward<sp/>for<sp/>read_only<sp/>nets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Templatized<sp/>for<sp/>float<sp/>and<sp/>double<sp/>Types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1aa186b29234d2d35e0c8afb52877c04ea" kindref="member">NeuralNet::FastFeedForward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>*inputs,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/>*outputs)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>Node<sp/>*node<sp/>=<sp/>&amp;<ref refid="classtesseract_1_1_neural_net_1a769b5db25072f73c1f7c57fe6d2142c0" kindref="member">fast_nodes_</ref>[0];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>feed<sp/>inputs<sp/>in<sp/>and<sp/>offset<sp/>them<sp/>by<sp/>the<sp/>pre-computed<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node_idx<sp/>=<sp/>0;<sp/>node_idx<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1a3f9506819852a7c66e83775f92f95610" kindref="member">in_cnt_</ref>;<sp/>node_idx++,<sp/>node++)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;out<sp/>=<sp/>inputs[node_idx]<sp/>-<sp/>node-&gt;bias;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>nodes<sp/>activations<sp/>and<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;node_idx<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1a3772cb00bf4f74adf163fc5705bf1f0d" kindref="member">neuron_cnt_</ref>;<sp/>node_idx++,<sp/>node++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>activation<sp/>=<sp/>-node-&gt;bias;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fan_in_idx<sp/>=<sp/>0;<sp/>fan_in_idx<sp/>&lt;<sp/>node-&gt;fan_in_cnt;<sp/>fan_in_idx++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>activation<sp/>+=<sp/>(node-&gt;inputs[fan_in_idx].input_weight<sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;inputs[fan_in_idx].input_node-&gt;out);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;out<sp/>=<sp/><ref refid="classtesseract_1_1_neuron_1a6b38598355a4ebd977f20f0582db3d49" kindref="member">Neuron::Sigmoid</ref>(activation);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>outputs<sp/>to<sp/>the<sp/>output<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>node<sp/>=<sp/>&amp;<ref refid="classtesseract_1_1_neural_net_1a769b5db25072f73c1f7c57fe6d2142c0" kindref="member">fast_nodes_</ref>[neuron_cnt_<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1a3e1f6cb07479e2e6d9fcb11625a715c1" kindref="member">out_cnt_</ref>];</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node_idx<sp/>=<sp/>0;<sp/>node_idx<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1a3e1f6cb07479e2e6d9fcb11625a715c1" kindref="member">out_cnt_</ref>;<sp/>node_idx++,<sp/>node++)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>outputs[node_idx]<sp/>=<sp/>node-&gt;out;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Performs<sp/>a<sp/>feedforward<sp/>for<sp/>general<sp/>nets.<sp/>Used<sp/>mainly<sp/>in<sp/>training<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Templatized<sp/>for<sp/>float<sp/>and<sp/>double<sp/>Types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a4c89b7940883fa30fc0bdf84ea678a42" kindref="member">NeuralNet::FeedForward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>*inputs,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/>*outputs)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>fast<sp/>version<sp/>in<sp/>case<sp/>of<sp/>readonly<sp/>nets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_neural_net_1a680ddffcb4d92f115e1a7b8221811a81" kindref="member">read_only_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1aa186b29234d2d35e0c8afb52877c04ea" kindref="member">FastFeedForward</ref>(inputs,<sp/>outputs);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>all<sp/>neurons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a63cb2029e14bf27406aa69417128a0bc" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>auto<sp/>encoders,<sp/>apply<sp/>no<sp/>input<sp/>normalization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_neural_net_1a6cc1b21c513a3bbd8de7d5435c649048" kindref="member">auto_encoder_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in<sp/>=<sp/>0;<sp/>in<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1a3f9506819852a7c66e83775f92f95610" kindref="member">in_cnt_</ref>;<sp/>in++)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[in].<ref refid="classtesseract_1_1_neuron_1ab672142abe2db452d9085ecb6689e25d" kindref="member">set_output</ref>(inputs[in]);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>normalization<sp/>:<sp/>subtract<sp/>mean<sp/>and<sp/>divide<sp/>by<sp/>stddev</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>in<sp/>=<sp/>0;<sp/>in<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1a3f9506819852a7c66e83775f92f95610" kindref="member">in_cnt_</ref>;<sp/>in++)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[in].<ref refid="classtesseract_1_1_neuron_1ab672142abe2db452d9085ecb6689e25d" kindref="member">set_output</ref>((inputs[in]<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1aa05bfd6191232cf25b79752fd1a38117" kindref="member">inputs_min_</ref>[in])<sp/>/</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classtesseract_1_1_neural_net_1acc363035dc53cc103d2cadaa54333efa" kindref="member">inputs_max_</ref>[in]<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1aa05bfd6191232cf25b79752fd1a38117" kindref="member">inputs_min_</ref>[in]));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[in].<ref refid="classtesseract_1_1_neuron_1ab672142abe2db452d9085ecb6689e25d" kindref="member">set_output</ref>((<ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[in].output()<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1a45298b08d5c9e41901911b99f0e172ca" kindref="member">inputs_mean_</ref>[in])<sp/>/</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a8d03fb672b6283010bbd32135303b60a" kindref="member">inputs_std_dev_</ref>[in]);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>net<sp/>outputs:<sp/>follow<sp/>a<sp/>pull<sp/>model<sp/>each<sp/>output<sp/>pulls<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>outputs<sp/>of<sp/>its<sp/>input<sp/>nodes<sp/>and<sp/>so<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>neuron_cnt_<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1a3e1f6cb07479e2e6d9fcb11625a715c1" kindref="member">out_cnt_</ref>;<sp/>out<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1a3772cb00bf4f74adf163fc5705bf1f0d" kindref="member">neuron_cnt_</ref>;<sp/>out++)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[out].<ref refid="classtesseract_1_1_neuron_1aacf58b3d21f61bf84e2815931f869464" kindref="member">FeedForward</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>values<sp/>to<sp/>the<sp/>output<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>outputs[out]<sp/>=<sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[out].<ref refid="classtesseract_1_1_neuron_1ac5d956e226190d1cf2d021493beeb1b8" kindref="member">output</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>a<sp/>connection<sp/>between<sp/>two<sp/>neurons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a3cec386f2524f71f6ff8221badeaa5d0" kindref="member">NeuralNet::SetConnection</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>the<sp/>wgt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*wts<sp/><sp/>=<sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a1d4b0e33730cd9ee86916938251719cc" kindref="member">AllocWgt</ref>(1);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wts<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>register<sp/>the<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[to].<ref refid="classtesseract_1_1_neuron_1a7363a0f331c6b0d493b05280fd9dab46" kindref="member">AddFromConnection</ref>(<ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref><sp/>+<sp/>from,<sp/>wts,<sp/>1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>fast<sp/>readonly<sp/>version<sp/>of<sp/>the<sp/>net</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1adf52a77999cb8e51a6fa5d4932321a3d" kindref="member">NeuralNet::CreateFastNet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a769b5db25072f73c1f7c57fe6d2142c0" kindref="member">fast_nodes_</ref>.resize(neuron_cnt_);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>node<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wts_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_idx<sp/>=<sp/>0;<sp/>node_idx<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1a3772cb00bf4f74adf163fc5705bf1f0d" kindref="member">neuron_cnt_</ref>;<sp/>node_idx++)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>Node<sp/>*node<sp/>=<sp/>&amp;<ref refid="classtesseract_1_1_neural_net_1a769b5db25072f73c1f7c57fe6d2142c0" kindref="member">fast_nodes_</ref>[node_idx];</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[node_idx].node_type()<sp/>==<sp/><ref refid="classtesseract_1_1_neuron_1aaca04e8e86b6305b6ef5cafa97a69cccabf08baf29ab216392a1f0ad5c439d220" kindref="member">Neuron::Input</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>neurons<sp/>have<sp/>no<sp/>fan-in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;fan_in_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;inputs<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>bias<sp/>is<sp/>the<sp/>normalization<sp/>offset<sp/>computed<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>training<sp/>input<sp/>stats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(<ref refid="classtesseract_1_1_neural_net_1acc363035dc53cc103d2cadaa54333efa" kindref="member">inputs_max_</ref>[node_idx]<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1aa05bfd6191232cf25b79752fd1a38117" kindref="member">inputs_min_</ref>[node_idx])<sp/>&lt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kMinInputRange)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>range<sp/>approaches<sp/>zero,<sp/>the<sp/>stdev<sp/>is<sp/>not<sp/>defined,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>indicates<sp/>that<sp/>this<sp/>input<sp/>does<sp/>not<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>bias<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;bias<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;bias<sp/>=<sp/><ref refid="classtesseract_1_1_neural_net_1aa05bfd6191232cf25b79752fd1a38117" kindref="member">inputs_min_</ref>[node_idx]<sp/>+<sp/>(<ref refid="classtesseract_1_1_neural_net_1a45298b08d5c9e41901911b99f0e172ca" kindref="member">inputs_mean_</ref>[node_idx]<sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classtesseract_1_1_neural_net_1acc363035dc53cc103d2cadaa54333efa" kindref="member">inputs_max_</ref>[node_idx]<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1aa05bfd6191232cf25b79752fd1a38117" kindref="member">inputs_min_</ref>[node_idx]));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;bias<sp/>=<sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[node_idx].<ref refid="classtesseract_1_1_neuron_1a76332b030bf687b40e64dda184e618a0" kindref="member">bias</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;fan_in_cnt<sp/>=<sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[node_idx].<ref refid="classtesseract_1_1_neuron_1a640f3c1af33401c7b7da18ccd49ee68e" kindref="member">fan_in_cnt</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>memory<sp/>for<sp/>fan-in<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;inputs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WeightedNode[node-&gt;fan_in_cnt];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;inputs<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fan_in<sp/>=<sp/>0;<sp/>fan_in<sp/>&lt;<sp/>node-&gt;fan_in_cnt;<sp/>fan_in++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>identify<sp/>fan-in<sp/>neuron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[node_idx].<ref refid="classtesseract_1_1_neuron_1a34a3470583c330d6e6c46a3e2a81c012" kindref="member">fan_in</ref>(fan_in)-&gt;<ref refid="classtesseract_1_1_neuron_1a0c1f2386bd491c36c87852b4a6bfa121" kindref="member">id</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Feedback<sp/>connections<sp/>are<sp/>not<sp/>allowed<sp/>and<sp/>should<sp/>never<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>node_idx)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>the<sp/>fan-in<sp/>neuron<sp/>and<sp/>its<sp/>wgt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;inputs[fan_in].input_node<sp/>=<sp/>&amp;<ref refid="classtesseract_1_1_neural_net_1a769b5db25072f73c1f7c57fe6d2142c0" kindref="member">fast_nodes_</ref>[id];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>wgt_val<sp/>=<sp/><ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[node_idx].<ref refid="classtesseract_1_1_neuron_1ac92db227c777f36a8c6aee05c1f1d766" kindref="member">fan_in_wts</ref>(fan_in);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>input<sp/>neurons<sp/>normalize<sp/>the<sp/>wgt<sp/>by<sp/>the<sp/>input<sp/>scaling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>values<sp/>to<sp/>save<sp/>time<sp/>during<sp/>feedforward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_neural_net_1a4ff353ff0ba717e12507c6a1a909363f" kindref="member">neurons_</ref>[node_idx].fan_in(fan_in)-&gt;node_type()<sp/>==<sp/><ref refid="classtesseract_1_1_neuron_1aaca04e8e86b6305b6ef5cafa97a69cccabf08baf29ab216392a1f0ad5c439d220" kindref="member">Neuron::Input</ref>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>range<sp/>approaches<sp/>zero,<sp/>the<sp/>stdev<sp/>is<sp/>not<sp/>defined,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>indicates<sp/>that<sp/>this<sp/>input<sp/>does<sp/>not<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>weight<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(<ref refid="classtesseract_1_1_neural_net_1acc363035dc53cc103d2cadaa54333efa" kindref="member">inputs_max_</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1aa05bfd6191232cf25b79752fd1a38117" kindref="member">inputs_min_</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">])<sp/>&lt;<sp/>kMinInputRange)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgt_val<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wgt_val<sp/>/=<sp/>((<ref refid="classtesseract_1_1_neural_net_1acc363035dc53cc103d2cadaa54333efa" kindref="member">inputs_max_</ref>[id]<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1aa05bfd6191232cf25b79752fd1a38117" kindref="member">inputs_min_</ref>[id])<sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1a8d03fb672b6283010bbd32135303b60a" kindref="member">inputs_std_dev_</ref>[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;inputs[fan_in].input_weight<sp/>=<sp/>wgt_val;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>incr<sp/>wgt<sp/>count<sp/>to<sp/>validate<sp/>against<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wts_cnt<sp/>+=<sp/>node-&gt;fan_in_cnt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sanity<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1ae260161c01b9d853d9d7ddf114d72ea9" kindref="member">wts_cnt_</ref><sp/>==<sp/>wts_cnt;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>requested<sp/>set<sp/>of<sp/>weights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Allocates<sp/>in<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="classtesseract_1_1_neural_net_1a1d4b0e33730cd9ee86916938251719cc" kindref="member">NeuralNet::AllocWgt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wgt_cnt)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>if<sp/>need<sp/>to<sp/>allocate<sp/>a<sp/>new<sp/>chunk<sp/>of<sp/>wts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_neural_net_1aa7b901ea43bae46e569d68f476c7b318" kindref="member">wts_vec_</ref>.size()<sp/>==<sp/>0<sp/>||<sp/>(<ref refid="classtesseract_1_1_neural_net_1aaba48ba8a449a805ef8802ea3308d69d" kindref="member">alloc_wgt_cnt_</ref><sp/>+<sp/>wgt_cnt)<sp/>&gt;<sp/><ref refid="classtesseract_1_1_neural_net_1ace41d563521f6f0c07a29f212aec3bab" kindref="member">kWgtChunkSize</ref>)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>new<sp/>chunck<sp/>to<sp/>the<sp/>wts_chunks<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1aa7b901ea43bae46e569d68f476c7b318" kindref="member">wts_vec_</ref>.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>vector&lt;float&gt;<sp/>(<ref refid="classtesseract_1_1_neural_net_1ace41d563521f6f0c07a29f212aec3bab" kindref="member">kWgtChunkSize</ref>));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1aaba48ba8a449a805ef8802ea3308d69d" kindref="member">alloc_wgt_cnt_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ret_ptr<sp/>=<sp/>&amp;((*<ref refid="classtesseract_1_1_neural_net_1aa7b901ea43bae46e569d68f476c7b318" kindref="member">wts_vec_</ref>.back())[<ref refid="classtesseract_1_1_neural_net_1aaba48ba8a449a805ef8802ea3308d69d" kindref="member">alloc_wgt_cnt_</ref>]);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>incr<sp/>usage<sp/>counts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1aaba48ba8a449a805ef8802ea3308d69d" kindref="member">alloc_wgt_cnt_</ref><sp/>+=<sp/>wgt_cnt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1ae260161c01b9d853d9d7ddf114d72ea9" kindref="member">wts_cnt_</ref><sp/>+=<sp/>wgt_cnt;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_ptr;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>net<sp/>object<sp/>using<sp/>an<sp/>input<sp/>file<sp/>as<sp/>a<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">NeuralNet<sp/>*<ref refid="classtesseract_1_1_neural_net_1aacdfeca9c810f9d8beb9438b35a8b93a" kindref="member">NeuralNet::FromFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>file_name)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>InputFileBuffer<sp/><sp/><sp/>input_buff(file_name);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>net<sp/>object<sp/>using<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1acad221017f155837c316063a76ee3a22" kindref="member">NeuralNet</ref><sp/>*net_obj<sp/>=<sp/><ref refid="classtesseract_1_1_neural_net_1a4bae9fde3b2be515197283b1008bf14c" kindref="member">FromInputBuffer</ref>(&amp;input_buff);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>net_obj;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>net<sp/>object<sp/>from<sp/>an<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">NeuralNet<sp/>*<ref refid="classtesseract_1_1_neural_net_1a4bae9fde3b2be515197283b1008bf14c" kindref="member">NeuralNet::FromInputBuffer</ref>(InputFileBuffer<sp/>*ib)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>new<sp/>net<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_neural_net_1acad221017f155837c316063a76ee3a22" kindref="member">NeuralNet</ref><sp/>*net_obj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1acad221017f155837c316063a76ee3a22" kindref="member">NeuralNet</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(net_obj<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>net</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!net_obj-&gt;ReadBinary(ib))<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>net_obj;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>net_obj<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>net_obj;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>output<sp/>of<sp/>a<sp/>specific<sp/>output<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>useful<sp/>for<sp/>application<sp/>that<sp/>are<sp/>interested<sp/>in<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>output<sp/>of<sp/>the<sp/>net<sp/>and<sp/>do<sp/>not<sp/>want<sp/>to<sp/>waste<sp/>time<sp/>on<sp/>the<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>fast-read-only<sp/>version<sp/>of<sp/>this<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a1275c0785ed2bd9725dd39820d4f5fab" kindref="member">NeuralNet::FastGetNetOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>*inputs,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_id,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/>*output)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>feed<sp/>inputs<sp/>in<sp/>and<sp/>offset<sp/>them<sp/>by<sp/>the<sp/>pre-computed<sp/>bias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>Node<sp/>*node<sp/>=<sp/>&amp;<ref refid="classtesseract_1_1_neural_net_1a769b5db25072f73c1f7c57fe6d2142c0" kindref="member">fast_nodes_</ref>[0];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(node_idx<sp/>=<sp/>0;<sp/>node_idx<sp/>&lt;<sp/><ref refid="classtesseract_1_1_neural_net_1a3f9506819852a7c66e83775f92f95610" kindref="member">in_cnt_</ref>;<sp/>node_idx++,<sp/>node++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;out<sp/>=<sp/>inputs[node_idx]<sp/>-<sp/>node-&gt;bias;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>nodes&apos;<sp/>activations<sp/>and<sp/>outputs<sp/>for<sp/>hidden<sp/>nodes<sp/>if<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hidden_node_cnt<sp/>=<sp/>neuron_cnt_<sp/>-<sp/><ref refid="classtesseract_1_1_neural_net_1a3e1f6cb07479e2e6d9fcb11625a715c1" kindref="member">out_cnt_</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;node_idx<sp/>&lt;<sp/>hidden_node_cnt;<sp/>node_idx++,<sp/>node++)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>activation<sp/>=<sp/>-node-&gt;bias;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fan_in_idx<sp/>=<sp/>0;<sp/>fan_in_idx<sp/>&lt;<sp/>node-&gt;fan_in_cnt;<sp/>fan_in_idx++)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>activation<sp/>+=<sp/>(node-&gt;inputs[fan_in_idx].input_weight<sp/>*</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;inputs[fan_in_idx].input_node-&gt;out);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>node-&gt;out<sp/>=<sp/><ref refid="classtesseract_1_1_neuron_1a6b38598355a4ebd977f20f0582db3d49" kindref="member">Neuron::Sigmoid</ref>(activation);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>output<sp/>of<sp/>the<sp/>required<sp/>output<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>node<sp/>+=<sp/>output_id;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>activation<sp/>=<sp/>-node-&gt;bias;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fan_in_idx<sp/>=<sp/>0;<sp/>fan_in_idx<sp/>&lt;<sp/>node-&gt;fan_in_cnt;<sp/>fan_in_idx++)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>activation<sp/>+=<sp/>(node-&gt;inputs[fan_in_idx].input_weight<sp/>*</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;inputs[fan_in_idx].input_node-&gt;out);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>(*output)<sp/>=<sp/><ref refid="classtesseract_1_1_neuron_1a6b38598355a4ebd977f20f0582db3d49" kindref="member">Neuron::Sigmoid</ref>(activation);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Performs<sp/>a<sp/>feedforward<sp/>for<sp/>general<sp/>nets.<sp/>Used<sp/>mainly<sp/>in<sp/>training<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Templatized<sp/>for<sp/>float<sp/>and<sp/>double<sp/>Types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a3dc0a81f7c0588aee8aed7e93884d0ea" kindref="member">NeuralNet::GetNetOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Type<sp/>*inputs,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_id,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/>*output)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>validate<sp/>output<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_id<sp/>&lt;<sp/>0<sp/>||<sp/>output_id<sp/>&gt;=<sp/>out_cnt_)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>the<sp/>fast<sp/>version<sp/>in<sp/>case<sp/>of<sp/>readonly<sp/>nets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_neural_net_1a680ddffcb4d92f115e1a7b8221811a81" kindref="member">read_only_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a1275c0785ed2bd9725dd39820d4f5fab" kindref="member">FastGetNetOutput</ref>(inputs,<sp/>output_id,<sp/>output);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>the<sp/>slow<sp/>version,<sp/>we&apos;ll<sp/>just<sp/>call<sp/>FeedForward<sp/>and<sp/>return<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>appropriate<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>vector&lt;Type&gt;<sp/>outputs(out_cnt_);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_neural_net_1a4c89b7940883fa30fc0bdf84ea678a42" kindref="member">FeedForward</ref>(inputs,<sp/>&amp;outputs[0]))<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>(*output)<sp/>=<sp/>outputs[output_id];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Instantiate<sp/>all<sp/>supported<sp/>templates<sp/>now<sp/>that<sp/>the<sp/>functions<sp/>have<sp/>been<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a4c89b7940883fa30fc0bdf84ea678a42" kindref="member">NeuralNet::FeedForward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*inputs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outputs);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a4c89b7940883fa30fc0bdf84ea678a42" kindref="member">NeuralNet::FeedForward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*inputs,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*outputs);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1aa186b29234d2d35e0c8afb52877c04ea" kindref="member">NeuralNet::FastFeedForward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*inputs,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outputs);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1aa186b29234d2d35e0c8afb52877c04ea" kindref="member">NeuralNet::FastFeedForward</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*inputs,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*outputs);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a3dc0a81f7c0588aee8aed7e93884d0ea" kindref="member">NeuralNet::GetNetOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*inputs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_id,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a3dc0a81f7c0588aee8aed7e93884d0ea" kindref="member">NeuralNet::GetNetOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*inputs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_id,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*output);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a1275c0785ed2bd9725dd39820d4f5fab" kindref="member">NeuralNet::FastGetNetOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*inputs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_id,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a1275c0785ed2bd9725dd39820d4f5fab" kindref="member">NeuralNet::FastGetNetOutput</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*inputs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_id,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*output);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_neural_net_1a20678924e5cfc8418c51d1199d89b778" kindref="member">NeuralNet::ReadBinary</ref>(InputFileBuffer<sp/>*input_buffer);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/neural_networks/runtime/neural_net.cpp"/>
  </compounddef>
</doxygen>
