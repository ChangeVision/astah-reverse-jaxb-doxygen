<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_b_l_o_c_k" kind="class" prot="public">
    <compoundname>BLOCK</compoundname>
    <basecompoundref refid="class_e_l_i_s_t___l_i_n_k" prot="public" virt="non-virtual">ELIST_LINK</basecompoundref>
    <basecompoundref refid="class_p_d_b_l_k" prot="public" virt="non-virtual">PDBLK</basecompoundref>
    <includes refid="ocrblock_8h" local="no">ocrblock.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_b_l_o_c_k_1ad858d9adefd50f00fb20c85fcdfb0c95" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class BLOCK_RECT_IT</definition>
        <argsstring></argsstring>
        <name>BLOCK_RECT_IT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="34" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_b_l_o_c_k_1ab36bc0b2b123856ff43609a0dc8ce6c1" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 BLOCK::proportional</definition>
        <argsstring></argsstring>
        <name>proportional</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="193" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1afacce5a653cbf640e1654ede1fd11baf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BLOCK::right_to_left_</definition>
        <argsstring></argsstring>
        <name>right_to_left_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="194" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a508ff1dcf82ce4e976d6c4dbd8db85a2" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref></type>
        <definition>inT8 BLOCK::kerning</definition>
        <argsstring></argsstring>
        <name>kerning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="195" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a98a2686b273133b95cedc45157503458" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOCK::spacing</definition>
        <argsstring></argsstring>
        <name>spacing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="196" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1aa4bce696d992134b773cf69b7c1bf5c0" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOCK::pitch</definition>
        <argsstring></argsstring>
        <name>pitch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="197" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1aba0beaf7b7a168b20009735af022e886" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOCK::font_class</definition>
        <argsstring></argsstring>
        <name>font_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="198" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1aa3cd2a7cb32974f56fe82ca89cbff606" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 BLOCK::xheight</definition>
        <argsstring></argsstring>
        <name>xheight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="199" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a088aa8ed35bfd873ff2fc32c2b3e4830" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BLOCK::cell_over_xheight_</definition>
        <argsstring></argsstring>
        <name>cell_over_xheight_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="200" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a6e7aadb56b086ca5f857c8ad7127def8" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref></type>
        <definition>STRING BLOCK::filename</definition>
        <argsstring></argsstring>
        <name>filename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="201" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a3e323968c0a68aae3f0f7b67d247f5dc" prot="private" static="no" mutable="no">
        <type>ROW_LIST</type>
        <definition>ROW_LIST BLOCK::rows</definition>
        <argsstring></argsstring>
        <name>rows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="202" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1aa49c7b3dd6660ae1132882f45be58512" prot="private" static="no" mutable="no">
        <type>PARA_LIST</type>
        <definition>PARA_LIST BLOCK::paras_</definition>
        <argsstring></argsstring>
        <name>paras_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="203" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a8878b8e0c447d59fa20d5b09cf36b912" prot="private" static="no" mutable="no">
        <type>C_BLOB_LIST</type>
        <definition>C_BLOB_LIST BLOCK::c_blobs</definition>
        <argsstring></argsstring>
        <name>c_blobs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="204" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1aa6289e3e84cfa36b3eedaec6ab5075e9" prot="private" static="no" mutable="no">
        <type>C_BLOB_LIST</type>
        <definition>C_BLOB_LIST BLOCK::rej_blobs</definition>
        <argsstring></argsstring>
        <name>rej_blobs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="205" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a7d0dd24003966ec22ce21d25297fe778" prot="private" static="no" mutable="no">
        <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD BLOCK::re_rotation_</definition>
        <argsstring></argsstring>
        <name>re_rotation_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="206" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a74902e13f5ba32ccf09f324b98fd9b52" prot="private" static="no" mutable="no">
        <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD BLOCK::classify_rotation_</definition>
        <argsstring></argsstring>
        <name>classify_rotation_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="207" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a761759f82ddc8979617c752d6ac54de4" prot="private" static="no" mutable="no">
        <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD BLOCK::skew_</definition>
        <argsstring></argsstring>
        <name>skew_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="208" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_c_k_1a05b24ecdfa8b3b6691d6bc1c1b6d99b4" prot="private" static="no" mutable="no">
        <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD BLOCK::median_size_</definition>
        <argsstring></argsstring>
        <name>median_size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="209" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_b_l_o_c_k_1aeb22fbc4bebf9b6c92d18c318acf648f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BLOCK::BLOCK</definition>
        <argsstring>()</argsstring>
        <name>BLOCK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a4b53dbdf5399237e489d997f6a2eaad5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BLOCK::BLOCK</definition>
        <argsstring>(const char *name, BOOL8 prop, inT16 kern, inT16 space, inT16 xmin, inT16 ymin, inT16 xmax, inT16 ymax)</argsstring>
        <name>BLOCK</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>prop</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>kern</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>space</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>xmin</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>ymin</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>xmax</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>ymax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_b_l_o_c_k_1aeb22fbc4bebf9b6c92d18c318acf648f" kindref="member">BLOCK::BLOCK</ref></para><para>Constructor for a simple rectangular block. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="35" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1ab37844e1abea11d1e05725b0673655a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BLOCK::~BLOCK</definition>
        <argsstring>()</argsstring>
        <name>~BLOCK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="53" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a1dec509cf931f6fcf3e33ef67edcd918" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::set_stats</definition>
        <argsstring>(BOOL8 prop, inT16 kern, inT16 space, inT16 ch_pitch)</argsstring>
        <name>set_stats</name>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>prop</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>kern</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>space</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>ch_pitch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set space size etc. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prop</parametername>
</parameternamelist>
<parameterdescription>
<para>proportional </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kern</parametername>
</parameternamelist>
<parameterdescription>
<para>inter char size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>space</parametername>
</parameternamelist>
<parameterdescription>
<para>inter word size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_pitch</parametername>
</parameternamelist>
<parameterdescription>
<para>pitch if fixed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="63" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="63" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a761f9b58bfeef6d485001b707fb9939b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::set_xheight</definition>
        <argsstring>(inT32 height)</argsstring>
        <name>set_xheight</name>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>set char size </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="73" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a900d5c55947c7f0e0276183be602b387" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::set_font_class</definition>
        <argsstring>(inT16 font)</argsstring>
        <name>set_font_class</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>font</declname>
        </param>
        <briefdescription>
<para>set font class </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="77" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1aec85b170b2c80345a5e2cc92d20c7ed5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 BLOCK::prop</definition>
        <argsstring>() const </argsstring>
        <name>prop</name>
        <briefdescription>
<para>return proportional </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="81" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a63887af77bac6353507e4ee2d87a1237" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOCK::right_to_left</definition>
        <argsstring>() const </argsstring>
        <name>right_to_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="84" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1ac7c7e1c504a24275c04b27366f94618e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::set_right_to_left</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_right_to_left</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="87" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1ae27754b55cd58ed702f41b8715a0f74c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 BLOCK::fixed_pitch</definition>
        <argsstring>() const </argsstring>
        <name>fixed_pitch</name>
        <briefdescription>
<para>return pitch </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="91" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1ac13db38f988ab1cb820dbc1babdb21bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOCK::kern</definition>
        <argsstring>() const </argsstring>
        <name>kern</name>
        <briefdescription>
<para>return kerning </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="95" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1aa181af4f5366d80eca4dc2a09891f099" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOCK::font</definition>
        <argsstring>() const </argsstring>
        <name>font</name>
        <briefdescription>
<para>return font class </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="99" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a421d1cc1e230f8598de6ceacb6e43e51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOCK::space</definition>
        <argsstring>() const </argsstring>
        <name>space</name>
        <briefdescription>
<para>return spacing </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="103" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a4859981b86d21d7dba29ad1788ec245c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* BLOCK::name</definition>
        <argsstring>() const </argsstring>
        <name>name</name>
        <briefdescription>
<para>return filename </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="107" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a4dc15e15362c3b2ee04d480b7c5695c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 BLOCK::x_height</definition>
        <argsstring>() const </argsstring>
        <name>x_height</name>
        <briefdescription>
<para>return xheight </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="111" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1aceb41c055165db283f84c80d0bfff216" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float BLOCK::cell_over_xheight</definition>
        <argsstring>() const </argsstring>
        <name>cell_over_xheight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="114" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1aa35e87420154d9fd935a2df0610b7ab4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::set_cell_over_xheight</definition>
        <argsstring>(float ratio)</argsstring>
        <name>set_cell_over_xheight</name>
        <param>
          <type>float</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="117" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1ae9826e422b0bf17a7592dee8db3fe058" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ROW_LIST *</type>
        <definition>ROW_LIST* BLOCK::row_list</definition>
        <argsstring>()</argsstring>
        <name>row_list</name>
        <briefdescription>
<para>get rows </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="121" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1ace98ff732aadb019c901973aabffa155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::compute_row_margins</definition>
        <argsstring>()</argsstring>
        <name>compute_row_margins</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="126" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="322" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1abd6dfaae322a74d32ae95c55dd1ca173" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>PARA_LIST *</type>
        <definition>PARA_LIST* BLOCK::para_list</definition>
        <argsstring>()</argsstring>
        <name>para_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="129" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a23196fe0d7230572b44aa77031a1d72a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>C_BLOB_LIST *</type>
        <definition>C_BLOB_LIST* BLOCK::blob_list</definition>
        <argsstring>()</argsstring>
        <name>blob_list</name>
        <briefdescription>
<para>get blobs </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="133" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a08f23fffc748fbb0e7ae8804b7c0c90e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>C_BLOB_LIST *</type>
        <definition>C_BLOB_LIST* BLOCK::reject_blobs</definition>
        <argsstring>()</argsstring>
        <name>reject_blobs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="136" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a820d5ff979ad26219ad3914551d70881" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD BLOCK::re_rotation</definition>
        <argsstring>() const </argsstring>
        <name>re_rotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="139" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a006129cb98cd6e780049f157066bc03e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::set_re_rotation</definition>
        <argsstring>(const FCOORD &amp;rotation)</argsstring>
        <name>set_re_rotation</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="142" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a34b02293bd58bf10ce6e62fd7d3953ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD BLOCK::classify_rotation</definition>
        <argsstring>() const </argsstring>
        <name>classify_rotation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="145" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a43c63eaacdd0c10688846a03bfe31ef2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::set_classify_rotation</definition>
        <argsstring>(const FCOORD &amp;rotation)</argsstring>
        <name>set_classify_rotation</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="148" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a64702b7109201949e9e82025656f783f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD BLOCK::skew</definition>
        <argsstring>() const </argsstring>
        <name>skew</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="151" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1afa8f7d48accd89dccce227cecbc0c962" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::set_skew</definition>
        <argsstring>(const FCOORD &amp;skew)</argsstring>
        <name>set_skew</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>skew</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="154" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a77cad3caccc9226ba3333638a87ec26f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
        <definition>const ICOORD&amp; BLOCK::median_size</definition>
        <argsstring>() const </argsstring>
        <name>median_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="157" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a9ebbb6f7072ddf986d32a93b19fe5d44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::set_median_size</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>set_median_size</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="160" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1aa21af645b311d9728d9299199959dd3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Pix *</type>
        <definition>Pix* BLOCK::render_mask</definition>
        <argsstring>()</argsstring>
        <name>render_mask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="165" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a2059ad777d16fd501cb61c8fb2a9d032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::reflect_polygon_in_y_axis</definition>
        <argsstring>()</argsstring>
        <name>reflect_polygon_in_y_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_b_l_o_c_k_1a2059ad777d16fd501cb61c8fb2a9d032" kindref="member">BLOCK::reflect_polygon_in_y_axis</ref></para><para>Reflects the polygon in the y-axis and recompute the bounding_box. Does nothing to any contained rows/words/blobs etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="171" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a70bff81f89d9bf771cfd09952f043b03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::rotate</definition>
        <argsstring>(const FCOORD &amp;rotation)</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_b_l_o_c_k_1a70bff81f89d9bf771cfd09952f043b03" kindref="member">BLOCK::rotate</ref></para><para>Rotate the polygon by the given rotation and recompute the bounding_box. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="173" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a1700ff303aaa1e8e683dc396e2fba1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::sort_rows</definition>
        <argsstring>()</argsstring>
        <name>sort_rows</name>
        <briefdescription>
<para>decreasing y order </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="class_b_l_o_c_k_1a1700ff303aaa1e8e683dc396e2fba1a7" kindref="member">BLOCK::sort_rows</ref></para><para>Order rows so that they are in order of decreasing Y coordinate </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="176" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a87d8245c5020006d18aebf79377e5d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::compress</definition>
        <argsstring>()</argsstring>
        <name>compress</name>
        <briefdescription>
<para>shrink white space </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="class_b_l_o_c_k_1a87d8245c5020006d18aebf79377e5d26" kindref="member">BLOCK::compress</ref></para><para>Delete space between the rows. (And maybe one day, compress the rows) Fill space of block from top down, left aligning rows. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="179" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="121" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1aa666ec6e487f45df87bd188ed376d858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::check_pitch</definition>
        <argsstring>()</argsstring>
        <name>check_pitch</name>
        <briefdescription>
<para>check proportional </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="class_b_l_o_c_k_1aa666ec6e487f45df87bd188ed376d858" kindref="member">BLOCK::check_pitch</ref></para><para>Check whether the block is fixed or prop, set the flag, and set the pitch if it is fixed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="182" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a46675ca554f7469d3b9f2f0debeda36d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::compress</definition>
        <argsstring>(const ICOORD vec)</argsstring>
        <name>compress</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>shrink white space and move by vector </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="class_b_l_o_c_k_1a87d8245c5020006d18aebf79377e5d26" kindref="member">BLOCK::compress</ref></para><para>Compress and move in a single operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="185" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="171" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1afb9e61b4a9a892b00e56530652a5c2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOCK::print</definition>
        <argsstring>(FILE *fp, BOOL8 dump)</argsstring>
        <name>print</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>dump</declname>
        </param>
        <briefdescription>
<para>dump whole table </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="class_b_l_o_c_k_1afb9e61b4a9a892b00e56530652a5c2c4" kindref="member">BLOCK::print</ref></para><para>Print the info on a block </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="188" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="185" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_c_k_1a14b8aec10599ac57c5ef9938a59fff27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref> &amp;</type>
        <definition>BLOCK &amp; BLOCK::operator=</definition>
        <argsstring>(const BLOCK &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_b_l_o_c_k_1a14b8aec10599ac57c5ef9938a59fff27" kindref="member">BLOCK::operator=</ref></para><para>Assignment - duplicate the block structure, but with an EMPTY row list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="190" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.cpp" bodystart="217" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="286">
        <label>PDBLK</label>
        <link refid="class_p_d_b_l_k"/>
      </node>
      <node id="284">
        <label>BLOCK</label>
        <link refid="class_b_l_o_c_k"/>
        <childnode refid="285" relation="public-inheritance">
        </childnode>
        <childnode refid="286" relation="public-inheritance">
        </childnode>
      </node>
      <node id="285">
        <label>ELIST_LINK</label>
        <link refid="class_e_l_i_s_t___l_i_n_k"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="291">
        <label>TBOX</label>
        <link refid="class_t_b_o_x"/>
      </node>
      <node id="289">
        <label>PDBLK</label>
        <link refid="class_p_d_b_l_k"/>
        <childnode refid="290" relation="usage">
          <edgelabel>hand_poly</edgelabel>
        </childnode>
        <childnode refid="291" relation="usage">
          <edgelabel>box</edgelabel>
        </childnode>
      </node>
      <node id="290">
        <label>POLY_BLOCK</label>
        <link refid="class_p_o_l_y___b_l_o_c_k"/>
      </node>
      <node id="287">
        <label>BLOCK</label>
        <link refid="class_b_l_o_c_k"/>
        <childnode refid="288" relation="public-inheritance">
        </childnode>
        <childnode refid="289" relation="public-inheritance">
        </childnode>
      </node>
      <node id="288">
        <label>ELIST_LINK</label>
        <link refid="class_e_l_i_s_t___l_i_n_k"/>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrblock.h" bodystart="31" bodyend="210"/>
    <listofallmembers>
      <member refid="class_b_l_o_c_k_1a23196fe0d7230572b44aa77031a1d72a" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>blob_list</name></member>
      <member refid="class_b_l_o_c_k_1aeb22fbc4bebf9b6c92d18c318acf648f" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>BLOCK</name></member>
      <member refid="class_b_l_o_c_k_1a4b53dbdf5399237e489d997f6a2eaad5" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>BLOCK</name></member>
      <member refid="class_b_l_o_c_k_1ad858d9adefd50f00fb20c85fcdfb0c95" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>BLOCK_RECT_IT</name></member>
      <member refid="class_p_d_b_l_k_1a91950a96127b4a0bb9b237e1f5f889a4" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>bounding_box</name></member>
      <member refid="class_p_d_b_l_k_1ab853b2715d8914f39603a2fd163adf03" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>bounding_box</name></member>
      <member refid="class_p_d_b_l_k_1ac59bc5dc2b038f44294271a6356cbff6" prot="protected" virt="non-virtual"><scope>BLOCK</scope><name>box</name></member>
      <member refid="class_b_l_o_c_k_1a8878b8e0c447d59fa20d5b09cf36b912" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>c_blobs</name></member>
      <member refid="class_b_l_o_c_k_1aceb41c055165db283f84c80d0bfff216" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>cell_over_xheight</name></member>
      <member refid="class_b_l_o_c_k_1a088aa8ed35bfd873ff2fc32c2b3e4830" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>cell_over_xheight_</name></member>
      <member refid="class_b_l_o_c_k_1aa666ec6e487f45df87bd188ed376d858" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>check_pitch</name></member>
      <member refid="class_b_l_o_c_k_1a34b02293bd58bf10ce6e62fd7d3953ef" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>classify_rotation</name></member>
      <member refid="class_b_l_o_c_k_1a74902e13f5ba32ccf09f324b98fd9b52" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>classify_rotation_</name></member>
      <member refid="class_b_l_o_c_k_1a87d8245c5020006d18aebf79377e5d26" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>compress</name></member>
      <member refid="class_b_l_o_c_k_1a46675ca554f7469d3b9f2f0debeda36d" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>compress</name></member>
      <member refid="class_b_l_o_c_k_1ace98ff732aadb019c901973aabffa155" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>compute_row_margins</name></member>
      <member refid="class_p_d_b_l_k_1a1d34d55494db7dfc530dfcc3b6db1cd6" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>contains</name></member>
      <member refid="class_e_l_i_s_t___l_i_n_k_1ab3cdce5789339d12de62e18fdfb52974" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>ELIST_LINK</name></member>
      <member refid="class_e_l_i_s_t___l_i_n_k_1a30be968896fac3d1c88d127213aa03f7" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>ELIST_LINK</name></member>
      <member refid="class_b_l_o_c_k_1a6e7aadb56b086ca5f857c8ad7127def8" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>filename</name></member>
      <member refid="class_b_l_o_c_k_1ae27754b55cd58ed702f41b8715a0f74c" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>fixed_pitch</name></member>
      <member refid="class_b_l_o_c_k_1aa181af4f5366d80eca4dc2a09891f099" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>font</name></member>
      <member refid="class_b_l_o_c_k_1aba0beaf7b7a168b20009735af022e886" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>font_class</name></member>
      <member refid="class_p_d_b_l_k_1a4c1b3a88242771bf55372f44c0d4ca88" prot="protected" virt="non-virtual"><scope>BLOCK</scope><name>hand_poly</name></member>
      <member refid="class_p_d_b_l_k_1acc3cf97b51fa93a659312c966df4a756" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>index</name></member>
      <member refid="class_p_d_b_l_k_1ab760851a1a4866f053ea020a02350467" prot="protected" virt="non-virtual"><scope>BLOCK</scope><name>index_</name></member>
      <member refid="class_b_l_o_c_k_1ac13db38f988ab1cb820dbc1babdb21bd" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>kern</name></member>
      <member refid="class_b_l_o_c_k_1a508ff1dcf82ce4e976d6c4dbd8db85a2" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>kerning</name></member>
      <member refid="class_p_d_b_l_k_1af00bb4a4ee2e805324672b19e088e06a" prot="protected" virt="non-virtual"><scope>BLOCK</scope><name>leftside</name></member>
      <member refid="class_b_l_o_c_k_1a77cad3caccc9226ba3333638a87ec26f" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>median_size</name></member>
      <member refid="class_b_l_o_c_k_1a05b24ecdfa8b3b6691d6bc1c1b6d99b4" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>median_size_</name></member>
      <member refid="class_p_d_b_l_k_1a59ff88ca1db21b00c42c4e2a47700c74" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>move</name></member>
      <member refid="class_b_l_o_c_k_1a4859981b86d21d7dba29ad1788ec245c" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>name</name></member>
      <member refid="class_b_l_o_c_k_1a14b8aec10599ac57c5ef9938a59fff27" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>operator=</name></member>
      <member refid="class_e_l_i_s_t___l_i_n_k_1a949f5dfcc3c145a19f2d61ee3461701e" prot="public" virt="non-virtual" ambiguityscope="ELIST_LINK::"><scope>BLOCK</scope><name>operator=</name></member>
      <member refid="class_p_d_b_l_k_1abea460ba0744a48300ad506f82819952" prot="public" virt="non-virtual" ambiguityscope="PDBLK::"><scope>BLOCK</scope><name>operator=</name></member>
      <member refid="class_b_l_o_c_k_1abd6dfaae322a74d32ae95c55dd1ca173" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>para_list</name></member>
      <member refid="class_b_l_o_c_k_1aa49c7b3dd6660ae1132882f45be58512" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>paras_</name></member>
      <member refid="class_p_d_b_l_k_1ae31312e99565038e54d111a644060b53" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>PDBLK</name></member>
      <member refid="class_p_d_b_l_k_1a8e77e0d2dd03ece634e01427c436107b" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>PDBLK</name></member>
      <member refid="class_b_l_o_c_k_1aa4bce696d992134b773cf69b7c1bf5c0" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>pitch</name></member>
      <member refid="class_p_d_b_l_k_1a38da8bc50b2c4cf687ffbde6cf901a0e" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>plot</name></member>
      <member refid="class_p_d_b_l_k_1a6670779c69aca2d574e4a0590d9b3939" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>poly_block</name></member>
      <member refid="class_b_l_o_c_k_1afb9e61b4a9a892b00e56530652a5c2c4" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>print</name></member>
      <member refid="class_b_l_o_c_k_1aec85b170b2c80345a5e2cc92d20c7ed5" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>prop</name></member>
      <member refid="class_b_l_o_c_k_1ab36bc0b2b123856ff43609a0dc8ce6c1" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>proportional</name></member>
      <member refid="class_b_l_o_c_k_1a820d5ff979ad26219ad3914551d70881" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>re_rotation</name></member>
      <member refid="class_b_l_o_c_k_1a7d0dd24003966ec22ce21d25297fe778" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>re_rotation_</name></member>
      <member refid="class_b_l_o_c_k_1a2059ad777d16fd501cb61c8fb2a9d032" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>reflect_polygon_in_y_axis</name></member>
      <member refid="class_b_l_o_c_k_1aa6289e3e84cfa36b3eedaec6ab5075e9" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>rej_blobs</name></member>
      <member refid="class_b_l_o_c_k_1a08f23fffc748fbb0e7ae8804b7c0c90e" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>reject_blobs</name></member>
      <member refid="class_b_l_o_c_k_1aa21af645b311d9728d9299199959dd3f" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>render_mask</name></member>
      <member refid="class_p_d_b_l_k_1a18bd78acbc103a761e7fb98d1dc8fa23" prot="public" virt="non-virtual" ambiguityscope="PDBLK::"><scope>BLOCK</scope><name>render_mask</name></member>
      <member refid="class_b_l_o_c_k_1a63887af77bac6353507e4ee2d87a1237" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>right_to_left</name></member>
      <member refid="class_b_l_o_c_k_1afacce5a653cbf640e1654ede1fd11baf" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>right_to_left_</name></member>
      <member refid="class_p_d_b_l_k_1a87a08537c120e669c825d147a5650a55" prot="protected" virt="non-virtual"><scope>BLOCK</scope><name>rightside</name></member>
      <member refid="class_b_l_o_c_k_1a70bff81f89d9bf771cfd09952f043b03" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>rotate</name></member>
      <member refid="class_b_l_o_c_k_1ae9826e422b0bf17a7592dee8db3fe058" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>row_list</name></member>
      <member refid="class_b_l_o_c_k_1a3e323968c0a68aae3f0f7b67d247f5dc" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>rows</name></member>
      <member refid="class_b_l_o_c_k_1aa35e87420154d9fd935a2df0610b7ab4" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_cell_over_xheight</name></member>
      <member refid="class_b_l_o_c_k_1a43c63eaacdd0c10688846a03bfe31ef2" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_classify_rotation</name></member>
      <member refid="class_b_l_o_c_k_1a900d5c55947c7f0e0276183be602b387" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_font_class</name></member>
      <member refid="class_p_d_b_l_k_1a788cc0cf8ac2ccc71748904c8788e82d" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_index</name></member>
      <member refid="class_b_l_o_c_k_1a9ebbb6f7072ddf986d32a93b19fe5d44" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_median_size</name></member>
      <member refid="class_p_d_b_l_k_1a60f8ad7b10ca32e3ece92bb04e3f2793" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_poly_block</name></member>
      <member refid="class_b_l_o_c_k_1a006129cb98cd6e780049f157066bc03e" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_re_rotation</name></member>
      <member refid="class_b_l_o_c_k_1ac7c7e1c504a24275c04b27366f94618e" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_right_to_left</name></member>
      <member refid="class_p_d_b_l_k_1a8d8fa823bf5878ef0b020572fea424e9" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_sides</name></member>
      <member refid="class_b_l_o_c_k_1afa8f7d48accd89dccce227cecbc0c962" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_skew</name></member>
      <member refid="class_b_l_o_c_k_1a1dec509cf931f6fcf3e33ef67edcd918" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_stats</name></member>
      <member refid="class_b_l_o_c_k_1a761f9b58bfeef6d485001b707fb9939b" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>set_xheight</name></member>
      <member refid="class_p_d_b_l_k_1a96e4c9b8767f6e0cb7025aad8a3cf33b" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>show</name></member>
      <member refid="class_b_l_o_c_k_1a64702b7109201949e9e82025656f783f" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>skew</name></member>
      <member refid="class_b_l_o_c_k_1a761759f82ddc8979617c752d6ac54de4" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>skew_</name></member>
      <member refid="class_b_l_o_c_k_1a1700ff303aaa1e8e683dc396e2fba1a7" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>sort_rows</name></member>
      <member refid="class_b_l_o_c_k_1a421d1cc1e230f8598de6ceacb6e43e51" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>space</name></member>
      <member refid="class_b_l_o_c_k_1a98a2686b273133b95cedc45157503458" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>spacing</name></member>
      <member refid="class_b_l_o_c_k_1a4dc15e15362c3b2ee04d480b7c5695c3" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>x_height</name></member>
      <member refid="class_b_l_o_c_k_1aa3cd2a7cb32974f56fe82ca89cbff606" prot="private" virt="non-virtual"><scope>BLOCK</scope><name>xheight</name></member>
      <member refid="class_b_l_o_c_k_1ab37844e1abea11d1e05725b0673655a8" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>~BLOCK</name></member>
      <member refid="class_p_d_b_l_k_1a20e149e4a516d1e00d3690e6f7fc4b3d" prot="public" virt="non-virtual"><scope>BLOCK</scope><name>~PDBLK</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
