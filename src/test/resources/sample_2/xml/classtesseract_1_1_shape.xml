<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classtesseract_1_1_shape" kind="class" prot="public">
    <compoundname>tesseract::Shape</compoundname>
    <includes refid="shapetable_8h" local="no">shapetable.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesseract_1_1_shape_1af58cf2dcbea15080860b11a36e881672" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tesseract::Shape::unichars_sorted_</definition>
        <argsstring></argsstring>
        <name>unichars_sorted_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="110" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_shape_1a38c896b2f75e770aec70868375ed7b53" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::Shape::destination_index_</definition>
        <argsstring></argsstring>
        <name>destination_index_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="113" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_shape_1a2b64aad69285dc7e6c26b340682f3a22" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="structtesseract_1_1_unichar_and_fonts" kindref="compound">UnicharAndFonts</ref> &gt;</type>
        <definition>GenericVector&lt;UnicharAndFonts&gt; tesseract::Shape::unichars_</definition>
        <argsstring></argsstring>
        <name>unichars_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="116" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesseract_1_1_shape_1a68d9b4600cf7683fcc0dd4452ddd6e44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tesseract::Shape::Shape</definition>
        <argsstring>()</argsstring>
        <name>Shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="64" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1ae8e294fc321170b61d73ad989244b16a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Shape::Serialize</definition>
        <argsstring>(FILE *fp) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="67" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1a19655bb2ebbd46892099346c9902feec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Shape::DeSerialize</definition>
        <argsstring>(bool swap, FILE *fp)</argsstring>
        <name>DeSerialize</name>
        <param>
          <type>bool</type>
          <declname>swap</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="70" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="64" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1a425abfc0fed0d7c7096365b8d9b26c02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Shape::destination_index</definition>
        <argsstring>() const </argsstring>
        <name>destination_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="72" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.h" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1a230e3a68e297afe566f40a1da932454f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Shape::set_destination_index</definition>
        <argsstring>(int index)</argsstring>
        <name>set_destination_index</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="75" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1a0fca7f64992c74492787d00240a22913" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Shape::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="78" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1a332db4b9b4f9a698df9300f667f7b51d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structtesseract_1_1_unichar_and_fonts" kindref="compound">UnicharAndFonts</ref> &amp;</type>
        <definition>const UnicharAndFonts&amp; tesseract::Shape::operator[]</definition>
        <argsstring>(int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="83" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.h" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1a8ba6275e93ed4704cf486e911f42f420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Shape::AddToShape</definition>
        <argsstring>(int unichar_id, int font_id)</argsstring>
        <name>AddToShape</name>
        <param>
          <type>int</type>
          <declname>unichar_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>font_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="88" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="75" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1ab958a107a2f7c2a665c54a749b8ff0f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Shape::AddShape</definition>
        <argsstring>(const Shape &amp;other)</argsstring>
        <name>AddShape</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="90" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1aa6d5091ec6842cfa5c0622bc772ca26c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Shape::ContainsUnicharAndFont</definition>
        <argsstring>(int unichar_id, int font_id) const </argsstring>
        <name>ContainsUnicharAndFont</name>
        <param>
          <type>int</type>
          <declname>unichar_id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>font_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="105" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1a736c652adf59c9e1bdc68756f7e1e7e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Shape::ContainsUnichar</definition>
        <argsstring>(int unichar_id) const </argsstring>
        <name>ContainsUnichar</name>
        <param>
          <type>int</type>
          <declname>unichar_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="94" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="121" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1a826ee7935903995239b27f1b4e68e1ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Shape::ContainsFont</definition>
        <argsstring>(int font_id) const </argsstring>
        <name>ContainsFont</name>
        <param>
          <type>int</type>
          <declname>font_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="96" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="131" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1a797653eeb0584320326b599f5653e2df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Shape::IsSubsetOf</definition>
        <argsstring>(const Shape &amp;other) const </argsstring>
        <name>IsSubsetOf</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="98" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="143" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_shape_1ac6bd7e4be5dc4755ad66b62ecb5f86e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Shape::IsEqualUnichars</definition>
        <argsstring>(Shape *other)</argsstring>
        <name>IsEqualUnichars</name>
        <param>
          <type><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="102" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="158" bodyend="167"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesseract_1_1_shape_1aff74ade43a8c1bea8bad65988eb9e51b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Shape::SortUnichars</definition>
        <argsstring>()</argsstring>
        <name>SortUnichars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="106" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h" line="62" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/shapetable.h" bodystart="62" bodyend="117"/>
    <listofallmembers>
      <member refid="classtesseract_1_1_shape_1ab958a107a2f7c2a665c54a749b8ff0f4" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>AddShape</name></member>
      <member refid="classtesseract_1_1_shape_1a8ba6275e93ed4704cf486e911f42f420" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>AddToShape</name></member>
      <member refid="classtesseract_1_1_shape_1a826ee7935903995239b27f1b4e68e1ba" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>ContainsFont</name></member>
      <member refid="classtesseract_1_1_shape_1a736c652adf59c9e1bdc68756f7e1e7e6" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>ContainsUnichar</name></member>
      <member refid="classtesseract_1_1_shape_1aa6d5091ec6842cfa5c0622bc772ca26c" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>ContainsUnicharAndFont</name></member>
      <member refid="classtesseract_1_1_shape_1a19655bb2ebbd46892099346c9902feec" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>DeSerialize</name></member>
      <member refid="classtesseract_1_1_shape_1a425abfc0fed0d7c7096365b8d9b26c02" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>destination_index</name></member>
      <member refid="classtesseract_1_1_shape_1a38c896b2f75e770aec70868375ed7b53" prot="private" virt="non-virtual"><scope>tesseract::Shape</scope><name>destination_index_</name></member>
      <member refid="classtesseract_1_1_shape_1ac6bd7e4be5dc4755ad66b62ecb5f86e6" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>IsEqualUnichars</name></member>
      <member refid="classtesseract_1_1_shape_1a797653eeb0584320326b599f5653e2df" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>IsSubsetOf</name></member>
      <member refid="classtesseract_1_1_shape_1a332db4b9b4f9a698df9300f667f7b51d" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>operator[]</name></member>
      <member refid="classtesseract_1_1_shape_1ae8e294fc321170b61d73ad989244b16a" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>Serialize</name></member>
      <member refid="classtesseract_1_1_shape_1a230e3a68e297afe566f40a1da932454f" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>set_destination_index</name></member>
      <member refid="classtesseract_1_1_shape_1a68d9b4600cf7683fcc0dd4452ddd6e44" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>Shape</name></member>
      <member refid="classtesseract_1_1_shape_1a0fca7f64992c74492787d00240a22913" prot="public" virt="non-virtual"><scope>tesseract::Shape</scope><name>size</name></member>
      <member refid="classtesseract_1_1_shape_1aff74ade43a8c1bea8bad65988eb9e51b" prot="private" virt="non-virtual"><scope>tesseract::Shape</scope><name>SortUnichars</name></member>
      <member refid="classtesseract_1_1_shape_1a2b64aad69285dc7e6c26b340682f3a22" prot="private" virt="non-virtual"><scope>tesseract::Shape</scope><name>unichars_</name></member>
      <member refid="classtesseract_1_1_shape_1af58cf2dcbea15080860b11a36e881672" prot="private" virt="non-virtual"><scope>tesseract::Shape</scope><name>unichars_sorted_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
