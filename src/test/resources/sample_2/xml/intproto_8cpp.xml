<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="intproto_8cpp" kind="file">
    <compoundname>intproto.cpp</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">assert.h</includes>
    <includes refid="classify_8h" local="yes">classify.h</includes>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="fontinfo_8h" local="yes">fontinfo.h</includes>
    <includes refid="genericvector_8h" local="yes">genericvector.h</includes>
    <includes refid="globals_8h" local="yes">globals.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="intproto_8h" local="yes">intproto.h</includes>
    <includes refid="mfoutline_8h" local="yes">mfoutline.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includes refid="picofeat_8h" local="yes">picofeat.h</includes>
    <includes refid="shapetable_8h" local="yes">shapetable.h</includes>
    <includes refid="svmnode_8h" local="yes">svmnode.h</includes>
    <incdepgraph>
      <node id="25548">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="25549" relation="include">
        </childnode>
        <childnode refid="25562" relation="include">
        </childnode>
        <childnode refid="25545" relation="include">
        </childnode>
      </node>
      <node id="25608">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="25562" relation="include">
        </childnode>
        <childnode refid="25557" relation="include">
        </childnode>
        <childnode refid="25545" relation="include">
        </childnode>
        <childnode refid="25527" relation="include">
        </childnode>
      </node>
      <node id="25579">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="25596">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25545" relation="include">
        </childnode>
      </node>
      <node id="25528">
        <label>assert.h</label>
      </node>
      <node id="25529">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="25530" relation="include">
        </childnode>
        <childnode refid="25578" relation="include">
        </childnode>
        <childnode refid="25529" relation="include">
        </childnode>
        <childnode refid="25580" relation="include">
        </childnode>
        <childnode refid="25599" relation="include">
        </childnode>
        <childnode refid="25601" relation="include">
        </childnode>
        <childnode refid="25602" relation="include">
        </childnode>
        <childnode refid="25604" relation="include">
        </childnode>
        <childnode refid="25603" relation="include">
        </childnode>
        <childnode refid="25582" relation="include">
        </childnode>
        <childnode refid="25600" relation="include">
        </childnode>
        <childnode refid="25577" relation="include">
        </childnode>
      </node>
      <node id="25544">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="25562">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="25534">
        <label>stdlib.h</label>
      </node>
      <node id="25536">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="25537" relation="include">
        </childnode>
      </node>
      <node id="25576">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
      </node>
      <node id="25587">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="25542" relation="include">
        </childnode>
      </node>
      <node id="25549">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="25550" relation="include">
        </childnode>
        <childnode refid="25542" relation="include">
        </childnode>
        <childnode refid="25545" relation="include">
        </childnode>
        <childnode refid="25559" relation="include">
        </childnode>
        <childnode refid="25539" relation="include">
        </childnode>
        <childnode refid="25557" relation="include">
        </childnode>
        <childnode refid="25560" relation="include">
        </childnode>
        <childnode refid="25561" relation="include">
        </childnode>
      </node>
      <node id="25573">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
      </node>
      <node id="25552">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="25534" relation="include">
        </childnode>
        <childnode refid="25533" relation="include">
        </childnode>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25546" relation="include">
        </childnode>
        <childnode refid="25542" relation="include">
        </childnode>
        <childnode refid="25553" relation="include">
        </childnode>
      </node>
      <node id="25569">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25552" relation="include">
        </childnode>
        <childnode refid="25554" relation="include">
        </childnode>
      </node>
      <node id="25567">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25568" relation="include">
        </childnode>
        <childnode refid="25539" relation="include">
        </childnode>
      </node>
      <node id="25578">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="25532" relation="include">
        </childnode>
        <childnode refid="25579" relation="include">
        </childnode>
      </node>
      <node id="25588">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="25589" relation="include">
        </childnode>
        <childnode refid="25570" relation="include">
        </childnode>
      </node>
      <node id="25597">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="25581" relation="include">
        </childnode>
        <childnode refid="25532" relation="include">
        </childnode>
        <childnode refid="25540" relation="include">
        </childnode>
      </node>
      <node id="25582">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="25528" relation="include">
        </childnode>
        <childnode refid="25569" relation="include">
        </childnode>
        <childnode refid="25540" relation="include">
        </childnode>
        <childnode refid="25583" relation="include">
        </childnode>
        <childnode refid="25555" relation="include">
        </childnode>
        <childnode refid="25557" relation="include">
        </childnode>
        <childnode refid="25584" relation="include">
        </childnode>
      </node>
      <node id="25547">
        <label>stddef.h</label>
      </node>
      <node id="25556">
        <label>memory.h</label>
      </node>
      <node id="25605">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="25564" relation="include">
        </childnode>
      </node>
      <node id="25566">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25526" relation="include">
        </childnode>
      </node>
      <node id="25607">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="25528" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25539" relation="include">
        </childnode>
        <childnode refid="25555" relation="include">
        </childnode>
      </node>
      <node id="25542">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
      </node>
      <node id="25564">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25555" relation="include">
        </childnode>
      </node>
      <node id="25537">
        <label>limits.h</label>
      </node>
      <node id="25610">
        <label>shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="25540" relation="include">
        </childnode>
        <childnode refid="25604" relation="include">
        </childnode>
      </node>
      <node id="25602">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="25568" relation="include">
        </childnode>
        <childnode refid="25563" relation="include">
        </childnode>
        <childnode refid="25603" relation="include">
        </childnode>
        <childnode refid="25526" relation="include">
        </childnode>
      </node>
      <node id="25580">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="25550" relation="include">
        </childnode>
        <childnode refid="25581" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25579" relation="include">
        </childnode>
        <childnode refid="25531" relation="include">
        </childnode>
        <childnode refid="25582" relation="include">
        </childnode>
        <childnode refid="25595" relation="include">
        </childnode>
        <childnode refid="25597" relation="include">
        </childnode>
        <childnode refid="25557" relation="include">
        </childnode>
        <childnode refid="25598" relation="include">
        </childnode>
      </node>
      <node id="25572">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="25526" relation="include">
        </childnode>
      </node>
      <node id="25591">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="25571" relation="include">
        </childnode>
      </node>
      <node id="25586">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25552" relation="include">
        </childnode>
        <childnode refid="25554" relation="include">
        </childnode>
      </node>
      <node id="25560">
        <label>pthread.h</label>
      </node>
      <node id="25525">
        <label>classify/intproto.cpp</label>
        <link refid="intproto.cpp"/>
        <childnode refid="25526" relation="include">
        </childnode>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25528" relation="include">
        </childnode>
        <childnode refid="25529" relation="include">
        </childnode>
        <childnode refid="25562" relation="include">
        </childnode>
        <childnode refid="25606" relation="include">
        </childnode>
        <childnode refid="25601" relation="include">
        </childnode>
        <childnode refid="25540" relation="include">
        </childnode>
        <childnode refid="25608" relation="include">
        </childnode>
        <childnode refid="25543" relation="include">
        </childnode>
        <childnode refid="25563" relation="include">
        </childnode>
        <childnode refid="25565" relation="include">
        </childnode>
        <childnode refid="25544" relation="include">
        </childnode>
        <childnode refid="25609" relation="include">
        </childnode>
        <childnode refid="25610" relation="include">
        </childnode>
        <childnode refid="25611" relation="include">
        </childnode>
      </node>
      <node id="25533">
        <label>string.h</label>
      </node>
      <node id="25558">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="25555" relation="include">
        </childnode>
      </node>
      <node id="25555">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="25556" relation="include">
        </childnode>
        <childnode refid="25533" relation="include">
        </childnode>
      </node>
      <node id="25532">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25533" relation="include">
        </childnode>
        <childnode refid="25534" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25538" relation="include">
        </childnode>
        <childnode refid="25548" relation="include">
        </childnode>
      </node>
      <node id="25570">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="25526" relation="include">
        </childnode>
        <childnode refid="25571" relation="include">
        </childnode>
        <childnode refid="25544" relation="include">
        </childnode>
        <childnode refid="25573" relation="include">
        </childnode>
        <childnode refid="25538" relation="include">
        </childnode>
      </node>
      <node id="25585">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
      </node>
      <node id="25611">
        <label>svmnode.h</label>
        <link refid="svmnode_8h"/>
      </node>
      <node id="25541">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
      </node>
      <node id="25561">
        <label>semaphore.h</label>
      </node>
      <node id="25589">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="25590" relation="include">
        </childnode>
        <childnode refid="25591" relation="include">
        </childnode>
        <childnode refid="25585" relation="include">
        </childnode>
        <childnode refid="25570" relation="include">
        </childnode>
        <childnode refid="25587" relation="include">
        </childnode>
        <childnode refid="25573" relation="include">
        </childnode>
      </node>
      <node id="25584">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="25539" relation="include">
        </childnode>
        <childnode refid="25585" relation="include">
        </childnode>
        <childnode refid="25586" relation="include">
        </childnode>
        <childnode refid="25545" relation="include">
        </childnode>
        <childnode refid="25587" relation="include">
        </childnode>
        <childnode refid="25588" relation="include">
        </childnode>
        <childnode refid="25592" relation="include">
        </childnode>
      </node>
      <node id="25592">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25593" relation="include">
        </childnode>
        <childnode refid="25584" relation="include">
        </childnode>
      </node>
      <node id="25553">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="25542" relation="include">
        </childnode>
      </node>
      <node id="25565">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25531" relation="include">
        </childnode>
        <childnode refid="25566" relation="include">
        </childnode>
        <childnode refid="25567" relation="include">
        </childnode>
        <childnode refid="25539" relation="include">
        </childnode>
      </node>
      <node id="25550">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="25551" relation="include">
        </childnode>
        <childnode refid="25538" relation="include">
        </childnode>
        <childnode refid="25555" relation="include">
        </childnode>
        <childnode refid="25557" relation="include">
        </childnode>
        <childnode refid="25540" relation="include">
        </childnode>
      </node>
      <node id="25577">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="25541" relation="include">
        </childnode>
        <childnode refid="25542" relation="include">
        </childnode>
        <childnode refid="25540" relation="include">
        </childnode>
      </node>
      <node id="25590">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="25571" relation="include">
        </childnode>
        <childnode refid="25591" relation="include">
        </childnode>
      </node>
      <node id="25526">
        <label>math.h</label>
      </node>
      <node id="25554">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="25542" relation="include">
        </childnode>
      </node>
      <node id="25609">
        <label>picofeat.h</label>
        <link refid="picofeat_8h"/>
        <childnode refid="25600" relation="include">
        </childnode>
        <childnode refid="25539" relation="include">
        </childnode>
      </node>
      <node id="25594">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="25571" relation="include">
        </childnode>
      </node>
      <node id="25606">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25607" relation="include">
        </childnode>
      </node>
      <node id="25574">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="25526" relation="include">
        </childnode>
        <childnode refid="25568" relation="include">
        </childnode>
      </node>
      <node id="25531">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="25532" relation="include">
        </childnode>
        <childnode refid="25541" relation="include">
        </childnode>
      </node>
      <node id="25600">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="25568" relation="include">
        </childnode>
        <childnode refid="25527" relation="include">
        </childnode>
      </node>
      <node id="25539">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25540" relation="include">
        </childnode>
        <childnode refid="25545" relation="include">
        </childnode>
      </node>
      <node id="25540">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25534" relation="include">
        </childnode>
        <childnode refid="25541" relation="include">
        </childnode>
        <childnode refid="25542" relation="include">
        </childnode>
        <childnode refid="25543" relation="include">
        </childnode>
        <childnode refid="25544" relation="include">
        </childnode>
      </node>
      <node id="25595">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="25540" relation="include">
        </childnode>
        <childnode refid="25539" relation="include">
        </childnode>
        <childnode refid="25582" relation="include">
        </childnode>
        <childnode refid="25596" relation="include">
        </childnode>
        <childnode refid="25555" relation="include">
        </childnode>
      </node>
      <node id="25546">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="25547" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
      </node>
      <node id="25575">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="25576" relation="include">
        </childnode>
        <childnode refid="25532" relation="include">
        </childnode>
        <childnode refid="25555" relation="include">
        </childnode>
        <childnode refid="25577" relation="include">
        </childnode>
        <childnode refid="25539" relation="include">
        </childnode>
      </node>
      <node id="25599">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="25600" relation="include">
        </childnode>
      </node>
      <node id="25551">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25552" relation="include">
        </childnode>
        <childnode refid="25554" relation="include">
        </childnode>
      </node>
      <node id="25557">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="25542" relation="include">
        </childnode>
        <childnode refid="25543" relation="include">
        </childnode>
        <childnode refid="25545" relation="include">
        </childnode>
        <childnode refid="25541" relation="include">
        </childnode>
        <childnode refid="25555" relation="include">
        </childnode>
        <childnode refid="25558" relation="include">
        </childnode>
      </node>
      <node id="25581">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="25551" relation="include">
        </childnode>
        <childnode refid="25582" relation="include">
        </childnode>
        <childnode refid="25539" relation="include">
        </childnode>
        <childnode refid="25541" relation="include">
        </childnode>
      </node>
      <node id="25601">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="25540" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25555" relation="include">
        </childnode>
      </node>
      <node id="25571">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25526" relation="include">
        </childnode>
        <childnode refid="25551" relation="include">
        </childnode>
        <childnode refid="25572" relation="include">
        </childnode>
      </node>
      <node id="25530">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="25531" relation="include">
        </childnode>
        <childnode refid="25563" relation="include">
        </childnode>
        <childnode refid="25527" relation="include">
        </childnode>
      </node>
      <node id="25583">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="25538">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="25539" relation="include">
        </childnode>
      </node>
      <node id="25604">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="25539" relation="include">
        </childnode>
        <childnode refid="25563" relation="include">
        </childnode>
        <childnode refid="25605" relation="include">
        </childnode>
      </node>
      <node id="25535">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="25536" relation="include">
        </childnode>
      </node>
      <node id="25527">
        <label>stdio.h</label>
      </node>
      <node id="25563">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="25540" relation="include">
        </childnode>
        <childnode refid="25564" relation="include">
        </childnode>
        <childnode refid="25565" relation="include">
        </childnode>
        <childnode refid="25575" relation="include">
        </childnode>
        <childnode refid="25573" relation="include">
        </childnode>
        <childnode refid="25557" relation="include">
        </childnode>
      </node>
      <node id="25559">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
        <childnode refid="25538" relation="include">
        </childnode>
      </node>
      <node id="25603">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
      </node>
      <node id="25545">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25533" relation="include">
        </childnode>
        <childnode refid="25536" relation="include">
        </childnode>
        <childnode refid="25546" relation="include">
        </childnode>
      </node>
      <node id="25568">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="25569" relation="include">
        </childnode>
        <childnode refid="25570" relation="include">
        </childnode>
        <childnode refid="25574" relation="include">
        </childnode>
      </node>
      <node id="25543">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25533" relation="include">
        </childnode>
      </node>
      <node id="25598">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="25582" relation="include">
        </childnode>
        <childnode refid="25539" relation="include">
        </childnode>
        <childnode refid="25557" relation="include">
        </childnode>
      </node>
      <node id="25593">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="25594" relation="include">
        </childnode>
        <childnode refid="25552" relation="include">
        </childnode>
        <childnode refid="25546" relation="include">
        </childnode>
        <childnode refid="25570" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_f_i_l_l___s_w_i_t_c_h" prot="public">FILL_SWITCH</innerclass>
    <innerclass refid="struct_t_a_b_l_e___f_i_l_l_e_r" prot="public">TABLE_FILLER</innerclass>
    <innerclass refid="struct_f_i_l_l___s_p_e_c" prot="public">FILL_SPEC</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="intproto_8cpp_1ad0a217ed135414378d65558a77b9b2ba" prot="public" static="no">
        <name>PROTO_PRUNER_SCALE</name>
        <initializer>(4.0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="53" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a5c9809b9be37d6d221e2171fe42511df" prot="public" static="no">
        <name>INT_DESCENDER</name>
        <initializer>(0.0  * <ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="55" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1af29db3e707420f778975c37e5d66fd10" prot="public" static="no">
        <name>INT_BASELINE</name>
        <initializer>(0.25 * <ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="56" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a8c142ec5cff85d77ec4abc373999f6ec" prot="public" static="no">
        <name>INT_XHEIGHT</name>
        <initializer>(0.75 * <ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="57" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1afa60433c26b09f744170ab10c8cfa716" prot="public" static="no">
        <name>INT_CAPHEIGHT</name>
        <initializer>(1.0  * <ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="58" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a983c9783c3f2d0492f157663437cf7bd" prot="public" static="no">
        <name>INT_XCENTER</name>
        <initializer>(0.5  * <ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="60" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a7b4c65ba0ecc02ed3d969a4c07bff4dc" prot="public" static="no">
        <name>INT_YCENTER</name>
        <initializer>(0.5  * <ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="61" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1af4a3bea04d2b29dafb4530473dd4f656" prot="public" static="no">
        <name>INT_XRADIUS</name>
        <initializer>(0.2  * <ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="62" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a38e42261c045df095d799e2f19aec1e6" prot="public" static="no">
        <name>INT_YRADIUS</name>
        <initializer>(0.2  * <ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="63" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1ac1a914c5ff58a0f8f9280ef2c9a29855" prot="public" static="no">
        <name>INT_MIN_X</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="64" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a610ad70ab1731cabfb990c35cfd01dcf" prot="public" static="no">
        <name>INT_MIN_Y</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="65" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1ae712f394e9941c44c22c38c920bd71cd" prot="public" static="no">
        <name>INT_MAX_X</name>
        <initializer><ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="66" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a4b0559f5844c194356263f55e3279d04" prot="public" static="no">
        <name>INT_MAX_Y</name>
        <initializer><ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="67" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a83959744dc05db71c3e5ec880f31eb7a" prot="public" static="no">
        <name>HV_TOLERANCE</name>
        <initializer>(0.0025)   /* approx 0.9 degrees */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>define pad used to snap near horiz/vertical protos to horiz/vertical </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="70" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1aeb70d96939b74c871cb7f3c6e15e2b34" prot="public" static="no">
        <name>MAX_NUM_SWITCHES</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="75" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a140c8d6cda6a254c6bf42e7caa0390fc" prot="public" static="no">
        <name>OLD_MAX_NUM_CONFIGS</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="113" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1aed02bb4e2adadad4fad1e2fc91e4643d" prot="public" static="no">
        <name>OLD_WERDS_PER_CONFIG_VEC</name>
        <initializer>((<ref refid="intproto_8cpp_1a140c8d6cda6a254c6bf42e7caa0390fc" kindref="member">OLD_MAX_NUM_CONFIGS</ref> + <ref refid="intproto_8h_1a65e33e9e10361d8dc9c7760ee256beac" kindref="member">BITS_PER_WERD</ref> - 1) /\
                                  <ref refid="intproto_8h_1a65e33e9e10361d8dc9c7760ee256beac" kindref="member">BITS_PER_WERD</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="114" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a2e059f536686155b975d46cecf190d77" prot="public" static="no">
        <name>CircularIncrement</name>
        <param><defname>i</defname></param>
        <param><defname>r</defname></param>
        <initializer>(((i) &lt; (r) - 1)?((i)++):((i) = 0))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>macro for performing circular increments of bucket indices </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="121" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" prot="public" static="no">
        <name>MapParam</name>
        <param><defname>P</defname></param>
        <param><defname>O</defname></param>
        <param><defname>N</defname></param>
        <initializer>(floor (((P) + (O)) * (N)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>macro for mapping floats to ints without bounds checking </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="124" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a5bb4257ca9fa4bfcf9391b7895b97761" prot="public" static="no">
        <name>MAX_LEVEL</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="335" column="9"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a44ee47e8957e8528ae8249a7e5559bca" prot="public" static="no">
        <name>XS</name>
        <initializer><ref refid="intproto_8h_1a7c72e90cfafe9834907d05ddf55bff09" kindref="member">X_SHIFT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="1656" column="9"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1acb9aabf37c36ded0b95b83fcab70bdad" prot="public" static="no">
        <name>YS</name>
        <initializer><ref refid="intproto_8h_1abd4c49783ccd23c297ef5650ccce9c9c" kindref="member">Y_SHIFT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="1657" column="9"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1aa42a34d8f17233661a75fe8fc1235e49" prot="public" static="no">
        <name>AS</name>
        <initializer><ref refid="intproto_8h_1a0be004c4069c9a09479eef2955f1097e" kindref="member">ANGLE_SHIFT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="1658" column="9"/>
      </memberdef>
      <memberdef kind="define" id="intproto_8cpp_1a58e95dc1eb9d6ce16f515e77beeadd58" prot="public" static="no">
        <name>NB</name>
        <initializer><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="1659" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82" prot="public" static="no">
        <name>SWITCH_TYPE</name>
        <enumvalue id="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a1cf2f15eb85b86e0ec9045e3619a3fa7" prot="public">
          <name>StartSwitch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a76e233dc90515aca43b7487c60694770" prot="public">
          <name>EndSwitch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82adf8537429629d6c042ac3481208264e2" prot="public">
          <name>LastSwitch</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="73" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="72" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="intproto_8cpp_1a3e2601e005e31466f29ed35791e280dc" prot="public" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* IntMatchWindow</definition>
        <argsstring></argsstring>
        <name>IntMatchWindow</name>
        <initializer>= <ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="180" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intproto_8cpp_1a0ec1ed97f9b163a57ada0daebeed4a19" prot="public" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* FeatureDisplayWindow</definition>
        <argsstring></argsstring>
        <name>FeatureDisplayWindow</name>
        <initializer>= <ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="181" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="intproto_8cpp_1a23f6e9320fd27edf24ff0788bbd15d14" prot="public" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* ProtoDisplayWindow</definition>
        <argsstring></argsstring>
        <name>ProtoDisplayWindow</name>
        <initializer>= <ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="182" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="intproto_8cpp_1ae613a28d73bf2a76687f554e439a1c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 BucketStart</definition>
        <argsstring>(int Bucket, FLOAT32 Offset, int NumBuckets)</argsstring>
        <name>BucketStart</name>
        <param>
          <type>int</type>
          <declname>Bucket</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NumBuckets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="129" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1233" bodyend="1250"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1ac65eab1c9120551f8d4706d4dfaf0815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 BucketEnd</definition>
        <argsstring>(int Bucket, FLOAT32 Offset, int NumBuckets)</argsstring>
        <name>BucketEnd</name>
        <param>
          <type>int</type>
          <declname>Bucket</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NumBuckets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="131" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1254" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1afaea93aff6c706adbe44d48f343ce2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DoFill</definition>
        <argsstring>(FILL_SPEC *FillSpec, CLASS_PRUNER_STRUCT *Pruner, register uinT32 ClassMask, register uinT32 ClassCount, register uinT32 WordIndex)</argsstring>
        <name>DoFill</name>
        <param>
          <type><ref refid="struct_f_i_l_l___s_p_e_c" kindref="compound">FILL_SPEC</ref> *</type>
          <declname>FillSpec</declname>
        </param>
        <param>
          <type><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref> *</type>
          <declname>Pruner</declname>
        </param>
        <param>
          <type>register <ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
          <declname>ClassMask</declname>
        </param>
        <param>
          <type>register <ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
          <declname>ClassCount</declname>
        </param>
        <param>
          <type>register <ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
          <declname>WordIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="133" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1274" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a6e872ab9dec7a62d791536899847446b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 FillerDone</definition>
        <argsstring>(TABLE_FILLER *Filler)</argsstring>
        <name>FillerDone</name>
        <param>
          <type><ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref> *</type>
          <declname>Filler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="139" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1324" bodyend="1344"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1ada113a59754199d44e31c2ec03411eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FillPPCircularBits</definition>
        <argsstring>(uinT32 ParamTable[64][((64+(8 *sizeof(uinT32))-1)/(8 *sizeof(uinT32)))], int Bit, FLOAT32 Center, FLOAT32 Spread, bool debug)</argsstring>
        <name>FillPPCircularBits</name>
        <param>
          <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
          <declname>ParamTable</declname>
          <array>[64][((64+(8 *sizeof(uinT32))-1)/(8 *sizeof(uinT32)))]</array>
        </param>
        <param>
          <type>int</type>
          <declname>Bit</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Center</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Spread</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="141" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1348" bodyend="1388"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1aafbbbb343d2128a3bb4f1042746bda8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FillPPLinearBits</definition>
        <argsstring>(uinT32 ParamTable[64][((64+(8 *sizeof(uinT32))-1)/(8 *sizeof(uinT32)))], int Bit, FLOAT32 Center, FLOAT32 Spread, bool debug)</argsstring>
        <name>FillPPLinearBits</name>
        <param>
          <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
          <declname>ParamTable</declname>
          <array>[64][((64+(8 *sizeof(uinT32))-1)/(8 *sizeof(uinT32)))]</array>
        </param>
        <param>
          <type>int</type>
          <declname>Bit</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Center</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Spread</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="145" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1392" bodyend="1426"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a09e675cd233359d8763e744e402a3dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetCPPadsForLevel</definition>
        <argsstring>(int Level, FLOAT32 *EndPad, FLOAT32 *SidePad, FLOAT32 *AnglePad)</argsstring>
        <name>GetCPPadsForLevel</name>
        <param>
          <type>int</type>
          <declname>Level</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref> *</type>
          <declname>EndPad</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref> *</type>
          <declname>SidePad</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref> *</type>
          <declname>AnglePad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="148" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1508" bodyend="1556"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1afa296141a34309a16ea4fdc63904ecea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
        <definition>ScrollView::Color GetMatchColorFor</definition>
        <argsstring>(FLOAT32 Evidence)</argsstring>
        <name>GetMatchColorFor</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Evidence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="153" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1560" bodyend="1582"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a2d8b49f118901da6dbaf5d5b4c8da174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GetNextFill</definition>
        <argsstring>(TABLE_FILLER *Filler, FILL_SPEC *Fill)</argsstring>
        <name>GetNextFill</name>
        <param>
          <type><ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref> *</type>
          <declname>Filler</declname>
        </param>
        <param>
          <type><ref refid="struct_f_i_l_l___s_p_e_c" kindref="compound">FILL_SPEC</ref> *</type>
          <declname>Fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="155" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1586" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1adb682620c9100c1985218aeb25bbdb9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitTableFiller</definition>
        <argsstring>(FLOAT32 EndPad, FLOAT32 SidePad, FLOAT32 AnglePad, PROTO Proto, TABLE_FILLER *Filler)</argsstring>
        <name>InitTableFiller</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>EndPad</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>SidePad</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>AnglePad</declname>
        </param>
        <param>
          <type><ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref></type>
          <declname>Proto</declname>
        </param>
        <param>
          <type><ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref> *</type>
          <declname>Filler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine computes a data structure (Filler) which can be used to fill in a rectangle surrounding the specified Proto.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>EndPad</parametername>
<parametername>SidePad</parametername>
<parametername>AnglePad</parametername>
</parameternamelist>
<parameterdescription>
<para>padding to add to proto </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Proto</parametername>
</parameternamelist>
<parameterdescription>
<para>proto to create a filler for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Filler</parametername>
</parameternamelist>
<parameterdescription>
<para>place to put table filler</para></parameterdescription>
</parameteritem>
</parameterlist>
Globals: none</para><para><simplesect kind="return"><para>none (results are returned in Filler) </para></simplesect>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Thu Feb 14 09:27:05 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="157" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1654" bodyend="1806"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a83c43ef1a01f3be45cbf675da04c3930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RenderIntFeature</definition>
        <argsstring>(ScrollView *window, const INT_FEATURE_STRUCT *Feature, ScrollView::Color color)</argsstring>
        <name>RenderIntFeature</name>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type>const <ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref> *</type>
          <declname>Feature</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="164" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1822" bodyend="1840"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a67948f52800e3964340ae96c2261c018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RenderIntProto</definition>
        <argsstring>(ScrollView *window, INT_CLASS Class, PROTO_ID ProtoId, ScrollView::Color color)</argsstring>
        <name>RenderIntProto</name>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>Class</declname>
        </param>
        <param>
          <type><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref></type>
          <declname>ProtoId</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="167" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1859" bodyend="1908"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a12134f53d5a57bb1dc79acf2711aae5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int TruncateParam</definition>
        <argsstring>(FLOAT32 Param, int Min, int Max, char *Id)</argsstring>
        <name>TruncateParam</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Param</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Max</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>Id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine truncates Param to lie within the range of Min-Max inclusive. If a truncation is performed, and Id is not null, an warning message is printed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Param</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter value to be truncated </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Min</parametername>
<parametername>Max</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter limits (inclusive) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Id</parametername>
</parameternamelist>
<parameterdescription>
<para>string id of parameter for error messages</para></parameterdescription>
</parameteritem>
</parameterlist>
Globals: none</para><para><simplesect kind="return"><para>Truncated parameter. </para></simplesect>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Fri Feb 8 11:54:28 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="173" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1927" bodyend="1940"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a179a8ad3b8a3ffff28f09d27694c4e9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INT_VAR</definition>
        <argsstring>(classify_num_cp_levels, 3,&quot;Number of Class Pruner Levels&quot;)</argsstring>
        <name>INT_VAR</name>
        <param>
          <type>classify_num_cp_levels</type>
        </param>
        <param>
          <type>3</type>
        </param>
        <param>
          <type>&quot;Number of Class Pruner Levels&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1acf24026098726ed070ae7fc60bf2511d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_cp_angle_pad_loose, 45.0,&quot;Class Pruner Angle Pad Loose&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_cp_angle_pad_loose</type>
        </param>
        <param>
          <type>45.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Class Pruner Angle Pad Loose&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a67761112c9bd66f1459d06df7f01e223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_cp_angle_pad_medium, 20.0,&quot;Class Pruner Angle Pad Medium&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_cp_angle_pad_medium</type>
        </param>
        <param>
          <type>20.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Class Pruner Angle Pad Medium&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a58038b150c2d8d3512e623bf2b9f23e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_cp_angle_pad_tight, 10.0,&quot;CLass Pruner Angle Pad Tight&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_cp_angle_pad_tight</type>
        </param>
        <param>
          <type>10.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;CLass Pruner Angle Pad Tight&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1adc6a607a71bfea688d3f7c7096eb5449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_cp_end_pad_loose, 0.5,&quot;Class Pruner End Pad Loose&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_cp_end_pad_loose</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Class Pruner End Pad Loose&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a35c2ff92dbfb89198289a8dde18e7b2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_cp_end_pad_medium, 0.5,&quot;Class Pruner End Pad Medium&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_cp_end_pad_medium</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Class Pruner End Pad Medium&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1aafd13eccfd0f10f05317ff9542431698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_cp_end_pad_tight, 0.5,&quot;Class Pruner End Pad Tight&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_cp_end_pad_tight</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Class Pruner End Pad Tight&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1afebc8ca976e16e3cb5efaf93a4326220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_cp_side_pad_loose, 2.5,&quot;Class Pruner Side Pad Loose&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_cp_side_pad_loose</type>
        </param>
        <param>
          <type>2.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Class Pruner Side Pad Loose&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1ac22e46937af2efd599244b98426be841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_cp_side_pad_medium, 1.2,&quot;Class Pruner Side Pad Medium&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_cp_side_pad_medium</type>
        </param>
        <param>
          <type>1.</type>
          <declname>2</declname>
        </param>
        <param>
          <type>&quot;Class Pruner Side Pad Medium&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a27e334c89182b4cd49609f51f6901aba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_cp_side_pad_tight, 0.6,&quot;Class Pruner Side Pad Tight&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_cp_side_pad_tight</type>
        </param>
        <param>
          <type>0.</type>
          <declname>6</declname>
        </param>
        <param>
          <type>&quot;Class Pruner Side Pad Tight&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1ad76fd6eb37f26c1afccd9e65af186785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_pp_angle_pad, 45.0,&quot;Proto Pruner Angle Pad&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_pp_angle_pad</type>
        </param>
        <param>
          <type>45.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Proto Pruner Angle Pad&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1af419330944d72707a52875b743ba616e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_pp_end_pad, 0.5,&quot;Proto Prune End Pad&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_pp_end_pad</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Proto Prune End Pad&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1acdc1adac53482a66e521fd62bbf9c2b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>double_VAR</definition>
        <argsstring>(classify_pp_side_pad, 2.5,&quot;Proto Pruner Side Pad&quot;)</argsstring>
        <name>double_VAR</name>
        <param>
          <type>classify_pp_side_pad</type>
        </param>
        <param>
          <type>2.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Proto Pruner Side Pad&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a66f71b82c006e385d6e3ce7c677c6ad8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddIntClass</definition>
        <argsstring>(INT_TEMPLATES Templates, CLASS_ID ClassId, INT_CLASS Class)</argsstring>
        <name>AddIntClass</name>
        <param>
          <type><ref refid="intproto_8h_1ab59629800b7869803b0af0f2f5db1627" kindref="member">INT_TEMPLATES</ref></type>
          <declname>Templates</declname>
        </param>
        <param>
          <type><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref></type>
          <declname>ClassId</declname>
        </param>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine adds a new class structure to a set of templates. Classes have to be added to Templates in the order of increasing ClassIds.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Templates</parametername>
</parameternamelist>
<parameterdescription>
<para>templates to add new class to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ClassId</parametername>
</parameternamelist>
<parameterdescription>
<para>class id to associate new class with </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>class data structure to add to templates</para></parameterdescription>
</parameteritem>
</parameterlist>
Globals: none</para><para><simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Mon Feb 11 11:52:08 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="224" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="224" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a569488473772d42004fec43399e6d5a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddIntConfig</definition>
        <argsstring>(INT_CLASS Class)</argsstring>
        <name>AddIntConfig</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine returns the index of the next free config in Class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>class to add new configuration to</para></parameterdescription>
</parameteritem>
</parameterlist>
Globals: none</para><para><simplesect kind="return"><para>Index of next free config. </para></simplesect>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Mon Feb 11 14:44:40 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="257" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="257" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a4c27266652a51cf8aaa866d299f57301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddIntProto</definition>
        <argsstring>(INT_CLASS Class)</argsstring>
        <name>AddIntProto</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This routine allocates the next free proto in Class and returns its index.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>class to add new proto to</para></parameterdescription>
</parameteritem>
</parameterlist>
Globals: none</para><para><simplesect kind="return"><para>Proto index of new proto. </para></simplesect>
<simplesect kind="note"><para>Exceptions: none </para><simplesectsep/><para>History: Mon Feb 11 13:26:41 1991, DSJ, Created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="281" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="281" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a117c6df38172671a3f3fce9cdb4f3299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddProtoToClassPruner</definition>
        <argsstring>(PROTO Proto, CLASS_ID ClassId, INT_TEMPLATES Templates)</argsstring>
        <name>AddProtoToClassPruner</name>
        <param>
          <type><ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref></type>
          <declname>Proto</declname>
        </param>
        <param>
          <type><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref></type>
          <declname>ClassId</declname>
        </param>
        <param>
          <type><ref refid="intproto_8h_1ab59629800b7869803b0af0f2f5db1627" kindref="member">INT_TEMPLATES</ref></type>
          <declname>Templates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="320" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="320" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1aec09adc2735bb4caaf226df7124e4ed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddProtoToProtoPruner</definition>
        <argsstring>(PROTO Proto, int ProtoId, INT_CLASS Class, bool debug)</argsstring>
        <name>AddProtoToProtoPruner</name>
        <param>
          <type><ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref></type>
          <declname>Proto</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ProtoId</declname>
        </param>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>Class</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="364" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="364" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BucketFor</definition>
        <argsstring>(FLOAT32 Param, FLOAT32 Offset, int NumBuckets)</argsstring>
        <name>BucketFor</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Param</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NumBuckets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="425" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="425" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1ae3184eb086a2f8eb3b7b4c42bae5ca22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CircBucketFor</definition>
        <argsstring>(FLOAT32 Param, FLOAT32 Offset, int NumBuckets)</argsstring>
        <name>CircBucketFor</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Param</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NumBuckets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="447" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="447" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a3827f6daeeb1efd88fa0bf418c83d984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UpdateMatchDisplay</definition>
        <argsstring>()</argsstring>
        <name>UpdateMatchDisplay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="476" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="476" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a57b07752bea2110e2503cf78747228c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ConvertConfig</definition>
        <argsstring>(BIT_VECTOR Config, int ConfigId, INT_CLASS Class)</argsstring>
        <name>ConvertConfig</name>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>Config</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ConfigId</declname>
        </param>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="494" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="494" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a7a82b76e5d96e5a5c0b714da6b8aa37a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DisplayIntFeature</definition>
        <argsstring>(const INT_FEATURE_STRUCT *Feature, FLOAT32 Evidence)</argsstring>
        <name>DisplayIntFeature</name>
        <param>
          <type>const <ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref> *</type>
          <declname>Feature</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Evidence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="638" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="638" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a6a0b3c9d68e99b70f1a5bbd6919ac98a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DisplayIntProto</definition>
        <argsstring>(INT_CLASS Class, PROTO_ID ProtoId, FLOAT32 Evidence)</argsstring>
        <name>DisplayIntProto</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>Class</declname>
        </param>
        <param>
          <type><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref></type>
          <declname>ProtoId</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Evidence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="660" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="660" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1af77150e8523be2b3f6449e194eb55e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
        <definition>INT_CLASS NewIntClass</definition>
        <argsstring>(int MaxNumProtos, int MaxNumConfigs)</argsstring>
        <name>NewIntClass</name>
        <param>
          <type>int</type>
          <declname>MaxNumProtos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>MaxNumConfigs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="683" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="683" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a4f621928b758b2595ba38e043140d35a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_int_class</definition>
        <argsstring>(INT_CLASS int_class)</argsstring>
        <name>free_int_class</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>int_class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="735" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="735" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a020880b72d2d68c69edba44494fce647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="intproto_8h_1ab59629800b7869803b0af0f2f5db1627" kindref="member">INT_TEMPLATES</ref></type>
        <definition>INT_TEMPLATES NewIntTemplates</definition>
        <argsstring>()</argsstring>
        <name>NewIntTemplates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="749" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="749" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1aed61c96f41cad7c9871e809124987ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_int_templates</definition>
        <argsstring>(INT_TEMPLATES templates)</argsstring>
        <name>free_int_templates</name>
        <param>
          <type><ref refid="intproto_8h_1ab59629800b7869803b0af0f2f5db1627" kindref="member">INT_TEMPLATES</ref></type>
          <declname>templates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="774" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="774" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a142586ad15312463838c8202dd88d9b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitIntMatchWindowIfReqd</definition>
        <argsstring>()</argsstring>
        <name>InitIntMatchWindowIfReqd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the int matcher window if it is not already initialized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="1949" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1949" bodyend="1964"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1ad0d97c266889ef7d0dd78885b34b89d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitProtoDisplayWindowIfReqd</definition>
        <argsstring>()</argsstring>
        <name>InitProtoDisplayWindowIfReqd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the proto display window if it is not already initialized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="1970" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1970" bodyend="1975"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1a4879721f850252687fa5230fd661bc91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitFeatureDisplayWindowIfReqd</definition>
        <argsstring>()</argsstring>
        <name>InitFeatureDisplayWindowIfReqd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the feature display window if it is not already initialized. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="1981" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1981" bodyend="1986"/>
      </memberdef>
      <memberdef kind="function" id="intproto_8cpp_1aa420561fce74b76450727980adea72b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* CreateFeatureSpaceWindow</definition>
        <argsstring>(const char *name, int xpos, int ypos)</argsstring>
        <name>CreateFeatureSpaceWindow</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xpos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ypos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp" line="1990" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intproto.cpp" bodystart="1990" bodyend="1992"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/><sp/>intproto.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Definition<sp/>of<sp/>data<sp/>structures<sp/>for<sp/>integer<sp/>protos.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Feb<sp/><sp/>7<sp/>14:38:16<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Include<sp/>Files<sp/>and<sp/>Type<sp/>Defines</highlight></codeline>
<codeline lineno="20"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__UNIX__</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classify_8h" kindref="compound">classify.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fontinfo_8h" kindref="compound">fontinfo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericvector_8h" kindref="compound">genericvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intproto_8h" kindref="compound">intproto.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfoutline_8h" kindref="compound">mfoutline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="picofeat_8h" kindref="compound">picofeat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shapetable_8h" kindref="compound">shapetable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="svmnode_8h" kindref="compound">svmnode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_font_info" kindref="compound">tesseract::FontInfo</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_font_set" kindref="compound">tesseract::FontSet</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_font_spacing_info" kindref="compound">tesseract::FontSpacingInfo</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>match<sp/>debug<sp/>display<sp/>constants*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROTO_PRUNER_SCALE<sp/><sp/>(4.0)</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_DESCENDER<sp/>(0.0<sp/><sp/>*<sp/>INT_CHAR_NORM_RANGE)</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_BASELINE<sp/><sp/>(0.25<sp/>*<sp/>INT_CHAR_NORM_RANGE)</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_XHEIGHT<sp/>(0.75<sp/>*<sp/>INT_CHAR_NORM_RANGE)</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_CAPHEIGHT<sp/>(1.0<sp/><sp/>*<sp/>INT_CHAR_NORM_RANGE)</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INT_XCENTER<sp/>(0.5<sp/><sp/>*<sp/>INT_CHAR_NORM_RANGE)</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_YCENTER<sp/>(0.5<sp/><sp/>*<sp/>INT_CHAR_NORM_RANGE)</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_XRADIUS<sp/>(0.2<sp/><sp/>*<sp/>INT_CHAR_NORM_RANGE)</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_YRADIUS<sp/>(0.2<sp/><sp/>*<sp/>INT_CHAR_NORM_RANGE)</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_MIN_X<sp/>0</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_MIN_Y<sp/>0</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_MAX_X<sp/>INT_CHAR_NORM_RANGE</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INT_MAX_Y<sp/>INT_CHAR_NORM_RANGE</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor">#define<sp/>HV_TOLERANCE<sp/><sp/>(0.0025)<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>approx<sp/>0.9<sp/>degrees<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a1cf2f15eb85b86e0ec9045e3619a3fa7" kindref="member">StartSwitch</ref>,<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a76e233dc90515aca43b7487c60694770" kindref="member">EndSwitch</ref>,<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82adf8537429629d6c042ac3481208264e2" kindref="member">LastSwitch</ref><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82" kindref="member">SWITCH_TYPE</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_NUM_SWITCHES<sp/><sp/>3</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_f_i_l_l___s_w_i_t_c_h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82" kindref="member">SWITCH_TYPE</ref><sp/>Type;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>X,<sp/>Y;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>YInit;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>Delta;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="struct_f_i_l_l___s_w_i_t_c_h" kindref="compound">FILL_SWITCH</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_t_a_b_l_e___f_i_l_l_e_r" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>NextSwitch;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>AngleStart,<sp/>AngleEnd;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>X;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>YStart,<sp/>YEnd;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>StartDelta,<sp/>EndDelta;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="struct_f_i_l_l___s_w_i_t_c_h" kindref="compound">FILL_SWITCH</ref><sp/>Switch[<ref refid="intproto_8cpp_1aeb70d96939b74c871cb7f3c6e15e2b34" kindref="member">MAX_NUM_SWITCHES</ref>];</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="struct_f_i_l_l___s_p_e_c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>X;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>YStart,<sp/>YEnd;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>AngleStart,<sp/>AngleEnd;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><ref refid="struct_f_i_l_l___s_p_e_c" kindref="compound">FILL_SPEC</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>constants<sp/>for<sp/>conversion<sp/>from<sp/>old<sp/>inttemp<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OLD_MAX_NUM_CONFIGS<sp/><sp/><sp/><sp/><sp/><sp/>32</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>OLD_WERDS_PER_CONFIG_VEC<sp/>((OLD_MAX_NUM_CONFIGS<sp/>+<sp/>BITS_PER_WERD<sp/>-<sp/>1)<sp/>/\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BITS_PER_WERD)</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Macros</highlight></codeline>
<codeline lineno="119"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor">#define<sp/>CircularIncrement(i,r)<sp/><sp/>(((i)<sp/>&lt;<sp/>(r)<sp/>-<sp/>1)?((i)++):((i)<sp/>=<sp/>0))</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor">#define<sp/>MapParam(P,O,N)<sp/><sp/><sp/>(floor<sp/>(((P)<sp/>+<sp/>(O))<sp/>*<sp/>(N)))</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Private<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="128"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="intproto_8cpp_1ae613a28d73bf2a76687f554e439a1c4c" kindref="member">BucketStart</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bucket,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBuckets);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="intproto_8cpp_1ac65eab1c9120551f8d4706d4dfaf0815" kindref="member">BucketEnd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bucket,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBuckets);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1afaea93aff6c706adbe44d48f343ce2af" kindref="member">DoFill</ref>(<ref refid="struct_f_i_l_l___s_p_e_c" kindref="compound">FILL_SPEC</ref><sp/>*FillSpec,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>*<sp/>Pruner,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ClassMask,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ClassCount,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>WordIndex);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><ref refid="intproto_8cpp_1a6e872ab9dec7a62d791536899847446b" kindref="member">FillerDone</ref>(<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref><sp/>*Filler);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1ada113a59754199d44e31c2ec03411eb2" kindref="member">FillPPCircularBits</ref>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParamTable[<ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>][<ref refid="intproto_8h_1a56d28cb646571fa14db5eb2ced4a5302" kindref="member">WERDS_PER_PP_VECTOR</ref>],</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bit,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Center,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Spread,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1aafbbbb343d2128a3bb4f1042746bda8b" kindref="member">FillPPLinearBits</ref>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ParamTable[<ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>][<ref refid="intproto_8h_1a56d28cb646571fa14db5eb2ced4a5302" kindref="member">WERDS_PER_PP_VECTOR</ref>],</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bit,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Center,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Spread,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a09e675cd233359d8763e744e402a3dfa" kindref="member">GetCPPadsForLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Level,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*EndPad,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*SidePad,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*AnglePad);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/><ref refid="intproto_8cpp_1afa296141a34309a16ea4fdc63904ecea" kindref="member">GetMatchColorFor</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Evidence);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a2d8b49f118901da6dbaf5d5b4c8da174" kindref="member">GetNextFill</ref>(<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref><sp/>*Filler,<sp/><ref refid="struct_f_i_l_l___s_p_e_c" kindref="compound">FILL_SPEC</ref><sp/>*Fill);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1adb682620c9100c1985218aeb25bbdb9f" kindref="member">InitTableFiller</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>EndPad,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>SidePad,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>AnglePad,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref><sp/>*Filler);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a83c43ef1a01f3be45cbf675da04c3930" kindref="member">RenderIntFeature</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>*window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>Feature,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a67948f52800e3964340ae96c2261c018" kindref="member">RenderIntProto</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>*window,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref><sp/>ProtoId,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a12134f53d5a57bb1dc79acf2711aae5d" kindref="member">TruncateParam</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Param,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Max,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Id);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Global<sp/>Data<sp/>Definitions<sp/>and<sp/>Declarations</highlight></codeline>
<codeline lineno="177"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>global<sp/>display<sp/>lists<sp/>used<sp/>to<sp/>display<sp/>proto<sp/>and<sp/>feature<sp/>match<sp/>information*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>*<ref refid="intproto_8cpp_1a3e2601e005e31466f29ed35791e280dc" kindref="member">IntMatchWindow</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>*<ref refid="intproto_8cpp_1a0ec1ed97f9b163a57ada0daebeed4a19" kindref="member">FeatureDisplayWindow</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>*<ref refid="intproto_8cpp_1a23f6e9320fd27edf24ff0788bbd15d14" kindref="member">ProtoDisplayWindow</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Variables</highlight></codeline>
<codeline lineno="186"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>control<sp/>knobs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><ref refid="params_8h_1a554d43d0cf0e3f9552921941d9e147bd" kindref="member">INT_VAR</ref>(classify_num_cp_levels,<sp/>3,<sp/></highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>Class<sp/>Pruner<sp/>Levels&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_cp_angle_pad_loose,<sp/>45.0,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>Pruner<sp/>Angle<sp/>Pad<sp/>Loose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_cp_angle_pad_medium,<sp/>20.0,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>Pruner<sp/>Angle<sp/>Pad<sp/>Medium&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_cp_angle_pad_tight,<sp/>10.0,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;CLass<sp/>Pruner<sp/>Angle<sp/>Pad<sp/>Tight&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_cp_end_pad_loose,<sp/>0.5,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>Pruner<sp/>End<sp/>Pad<sp/>Loose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_cp_end_pad_medium,<sp/>0.5,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>Pruner<sp/>End<sp/>Pad<sp/>Medium&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_cp_end_pad_tight,<sp/>0.5,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>Pruner<sp/>End<sp/>Pad<sp/>Tight&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_cp_side_pad_loose,<sp/>2.5,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>Pruner<sp/>Side<sp/>Pad<sp/>Loose&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_cp_side_pad_medium,<sp/>1.2,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>Pruner<sp/>Side<sp/>Pad<sp/>Medium&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_cp_side_pad_tight,<sp/>0.6,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>Pruner<sp/>Side<sp/>Pad<sp/>Tight&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_pp_angle_pad,<sp/>45.0,<sp/></highlight><highlight class="stringliteral">&quot;Proto<sp/>Pruner<sp/>Angle<sp/>Pad&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_pp_end_pad,<sp/>0.5,<sp/></highlight><highlight class="stringliteral">&quot;Proto<sp/>Prune<sp/>End<sp/>Pad&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="params_8h_1aa855c84dbbf962a5533a96e1f458c690" kindref="member">double_VAR</ref>(classify_pp_side_pad,<sp/>2.5,<sp/></highlight><highlight class="stringliteral">&quot;Proto<sp/>Pruner<sp/>Side<sp/>Pad&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Code</highlight></codeline>
<codeline lineno="208"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="224"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a66f71b82c006e385d6e3ce7c677c6ad8" kindref="member">AddIntClass</ref>(<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>Templates,<sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId,<sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Pruner;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>assert<sp/>(<ref refid="intproto_8h_1a6edc7e9d060a50cd3617bb509a061eb5" kindref="member">LegalClassId</ref><sp/>(ClassId));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ClassId<sp/>!=<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>make<sp/>sure<sp/>that<sp/>classes<sp/>are<sp/>added<sp/>to<sp/>templates&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>increasing<sp/>order<sp/>of<sp/>ClassIds\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(Templates,<sp/>ClassId)<sp/>=<sp/>Class;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>++;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref><sp/>&gt;<sp/><ref refid="intproto_8h_1a839f2d576e590222e687797c23795505" kindref="member">MaxNumClassesIn</ref><sp/>(Templates))<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>Pruner<sp/>=<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>++;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[Pruner]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[Pruner],<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AddIntClass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="257"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a569488473772d42004fec43399e6d5a9" kindref="member">AddIntConfig</ref>(<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>assert(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref><sp/>&lt;<sp/><ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>Index<sp/>=<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>++;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[Index]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Index;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AddIntConfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="281"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a4c27266652a51cf8aaa866d299f57301" kindref="member">AddIntProto</ref>(<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoSetId;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET</ref><sp/>ProtoSet;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">INT_PROTO</ref><sp/>Proto;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>*Word;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref><sp/>&gt;=<sp/><ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="matchdefs_8h_1a4d2ae3978d57e3b05f984a0fedc51812" kindref="member">NO_PROTO</ref>);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>Index<sp/>=<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>++;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref><sp/>&gt;<sp/><ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref>(Class))<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoSetId<sp/>=<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>++;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoSet<sp/>=<sp/>(<ref refid="intproto_8h_1a75a17f28eba3fb341330351ef2ee9d87" kindref="member">PROTO_SET</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET_STRUCT</ref>));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[ProtoSetId]<sp/>=<sp/>ProtoSet;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(ProtoSet,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ProtoSet));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reallocate<sp/>space<sp/>for<sp/>the<sp/>proto<sp/>lengths<sp/>and<sp/>install<sp/>in<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref><sp/>=</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>*)<ref refid="emalloc_8cpp_1a92c09eaf43dcfc23a738fca16eb677b9" kindref="member">Erealloc</ref>(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref>(Class)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>));</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[Index],<sp/>0,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>)<sp/>*<sp/>(<ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref>(Class)<sp/>-<sp/>Index));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>proto<sp/>so<sp/>its<sp/>length<sp/>is<sp/>zero<sp/>and<sp/>it<sp/>isn&apos;t<sp/>in<sp/>any<sp/>configs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[Index]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>Proto<sp/>=<sp/><ref refid="intproto_8h_1aff1a8cea9b56061e344b3b3f256f5253" kindref="member">ProtoForProtoId</ref><sp/>(Class,<sp/>Index);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Word<sp/>=<sp/>Proto-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ab70f1eebe582cd4a62d97c81e29ac842" kindref="member">Configs</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Word<sp/>&lt;<sp/>Proto-&gt;Configs<sp/>+<sp/><ref refid="intproto_8h_1a884e587328e6d76dfc5e2abe80b9120a" kindref="member">WERDS_PER_CONFIG_VEC</ref>;<sp/>*Word++<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Index);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AddIntProto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a117c6df38172671a3f3fce9cdb4f3299" kindref="member">AddProtoToClassPruner</ref><sp/>(<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto,<sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>ClassId,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>Templates)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Proto<sp/><sp/><sp/>floating-pt<sp/>proto<sp/>to<sp/>add<sp/>to<sp/>class<sp/>pruner</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ClassId<sp/><sp/><sp/>class<sp/>id<sp/>corresponding<sp/>to<sp/>Proto</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Templates<sp/>set<sp/>of<sp/>templates<sp/>containing<sp/>class<sp/>pruner</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>**<sp/>Globals:</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>**<sp/><sp/><sp/>classify_num_cp_levels<sp/>number<sp/>of<sp/>levels<sp/>used<sp/>in<sp/>the<sp/>class<sp/>pruner</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>adds<sp/>Proto<sp/>to<sp/>the<sp/>class<sp/>pruning<sp/>tables</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>**<sp/><sp/><sp/>for<sp/>the<sp/>specified<sp/>class<sp/>in<sp/>Templates.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>**<sp/>History:<sp/>Wed<sp/>Feb<sp/>13<sp/>08:49:54<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_LEVEL<sp/><sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline lineno="336"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>*<sp/>Pruner;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ClassMask;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ClassCount;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>WordIndex;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Level;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>EndPad,<sp/>SidePad,<sp/>AnglePad;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref><sp/>TableFiller;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><ref refid="struct_f_i_l_l___s_p_e_c" kindref="compound">FILL_SPEC</ref><sp/>FillSpec;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>Pruner<sp/>=<sp/><ref refid="intproto_8h_1aec5852ff7233de6280fcc173589a9843" kindref="member">CPrunerFor</ref><sp/>(Templates,<sp/>ClassId);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>WordIndex<sp/>=<sp/><ref refid="intproto_8h_1a99d69701db6f22923e8c4027000f1bd7" kindref="member">CPrunerWordIndexFor</ref><sp/>(ClassId);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>ClassMask<sp/>=<sp/><ref refid="intproto_8h_1aea1de602f2eff7c6f2edcf6a0513b95e" kindref="member">CPrunerMaskFor</ref><sp/>(MAX_LEVEL,<sp/>ClassId);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Level<sp/>=<sp/>classify_num_cp_levels<sp/>-<sp/>1;<sp/>Level<sp/>&gt;=<sp/>0;<sp/>Level--)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a09e675cd233359d8763e744e402a3dfa" kindref="member">GetCPPadsForLevel</ref>(Level,<sp/>&amp;EndPad,<sp/>&amp;SidePad,<sp/>&amp;AnglePad);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>ClassCount<sp/>=<sp/><ref refid="intproto_8h_1aea1de602f2eff7c6f2edcf6a0513b95e" kindref="member">CPrunerMaskFor</ref><sp/>(Level,<sp/>ClassId);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1adb682620c9100c1985218aeb25bbdb9f" kindref="member">InitTableFiller</ref>(EndPad,<sp/>SidePad,<sp/>AnglePad,<sp/>Proto,<sp/>&amp;TableFiller);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="intproto_8cpp_1a6e872ab9dec7a62d791536899847446b" kindref="member">FillerDone</ref><sp/>(&amp;TableFiller))<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a2d8b49f118901da6dbaf5d5b4c8da174" kindref="member">GetNextFill</ref>(&amp;TableFiller,<sp/>&amp;FillSpec);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1afaea93aff6c706adbe44d48f343ce2af" kindref="member">DoFill</ref>(&amp;FillSpec,<sp/>Pruner,<sp/>ClassMask,<sp/>ClassCount,<sp/>WordIndex);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AddProtoToClassPruner<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1aec09adc2735bb4caaf226df7124e4ed7" kindref="member">AddProtoToProtoPruner</ref>(<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoId,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Proto<sp/>floating-pt<sp/>proto<sp/>to<sp/>be<sp/>added<sp/>to<sp/>proto<sp/>pruner</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ProtoId<sp/>id<sp/>of<sp/>proto</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Class<sp/>integer<sp/>class<sp/>that<sp/>contains<sp/>desired<sp/>proto<sp/>pruner</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>updates<sp/>the<sp/>proto<sp/>pruner<sp/>lookup<sp/>tables</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>**<sp/><sp/><sp/>for<sp/>Class<sp/>to<sp/>include<sp/>a<sp/>new<sp/>proto<sp/>identified<sp/>by<sp/>ProtoId</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>**<sp/><sp/><sp/>and<sp/>described<sp/>by<sp/>Proto.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Feb<sp/><sp/>8<sp/>13:07:19<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Angle,<sp/>X,<sp/>Y,<sp/>Length;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Pad;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Index;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET</ref><sp/>ProtoSet;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ProtoId<sp/>&gt;=<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;AddProtoToProtoPruner:assert<sp/>failed:<sp/>%d<sp/>&lt;<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProtoId,<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>assert(ProtoId<sp/>&lt;<sp/>Class-&gt;NumProtos);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>Index<sp/>=<sp/><ref refid="intproto_8h_1a40fe618eeb7d652b8cf2dce9f31a2d22" kindref="member">IndexForProto</ref><sp/>(ProtoId);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>ProtoSet<sp/>=<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[<ref refid="intproto_8h_1aa370872941b0c4f6b9e771a17a536bfd" kindref="member">SetForProto</ref><sp/>(ProtoId)];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>Angle<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight></codeline>
<codeline lineno="394"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>assert(!<ref refid="mathfix_8h_1a2e1baae9134e580910322362dc23290e" kindref="member">isnan</ref>(Angle));</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1ada113a59754199d44e31c2ec03411eb2" kindref="member">FillPPCircularBits</ref><sp/>(ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a6c4fddbacb407bdda234dfe3d1835df4" kindref="member">ProtoPruner</ref>[<ref refid="intproto_8h_1aa1522c3f9ac9fa4ce3369ee47e73a481" kindref="member">PRUNER_ANGLE</ref>],<sp/>Index,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Angle<sp/>+<sp/><ref refid="intproto_8h_1a0be004c4069c9a09479eef2955f1097e" kindref="member">ANGLE_SHIFT</ref>,<sp/>classify_pp_angle_pad<sp/>/<sp/>360.0,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>debug);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>Angle<sp/>*=<sp/>2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>Length<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>X<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref><sp/>+<sp/><ref refid="intproto_8h_1a7c72e90cfafe9834907d05ddf55bff09" kindref="member">X_SHIFT</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>Pad<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref><sp/>(fabs<sp/>(cos<sp/>(Angle))<sp/>*<sp/>(Length<sp/>/<sp/>2.0<sp/>+</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_pp_end_pad<sp/>*</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>()),</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs<sp/>(sin<sp/>(Angle))<sp/>*<sp/>(classify_pp_side_pad<sp/>*</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>()));</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1aafbbbb343d2128a3bb4f1042746bda8b" kindref="member">FillPPLinearBits</ref>(ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a6c4fddbacb407bdda234dfe3d1835df4" kindref="member">ProtoPruner</ref>[<ref refid="intproto_8h_1af01cd9af1d00fa943dd1edfd19882833" kindref="member">PRUNER_X</ref>],<sp/>Index,<sp/>X,<sp/>Pad,<sp/>debug);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>Y<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref><sp/>+<sp/><ref refid="intproto_8h_1abd4c49783ccd23c297ef5650ccce9c9c" kindref="member">Y_SHIFT</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>Pad<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref><sp/>(fabs<sp/>(sin<sp/>(Angle))<sp/>*<sp/>(Length<sp/>/<sp/>2.0<sp/>+</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_pp_end_pad<sp/>*</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>()),</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs<sp/>(cos<sp/>(Angle))<sp/>*<sp/>(classify_pp_side_pad<sp/>*</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>()));</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1aafbbbb343d2128a3bb4f1042746bda8b" kindref="member">FillPPLinearBits</ref>(ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a6c4fddbacb407bdda234dfe3d1835df4" kindref="member">ProtoPruner</ref>[<ref refid="intproto_8h_1a7c72f47e4c4a455c9ac0d3855c1aeff2" kindref="member">PRUNER_Y</ref>],<sp/>Index,<sp/>Y,<sp/>Pad,<sp/>debug);</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>AddProtoToProtoPruner<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" kindref="member">BucketFor</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Param,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBuckets)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Param<sp/><sp/><sp/>parameter<sp/>value<sp/>to<sp/>map<sp/>into<sp/>a<sp/>bucket<sp/>number</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Offset<sp/><sp/><sp/><sp/>amount<sp/>to<sp/>shift<sp/>param<sp/>before<sp/>mapping<sp/>it</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>**<sp/><sp/><sp/>NumBuckets<sp/><sp/>number<sp/>of<sp/>buckets<sp/>to<sp/>map<sp/>param<sp/>into</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>maps<sp/>a<sp/>parameter<sp/>value<sp/>into<sp/>a<sp/>bucket<sp/>between</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>**<sp/><sp/><sp/>0<sp/>and<sp/>NumBuckets-1.<sp/><sp/>Offset<sp/>is<sp/>added<sp/>to<sp/>the<sp/>parameter</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>**<sp/><sp/><sp/>before<sp/>mapping<sp/>it.<sp/><sp/>Values<sp/>which<sp/>map<sp/>to<sp/>buckets<sp/>outside</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>**<sp/><sp/><sp/>the<sp/>range<sp/>are<sp/>truncated<sp/>to<sp/>fit<sp/>within<sp/>the<sp/>range.<sp/><sp/>Mapping</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>**<sp/><sp/><sp/>is<sp/>done<sp/>by<sp/>truncating<sp/>rather<sp/>than<sp/>rounding.</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Bucket<sp/>number<sp/>corresponding<sp/>to<sp/>Param<sp/>+<sp/>Offset.</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Feb<sp/>14<sp/>13:24:33<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helpers_8h_1af8739168d5b3235996eeb25dac3c4044" kindref="member">ClipToRange</ref>(static_cast&lt;int&gt;(<ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Param,<sp/>Offset,<sp/>NumBuckets)),</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>NumBuckets<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BucketFor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1ae3184eb086a2f8eb3b7b4c42bae5ca22" kindref="member">CircBucketFor</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Param,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBuckets)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Param<sp/><sp/><sp/>parameter<sp/>value<sp/>to<sp/>map<sp/>into<sp/>a<sp/>circular<sp/>bucket</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Offset<sp/><sp/><sp/><sp/>amount<sp/>to<sp/>shift<sp/>param<sp/>before<sp/>mapping<sp/>it</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>**<sp/><sp/><sp/>NumBuckets<sp/><sp/>number<sp/>of<sp/>buckets<sp/>to<sp/>map<sp/>param<sp/>into</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>maps<sp/>a<sp/>parameter<sp/>value<sp/>into<sp/>a<sp/>bucket<sp/>between</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>**<sp/><sp/><sp/>0<sp/>and<sp/>NumBuckets-1.<sp/><sp/>Offset<sp/>is<sp/>added<sp/>to<sp/>the<sp/>parameter</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>**<sp/><sp/><sp/>before<sp/>mapping<sp/>it.<sp/><sp/>Values<sp/>which<sp/>map<sp/>to<sp/>buckets<sp/>outside</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>**<sp/><sp/><sp/>the<sp/>range<sp/>are<sp/>wrapped<sp/>to<sp/>a<sp/>new<sp/>value<sp/>in<sp/>a<sp/>circular<sp/>fashion.</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Mapping<sp/>is<sp/>done<sp/>by<sp/>truncating<sp/>rather<sp/>than<sp/>rounding.</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Bucket<sp/>number<sp/>corresponding<sp/>to<sp/>Param<sp/>+<sp/>Offset.</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Feb<sp/>14<sp/>13:24:33<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bucket;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>Bucket<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Param,<sp/>Offset,<sp/>NumBuckets));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Bucket<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>Bucket<sp/>+=<sp/>NumBuckets;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Bucket<sp/>&gt;=<sp/>NumBuckets)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>Bucket<sp/>-=<sp/>NumBuckets;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Bucket;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CircBucketFor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="476"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a3827f6daeeb1efd88fa0bf418c83d984" kindref="member">UpdateMatchDisplay</ref>()<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>**<sp/>Parameters:<sp/>none</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>**<sp/>Globals:</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>**<sp/><sp/><sp/>FeatureShapes<sp/>display<sp/>list<sp/>for<sp/>features</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ProtoShapes<sp/>display<sp/>list<sp/>for<sp/>protos</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>clears<sp/>the<sp/>global<sp/>feature<sp/>and<sp/>proto</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>**<sp/><sp/><sp/>display<sp/>lists.</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Mar<sp/>21<sp/>15:40:19<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IntMatchWindow<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>IntMatchWindow-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ClearMatchDisplay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="492"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a57b07752bea2110e2503cf78747228c5" kindref="member">ConvertConfig</ref>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConfigId,<sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Config<sp/><sp/><sp/><sp/>config<sp/>to<sp/>be<sp/>added<sp/>to<sp/>class</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ConfigId<sp/><sp/>id<sp/>to<sp/>be<sp/>used<sp/>for<sp/>new<sp/>config</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Class<sp/><sp/><sp/>class<sp/>to<sp/>add<sp/>new<sp/>config<sp/>to</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>operation<sp/>updates<sp/>the<sp/>config<sp/>vectors<sp/>of<sp/>all<sp/>protos</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>**<sp/><sp/><sp/>in<sp/>Class<sp/>to<sp/>indicate<sp/>that<sp/>the<sp/>protos<sp/>with<sp/>1&apos;s<sp/>in<sp/>Config</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>**<sp/><sp/><sp/>belong<sp/>to<sp/>a<sp/>new<sp/>configuration<sp/>identified<sp/>by<sp/>ConfigId.</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>**<sp/><sp/><sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>the<sp/>length<sp/>of<sp/>the<sp/>Config<sp/>bit<sp/>vector<sp/>is</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>**<sp/><sp/><sp/>equal<sp/>to<sp/>the<sp/>number<sp/>of<sp/>protos<sp/>in<sp/>Class.</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>**<sp/>History:<sp/>Mon<sp/>Feb<sp/>11<sp/>14:57:31<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoId;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">INT_PROTO</ref><sp/>Proto;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TotalLength;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoId<sp/>=<sp/>0,<sp/>TotalLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoId<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>;<sp/>ProtoId++)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bitvec_8h_1a76a50c5a99dea7be5315fe76246036ce" kindref="member">test_bit</ref>(Config,<sp/>ProtoId))<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/><ref refid="intproto_8h_1aff1a8cea9b56061e344b3b3f256f5253" kindref="member">ProtoForProtoId</ref>(Class,<sp/>ProtoId);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" kindref="member">SET_BIT</ref>(Proto-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ab70f1eebe582cd4a62d97c81e29ac842" kindref="member">Configs</ref>,<sp/>ConfigId);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TotalLength<sp/>+=<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ProtoId];</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[ConfigId]<sp/>=<sp/>TotalLength;</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ConvertConfig<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1af27d604585502bd447d52bf5daf15d0d" kindref="member">Classify::ConvertProto</ref>(<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoId,<sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Proto<sp/>floating-pt<sp/>proto<sp/>to<sp/>be<sp/>converted<sp/>to<sp/>integer<sp/>format</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ProtoId<sp/>id<sp/>of<sp/>proto</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Class<sp/>integer<sp/>class<sp/>to<sp/>add<sp/>converted<sp/>proto<sp/>to</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>converts<sp/>Proto<sp/>to<sp/>integer<sp/>format<sp/>and</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>**<sp/><sp/><sp/>installs<sp/>it<sp/>as<sp/>ProtoId<sp/>in<sp/>Class.</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Feb<sp/><sp/>8<sp/>11:22:43<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">INT_PROTO</ref><sp/>P;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Param;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>assert(ProtoId<sp/>&lt;<sp/>Class-&gt;NumProtos);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>P<sp/>=<sp/><ref refid="intproto_8h_1aff1a8cea9b56061e344b3b3f256f5253" kindref="member">ProtoForProtoId</ref>(Class,<sp/>ProtoId);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>Param<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1ae3211a725f109fbd40efc6cd154330f7" kindref="member">A</ref><sp/>*<sp/>128;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>P-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a1a04b5d1566d1ec88d99da275208f064" kindref="member">A</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a12134f53d5a57bb1dc79acf2711aae5d" kindref="member">TruncateParam</ref>(Param,<sp/>-128,<sp/>127,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>Param<sp/>=<sp/>-Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a884630c87acb7606ac02516d1ea4ea9e" kindref="member">B</ref><sp/>*<sp/>256;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>P-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ae3a26a69bb3e3dcc7138fa036d3cb9e8" kindref="member">B</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a12134f53d5a57bb1dc79acf2711aae5d" kindref="member">TruncateParam</ref>(Param,<sp/>0,<sp/>255,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>Param<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a09d1e20c0a8362582127fa3554bb83ae" kindref="member">C</ref><sp/>*<sp/>128;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>P-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1af1c3246d7de60562deed8d58d292bb01" kindref="member">C</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a12134f53d5a57bb1dc79acf2711aae5d" kindref="member">TruncateParam</ref>(Param,<sp/>-128,<sp/>127,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>Param<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref><sp/>*<sp/>256;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Param<sp/>&lt;<sp/>0<sp/>||<sp/>Param<sp/>&gt;=<sp/>256)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>P-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a3595512379d43a12f92efef287db17d9" kindref="member">Angle</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>P-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a3595512379d43a12f92efef287db17d9" kindref="member">Angle</ref><sp/>=<sp/>(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>)<sp/>Param;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>round<sp/>proto<sp/>length<sp/>to<sp/>nearest<sp/>integer<sp/>number<sp/>of<sp/>pico-features<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>Param<sp/>=<sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref><sp/>/<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref>())<sp/>+<sp/>0.5;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ProtoId]<sp/>=<sp/><ref refid="intproto_8cpp_1a12134f53d5a57bb1dc79acf2711aae5d" kindref="member">TruncateParam</ref>(Param,<sp/>1,<sp/>255,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(classify_learning_debug_level<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Converted<sp/>ffeat<sp/>to<sp/>(A=%d,B=%d,C=%d,L=%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a1a04b5d1566d1ec88d99da275208f064" kindref="member">A</ref>,<sp/>P-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ae3a26a69bb3e3dcc7138fa036d3cb9e8" kindref="member">B</ref>,<sp/>P-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1af1c3246d7de60562deed8d58d292bb01" kindref="member">C</ref>,<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ProtoId]);</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ConvertProto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/><ref refid="classtesseract_1_1_classify_1af3d15c15c9f2dce72a400233d4bf366f" kindref="member">Classify::CreateIntTemplates</ref>(<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASSES</ref><sp/>FloatProtos,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_unicharset)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>**<sp/><sp/><sp/>FloatProtos<sp/>prototypes<sp/>in<sp/>old<sp/>floating<sp/>pt<sp/>format</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>converts<sp/>from<sp/>the<sp/>old<sp/>floating<sp/>point<sp/>format</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>**<sp/><sp/><sp/>to<sp/>the<sp/>new<sp/>integer<sp/>format.</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>**<sp/>Return:<sp/>New<sp/>set<sp/>of<sp/>training<sp/>templates<sp/>in<sp/>integer<sp/>format.</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Feb<sp/><sp/>7<sp/>14:40:42<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>IntTemplates;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>FClass;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>IClass;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ClassId;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoId;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ConfigId;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/>IntTemplates<sp/>=<sp/><ref refid="intproto_8cpp_1a020880b72d2d68c69edba44494fce647" kindref="member">NewIntTemplates</ref>();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ClassId<sp/>=<sp/>0;<sp/>ClassId<sp/>&lt;<sp/>target_unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>();<sp/>ClassId++)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>FClass<sp/>=<sp/>&amp;(FloatProtos[ClassId]);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FClass-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>FClass-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref><sp/>==<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp(target_unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ClassId),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>no<sp/>protos/configs<sp/>for<sp/>%s<sp/>in<sp/>CreateIntTemplates()\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ClassId));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="intproto_8h_1a3e7ae3ffbac606326937a4c701aeeaf2" kindref="member">UnusedClassIdIn</ref>(IntTemplates,<sp/>ClassId));</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>IClass<sp/>=<sp/><ref refid="intproto_8cpp_1af77150e8523be2b3f6449e194eb55e7b" kindref="member">NewIntClass</ref>(FClass-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>,<sp/>FClass-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtesseract_1_1_font_set" kindref="compound">FontSet</ref><sp/>fs;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>fs.<ref refid="structtesseract_1_1_font_set_1a2f474cedd75889b35a8b5f401eab3c01" kindref="member">size</ref><sp/>=<sp/>FClass-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a42fd551c9f2ee48e5873ae7308df64b4" kindref="member">font_set</ref>.<ref refid="class_unicity_table_1a834de17f090dcfcc6625b01c5a627c2f" kindref="member" tooltip="Return the size used. ">size</ref>();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>fs.<ref refid="structtesseract_1_1_font_set_1a466a7c0f34a22d2b112658de14f6a376" kindref="member">configs</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[fs.<ref refid="structtesseract_1_1_font_set_1a2f474cedd75889b35a8b5f401eab3c01" kindref="member">size</ref>];</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fs.<ref refid="structtesseract_1_1_font_set_1a2f474cedd75889b35a8b5f401eab3c01" kindref="member">size</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fs.<ref refid="structtesseract_1_1_font_set_1a466a7c0f34a22d2b112658de14f6a376" kindref="member">configs</ref>[i]<sp/>=<sp/>FClass-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a42fd551c9f2ee48e5873ae7308df64b4" kindref="member">font_set</ref>.<ref refid="class_unicity_table_1a3b3107bc72d9edfe501eaba7404de7eb" kindref="member" tooltip="Return the object from an id. ">get</ref>(i);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classtesseract_1_1_classify_1a74a007a46ac907d2c8f61e9885143465" kindref="member">fontset_table_</ref>.contains(fs))<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IClass-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1af0d8fa528ac2dd07fe4f39ef84a6fd7c" kindref="member">font_set_id</ref><sp/>=<sp/>this-&gt;<ref refid="classtesseract_1_1_classify_1a74a007a46ac907d2c8f61e9885143465" kindref="member">fontset_table_</ref>.get_id(fs);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>fs.<ref refid="structtesseract_1_1_font_set_1a466a7c0f34a22d2b112658de14f6a376" kindref="member">configs</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IClass-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1af0d8fa528ac2dd07fe4f39ef84a6fd7c" kindref="member">font_set_id</ref><sp/>=<sp/>this-&gt;<ref refid="classtesseract_1_1_classify_1a74a007a46ac907d2c8f61e9885143465" kindref="member">fontset_table_</ref>.push_back(fs);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a66f71b82c006e385d6e3ce7c677c6ad8" kindref="member">AddIntClass</ref>(IntTemplates,<sp/>ClassId,<sp/>IClass);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ProtoId<sp/>=<sp/>0;<sp/>ProtoId<sp/>&lt;<sp/>FClass-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>;<sp/>ProtoId++)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a4c27266652a51cf8aaa866d299f57301" kindref="member">AddIntProto</ref>(IClass);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1af27d604585502bd447d52bf5daf15d0d" kindref="member">ConvertProto</ref>(<ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref>(FClass,<sp/>ProtoId),<sp/>ProtoId,<sp/>IClass);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1aec09adc2735bb4caaf226df7124e4ed7" kindref="member">AddProtoToProtoPruner</ref>(<ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref>(FClass,<sp/>ProtoId),<sp/>ProtoId,<sp/>IClass,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_learning_debug_level<sp/>&gt;=<sp/>2);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a117c6df38172671a3f3fce9cdb4f3299" kindref="member">AddProtoToClassPruner</ref>(<ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref>(FClass,<sp/>ProtoId),<sp/>ClassId,<sp/>IntTemplates);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ConfigId<sp/>=<sp/>0;<sp/>ConfigId<sp/>&lt;<sp/>FClass-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref>;<sp/>ConfigId++)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a569488473772d42004fec43399e6d5a9" kindref="member">AddIntConfig</ref>(IClass);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a57b07752bea2110e2503cf78747228c5" kindref="member">ConvertConfig</ref>(FClass-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[ConfigId],<sp/>ConfigId,<sp/>IClass);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(IntTemplates);</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CreateIntTemplates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="638"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a7a82b76e5d96e5a5c0b714da6b8aa37a" kindref="member">DisplayIntFeature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>Feature,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Evidence)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Feature<sp/><sp/><sp/>pico-feature<sp/>to<sp/>be<sp/>displayed</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Evidence<sp/><sp/>best<sp/>evidence<sp/>for<sp/>this<sp/>feature<sp/>(0-1)</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>**<sp/>Globals:</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>**<sp/><sp/><sp/>FeatureShapes<sp/>global<sp/>display<sp/>list<sp/>for<sp/>features</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>renders<sp/>the<sp/>specified<sp/>feature<sp/>into<sp/>a</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>**<sp/><sp/><sp/>global<sp/>display<sp/>list.</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Mar<sp/>21<sp/>14:45:04<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color<sp/>=<sp/><ref refid="intproto_8cpp_1afa296141a34309a16ea4fdc63904ecea" kindref="member">GetMatchColorFor</ref>(Evidence);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a83c43ef1a01f3be45cbf675da04c3930" kindref="member">RenderIntFeature</ref>(IntMatchWindow,<sp/>Feature,<sp/>color);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FeatureDisplayWindow)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a83c43ef1a01f3be45cbf675da04c3930" kindref="member">RenderIntFeature</ref>(FeatureDisplayWindow,<sp/>Feature,<sp/>color);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DisplayIntFeature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a6a0b3c9d68e99b70f1a5bbd6919ac98a" kindref="member">DisplayIntProto</ref>(<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class,<sp/><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref><sp/>ProtoId,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Evidence)<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Class<sp/><sp/><sp/>class<sp/>to<sp/>take<sp/>proto<sp/>from</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ProtoId<sp/><sp/><sp/>id<sp/>of<sp/>proto<sp/>in<sp/>Class<sp/>to<sp/>be<sp/>displayed</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Evidence<sp/><sp/>total<sp/>evidence<sp/>for<sp/>proto<sp/>(0-1)</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/>**<sp/>Globals:</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ProtoShapes<sp/>global<sp/>display<sp/>list<sp/>for<sp/>protos</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>renders<sp/>the<sp/>specified<sp/>proto<sp/>into<sp/>a</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>**<sp/><sp/><sp/>global<sp/>display<sp/>list.</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Mar<sp/>21<sp/>14:45:04<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color<sp/>=<sp/><ref refid="intproto_8cpp_1afa296141a34309a16ea4fdc63904ecea" kindref="member">GetMatchColorFor</ref>(Evidence);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a67948f52800e3964340ae96c2261c018" kindref="member">RenderIntProto</ref>(IntMatchWindow,<sp/>Class,<sp/>ProtoId,<sp/>color);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ProtoDisplayWindow)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a67948f52800e3964340ae96c2261c018" kindref="member">RenderIntProto</ref>(ProtoDisplayWindow,<sp/>Class,<sp/>ProtoId,<sp/>color);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DisplayIntProto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="681"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/><ref refid="intproto_8cpp_1af77150e8523be2b3f6449e194eb55e7b" kindref="member">NewIntClass</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxNumProtos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxNumConfigs)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>**<sp/><sp/><sp/>MaxNumProtos<sp/><sp/>number<sp/>of<sp/>protos<sp/>to<sp/>allocate<sp/>space<sp/>for</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/>**<sp/><sp/><sp/>MaxNumConfigs<sp/>number<sp/>of<sp/>configs<sp/>to<sp/>allocate<sp/>space<sp/>for</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>creates<sp/>a<sp/>new<sp/>integer<sp/>class<sp/>data<sp/>structure</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/>**<sp/><sp/><sp/>and<sp/>returns<sp/>it.<sp/><sp/>Sufficient<sp/>space<sp/>is<sp/>allocated</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/>**<sp/><sp/><sp/>to<sp/>handle<sp/>the<sp/>specified<sp/>number<sp/>of<sp/>protos<sp/>and<sp/>configs.</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/>**<sp/>Return:<sp/>New<sp/>class<sp/>created.</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Feb<sp/><sp/>8<sp/>10:51:23<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET</ref><sp/>ProtoSet;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/>assert(MaxNumConfigs<sp/>&lt;=<sp/><ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>Class<sp/>=<sp/>(<ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS_STRUCT</ref>));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref><sp/>=<sp/>((MaxNumProtos<sp/>+<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref><sp/>-<sp/>1)<sp/>/</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>assert(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref><sp/>&lt;=<sp/><ref refid="intproto_8h_1a267b5003cff8ab0fec1d3fef97738239" kindref="member">MAX_NUM_PROTO_SETS</ref>);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>space<sp/>for<sp/>a<sp/>proto<sp/>set,<sp/>install<sp/>in<sp/>class,<sp/>and<sp/>initialize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoSet<sp/>=<sp/>(<ref refid="intproto_8h_1a75a17f28eba3fb341330351ef2ee9d87" kindref="member">PROTO_SET</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET_STRUCT</ref>));</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(ProtoSet,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*ProtoSet));</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[i]<sp/>=<sp/>ProtoSet;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>space<sp/>for<sp/>the<sp/>proto<sp/>lengths<sp/>and<sp/>install<sp/>in<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref><sp/>(Class)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref><sp/>=</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(<ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref><sp/>(Class)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref>(Class)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/>memset(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>));</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Class);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NewIntClass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a4f621928b758b2595ba38e043140d35a" kindref="member">free_int_class</ref>(<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>int_class)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>int_class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" kindref="member">Efree</ref><sp/>(int_class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[i]);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(int_class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" kindref="member">Efree</ref><sp/>(int_class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><ref refid="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" kindref="member">Efree</ref>(int_class);</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/><ref refid="intproto_8cpp_1a020880b72d2d68c69edba44494fce647" kindref="member">NewIntTemplates</ref>()<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/>**<sp/>Parameters:<sp/>none</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>allocates<sp/>a<sp/>new<sp/>set<sp/>of<sp/>integer<sp/>templates</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/>**<sp/><sp/><sp/>initialized<sp/>to<sp/>hold<sp/>0<sp/>classes.</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/>**<sp/>Return:<sp/>The<sp/>integer<sp/>templates<sp/>created.</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Feb<sp/><sp/>8<sp/>08:38:51<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>T;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>T<sp/>=<sp/>(<ref refid="intproto_8h_1ab59629800b7869803b0af0f2f5db1627" kindref="member">INT_TEMPLATES</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES_STRUCT</ref>));</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>T-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>T-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(T,<sp/>i)<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T);</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NewIntTemplates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1aed61c96f41cad7c9871e809124987ca8" kindref="member">free_int_templates</ref>(<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>templates)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a4f621928b758b2595ba38e043140d35a" kindref="member">free_int_class</ref>(templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a2083307ebe623a6617ff38291a2f3614" kindref="member">Class</ref>[i]);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[i];</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><ref refid="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" kindref="member">Efree</ref>(templates);</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/><ref refid="classtesseract_1_1_classify_1a98459996e5e6ab1dc1de71411fd32b89" kindref="member">Classify::ReadIntTemplates</ref>(FILE<sp/>*File)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>**<sp/><sp/><sp/>File<sp/><sp/><sp/><sp/>open<sp/>file<sp/>to<sp/>read<sp/>templates<sp/>from</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>reads<sp/>a<sp/>set<sp/>of<sp/>integer<sp/>templates<sp/>from</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/>**<sp/><sp/><sp/>File.<sp/><sp/>File<sp/>must<sp/>already<sp/>be<sp/>open<sp/>and<sp/>must<sp/>be<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/>**<sp/><sp/><sp/>correct<sp/>binary<sp/>format.</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Pointer<sp/>to<sp/>integer<sp/>templates<sp/>read<sp/>from<sp/>File.</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/>**<sp/>History:<sp/>Wed<sp/>Feb<sp/>27<sp/>11:48:46<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>w,<sp/>x,<sp/>y,<sp/>z;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/>swap;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nread;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicharset_size;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>Templates;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>*<sp/>Pruner;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>*Lengths;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET</ref><sp/>ProtoSet;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>variables<sp/>for<sp/>conversion<sp/>from<sp/>older<sp/>inttemp<sp/>formats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/>bit_number,<sp/>last_cp_bit_number,<sp/>new_b,<sp/>new_i,<sp/>new_w;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>class_id,<sp/>max_class_id;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>*IndexFor<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>[<ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>];</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/>*ClassIdFor<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref>[<ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>];</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref><sp/>**TempClassPruner<sp/>=</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>*[<ref refid="intproto_8h_1aab6762087ba3ad713e2d76c3b19de53c" kindref="member">MAX_NUM_CLASS_PRUNERS</ref>];</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>SetBitsForMask<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>with<sp/>NUM_BITS_PER_CLASS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>)<sp/>-<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>starting<sp/>at<sp/>bit<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>Mask,<sp/>NewMask,<sp/>ClassBits;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxNumConfigs<sp/>=<sp/><ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WerdsPerConfigVec<sp/>=<sp/><ref refid="intproto_8h_1a884e587328e6d76dfc5e2abe80b9120a" kindref="member">WERDS_PER_CONFIG_VEC</ref>;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>read<sp/>the<sp/>high<sp/>level<sp/>template<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/>Templates<sp/>=<sp/><ref refid="intproto_8cpp_1a020880b72d2d68c69edba44494fce647" kindref="member">NewIntTemplates</ref>();</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>Templates<sp/>in<sp/>parts<sp/>for<sp/>64<sp/>bit<sp/>compatibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;unicharset_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>File)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>,</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>),<sp/>1,<sp/>File)<sp/>!=<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fread(&amp;Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>),<sp/>1,<sp/>File)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>status<sp/>is<sp/>determined<sp/>automatically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>swap<sp/>=<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref><sp/>&lt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref><sp/>&gt;<sp/><ref refid="intproto_8h_1aab6762087ba3ad713e2d76c3b19de53c" kindref="member">MAX_NUM_CLASS_PRUNERS</ref>;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;unicharset_size);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>has<sp/>a<sp/>version<sp/>id!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>version_id<sp/>=<sp/>-Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>),</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>File)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&lt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>MaxNumConfigs<sp/>=<sp/><ref refid="intproto_8cpp_1a140c8d6cda6a254c6bf42e7caa0390fc" kindref="member">OLD_MAX_NUM_CONFIGS</ref>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>WerdsPerConfigVec<sp/>=<sp/><ref refid="intproto_8cpp_1aed02bb4e2adadad4fad1e2fc91e4643d" kindref="member">OLD_WERDS_PER_CONFIG_VEC</ref>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>unicharset_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;IndexFor[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>),<sp/>1,<sp/>File)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;ClassIdFor[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref>),<sp/>1,<sp/>File)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a3c77aeb5931af9236d1d7fdecf7129be" kindref="member">Reverse16</ref>(&amp;IndexFor[i]);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;ClassIdFor[i]);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>read<sp/>in<sp/>the<sp/>class<sp/>pruners<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>Pruner<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nread<sp/>=</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread(Pruner,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>),</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>File))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>))</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref>;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref>;<sp/>y++)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref>;<sp/>z++)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/><ref refid="intproto_8h_1ab1e3efe229080aaa98b0df47adf46666" kindref="member">WERDS_PER_CP_VECTOR</ref>;<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;Pruner-&gt;<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t_1ab9fa291345d7d689f4c5240dea5e5087" kindref="member">p</ref>[x][y][z][w]);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TempClassPruner[i]<sp/>=<sp/>Pruner;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[i]<sp/>=<sp/>Pruner;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>fix<sp/>class<sp/>pruners<sp/>if<sp/>they<sp/>came<sp/>from<sp/>an<sp/>old<sp/>version<sp/>of<sp/>inttemp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>enough<sp/>class<sp/>pruners<sp/>to<sp/>cover<sp/>all<sp/>the<sp/>class<sp/>ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>max_class_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ClassIdFor[i]<sp/>&gt;<sp/>max_class_id)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_class_id<sp/>=<sp/>ClassIdFor[i];</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/><ref refid="intproto_8h_1a9e1bd1cdfd022a108d578009fe49ec51" kindref="member">CPrunerIdFor</ref>(max_class_id);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[i],<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>));</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>class<sp/>pruners<sp/>from<sp/>the<sp/>old<sp/>format<sp/>(indexed<sp/>by<sp/>class<sp/>index)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>new<sp/>format<sp/>(indexed<sp/>by<sp/>class<sp/>id).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>last_cp_bit_number<sp/>=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref><sp/>*<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref>;<sp/>y++)</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/><ref refid="intproto_8h_1aa675c40a77644a629ba6dd651e1befd5" kindref="member">NUM_CP_BUCKETS</ref>;<sp/>z++)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w<sp/>=<sp/>0;<sp/>w<sp/>&lt;<sp/><ref refid="intproto_8h_1ab1e3efe229080aaa98b0df47adf46666" kindref="member">WERDS_PER_CP_VECTOR</ref>;<sp/>w++)<sp/>{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TempClassPruner[i]-&gt;p[x][y][z][w]<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b<sp/>=<sp/>0;<sp/>b<sp/>&lt;<sp/><ref refid="intproto_8h_1a65e33e9e10361d8dc9c7760ee256beac" kindref="member">BITS_PER_WERD</ref>;<sp/>b<sp/>+=<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_number<sp/>=<sp/>i<sp/>*<sp/><ref refid="intproto_8h_1a0f9366ce0f73b02b2e9bc07a42cb0a00" kindref="member">BITS_PER_CP_VECTOR</ref><sp/>+<sp/>w<sp/>*<sp/>BITS_PER_WERD<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit_number<sp/>&gt;<sp/>last_cp_bit_number)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>bits<sp/>in<sp/>this<sp/>word<sp/>are<sp/>not<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id<sp/>=<sp/>ClassIdFor[bit_number<sp/>/<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>];</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Single<sp/>out<sp/>NUM_BITS_PER_CLASS<sp/>bits<sp/>relating<sp/>to<sp/>class_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mask<sp/>=<sp/>SetBitsForMask<sp/>&lt;&lt;<sp/>b;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassBits<sp/>=<sp/>TempClassPruner[i]-&gt;<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t_1ab9fa291345d7d689f4c5240dea5e5087" kindref="member">p</ref>[x][y][z][w]<sp/>&amp;<sp/>Mask;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>these<sp/>bits<sp/>to<sp/>the<sp/>new<sp/>position<sp/>in<sp/>which<sp/>they<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>appear<sp/>(indexed<sp/>corresponding<sp/>to<sp/>the<sp/>class_id).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_i<sp/>=<sp/><ref refid="intproto_8h_1a9e1bd1cdfd022a108d578009fe49ec51" kindref="member">CPrunerIdFor</ref>(class_id);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_w<sp/>=<sp/><ref refid="intproto_8h_1a99d69701db6f22923e8c4027000f1bd7" kindref="member">CPrunerWordIndexFor</ref>(class_id);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_b<sp/>=<sp/><ref refid="intproto_8h_1aa49eb773d3e7ef52fd291fcfb1464a83" kindref="member">CPrunerBitIndexFor</ref>(class_id)<sp/>*<sp/><ref refid="intproto_8h_1ae803270a6532aba72c1a20bacbf4594e" kindref="member">NUM_BITS_PER_CLASS</ref>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_b<sp/>&gt;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassBits<sp/>&lt;&lt;=<sp/>(new_b<sp/>-<sp/>b);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ClassBits<sp/>&gt;&gt;=<sp/>(b<sp/>-<sp/>new_b);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>bits<sp/>relating<sp/>to<sp/>class_id<sp/>to<sp/>the<sp/>correct<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>Templates-&gt;ClassPruner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewMask<sp/>=<sp/>SetBitsForMask<sp/>&lt;&lt;<sp/>new_b;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[new_i]-&gt;<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t_1ab9fa291345d7d689f4c5240dea5e5087" kindref="member">p</ref>[x][y][z][new_w]<sp/>&amp;=<sp/>~NewMask;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[new_i]-&gt;<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t_1ab9fa291345d7d689f4c5240dea5e5087" kindref="member">p</ref>[x][y][z][new_w]<sp/>|=<sp/>ClassBits;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>TempClassPruner[i];</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>read<sp/>in<sp/>each<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>read<sp/>in<sp/>the<sp/>high<sp/>level<sp/>struct<sp/>for<sp/>the<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>Class<sp/>=<sp/>(<ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS_STRUCT</ref>));</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>),<sp/>1,<sp/>File)<sp/>!=<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>),<sp/>1,<sp/>File)<sp/>!=<sp/>1<sp/>||</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>),<sp/>1,<sp/>File)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>version<sp/>0<sp/>writes<sp/>5<sp/>pointless<sp/>pointers<sp/>to<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>5;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>junk;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;junk,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(junk),<sp/>1,<sp/>File)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>MaxNumConfigs;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[j],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref>),<sp/>1,<sp/>File)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a3c77aeb5931af9236d1d7fdecf7129be" kindref="member">Reverse16</ref>(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>MaxNumConfigs;<sp/>j++)</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a3c77aeb5931af9236d1d7fdecf7129be" kindref="member">Reverse16</ref>(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[j]);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref><sp/>&lt;<sp/>MaxNumConfigs);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[j],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref>),<sp/>1,<sp/>File)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a3c77aeb5931af9236d1d7fdecf7129be" kindref="member">Reverse16</ref>(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>MaxNumConfigs;<sp/>j++)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a3c77aeb5931af9236d1d7fdecf7129be" kindref="member">Reverse16</ref>(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[j]);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(Templates,<sp/>ClassIdFor[i])<sp/>=<sp/>Class;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(Templates,<sp/>i)<sp/>=<sp/>Class;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>read<sp/>in<sp/>the<sp/>proto<sp/>lengths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>Lengths<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref><sp/>(Class)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Lengths<sp/>=<sp/>(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>)<sp/>*<sp/><ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref>(Class));</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nread<sp/>=</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)Lengths,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>),</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref>(Class),<sp/>File))<sp/>!=<sp/><ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref><sp/>(Class))</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref><sp/>=<sp/>Lengths;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>read<sp/>in<sp/>the<sp/>proto<sp/>sets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProtoSet<sp/>=<sp/>(<ref refid="intproto_8h_1a75a17f28eba3fb341330351ef2ee9d87" kindref="member">PROTO_SET</ref>)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET_STRUCT</ref>));</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&lt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nread<sp/>=</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a6c4fddbacb407bdda234dfe3d1835df4" kindref="member">ProtoPruner</ref>,<sp/>1,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="intproto_8h_1a55c07a56b0a5b0e06d8ceb9ebb1da65c" kindref="member">PROTO_PRUNER</ref>),<sp/>File))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="intproto_8h_1a55c07a56b0a5b0e06d8ceb9ebb1da65c" kindref="member">PROTO_PRUNER</ref>))</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nread<sp/>=<sp/>fread((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[x].<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a1a04b5d1566d1ec88d99da275208f064" kindref="member">A</ref>,<sp/>1,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>),<sp/>File))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nread<sp/>=<sp/>fread((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[x].<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ae3a26a69bb3e3dcc7138fa036d3cb9e8" kindref="member">B</ref>,<sp/>1,</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>),<sp/>File))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nread<sp/>=<sp/>fread((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[x].<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1af1c3246d7de60562deed8d58d292bb01" kindref="member">C</ref>,<sp/>1,</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>),<sp/>File))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nread<sp/>=<sp/>fread((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[x].<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a3595512379d43a12f92efef287db17d9" kindref="member">Angle</ref>,<sp/>1,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>),<sp/>File))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>))</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>WerdsPerConfigVec;<sp/>y++)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nread<sp/>=<sp/>fread((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[x].<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ab70f1eebe582cd4a62d97c81e29ac842" kindref="member">Configs</ref>[y],<sp/>1,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>),<sp/>File))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>))</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nread<sp/>=</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ProtoSet,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET_STRUCT</ref>),</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>File))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET_STRUCT</ref>))</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>read<sp/>of<sp/>inttemp!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="intproto_8h_1a27a551120dac583bcc4134580a447768" kindref="member">NUM_PP_PARAMS</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/><ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>;<sp/>y++)</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(z<sp/>=<sp/>0;<sp/>z<sp/>&lt;<sp/><ref refid="intproto_8h_1a56d28cb646571fa14db5eb2ced4a5302" kindref="member">WERDS_PER_PP_VECTOR</ref>;<sp/>z++)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a6c4fddbacb407bdda234dfe3d1835df4" kindref="member">ProtoPruner</ref>[x][y][z]);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="intproto_8h_1ac6c8bf8f6110ef3cfc4bcd13d52c475c" kindref="member">PROTOS_PER_PROTO_SET</ref>;<sp/>x++)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>WerdsPerConfigVec;<sp/>y++)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[x].<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1ab70f1eebe582cd4a62d97c81e29ac842" kindref="member">Configs</ref>[y]);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[j]<sp/>=<sp/>ProtoSet;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&lt;<sp/>4)</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1af0d8fa528ac2dd07fe4f39ef84a6fd7c" kindref="member">font_set_id</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fread(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1af0d8fa528ac2dd07fe4f39ef84a6fd7c" kindref="member">font_set_id</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1af0d8fa528ac2dd07fe4f39ef84a6fd7c" kindref="member">font_set_id</ref>);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>an<sp/>empty<sp/>NULL<sp/>class<sp/>with<sp/>class<sp/>id<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(<ref refid="intproto_8h_1a3e7ae3ffbac606326937a4c701aeeaf2" kindref="member">UnusedClassIdIn</ref><sp/>(Templates,<sp/>0));</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(Templates,<sp/>0)<sp/>=<sp/><ref refid="intproto_8cpp_1af77150e8523be2b3f6449e194eb55e7b" kindref="member">NewIntClass</ref><sp/>(1,<sp/>1);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(Templates,<sp/>0)-&gt;font_set_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>++;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>the<sp/>classes<sp/>are<sp/>contiguous<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>Templates-&gt;NumClasses)<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(Templates,<sp/>i)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Non-contiguous<sp/>class<sp/>ids<sp/>in<sp/>inttemp\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a6a8e29742b045c359e7765a8a1ff4fdc" kindref="member">ClassForClassId</ref><sp/>(Templates,<sp/>i)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>id<sp/>%d<sp/>exceeds<sp/>NumClassesIn<sp/>(Templates)<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&gt;=<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_classify_1ae6dea981b2f591921d798ea83b0fa455" kindref="member">fontinfo_table_</ref>.read(File,<sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(<ref refid="namespacetesseract_1a4a8355da6e96695bb003d778da05a95b" kindref="member">read_info</ref>),<sp/>swap);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version_id<sp/>&gt;=<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_classify_1ae6dea981b2f591921d798ea83b0fa455" kindref="member">fontinfo_table_</ref>.read(File,</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(<ref refid="namespacetesseract_1a8643fbecc8aa5b606e53a534ad14d491" kindref="member">read_spacing_info</ref>),</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>swap);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_classify_1a74a007a46ac907d2c8f61e9885143465" kindref="member">fontset_table_</ref>.read(File,<sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(<ref refid="namespacetesseract_1a718a9f9121464dbaa6ef73c5f9dc6d5e" kindref="member">read_set</ref>),<sp/>swap);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>IndexFor;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>ClassIdFor;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>TempClassPruner;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Templates);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ReadIntTemplates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1096"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a44e1b8840fb841e621b902f3abdd8522" kindref="member">Classify::ShowMatchDisplay</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/>**<sp/>Parameters:<sp/>none</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/>**<sp/>Globals:</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/>**<sp/><sp/><sp/>FeatureShapes<sp/>display<sp/>list<sp/>containing<sp/>feature<sp/>matches</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ProtoShapes<sp/>display<sp/>list<sp/>containing<sp/>proto<sp/>matches</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>sends<sp/>the<sp/>shapes<sp/>in<sp/>the<sp/>global<sp/>display</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/>**<sp/><sp/><sp/>lists<sp/>to<sp/>the<sp/>match<sp/>debugger<sp/>window.</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Mar<sp/>21<sp/>15:47:33<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><ref refid="intproto_8cpp_1a142586ad15312463838c8202dd88d9b0" kindref="member">InitIntMatchWindowIfReqd</ref>();</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ProtoDisplayWindow)<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoDisplayWindow-&gt;<ref refid="class_scroll_view_1a5386b0da16d7cbdd33044e53b95313ac" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FeatureDisplayWindow)<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>FeatureDisplayWindow-&gt;<ref refid="class_scroll_view_1a5386b0da16d7cbdd33044e53b95313ac" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a50fae3caed4dccef6a71ac7e7aa9d63d" kindref="member">ClearFeatureSpaceWindow</ref>(</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;NORM_METHOD&gt;(static_cast&lt;int&gt;(classify_norm_method)),</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IntMatchWindow);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>IntMatchWindow-&gt;<ref refid="class_scroll_view_1a5a6c86ea0a618cf7642a8228fd7faab9" kindref="member">ZoomToRectangle</ref>(<ref refid="intproto_8cpp_1ac1a914c5ff58a0f8f9280ef2c9a29855" kindref="member">INT_MIN_X</ref>,<sp/><ref refid="intproto_8cpp_1a610ad70ab1731cabfb990c35cfd01dcf" kindref="member">INT_MIN_Y</ref>,</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1ae712f394e9941c44c22c38c920bd71cd" kindref="member">INT_MAX_X</ref>,<sp/><ref refid="intproto_8cpp_1a4b0559f5844c194356263f55e3279d04" kindref="member">INT_MAX_Y</ref>);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ProtoDisplayWindow)<sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoDisplayWindow-&gt;<ref refid="class_scroll_view_1a5a6c86ea0a618cf7642a8228fd7faab9" kindref="member">ZoomToRectangle</ref>(<ref refid="intproto_8cpp_1ac1a914c5ff58a0f8f9280ef2c9a29855" kindref="member">INT_MIN_X</ref>,<sp/><ref refid="intproto_8cpp_1a610ad70ab1731cabfb990c35cfd01dcf" kindref="member">INT_MIN_Y</ref>,</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1ae712f394e9941c44c22c38c920bd71cd" kindref="member">INT_MAX_X</ref>,<sp/><ref refid="intproto_8cpp_1a4b0559f5844c194356263f55e3279d04" kindref="member">INT_MAX_Y</ref>);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FeatureDisplayWindow)<sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>FeatureDisplayWindow-&gt;<ref refid="class_scroll_view_1a5a6c86ea0a618cf7642a8228fd7faab9" kindref="member">ZoomToRectangle</ref>(<ref refid="intproto_8cpp_1ac1a914c5ff58a0f8f9280ef2c9a29855" kindref="member">INT_MIN_X</ref>,<sp/><ref refid="intproto_8cpp_1a610ad70ab1731cabfb990c35cfd01dcf" kindref="member">INT_MIN_Y</ref>,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1ae712f394e9941c44c22c38c920bd71cd" kindref="member">INT_MAX_X</ref>,<sp/><ref refid="intproto_8cpp_1a4b0559f5844c194356263f55e3279d04" kindref="member">INT_MAX_Y</ref>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ShowMatchDisplay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clears<sp/>the<sp/>given<sp/>window<sp/>and<sp/>draws<sp/>the<sp/>featurespace<sp/>guides<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>appropriate<sp/>normalization<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a50fae3caed4dccef6a71ac7e7aa9d63d" kindref="member">ClearFeatureSpaceWindow</ref>(<ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865" kindref="member">NORM_METHOD</ref><sp/>norm_method,<sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a5386b0da16d7cbdd33044e53b95313ac" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a7bba33cbbab6aaa71dce1aad46ecc3a5" kindref="member">ScrollView::GREY</ref>);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>feature<sp/>space<sp/>limit<sp/>rectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1ac2a8fdf5d37967ea4a298dc092b6ed0e" kindref="member">Rectangle</ref>(0,<sp/>0,<sp/><ref refid="intproto_8cpp_1ae712f394e9941c44c22c38c920bd71cd" kindref="member">INT_MAX_X</ref>,<sp/><ref refid="intproto_8cpp_1a4b0559f5844c194356263f55e3279d04" kindref="member">INT_MAX_Y</ref>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(norm_method<sp/>==<sp/><ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865a83297de004f4e58b9be2108c6cd08a23" kindref="member">baseline</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a730b182e350dfe37b0986d7f0591fee5" kindref="member">SetCursor</ref>(0,<sp/><ref refid="intproto_8cpp_1a5c9809b9be37d6d221e2171fe42511df" kindref="member">INT_DESCENDER</ref>);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a101de80a4722fe821969f61f6e7303a6" kindref="member">DrawTo</ref>(<ref refid="intproto_8cpp_1ae712f394e9941c44c22c38c920bd71cd" kindref="member">INT_MAX_X</ref>,<sp/><ref refid="intproto_8cpp_1a5c9809b9be37d6d221e2171fe42511df" kindref="member">INT_DESCENDER</ref>);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a730b182e350dfe37b0986d7f0591fee5" kindref="member">SetCursor</ref>(0,<sp/><ref refid="intproto_8cpp_1af29db3e707420f778975c37e5d66fd10" kindref="member">INT_BASELINE</ref>);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a101de80a4722fe821969f61f6e7303a6" kindref="member">DrawTo</ref>(<ref refid="intproto_8cpp_1ae712f394e9941c44c22c38c920bd71cd" kindref="member">INT_MAX_X</ref>,<sp/><ref refid="intproto_8cpp_1af29db3e707420f778975c37e5d66fd10" kindref="member">INT_BASELINE</ref>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a730b182e350dfe37b0986d7f0591fee5" kindref="member">SetCursor</ref>(0,<sp/><ref refid="intproto_8cpp_1a8c142ec5cff85d77ec4abc373999f6ec" kindref="member">INT_XHEIGHT</ref>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a101de80a4722fe821969f61f6e7303a6" kindref="member">DrawTo</ref>(<ref refid="intproto_8cpp_1ae712f394e9941c44c22c38c920bd71cd" kindref="member">INT_MAX_X</ref>,<sp/><ref refid="intproto_8cpp_1a8c142ec5cff85d77ec4abc373999f6ec" kindref="member">INT_XHEIGHT</ref>);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a730b182e350dfe37b0986d7f0591fee5" kindref="member">SetCursor</ref>(0,<sp/><ref refid="intproto_8cpp_1afa60433c26b09f744170ab10c8cfa716" kindref="member">INT_CAPHEIGHT</ref>);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a101de80a4722fe821969f61f6e7303a6" kindref="member">DrawTo</ref>(<ref refid="intproto_8cpp_1ae712f394e9941c44c22c38c920bd71cd" kindref="member">INT_MAX_X</ref>,<sp/><ref refid="intproto_8cpp_1afa60433c26b09f744170ab10c8cfa716" kindref="member">INT_CAPHEIGHT</ref>);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1ac2a8fdf5d37967ea4a298dc092b6ed0e" kindref="member">Rectangle</ref>(<ref refid="intproto_8cpp_1a983c9783c3f2d0492f157663437cf7bd" kindref="member">INT_XCENTER</ref><sp/>-<sp/><ref refid="intproto_8cpp_1af4a3bea04d2b29dafb4530473dd4f656" kindref="member">INT_XRADIUS</ref>,<sp/><ref refid="intproto_8cpp_1a7b4c65ba0ecc02ed3d969a4c07bff4dc" kindref="member">INT_YCENTER</ref><sp/>-<sp/><ref refid="intproto_8cpp_1a38e42261c045df095d799e2f19aec1e6" kindref="member">INT_YRADIUS</ref>,</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8cpp_1a983c9783c3f2d0492f157663437cf7bd" kindref="member">INT_XCENTER</ref><sp/>+<sp/><ref refid="intproto_8cpp_1af4a3bea04d2b29dafb4530473dd4f656" kindref="member">INT_XRADIUS</ref>,<sp/><ref refid="intproto_8cpp_1a7b4c65ba0ecc02ed3d969a4c07bff4dc" kindref="member">INT_YCENTER</ref><sp/>+<sp/><ref refid="intproto_8cpp_1a38e42261c045df095d799e2f19aec1e6" kindref="member">INT_YRADIUS</ref>);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1153"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a81e8a5e5adfc60146ea3eb5b60936dd9" kindref="member">Classify::WriteIntTemplates</ref>(FILE<sp/>*File,<sp/><ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t" kindref="compound">INT_TEMPLATES</ref><sp/>Templates,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>target_unicharset)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/>**<sp/><sp/><sp/>File<sp/><sp/><sp/><sp/>open<sp/>file<sp/>to<sp/>write<sp/>templates<sp/>to</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Templates<sp/>templates<sp/>to<sp/>save<sp/>into<sp/>File</highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1162"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>writes<sp/>Templates<sp/>to<sp/>File.<sp/><sp/>The<sp/>format</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/>**<sp/><sp/><sp/>is<sp/>an<sp/>efficient<sp/>binary<sp/>format.<sp/><sp/>File<sp/>must<sp/>already<sp/>be<sp/>open</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/>**<sp/><sp/><sp/>for<sp/>writing.</highlight></codeline>
<codeline lineno="1165"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="1166"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/>**<sp/>History:<sp/>Wed<sp/>Feb<sp/>27<sp/>11:48:46<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicharset_size<sp/>=<sp/>target_unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version_id<sp/>=<sp/>-5;<sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>negated<sp/>by<sp/>the<sp/>reader<sp/>-1<sp/>becomes<sp/>+1<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref><sp/>!=<sp/>unicharset_size)<sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>executing<sp/>WriteIntTemplates()<sp/>with<sp/>%d<sp/>classes<sp/>in&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>Templates,<sp/>while<sp/>target_unicharset<sp/>size<sp/>is<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>,<sp/>unicharset_size);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>write<sp/>the<sp/>high<sp/>level<sp/>template<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>fwrite(&amp;unicharset_size,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(unicharset_size),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/>fwrite(&amp;version_id,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(version_id),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/>fwrite(&amp;Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>),</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/>fwrite(&amp;Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>out<sp/>the<sp/>class<sp/>pruners<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a6a13950c1c600a35e3c534f1751b1d89" kindref="member">NumClassPruners</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1ac0e6aaf180e7410311c7c9cb5d6ff44e" kindref="member">ClassPruners</ref>[i],</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>out<sp/>each<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a4735b2443aa7452909969d8d07e1877a" kindref="member">NumClasses</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>Class<sp/>=<sp/>Templates-&gt;<ref refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t_1a2083307ebe623a6617ff38291a2f3614" kindref="member">Class</ref>[i];</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>write<sp/>out<sp/>the<sp/>high<sp/>level<sp/>struct<sp/>for<sp/>the<sp/>class<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1ab81b4bb4bddc50d49d1a66b809d9f629" kindref="member">NumProtos</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref><sp/>==<sp/>this-&gt;fontset_table_.get(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1af0d8fa528ac2dd07fe4f39ef84a6fd7c" kindref="member">font_set_id</ref>).size);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1abb9c509f11364b949fe9764bc122938c" kindref="member">NumConfigs</ref>;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1add0f6eb2f658b418e0eb34d3056a52fc" kindref="member">ConfigLengths</ref>[j],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>out<sp/>the<sp/>proto<sp/>lengths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref><sp/>(Class)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>),<sp/>sizeof<sp/>(<ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref>),</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="intproto_8h_1a169c71bb67d9d85f2a7eca9c20cce40a" kindref="member">MaxNumIntProtosIn</ref><sp/>(Class),<sp/>File);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>out<sp/>the<sp/>proto<sp/>sets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a92a0b5397c2b6f3cc0346a72ce3595bd" kindref="member">NumProtoSets</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fwrite<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[j],</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeof<sp/>(<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET_STRUCT</ref>),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>write<sp/>the<sp/>fonts<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(&amp;Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1af0d8fa528ac2dd07fe4f39ef84a6fd7c" kindref="member">font_set_id</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">),<sp/>1,<sp/>File);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Write<sp/>the<sp/>fonts<sp/>info<sp/>tables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_classify_1ae6dea981b2f591921d798ea83b0fa455" kindref="member">fontinfo_table_</ref>.write(File,<sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(<ref refid="namespacetesseract_1a39563e2e9bd26b96504e53ae2c9defcc" kindref="member">write_info</ref>));</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_classify_1ae6dea981b2f591921d798ea83b0fa455" kindref="member">fontinfo_table_</ref>.write(File,</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(<ref refid="namespacetesseract_1a48b60e911578a0285e73738e81181abf" kindref="member">write_spacing_info</ref>));</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_classify_1a74a007a46ac907d2c8f61e9885143465" kindref="member">fontset_table_</ref>.write(File,<sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(<ref refid="namespacetesseract_1a385582f69442d7d9588e2983c768cec1" kindref="member">write_set</ref>));</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>WriteIntTemplates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Private<sp/>Code</highlight></codeline>
<codeline lineno="1231"><highlight class="comment">-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="intproto_8cpp_1ae613a28d73bf2a76687f554e439a1c4c" kindref="member">BucketStart</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bucket,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBuckets)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1235"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1236"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Bucket<sp/><sp/><sp/><sp/>bucket<sp/>whose<sp/>start<sp/>is<sp/>to<sp/>be<sp/>computed</highlight></codeline>
<codeline lineno="1237"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Offset<sp/><sp/><sp/><sp/>offset<sp/>used<sp/>to<sp/>map<sp/>params<sp/>to<sp/>buckets</highlight></codeline>
<codeline lineno="1238"><highlight class="comment"><sp/>**<sp/><sp/><sp/>NumBuckets<sp/><sp/>total<sp/>number<sp/>of<sp/>buckets</highlight></codeline>
<codeline lineno="1239"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1240"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>returns<sp/>the<sp/>parameter<sp/>value<sp/>which</highlight></codeline>
<codeline lineno="1241"><highlight class="comment"><sp/>**<sp/><sp/><sp/>corresponds<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>specified<sp/>bucket.</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/>**<sp/><sp/><sp/>The<sp/>bucket<sp/>number<sp/>should<sp/>have<sp/>been<sp/>generated<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/>**<sp/><sp/><sp/>BucketFor()<sp/>function<sp/>with<sp/>parameters<sp/>Offset<sp/>and<sp/>NumBuckets.</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Param<sp/>value<sp/>corresponding<sp/>to<sp/>start<sp/>position<sp/>of<sp/>Bucket.</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1246"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Feb<sp/>14<sp/>13:24:33<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>)<sp/>Bucket<sp/>/<sp/>NumBuckets)<sp/>-<sp/>Offset);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BucketStart<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="intproto_8cpp_1ac65eab1c9120551f8d4706d4dfaf0815" kindref="member">BucketEnd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bucket,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Offset,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumBuckets)<sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Bucket<sp/><sp/><sp/><sp/>bucket<sp/>whose<sp/>end<sp/>is<sp/>to<sp/>be<sp/>computed</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Offset<sp/><sp/><sp/><sp/>offset<sp/>used<sp/>to<sp/>map<sp/>params<sp/>to<sp/>buckets</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/>**<sp/><sp/><sp/>NumBuckets<sp/><sp/>total<sp/>number<sp/>of<sp/>buckets</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>returns<sp/>the<sp/>parameter<sp/>value<sp/>which</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/>**<sp/><sp/><sp/>corresponds<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>specified<sp/>bucket.</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/>**<sp/><sp/><sp/>The<sp/>bucket<sp/>number<sp/>should<sp/>have<sp/>been<sp/>generated<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/>**<sp/><sp/><sp/>BucketFor()<sp/>function<sp/>with<sp/>parameters<sp/>Offset<sp/>and<sp/>NumBuckets.</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Param<sp/>value<sp/>corresponding<sp/>to<sp/>end<sp/>position<sp/>of<sp/>Bucket.</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Feb<sp/>14<sp/>13:24:33<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>)<sp/>(Bucket<sp/>+<sp/>1)<sp/>/<sp/>NumBuckets)<sp/>-<sp/>Offset);</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>BucketEnd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1afaea93aff6c706adbe44d48f343ce2af" kindref="member">DoFill</ref>(<ref refid="struct_f_i_l_l___s_p_e_c" kindref="compound">FILL_SPEC</ref><sp/>*FillSpec,</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t" kindref="compound">CLASS_PRUNER_STRUCT</ref>*<sp/>Pruner,</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ClassMask,</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ClassCount,</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>WordIndex)<sp/>{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1280"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1281"><highlight class="comment"><sp/>**<sp/><sp/><sp/>FillSpec<sp/><sp/>specifies<sp/>which<sp/>bits<sp/>to<sp/>fill<sp/>in<sp/>pruner</highlight></codeline>
<codeline lineno="1282"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Pruner<sp/><sp/><sp/><sp/>class<sp/>pruner<sp/>to<sp/>be<sp/>filled</highlight></codeline>
<codeline lineno="1283"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ClassMask<sp/>indicates<sp/>which<sp/>bits<sp/>to<sp/>change<sp/>in<sp/>each<sp/>word</highlight></codeline>
<codeline lineno="1284"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ClassCount<sp/><sp/>indicates<sp/>what<sp/>to<sp/>change<sp/>bits<sp/>to</highlight></codeline>
<codeline lineno="1285"><highlight class="comment"><sp/>**<sp/><sp/><sp/>WordIndex<sp/>indicates<sp/>which<sp/>word<sp/>to<sp/>change</highlight></codeline>
<codeline lineno="1286"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>fills<sp/>in<sp/>the<sp/>section<sp/>of<sp/>a<sp/>class<sp/>pruner</highlight></codeline>
<codeline lineno="1288"><highlight class="comment"><sp/>**<sp/><sp/><sp/>corresponding<sp/>to<sp/>a<sp/>single<sp/>x<sp/>value<sp/>for<sp/>a<sp/>single<sp/>proto<sp/>of</highlight></codeline>
<codeline lineno="1289"><highlight class="comment"><sp/>**<sp/><sp/><sp/>a<sp/>class.</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="1291"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"><sp/>**<sp/>History:<sp/>Tue<sp/>Feb<sp/>19<sp/>11:11:29<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1293"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X,<sp/>Y,<sp/>Angle;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>OldWord;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/>X<sp/>=<sp/>FillSpec-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1af6f01125dbc9d3ffcdabff5ffde4cdd5" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(X<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>X<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(X<sp/>&gt;=<sp/>NUM_CP_BUCKETS)</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>X<sp/>=<sp/>NUM_CP_BUCKETS<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FillSpec-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a8e3873d2bbb279c505af2a778f90d5d0" kindref="member">YStart</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>FillSpec-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a8e3873d2bbb279c505af2a778f90d5d0" kindref="member">YStart</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FillSpec-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a1a589401e23c5cfc86eeabd0a6c553ec" kindref="member">YEnd</ref><sp/>&gt;=<sp/>NUM_CP_BUCKETS)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>FillSpec-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a1a589401e23c5cfc86eeabd0a6c553ec" kindref="member">YEnd</ref><sp/>=<sp/>NUM_CP_BUCKETS<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Y<sp/>=<sp/>FillSpec-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a8e3873d2bbb279c505af2a778f90d5d0" kindref="member">YStart</ref>;<sp/>Y<sp/>&lt;=<sp/>FillSpec-&gt;YEnd;<sp/>Y++)</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Angle<sp/>=<sp/>FillSpec-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a00f7ac32738ce5dc0e5e4955a4ab2afb" kindref="member">AngleStart</ref>;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><ref refid="intproto_8cpp_1a2e059f536686155b975d46cecf190d77" kindref="member">CircularIncrement</ref><sp/>(Angle,<sp/>NUM_CP_BUCKETS))<sp/>{</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OldWord<sp/>=<sp/>Pruner-&gt;<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t_1ab9fa291345d7d689f4c5240dea5e5087" kindref="member">p</ref>[X][Y][Angle][WordIndex];</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ClassCount<sp/>&gt;<sp/>(OldWord<sp/>&amp;<sp/>ClassMask))<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OldWord<sp/>&amp;=<sp/>~ClassMask;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OldWord<sp/>|=<sp/>ClassCount;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pruner-&gt;<ref refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t_1ab9fa291345d7d689f4c5240dea5e5087" kindref="member">p</ref>[X][Y][Angle][WordIndex]<sp/>=<sp/>OldWord;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Angle<sp/>==<sp/>FillSpec-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a6a61a16750eab351b8ee14a3b0311afc" kindref="member">AngleEnd</ref>)</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>DoFill<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><ref refid="intproto_8cpp_1a6e872ab9dec7a62d791536899847446b" kindref="member">FillerDone</ref>(<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref><sp/>*Filler)<sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Filler<sp/><sp/><sp/><sp/>table<sp/>filler<sp/>to<sp/>check<sp/>if<sp/>done</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>Return<sp/>TRUE<sp/>if<sp/>the<sp/>specified<sp/>table<sp/>filler<sp/>is<sp/>done,<sp/>i.e.</highlight></codeline>
<codeline lineno="1330"><highlight class="comment"><sp/>**<sp/><sp/><sp/>if<sp/>it<sp/>has<sp/>no<sp/>more<sp/>lines<sp/>to<sp/>fill.</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/>**<sp/>Return:<sp/>TRUE<sp/>if<sp/>no<sp/>more<sp/>lines<sp/>to<sp/>fill,<sp/>FALSE<sp/>otherwise.</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/>**<sp/>History:<sp/>Tue<sp/>Feb<sp/>19<sp/>10:08:05<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><ref refid="struct_f_i_l_l___s_w_i_t_c_h" kindref="compound">FILL_SWITCH</ref><sp/>*Next;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/>Next<sp/>=<sp/>&amp;(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a652d9c1a4384ff077102496a96ac879e" kindref="member">NextSwitch</ref>]);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref><sp/>&gt;<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref><sp/>&amp;&amp;<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>==<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82adf8537429629d6c042ac3481208264e2" kindref="member">LastSwitch</ref>)</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FillerDone<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1ada113a59754199d44e31c2ec03411eb2" kindref="member">FillPPCircularBits</ref>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ParamTable[NUM_PP_BUCKETS][WERDS_PER_PP_VECTOR],</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bit,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Center,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Spread,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1351"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1352"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ParamTable<sp/><sp/>table<sp/>of<sp/>bit<sp/>vectors,<sp/>one<sp/>per<sp/>param<sp/>bucket</highlight></codeline>
<codeline lineno="1353"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Bit<sp/><sp/><sp/>bit<sp/>position<sp/>in<sp/>vectors<sp/>to<sp/>be<sp/>filled</highlight></codeline>
<codeline lineno="1354"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Center<sp/><sp/><sp/><sp/>center<sp/>of<sp/>filled<sp/>area</highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Spread<sp/><sp/><sp/><sp/>spread<sp/>of<sp/>filled<sp/>area</highlight></codeline>
<codeline lineno="1356"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1357"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>sets<sp/>Bit<sp/>in<sp/>each<sp/>bit<sp/>vector<sp/>whose</highlight></codeline>
<codeline lineno="1358"><highlight class="comment"><sp/>**<sp/><sp/><sp/>bucket<sp/>lies<sp/>within<sp/>the<sp/>range<sp/>Center<sp/>+-<sp/>Spread.<sp/><sp/>The<sp/>fill</highlight></codeline>
<codeline lineno="1359"><highlight class="comment"><sp/>**<sp/><sp/><sp/>is<sp/>done<sp/>for<sp/>a<sp/>circular<sp/>dimension,<sp/>i.e.<sp/>bucket<sp/>0<sp/>is<sp/>adjacent</highlight></codeline>
<codeline lineno="1360"><highlight class="comment"><sp/>**<sp/><sp/><sp/>to<sp/>the<sp/>last<sp/>bucket.<sp/><sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>Center<sp/>and<sp/>Spread</highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/>**<sp/><sp/><sp/>are<sp/>expressed<sp/>in<sp/>a<sp/>circular<sp/>coordinate<sp/>system<sp/>whose<sp/>range</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"><sp/>**<sp/><sp/><sp/>is<sp/>0<sp/>to<sp/>1.</highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1365"><highlight class="comment"><sp/>**<sp/>History:<sp/>Tue<sp/>Oct<sp/>16<sp/>09:26:54<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1366"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>FirstBucket,<sp/>LastBucket;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Spread<sp/>&gt;<sp/>0.5)</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>Spread<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>FirstBucket<sp/>=<sp/>(int)<sp/>floor<sp/>((Center<sp/>-<sp/>Spread)<sp/>*<sp/><ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FirstBucket<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>FirstBucket<sp/>+=<sp/><ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>LastBucket<sp/>=<sp/>(int)<sp/>floor<sp/>((Center<sp/>+<sp/>Spread)<sp/>*<sp/><ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LastBucket<sp/>&gt;=<sp/>NUM_PP_BUCKETS)</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>LastBucket<sp/>-=<sp/><ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Circular<sp/>fill<sp/>from<sp/>%d<sp/>to<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>FirstBucket,<sp/>LastBucket);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>FirstBucket;<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><ref refid="intproto_8cpp_1a2e059f536686155b975d46cecf190d77" kindref="member">CircularIncrement</ref><sp/>(i,<sp/>NUM_PP_BUCKETS))<sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" kindref="member">SET_BIT</ref><sp/>(ParamTable[i],<sp/>Bit);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>exit<sp/>loop<sp/>after<sp/>we<sp/>have<sp/>set<sp/>the<sp/>bit<sp/>for<sp/>the<sp/>last<sp/>bucket<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>LastBucket)</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FillPPCircularBits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1aafbbbb343d2128a3bb4f1042746bda8b" kindref="member">FillPPLinearBits</ref>(<ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ParamTable[NUM_PP_BUCKETS][WERDS_PER_PP_VECTOR],</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bit,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Center,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Spread,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ParamTable<sp/><sp/>table<sp/>of<sp/>bit<sp/>vectors,<sp/>one<sp/>per<sp/>param<sp/>bucket</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Bit<sp/><sp/><sp/>bit<sp/>number<sp/>being<sp/>filled</highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Center<sp/><sp/><sp/><sp/>center<sp/>of<sp/>filled<sp/>area</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Spread<sp/><sp/><sp/><sp/>spread<sp/>of<sp/>filled<sp/>area</highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>sets<sp/>Bit<sp/>in<sp/>each<sp/>bit<sp/>vector<sp/>whose</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/>**<sp/><sp/><sp/>bucket<sp/>lies<sp/>within<sp/>the<sp/>range<sp/>Center<sp/>+-<sp/>Spread.<sp/><sp/>The<sp/>fill</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/>**<sp/><sp/><sp/>is<sp/>done<sp/>for<sp/>a<sp/>linear<sp/>dimension,<sp/>i.e.<sp/>there<sp/>is<sp/>no<sp/>wrap-around</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/>**<sp/><sp/><sp/>for<sp/>this<sp/>dimension.<sp/><sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>Center<sp/>and<sp/>Spread</highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/>**<sp/><sp/><sp/>are<sp/>expressed<sp/>in<sp/>a<sp/>linear<sp/>coordinate<sp/>system<sp/>whose<sp/>range</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/>**<sp/><sp/><sp/>is<sp/>approximately<sp/>0<sp/>to<sp/>1.<sp/><sp/>Values<sp/>outside<sp/>this<sp/>range<sp/>will</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/>**<sp/><sp/><sp/>be<sp/>clipped.</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="1409"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/>**<sp/>History:<sp/>Tue<sp/>Oct<sp/>16<sp/>09:26:54<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>FirstBucket,<sp/>LastBucket;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>FirstBucket<sp/>=<sp/>(int)<sp/>floor<sp/>((Center<sp/>-<sp/>Spread)<sp/>*<sp/><ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FirstBucket<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/>FirstBucket<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/>LastBucket<sp/>=<sp/>(int)<sp/>floor<sp/>((Center<sp/>+<sp/>Spread)<sp/>*<sp/><ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(LastBucket<sp/>&gt;=<sp/>NUM_PP_BUCKETS)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>LastBucket<sp/>=<sp/>NUM_PP_BUCKETS<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Linear<sp/>fill<sp/>from<sp/>%d<sp/>to<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>FirstBucket,<sp/>LastBucket);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>FirstBucket;<sp/>i<sp/>&lt;=<sp/>LastBucket;<sp/>i++)</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" kindref="member">SET_BIT</ref><sp/>(ParamTable[i],<sp/>Bit);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FillPPLinearBits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1431"><highlight class="preprocessor"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><ref refid="matchdefs_8h_1afdabe64d68192a21409dd58c119709f8" kindref="member">CLASS_ID</ref><sp/><ref refid="classtesseract_1_1_classify_1a76f4e180bcab3a7cd2da75d42b524eba" kindref="member">Classify::GetClassToDebug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Prompt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>adaptive_on,</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>pretrained_on,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>shape_id)<sp/>{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1435"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1436"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Prompt<sp/><sp/>prompt<sp/>to<sp/>print<sp/>while<sp/>waiting<sp/>for<sp/>input<sp/>from<sp/>window</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>prompts<sp/>the<sp/>user<sp/>with<sp/>Prompt<sp/>and<sp/>waits</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/>**<sp/><sp/><sp/>for<sp/>the<sp/>user<sp/>to<sp/>enter<sp/>something<sp/>in<sp/>the<sp/>debug<sp/>window.</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Character<sp/>entered<sp/>in<sp/>the<sp/>debug<sp/>window.</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Mar<sp/>21<sp/>16:55:13<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>Prompt);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><ref refid="struct_s_v_event" kindref="compound">SVEvent</ref>*<sp/>ev;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><ref refid="scrollview_8h_1a3688a0cf2f95d10a57e095222ccfe9a0" kindref="member">SVEventType</ref><sp/>ev_type;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id<sp/>=<sp/>INVALID_UNICHAR_ID;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>a<sp/>click<sp/>or<sp/>popup<sp/>event.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>ev<sp/>=<sp/>IntMatchWindow-&gt;<ref refid="class_scroll_view_1a0b820b3fe7a2ce083da0784e9339a1ad" kindref="member">AwaitEvent</ref>(<ref refid="scrollview_8h_1a3688a0cf2f95d10a57e095222ccfe9a0a6eec81ed585bda7ff47ec38918cb2a0e" kindref="member">SVET_ANY</ref>);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>ev_type<sp/>=<sp/>ev-&gt;<ref refid="struct_s_v_event_1a5bf8585bd1901b9103eb2783f8afe508" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev_type<sp/>==<sp/><ref refid="scrollview_8h_1a3688a0cf2f95d10a57e095222ccfe9a0a3752863b11af097f289eb55405df8fa5" kindref="member">SVET_POPUP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="struct_s_v_event_1ad0db5c2aa893a41b6c6f65b9d3f62318" kindref="member">command_id</ref><sp/>==<sp/><ref refid="intproto_8h_1aaf26255ca73d9de95dc331fda7b25059a911e6b43103ceebb21666a23b77a0f73" kindref="member">IDA_SHAPE_INDEX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shape_id<sp/>=<sp/>atoi(ev-&gt;<ref refid="struct_s_v_event_1a6e0de466c57df117c731bfb4db68fc79" kindref="member">parameter</ref>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*adaptive_on<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pretrained_on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*shape_id<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>*shape_id<sp/>&lt;<sp/>shape_table_-&gt;NumShapes())<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref>-&gt;<ref refid="classtesseract_1_1_shape_table_1ade3f46eb910d83302b04f9f530277290" kindref="member">GetFirstUnicharAndFont</ref>(*shape_id,<sp/>&amp;unichar_id,</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;font_id);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Shape<sp/>%d,<sp/>first<sp/>unichar=%d,<sp/>font=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shape_id,<sp/>unichar_id,<sp/>font_id);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unichar_id;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Shape<sp/>index<sp/>&apos;%s&apos;<sp/>not<sp/>found<sp/>in<sp/>shape<sp/>table\n&quot;</highlight><highlight class="normal">,<sp/>ev-&gt;<ref refid="struct_s_v_event_1a6e0de466c57df117c731bfb4db68fc79" kindref="member">parameter</ref>);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>shape<sp/>table<sp/>loaded!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(ev-&gt;<ref refid="struct_s_v_event_1a6e0de466c57df117c731bfb4db68fc79" kindref="member">parameter</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id<sp/>=<sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(ev-&gt;<ref refid="struct_s_v_event_1a6e0de466c57df117c731bfb4db68fc79" kindref="member">parameter</ref>);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="struct_s_v_event_1ad0db5c2aa893a41b6c6f65b9d3f62318" kindref="member">command_id</ref><sp/>==<sp/><ref refid="intproto_8h_1aaf26255ca73d9de95dc331fda7b25059ad993f1c95a8775a97134029a0637e793" kindref="member">IDA_ADAPTIVE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*adaptive_on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pretrained_on<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shape_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="struct_s_v_event_1ad0db5c2aa893a41b6c6f65b9d3f62318" kindref="member">command_id</ref><sp/>==<sp/><ref refid="intproto_8h_1aaf26255ca73d9de95dc331fda7b25059a7e375f63c9aa7b991d070fb71afdf8a2" kindref="member">IDA_STATIC</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*adaptive_on<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pretrained_on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*adaptive_on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pretrained_on<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;<ref refid="struct_s_v_event_1ad0db5c2aa893a41b6c6f65b9d3f62318" kindref="member">command_id</ref><sp/>==<sp/><ref refid="intproto_8h_1aaf26255ca73d9de95dc331fda7b25059ad993f1c95a8775a97134029a0637e793" kindref="member">IDA_ADAPTIVE</ref><sp/>||<sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*shape_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unichar_id;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref>-&gt;<ref refid="classtesseract_1_1_shape_table_1a924919daeadb48539e3d68c65013c173" kindref="member">NumShapes</ref>();<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref>-&gt;<ref refid="classtesseract_1_1_shape_table_1a9334161c64756c591ff7d4fca22277f5" kindref="member">GetShape</ref>(s).<ref refid="classtesseract_1_1_shape_1a736c652adf59c9e1bdc68756f7e1e7e6" kindref="member">ContainsUnichar</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" kindref="member">shape_table_</ref>-&gt;<ref refid="classtesseract_1_1_shape_table_1a87937c115d25036a961833c8b8ab79dd" kindref="member">DebugStr</ref>(s).<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Char<sp/>class<sp/>&apos;%s&apos;<sp/>not<sp/>found<sp/>in<sp/>unicharset&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;<ref refid="struct_s_v_event_1a6e0de466c57df117c731bfb4db68fc79" kindref="member">parameter</ref>);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ev;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ev_type<sp/>!=<sp/><ref refid="scrollview_8h_1a3688a0cf2f95d10a57e095222ccfe9a0a2afe407abe8c055c45765b85d20e7946" kindref="member">SVET_CLICK</ref>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetClassToDebug<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1506"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a09e675cd233359d8763e744e402a3dfa" kindref="member">GetCPPadsForLevel</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Level,</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*EndPad,</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*SidePad,</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*AnglePad)<sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1513"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Level<sp/><sp/><sp/>&quot;tightness&quot;<sp/>level<sp/>to<sp/>return<sp/>pads<sp/>for</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"><sp/>**<sp/><sp/><sp/>EndPad<sp/><sp/><sp/><sp/>place<sp/>to<sp/>put<sp/>end<sp/>pad<sp/>for<sp/>Level</highlight></codeline>
<codeline lineno="1516"><highlight class="comment"><sp/>**<sp/><sp/><sp/>SidePad<sp/><sp/><sp/>place<sp/>to<sp/>put<sp/>side<sp/>pad<sp/>for<sp/>Level</highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/>**<sp/><sp/><sp/>AnglePad<sp/><sp/>place<sp/>to<sp/>put<sp/>angle<sp/>pad<sp/>for<sp/>Level</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1519"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>copies<sp/>the<sp/>appropriate<sp/>global<sp/>pad<sp/>variables</highlight></codeline>
<codeline lineno="1520"><highlight class="comment"><sp/>**<sp/><sp/><sp/>into<sp/>EndPad,<sp/>SidePad,<sp/>and<sp/>AnglePad.<sp/><sp/>This<sp/>is<sp/>a<sp/>kludge<sp/>used</highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/>**<sp/><sp/><sp/>to<sp/>get<sp/>around<sp/>the<sp/>fact<sp/>that<sp/>global<sp/>control<sp/>variables<sp/>cannot</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/>**<sp/><sp/><sp/>be<sp/>arrays.<sp/><sp/>If<sp/>the<sp/>specified<sp/>level<sp/>is<sp/>illegal,<sp/>the<sp/>tightest</highlight></codeline>
<codeline lineno="1523"><highlight class="comment"><sp/>**<sp/><sp/><sp/>possible<sp/>pads<sp/>are<sp/>returned.</highlight></codeline>
<codeline lineno="1524"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none<sp/>(results<sp/>are<sp/>returned<sp/>in<sp/>EndPad,<sp/>SidePad,<sp/>and<sp/>AnglePad.</highlight></codeline>
<codeline lineno="1525"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1526"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Feb<sp/>14<sp/>08:26:49<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1527"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Level)<sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*EndPad<sp/>=<sp/>classify_cp_end_pad_loose<sp/>*<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>();</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*SidePad<sp/>=<sp/>classify_cp_side_pad_loose<sp/>*<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>();</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*AnglePad<sp/>=<sp/>classify_cp_angle_pad_loose<sp/>/<sp/>360.0;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*EndPad<sp/>=<sp/>classify_cp_end_pad_medium<sp/>*<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>();</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*SidePad<sp/>=<sp/>classify_cp_side_pad_medium<sp/>*<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>();</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*AnglePad<sp/>=<sp/>classify_cp_angle_pad_medium<sp/>/<sp/>360.0;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*EndPad<sp/>=<sp/>classify_cp_end_pad_tight<sp/>*<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>();</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*SidePad<sp/>=<sp/>classify_cp_side_pad_tight<sp/>*<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>();</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*AnglePad<sp/>=<sp/>classify_cp_angle_pad_tight<sp/>/<sp/>360.0;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*EndPad<sp/>=<sp/>classify_cp_end_pad_tight<sp/>*<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>();</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*SidePad<sp/>=<sp/>classify_cp_side_pad_tight<sp/>*<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref><sp/>();</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*AnglePad<sp/>=<sp/>classify_cp_angle_pad_tight<sp/>/<sp/>360.0;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*AnglePad<sp/>&gt;<sp/>0.5)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>*AnglePad<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetCPPadsForLevel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/><ref refid="intproto_8cpp_1afa296141a34309a16ea4fdc63904ecea" kindref="member">GetMatchColorFor</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Evidence)<sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Evidence<sp/><sp/>evidence<sp/>value<sp/>to<sp/>return<sp/>color<sp/>for</highlight></codeline>
<codeline lineno="1564"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Color<sp/>which<sp/>corresponds<sp/>to<sp/>specified<sp/>Evidence<sp/>value.</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Mar<sp/>21<sp/>15:24:52<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/>assert<sp/>(Evidence<sp/>&gt;=<sp/>0.0);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/>assert<sp/>(Evidence<sp/>&lt;=<sp/>1.0);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Evidence<sp/>&gt;=<sp/>0.90)</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a0eab2b208fc9a5e2774f92cf3e768982" kindref="member">ScrollView::WHITE</ref>;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Evidence<sp/>&gt;=<sp/>0.75)</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a9d8c87be486dead41d198d6b97a22174" kindref="member">ScrollView::GREEN</ref>;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Evidence<sp/>&gt;=<sp/>0.50)</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a0959f7470b08ae1a38aa7e38fba29402" kindref="member">ScrollView::RED</ref>;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a66e5117e4930fdd9a43bdb674d57a719" kindref="member">ScrollView::BLUE</ref>;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetMatchColorFor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a2d8b49f118901da6dbaf5d5b4c8da174" kindref="member">GetNextFill</ref>(<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref><sp/>*Filler,<sp/><ref refid="struct_f_i_l_l___s_p_e_c" kindref="compound">FILL_SPEC</ref><sp/>*Fill)<sp/>{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1588"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="1589"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Filler<sp/><sp/><sp/><sp/>filler<sp/>to<sp/>get<sp/>next<sp/>fill<sp/>spec<sp/>from</highlight></codeline>
<codeline lineno="1590"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Fill<sp/><sp/><sp/><sp/>place<sp/>to<sp/>put<sp/>spec<sp/>for<sp/>next<sp/>fill</highlight></codeline>
<codeline lineno="1591"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>returns<sp/>(in<sp/>Fill)<sp/>the<sp/>specification<sp/>of</highlight></codeline>
<codeline lineno="1593"><highlight class="comment"><sp/>**<sp/><sp/><sp/>the<sp/>next<sp/>line<sp/>to<sp/>be<sp/>filled<sp/>from<sp/>Filler.<sp/><sp/>FillerDone()<sp/>should</highlight></codeline>
<codeline lineno="1594"><highlight class="comment"><sp/>**<sp/><sp/><sp/>always<sp/>be<sp/>called<sp/>before<sp/>GetNextFill()<sp/>to<sp/>ensure<sp/>that<sp/>we</highlight></codeline>
<codeline lineno="1595"><highlight class="comment"><sp/>**<sp/><sp/><sp/>do<sp/>not<sp/>run<sp/>past<sp/>the<sp/>end<sp/>of<sp/>the<sp/>fill<sp/>table.</highlight></codeline>
<codeline lineno="1596"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none<sp/>(results<sp/>are<sp/>returned<sp/>in<sp/>Fill)</highlight></codeline>
<codeline lineno="1597"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1598"><highlight class="comment"><sp/>**<sp/>History:<sp/>Tue<sp/>Feb<sp/>19<sp/>10:17:42<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1599"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><ref refid="struct_f_i_l_l___s_w_i_t_c_h" kindref="compound">FILL_SWITCH</ref><sp/>*Next;</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>the<sp/>fill<sp/>assuming<sp/>no<sp/>switches<sp/>will<sp/>be<sp/>encountered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>Fill-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a00f7ac32738ce5dc0e5e4955a4ab2afb" kindref="member">AngleStart</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a202225304dab5e7f073f38a042c21aad" kindref="member">AngleStart</ref>;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/>Fill-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a6a61a16750eab351b8ee14a3b0311afc" kindref="member">AngleEnd</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1afd5410f9221e682cb220f12c0bc16eba" kindref="member">AngleEnd</ref>;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/>Fill-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1af6f01125dbc9d3ffcdabff5ffde4cdd5" kindref="member">X</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/>Fill-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a8e3873d2bbb279c505af2a778f90d5d0" kindref="member">YStart</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a8e7cfadab795302ac936c0904338eaaa" kindref="member">YStart</ref><sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/>Fill-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a1a589401e23c5cfc86eeabd0a6c553ec" kindref="member">YEnd</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1acc616ad7f1906b12e540aebfd0c773a9" kindref="member">YEnd</ref><sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>the<sp/>fill<sp/>info<sp/>and<sp/>the<sp/>filler<sp/>for<sp/>ALL<sp/>switches<sp/>at<sp/>this<sp/>X<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/>Next<sp/>=<sp/>&amp;(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a652d9c1a4384ff077102496a96ac879e" kindref="member">NextSwitch</ref>]);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref><sp/>&gt;=<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>Fill-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1af6f01125dbc9d3ffcdabff5ffde4cdd5" kindref="member">X</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref><sp/>=<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>==<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a1cf2f15eb85b86e0ec9045e3619a3fa7" kindref="member">StartSwitch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fill-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a8e3873d2bbb279c505af2a778f90d5d0" kindref="member">YStart</ref><sp/>=<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1afbfda1b2e13254c26369bb792b0edbaf" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1ae6ec6ee3678f48c661437d812e5014e4" kindref="member">StartDelta</ref><sp/>=<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1a6aab71c8cc5076d6299ac5153cc01ad8" kindref="member">Delta</ref>;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a8e7cfadab795302ac936c0904338eaaa" kindref="member">YStart</ref><sp/>=<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aecb5907178fad1760c3ba1911295f0e8" kindref="member">YInit</ref>;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>==<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a76e233dc90515aca43b7487c60694770" kindref="member">EndSwitch</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fill-&gt;<ref refid="struct_f_i_l_l___s_p_e_c_1a1a589401e23c5cfc86eeabd0a6c553ec" kindref="member">YEnd</ref><sp/>=<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1afbfda1b2e13254c26369bb792b0edbaf" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a00b48b823899944b51c3c53a65d0f53f" kindref="member">EndDelta</ref><sp/>=<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1a6aab71c8cc5076d6299ac5153cc01ad8" kindref="member">Delta</ref>;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1acc616ad7f1906b12e540aebfd0c773a9" kindref="member">YEnd</ref><sp/>=<sp/>Next-&gt;<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aecb5907178fad1760c3ba1911295f0e8" kindref="member">YInit</ref>;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Type<sp/>must<sp/>be<sp/>LastSwitch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a652d9c1a4384ff077102496a96ac879e" kindref="member">NextSwitch</ref>++;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/>Next<sp/>=<sp/>&amp;(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a652d9c1a4384ff077102496a96ac879e" kindref="member">NextSwitch</ref>]);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>the<sp/>filler<sp/>for<sp/>the<sp/>next<sp/>call<sp/>to<sp/>this<sp/>routine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref>++;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a8e7cfadab795302ac936c0904338eaaa" kindref="member">YStart</ref><sp/>+=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1ae6ec6ee3678f48c661437d812e5014e4" kindref="member">StartDelta</ref>;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1acc616ad7f1906b12e540aebfd0c773a9" kindref="member">YEnd</ref><sp/>+=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a00b48b823899944b51c3c53a65d0f53f" kindref="member">EndDelta</ref>;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetNextFill<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1654"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1adb682620c9100c1985218aeb25bbdb9f" kindref="member">InitTableFiller</ref><sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>EndPad,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>SidePad,</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>AnglePad,<sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto,<sp/><ref refid="struct_t_a_b_l_e___f_i_l_l_e_r" kindref="compound">TABLE_FILLER</ref><sp/>*<sp/>Filler)</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>XS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X_SHIFT</highlight></codeline>
<codeline lineno="1657"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>YS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y_SHIFT</highlight></codeline>
<codeline lineno="1658"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>AS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANGLE_SHIFT</highlight></codeline>
<codeline lineno="1659"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>NB<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NUM_CP_BUCKETS</highlight></codeline>
<codeline lineno="1660"><highlight class="preprocessor"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Angle;</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/>Y,<sp/>HalfLength;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Cos,<sp/>Sin;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>XAdjust,<sp/>YAdjust;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref><sp/>Start,<sp/>Switch1,<sp/>Switch2,<sp/>End;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>S1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>S2<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/>Angle<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref>;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/>X<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/>Y<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/>HalfLength<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref><sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a202225304dab5e7f073f38a042c21aad" kindref="member">AngleStart</ref><sp/>=<sp/><ref refid="intproto_8cpp_1ae3184eb086a2f8eb3b7b4c42bae5ca22" kindref="member">CircBucketFor</ref>(Angle<sp/>-<sp/>AnglePad,<sp/>AS,<sp/>NB);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1afd5410f9221e682cb220f12c0bc16eba" kindref="member">AngleEnd</ref><sp/>=<sp/><ref refid="intproto_8cpp_1ae3184eb086a2f8eb3b7b4c42bae5ca22" kindref="member">CircBucketFor</ref>(Angle<sp/>+<sp/>AnglePad,<sp/>AS,<sp/>NB);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a652d9c1a4384ff077102496a96ac879e" kindref="member">NextSwitch</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs<sp/>(Angle<sp/>-<sp/>0.0)<sp/>&lt;<sp/><ref refid="intproto_8cpp_1a83959744dc05db71c3e5ec880f31eb7a" kindref="member">HV_TOLERANCE</ref><sp/>||<sp/>fabs<sp/>(Angle<sp/>-<sp/>0.5)<sp/>&lt;<sp/><ref refid="intproto_8cpp_1a83959744dc05db71c3e5ec880f31eb7a" kindref="member">HV_TOLERANCE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>horizontal<sp/>proto<sp/>-<sp/>handle<sp/>as<sp/>special<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref><sp/>=<sp/><ref refid="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" kindref="member">BucketFor</ref>(X<sp/>-<sp/>HalfLength<sp/>-<sp/>EndPad,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a8e7cfadab795302ac936c0904338eaaa" kindref="member">YStart</ref><sp/>=<sp/><ref refid="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" kindref="member">BucketFor</ref>(Y<sp/>-<sp/>SidePad,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1acc616ad7f1906b12e540aebfd0c773a9" kindref="member">YEnd</ref><sp/>=<sp/><ref refid="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" kindref="member">BucketFor</ref>(Y<sp/>+<sp/>SidePad,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1ae6ec6ee3678f48c661437d812e5014e4" kindref="member">StartDelta</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a00b48b823899944b51c3c53a65d0f53f" kindref="member">EndDelta</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[0].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82adf8537429629d6c042ac3481208264e2" kindref="member">LastSwitch</ref>;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[0].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref><sp/>=<sp/><ref refid="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" kindref="member">BucketFor</ref>(X<sp/>+<sp/>HalfLength<sp/>+<sp/>EndPad,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(Angle<sp/>-<sp/>0.25)<sp/>&lt;<sp/><ref refid="intproto_8cpp_1a83959744dc05db71c3e5ec880f31eb7a" kindref="member">HV_TOLERANCE</ref><sp/>||</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fabs(Angle<sp/>-<sp/>0.75)<sp/>&lt;<sp/><ref refid="intproto_8cpp_1a83959744dc05db71c3e5ec880f31eb7a" kindref="member">HV_TOLERANCE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>vertical<sp/>proto<sp/>-<sp/>handle<sp/>as<sp/>special<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref><sp/>=<sp/><ref refid="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" kindref="member">BucketFor</ref>(X<sp/>-<sp/>SidePad,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a8e7cfadab795302ac936c0904338eaaa" kindref="member">YStart</ref><sp/>=<sp/><ref refid="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" kindref="member">BucketFor</ref>(Y<sp/>-<sp/>HalfLength<sp/>-<sp/>EndPad,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1acc616ad7f1906b12e540aebfd0c773a9" kindref="member">YEnd</ref><sp/>=<sp/><ref refid="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" kindref="member">BucketFor</ref>(Y<sp/>+<sp/>HalfLength<sp/>+<sp/>EndPad,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1ae6ec6ee3678f48c661437d812e5014e4" kindref="member">StartDelta</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a00b48b823899944b51c3c53a65d0f53f" kindref="member">EndDelta</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[0].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82adf8537429629d6c042ac3481208264e2" kindref="member">LastSwitch</ref>;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[0].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref><sp/>=<sp/><ref refid="intproto_8cpp_1aae1e369081aff0da8ca513a261973598" kindref="member">BucketFor</ref>(X<sp/>+<sp/>SidePad,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>diagonal<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Angle<sp/>&gt;<sp/>0.0<sp/>&amp;&amp;<sp/>Angle<sp/>&lt;<sp/>0.25)<sp/>||<sp/>(Angle<sp/>&gt;<sp/>0.5<sp/>&amp;&amp;<sp/>Angle<sp/>&lt;<sp/>0.75))<sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rising<sp/>diagonal<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Angle<sp/>*=<sp/>2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Cos<sp/>=<sp/>fabs(cos(Angle));</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Sin<sp/>=<sp/>fabs(sin(Angle));</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>the<sp/>positions<sp/>of<sp/>the<sp/>corners<sp/>of<sp/>the<sp/>acceptance<sp/>region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>X<sp/>-<sp/>(HalfLength<sp/>+<sp/>EndPad)<sp/>*<sp/>Cos<sp/>-<sp/>SidePad<sp/>*<sp/>Sin;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>Y<sp/>-<sp/>(HalfLength<sp/>+<sp/>EndPad)<sp/>*<sp/>Sin<sp/>+<sp/>SidePad<sp/>*<sp/>Cos;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>End.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>2.0<sp/>*<sp/>X<sp/>-<sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>End.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>2.0<sp/>*<sp/>Y<sp/>-<sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>X<sp/>-<sp/>(HalfLength<sp/>+<sp/>EndPad)<sp/>*<sp/>Cos<sp/>+<sp/>SidePad<sp/>*<sp/>Sin;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>Y<sp/>-<sp/>(HalfLength<sp/>+<sp/>EndPad)<sp/>*<sp/>Sin<sp/>-<sp/>SidePad<sp/>*<sp/>Cos;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Switch2.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>2.0<sp/>*<sp/>X<sp/>-<sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Switch2.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>2.0<sp/>*<sp/>Y<sp/>-<sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>&gt;<sp/>Switch2.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>translate<sp/>into<sp/>bucket<sp/>positions<sp/>and<sp/>deltas<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Start.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1ae6ec6ee3678f48c661437d812e5014e4" kindref="member">StartDelta</ref><sp/>=<sp/>-(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/>((Cos<sp/>/<sp/>Sin)<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a00b48b823899944b51c3c53a65d0f53f" kindref="member">EndDelta</ref><sp/>=<sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/>((Sin<sp/>/<sp/>Cos)<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>XAdjust<sp/>=<sp/><ref refid="intproto_8cpp_1ac65eab1c9120551f8d4706d4dfaf0815" kindref="member">BucketEnd</ref>(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref>,<sp/>XS,<sp/>NB)<sp/>-<sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YAdjust<sp/>=<sp/>XAdjust<sp/>*<sp/>Cos<sp/>/<sp/>Sin;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a8e7cfadab795302ac936c0904338eaaa" kindref="member">YStart</ref><sp/>=<sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Start.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>-<sp/>YAdjust,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YAdjust<sp/>=<sp/>XAdjust<sp/>*<sp/>Sin<sp/>/<sp/>Cos;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1acc616ad7f1906b12e540aebfd0c773a9" kindref="member">YEnd</ref><sp/>=<sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Start.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>+<sp/>YAdjust,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a1cf2f15eb85b86e0ec9045e3619a3fa7" kindref="member">StartSwitch</ref>;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1afbfda1b2e13254c26369bb792b0edbaf" kindref="member">Y</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch1.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>,<sp/>YS,<sp/>NB);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>XAdjust<sp/>=<sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>-<sp/><ref refid="intproto_8cpp_1ae613a28d73bf2a76687f554e439a1c4c" kindref="member">BucketStart</ref>(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YAdjust<sp/>=<sp/>XAdjust<sp/>*<sp/>Sin<sp/>/<sp/>Cos;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aecb5907178fad1760c3ba1911295f0e8" kindref="member">YInit</ref><sp/>=</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch1.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>-<sp/>YAdjust,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1a6aab71c8cc5076d6299ac5153cc01ad8" kindref="member">Delta</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a00b48b823899944b51c3c53a65d0f53f" kindref="member">EndDelta</ref>;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a76e233dc90515aca43b7487c60694770" kindref="member">EndSwitch</ref>;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch2.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1afbfda1b2e13254c26369bb792b0edbaf" kindref="member">Y</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch2.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>,<sp/>YS,<sp/>NB);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>XAdjust<sp/>=<sp/>Switch2.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>-<sp/><ref refid="intproto_8cpp_1ae613a28d73bf2a76687f554e439a1c4c" kindref="member">BucketStart</ref>(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YAdjust<sp/>=<sp/>XAdjust<sp/>*<sp/>Cos<sp/>/<sp/>Sin;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aecb5907178fad1760c3ba1911295f0e8" kindref="member">YInit</ref><sp/>=</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch2.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>+<sp/>YAdjust,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1a6aab71c8cc5076d6299ac5153cc01ad8" kindref="member">Delta</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1ae6ec6ee3678f48c661437d812e5014e4" kindref="member">StartDelta</ref>;</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82adf8537429629d6c042ac3481208264e2" kindref="member">LastSwitch</ref>;</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(End.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>falling<sp/>diagonal<sp/>proto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Angle<sp/>*=<sp/>2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Cos<sp/>=<sp/>fabs(cos(Angle));</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Sin<sp/>=<sp/>fabs(sin(Angle));</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>the<sp/>positions<sp/>of<sp/>the<sp/>corners<sp/>of<sp/>the<sp/>acceptance<sp/>region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>X<sp/>-<sp/>(HalfLength<sp/>+<sp/>EndPad)<sp/>*<sp/>Cos<sp/>-<sp/>SidePad<sp/>*<sp/>Sin;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>Y<sp/>+<sp/>(HalfLength<sp/>+<sp/>EndPad)<sp/>*<sp/>Sin<sp/>-<sp/>SidePad<sp/>*<sp/>Cos;</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>End.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>2.0<sp/>*<sp/>X<sp/>-<sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>End.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>2.0<sp/>*<sp/>Y<sp/>-<sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>X<sp/>-<sp/>(HalfLength<sp/>+<sp/>EndPad)<sp/>*<sp/>Cos<sp/>+<sp/>SidePad<sp/>*<sp/>Sin;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>Y<sp/>+<sp/>(HalfLength<sp/>+<sp/>EndPad)<sp/>*<sp/>Sin<sp/>+<sp/>SidePad<sp/>*<sp/>Cos;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Switch2.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>2.0<sp/>*<sp/>X<sp/>-<sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Switch2.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>2.0<sp/>*<sp/>Y<sp/>-<sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>&gt;<sp/>Switch2.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S1<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>translate<sp/>into<sp/>bucket<sp/>positions<sp/>and<sp/>deltas<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Start.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1ae6ec6ee3678f48c661437d812e5014e4" kindref="member">StartDelta</ref><sp/>=<sp/>-(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/>((Sin<sp/>/<sp/>Cos)<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a00b48b823899944b51c3c53a65d0f53f" kindref="member">EndDelta</ref><sp/>=<sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/>((Cos<sp/>/<sp/>Sin)<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>XAdjust<sp/>=<sp/><ref refid="intproto_8cpp_1ac65eab1c9120551f8d4706d4dfaf0815" kindref="member">BucketEnd</ref>(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a42f3f28b9f3741d73b0839326cc0eb91" kindref="member">X</ref>,<sp/>XS,<sp/>NB)<sp/>-<sp/>Start.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YAdjust<sp/>=<sp/>XAdjust<sp/>*<sp/>Sin<sp/>/<sp/>Cos;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a8e7cfadab795302ac936c0904338eaaa" kindref="member">YStart</ref><sp/>=<sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Start.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>-<sp/>YAdjust,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YAdjust<sp/>=<sp/>XAdjust<sp/>*<sp/>Cos<sp/>/<sp/>Sin;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1acc616ad7f1906b12e540aebfd0c773a9" kindref="member">YEnd</ref><sp/>=<sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Start.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>+<sp/>YAdjust,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a76e233dc90515aca43b7487c60694770" kindref="member">EndSwitch</ref>;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1afbfda1b2e13254c26369bb792b0edbaf" kindref="member">Y</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch1.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>,<sp/>YS,<sp/>NB);</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>XAdjust<sp/>=<sp/>Switch1.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>-<sp/><ref refid="intproto_8cpp_1ae613a28d73bf2a76687f554e439a1c4c" kindref="member">BucketStart</ref>(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YAdjust<sp/>=<sp/>XAdjust<sp/>*<sp/>Sin<sp/>/<sp/>Cos;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aecb5907178fad1760c3ba1911295f0e8" kindref="member">YInit</ref><sp/>=</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch1.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>+<sp/>YAdjust,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S1].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1a6aab71c8cc5076d6299ac5153cc01ad8" kindref="member">Delta</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1ae6ec6ee3678f48c661437d812e5014e4" kindref="member">StartDelta</ref>;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82a1cf2f15eb85b86e0ec9045e3619a3fa7" kindref="member">StartSwitch</ref>;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch2.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1afbfda1b2e13254c26369bb792b0edbaf" kindref="member">Y</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch2.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>,<sp/>YS,<sp/>NB);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>XAdjust<sp/>=<sp/>Switch2.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>-<sp/><ref refid="intproto_8cpp_1ae613a28d73bf2a76687f554e439a1c4c" kindref="member">BucketStart</ref>(Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>YAdjust<sp/>=<sp/>XAdjust<sp/>*<sp/>Cos<sp/>/<sp/>Sin;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aecb5907178fad1760c3ba1911295f0e8" kindref="member">YInit</ref><sp/>=</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(Switch2.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>-<sp/>YAdjust,<sp/>YS,<sp/>NB<sp/>*<sp/>256);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[S2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1a6aab71c8cc5076d6299ac5153cc01ad8" kindref="member">Delta</ref><sp/>=<sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a00b48b823899944b51c3c53a65d0f53f" kindref="member">EndDelta</ref>;</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1ab50007d49ca8aa85354f1cbdf186c52b" kindref="member">Type</ref><sp/>=<sp/><ref refid="intproto_8cpp_1a41273fdeb63230b3a5c360d8c7c11b82adf8537429629d6c042ac3481208264e2" kindref="member">LastSwitch</ref>;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Filler-&gt;<ref refid="struct_t_a_b_l_e___f_i_l_l_e_r_1a536932c504ded61386f7c518e0bc3880" kindref="member">Switch</ref>[2].<ref refid="struct_f_i_l_l___s_w_i_t_c_h_1aea6de45e16cbf7f43d1de6cf549bcc5b" kindref="member">X</ref><sp/>=<sp/>(<ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>)<sp/><ref refid="intproto_8cpp_1a8e18e2c0fb86ce36d3a3d1b10236cbaa" kindref="member">MapParam</ref>(End.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>XS,<sp/>NB);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1806"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>InitTableFiller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1811"><highlight class="preprocessor"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1812"><highlight class="comment"><sp/>*<sp/>Parameters:</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/>*<sp/><sp/><sp/>ShapeList<sp/>shape<sp/>list<sp/>to<sp/>add<sp/>feature<sp/>rendering<sp/>to</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Feature<sp/><sp/><sp/>feature<sp/>to<sp/>be<sp/>rendered</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Color<sp/><sp/><sp/>color<sp/>to<sp/>use<sp/>for<sp/>feature<sp/>rendering</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/>*<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1817"><highlight class="comment"><sp/>*<sp/>Operation:<sp/>This<sp/>routine<sp/>renders<sp/>the<sp/>specified<sp/>feature<sp/>into<sp/>ShapeList.</highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/>*<sp/>Return:<sp/>New<sp/>shape<sp/>list<sp/>with<sp/>rendering<sp/>of<sp/>Feature<sp/>added.</highlight></codeline>
<codeline lineno="1819"><highlight class="comment"><sp/>*<sp/>@note<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1820"><highlight class="comment"><sp/>*<sp/>@note<sp/>History:<sp/>Thu<sp/>Mar<sp/>21<sp/>14:57:41<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1821"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a83c43ef1a01f3be45cbf675da04c3930" kindref="member">RenderIntFeature</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>*window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref>*<sp/>Feature,</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/>Y,<sp/>Dx,<sp/>Dy,<sp/>Length;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(color);</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/>assert(Feature<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/>assert(color<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/>X<sp/>=<sp/>Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a6b250df12a9b06b5ed0c1a7c403f0275" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/>Y<sp/>=<sp/>Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1a09931683890fb52d22ec6c75048a2bce" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/>Length<sp/>=<sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref>()<sp/>*<sp/>0.7<sp/>*<sp/><ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>-PI<sp/>has<sp/>no<sp/>significant<sp/>effect<sp/>here,<sp/>but<sp/>the<sp/>value<sp/>of<sp/>Theta<sp/>is<sp/>computed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>BinaryAnglePlusPi<sp/>in<sp/>intfx.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/>Dx<sp/>=<sp/>(Length<sp/>/<sp/>2.0)<sp/>*<sp/>cos((Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1af4a2ea6a7d9a82cba06f6ca9a126461b" kindref="member">Theta</ref><sp/>/<sp/>256.0)<sp/>*<sp/>2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref><sp/>-<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/>Dy<sp/>=<sp/>(Length<sp/>/<sp/>2.0)<sp/>*<sp/>sin((Feature-&gt;<ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t_1af4a2ea6a7d9a82cba06f6ca9a126461b" kindref="member">Theta</ref><sp/>/<sp/>256.0)<sp/>*<sp/>2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref><sp/>-<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a730b182e350dfe37b0986d7f0591fee5" kindref="member">SetCursor</ref>(X,<sp/>Y);</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a101de80a4722fe821969f61f6e7303a6" kindref="member">DrawTo</ref>(X<sp/>+<sp/>Dx,<sp/>Y<sp/>+<sp/>Dy);</highlight></codeline>
<codeline lineno="1840"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RenderIntFeature<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1845"><highlight class="comment"><sp/>*<sp/>This<sp/>routine<sp/>extracts<sp/>the<sp/>parameters<sp/>of<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="1846"><highlight class="comment"><sp/>*<sp/>proto<sp/>from<sp/>the<sp/>class<sp/>description<sp/>and<sp/>adds<sp/>a<sp/>rendering<sp/>of</highlight></codeline>
<codeline lineno="1847"><highlight class="comment"><sp/>*<sp/>the<sp/>proto<sp/>onto<sp/>the<sp/>ShapeList.</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1849"><highlight class="comment"><sp/>*<sp/>@param<sp/>Class<sp/><sp/><sp/>class<sp/>that<sp/>proto<sp/>is<sp/>contained<sp/>in</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"><sp/>*<sp/>@param<sp/>ProtoId<sp/><sp/><sp/>id<sp/>of<sp/>proto<sp/>to<sp/>be<sp/>rendered</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/>*<sp/>@param<sp/>color<sp/><sp/><sp/>color<sp/>to<sp/>render<sp/>proto<sp/>in</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1853"><highlight class="comment"><sp/>*<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="1854"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1855"><highlight class="comment"><sp/>*<sp/>@return<sp/>New<sp/>shape<sp/>list<sp/>with<sp/>a<sp/>rendering<sp/>of<sp/>one<sp/>proto<sp/>added.</highlight></codeline>
<codeline lineno="1856"><highlight class="comment"><sp/>*<sp/>@note<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="1857"><highlight class="comment"><sp/>*<sp/>@note<sp/>History:<sp/>Thu<sp/>Mar<sp/>21<sp/>10:21:09<sp/>1991,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="1858"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a67948f52800e3964340ae96c2261c018" kindref="member">RenderIntProto</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>*window,</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t" kindref="compound">INT_CLASS</ref><sp/>Class,</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref><sp/>ProtoId,</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color)<sp/>{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t" kindref="compound">PROTO_SET</ref><sp/>ProtoSet;</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t" kindref="compound">INT_PROTO</ref><sp/>Proto;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoSetIndex;</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ProtoWordIndex;</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Length;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Xmin,<sp/>Xmax,<sp/>Ymin,<sp/>Ymax;</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/>Y,<sp/>Dx,<sp/>Dy;</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>ProtoMask;</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bucket;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/>assert(ProtoId<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/>assert(Class<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/>assert(ProtoId<sp/>&lt;<sp/>Class-&gt;NumProtos);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/>assert(color<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(color);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/>ProtoSet<sp/>=<sp/>Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a301d34e617a03c599ac75a11bcb80aeb" kindref="member">ProtoSets</ref>[<ref refid="intproto_8h_1aa370872941b0c4f6b9e771a17a536bfd" kindref="member">SetForProto</ref>(ProtoId)];</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/>ProtoSetIndex<sp/>=<sp/><ref refid="intproto_8h_1a40fe618eeb7d652b8cf2dce9f31a2d22" kindref="member">IndexForProto</ref>(ProtoId);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/>Proto<sp/>=<sp/>&amp;(ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a450563a5ab47390f341cc1bd103c1189" kindref="member">Protos</ref>[ProtoSetIndex]);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/>Length<sp/>=<sp/>(Class-&gt;<ref refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t_1a9b4f333b97970433f1c34d45103281d3" kindref="member">ProtoLengths</ref>[ProtoId]<sp/>*</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="picofeat_8h_1a35f5a174efc9c6197837aaf5544c78f2" kindref="member">GetPicoFeatureLength</ref>()<sp/>*<sp/><ref refid="intproto_8h_1a5a763027f420d44c110f0887f297259c" kindref="member">INT_CHAR_NORM_RANGE</ref>);</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/>ProtoMask<sp/>=<sp/><ref refid="intproto_8h_1aa5e907e17b721089448946166789f7e6" kindref="member">PPrunerMaskFor</ref>(ProtoId);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/>ProtoWordIndex<sp/>=<sp/><ref refid="intproto_8h_1a0855a639976fdb01523615955dd23e03" kindref="member">PPrunerWordIndexFor</ref>(ProtoId);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>x<sp/>and<sp/>y<sp/>extent<sp/>of<sp/>the<sp/>proto<sp/>from<sp/>the<sp/>proto<sp/>pruning<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/>Xmin<sp/>=<sp/>Ymin<sp/>=<sp/><ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/>Xmax<sp/>=<sp/>Ymax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Bucket<sp/>=<sp/>0;<sp/>Bucket<sp/>&lt;<sp/><ref refid="intproto_8h_1adeffbbd837fc18e8812f77c58469444b" kindref="member">NUM_PP_BUCKETS</ref>;<sp/>Bucket++)<sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ProtoMask<sp/>&amp;<sp/>ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a6c4fddbacb407bdda234dfe3d1835df4" kindref="member">ProtoPruner</ref>[<ref refid="intproto_8h_1af01cd9af1d00fa943dd1edfd19882833" kindref="member">PRUNER_X</ref>][Bucket][ProtoWordIndex])<sp/>{</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(Bucket,<sp/>&amp;Xmin,<sp/>&amp;Xmax);</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ProtoMask<sp/>&amp;<sp/>ProtoSet-&gt;<ref refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t_1a6c4fddbacb407bdda234dfe3d1835df4" kindref="member">ProtoPruner</ref>[<ref refid="intproto_8h_1a7c72f47e4c4a455c9ac0d3855c1aeff2" kindref="member">PRUNER_Y</ref>][Bucket][ProtoWordIndex])<sp/>{</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(Bucket,<sp/>&amp;Ymin,<sp/>&amp;Ymax);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/>X<sp/>=<sp/>(Xmin<sp/>+<sp/>Xmax<sp/>+<sp/>1)<sp/>/<sp/>2.0<sp/>*<sp/><ref refid="intproto_8cpp_1ad0a217ed135414378d65558a77b9b2ba" kindref="member">PROTO_PRUNER_SCALE</ref>;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/>Y<sp/>=<sp/>(Ymin<sp/>+<sp/>Ymax<sp/>+<sp/>1)<sp/>/<sp/>2.0<sp/>*<sp/><ref refid="intproto_8cpp_1ad0a217ed135414378d65558a77b9b2ba" kindref="member">PROTO_PRUNER_SCALE</ref>;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>-PI<sp/>has<sp/>no<sp/>significant<sp/>effect<sp/>here,<sp/>but<sp/>the<sp/>value<sp/>of<sp/>Theta<sp/>is<sp/>computed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>BinaryAnglePlusPi<sp/>in<sp/>intfx.cpp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/>Dx<sp/>=<sp/>(Length<sp/>/<sp/>2.0)<sp/>*<sp/>cos((Proto-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a3595512379d43a12f92efef287db17d9" kindref="member">Angle</ref><sp/>/<sp/>256.0)<sp/>*<sp/>2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref><sp/>-<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/>Dy<sp/>=<sp/>(Length<sp/>/<sp/>2.0)<sp/>*<sp/>sin((Proto-&gt;<ref refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t_1a3595512379d43a12f92efef287db17d9" kindref="member">Angle</ref><sp/>/<sp/>256.0)<sp/>*<sp/>2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref><sp/>-<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a730b182e350dfe37b0986d7f0591fee5" kindref="member">SetCursor</ref>(X<sp/>-<sp/>Dx,<sp/>Y<sp/>-<sp/>Dy);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a101de80a4722fe821969f61f6e7303a6" kindref="member">DrawTo</ref>(X<sp/>+<sp/>Dx,<sp/>Y<sp/>+<sp/>Dy);</highlight></codeline>
<codeline lineno="1908"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RenderIntProto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="1910"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="1927"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a12134f53d5a57bb1dc79acf2711aae5d" kindref="member">TruncateParam</ref>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Param,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Max,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Id)<sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Param<sp/>&lt;<sp/>Min)<sp/>{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Id)</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>Param<sp/>%s<sp/>truncated<sp/>from<sp/>%f<sp/>to<sp/>%d!\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Id,<sp/>Param,<sp/>Min);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/>Param<sp/>=<sp/>Min;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Param<sp/>&gt;<sp/>Max)<sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Id)</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>Param<sp/>%s<sp/>truncated<sp/>from<sp/>%f<sp/>to<sp/>%d!\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Id,<sp/>Param,<sp/>Max);</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/>Param<sp/>=<sp/>Max;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(floor(Param));</highlight></codeline>
<codeline lineno="1940"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TruncateParam<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="1945"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1949"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a142586ad15312463838c8202dd88d9b0" kindref="member">InitIntMatchWindowIfReqd</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IntMatchWindow<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>IntMatchWindow<sp/>=<sp/><ref refid="intproto_8cpp_1aa420561fce74b76450727980adea72b1" kindref="member">CreateFeatureSpaceWindow</ref>(</highlight><highlight class="stringliteral">&quot;IntMatchWindow&quot;</highlight><highlight class="normal">,<sp/>50,<sp/>200);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_v_menu_node" kindref="compound">SVMenuNode</ref>*<sp/>popup_menu<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_menu_node" kindref="compound">SVMenuNode</ref>();</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>popup_menu-&gt;<ref refid="class_s_v_menu_node_1a2d119f4867dcb3015103eabb6cd7386d" kindref="member">AddChild</ref>(</highlight><highlight class="stringliteral">&quot;Debug<sp/>Adapted<sp/>classes&quot;</highlight><highlight class="normal">,<sp/><ref refid="intproto_8h_1aaf26255ca73d9de95dc331fda7b25059ad993f1c95a8775a97134029a0637e793" kindref="member">IDA_ADAPTIVE</ref>,</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>to<sp/>debug&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/>popup_menu-&gt;<ref refid="class_s_v_menu_node_1a2d119f4867dcb3015103eabb6cd7386d" kindref="member">AddChild</ref>(</highlight><highlight class="stringliteral">&quot;Debug<sp/>Static<sp/>classes&quot;</highlight><highlight class="normal">,<sp/><ref refid="intproto_8h_1aaf26255ca73d9de95dc331fda7b25059a7e375f63c9aa7b991d070fb71afdf8a2" kindref="member">IDA_STATIC</ref>,</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>to<sp/>debug&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/>popup_menu-&gt;<ref refid="class_s_v_menu_node_1a2d119f4867dcb3015103eabb6cd7386d" kindref="member">AddChild</ref>(</highlight><highlight class="stringliteral">&quot;Debug<sp/>Both&quot;</highlight><highlight class="normal">,<sp/><ref refid="intproto_8h_1aaf26255ca73d9de95dc331fda7b25059a60cac146ffaba75a610163e6fd0ce17a" kindref="member">IDA_BOTH</ref>,</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Class<sp/>to<sp/>debug&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>popup_menu-&gt;<ref refid="class_s_v_menu_node_1a2d119f4867dcb3015103eabb6cd7386d" kindref="member">AddChild</ref>(</highlight><highlight class="stringliteral">&quot;Debug<sp/>Shape<sp/>Index&quot;</highlight><highlight class="normal">,<sp/><ref refid="intproto_8h_1aaf26255ca73d9de95dc331fda7b25059a911e6b43103ceebb21666a23b77a0f73" kindref="member">IDA_SHAPE_INDEX</ref>,</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>to<sp/>debug&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>popup_menu-&gt;<ref refid="class_s_v_menu_node_1a693800de6b590b47e81213fef7de180a" kindref="member">BuildMenu</ref>(IntMatchWindow,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1ad0d97c266889ef7d0dd78885b34b89d8" kindref="member">InitProtoDisplayWindowIfReqd</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ProtoDisplayWindow<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>ProtoDisplayWindow<sp/>=<sp/><ref refid="intproto_8cpp_1aa420561fce74b76450727980adea72b1" kindref="member">CreateFeatureSpaceWindow</ref>(</highlight><highlight class="stringliteral">&quot;ProtoDisplayWindow&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>550,<sp/>200);</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="1975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="intproto_8cpp_1a4879721f850252687fa5230fd661bc91" kindref="member">InitFeatureDisplayWindowIfReqd</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FeatureDisplayWindow<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>FeatureDisplayWindow<sp/>=<sp/><ref refid="intproto_8cpp_1aa420561fce74b76450727980adea72b1" kindref="member">CreateFeatureSpaceWindow</ref>(</highlight><highlight class="stringliteral">&quot;FeatureDisplayWindow&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>50,<sp/>700);</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>window<sp/>of<sp/>the<sp/>appropriate<sp/>size<sp/>for<sp/>displaying<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>feature<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/><ref refid="intproto_8cpp_1aa420561fce74b76450727980adea72b1" kindref="member">CreateFeatureSpaceWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xpos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ypos)<sp/>{</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>(name,<sp/>xpos,<sp/>ypos,<sp/>520,<sp/>520,<sp/>260,<sp/>260,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/intproto.cpp"/>
  </compounddef>
</doxygen>
