<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_b_l_o_b_n_b_o_x" kind="class" prot="public">
    <compoundname>BLOBNBOX</compoundname>
    <basecompoundref refid="class_e_l_i_s_t___l_i_n_k" prot="public" virt="non-virtual">ELIST_LINK</basecompoundref>
    <includes refid="blobbox_8h" local="no">blobbox.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a6622a9c24c8c18d507eb427763d67ace" prot="private" static="no" mutable="no">
        <type><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref> *</type>
        <definition>C_BLOB* BLOBNBOX::cblob_ptr</definition>
        <argsstring></argsstring>
        <name>cblob_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="484" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a7b13a788fc40467aa670c2850d081f8d" prot="private" static="no" mutable="no">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>TBOX BLOBNBOX::box</definition>
        <argsstring></argsstring>
        <name>box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="485" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a256a2e9c070bd201fad4d47b1b744f5a" prot="private" static="no" mutable="no">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>TBOX BLOBNBOX::red_box</definition>
        <argsstring></argsstring>
        <name>red_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="486" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1ad4f9f99b9b5ef29aacda3e035deb7cea" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BLOBNBOX::area</definition>
        <argsstring></argsstring>
        <name>area</name>
        <bitfield>30</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="487" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="487" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a11f568ec5fcb55e58cf5caa278db5d8b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BLOBNBOX::joined</definition>
        <argsstring></argsstring>
        <name>joined</name>
        <bitfield>1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="488" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="488" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a4d42f365c7753dca4f6c052f6d149970" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BLOBNBOX::reduced</definition>
        <argsstring></argsstring>
        <name>reduced</name>
        <bitfield>1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="489" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a2ffb170fbd66862fbf740ab7a730be3e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BLOBNBOX::repeated_set_</definition>
        <argsstring></argsstring>
        <name>repeated_set_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="490" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1afe6255ae4368e6b725b5a6f37257fa9f" prot="private" static="no" mutable="no">
        <type><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cc" kindref="member">TabType</ref></type>
        <definition>TabType BLOBNBOX::left_tab_type_</definition>
        <argsstring></argsstring>
        <name>left_tab_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="491" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a7ec09de35b82b4fb8eb009d9844fc045" prot="private" static="no" mutable="no">
        <type><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cc" kindref="member">TabType</ref></type>
        <definition>TabType BLOBNBOX::right_tab_type_</definition>
        <argsstring></argsstring>
        <name>right_tab_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="492" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1aa31536645a0e0d02c60c2671e2e35f29" prot="private" static="no" mutable="no">
        <type><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref></type>
        <definition>BlobRegionType BLOBNBOX::region_type_</definition>
        <argsstring></argsstring>
        <name>region_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="493" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1ae0ee7f21c328001352cb26457ba4f8f5" prot="private" static="no" mutable="no">
        <type><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref></type>
        <definition>BlobTextFlowType BLOBNBOX::flow_</definition>
        <argsstring></argsstring>
        <name>flow_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="494" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1aa0cd537f13f18a8591a29d9ee24b439d" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOBNBOX::left_rule_</definition>
        <argsstring></argsstring>
        <name>left_rule_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="495" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a0cc0e83b0385b9a81ae9c746e604e028" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOBNBOX::right_rule_</definition>
        <argsstring></argsstring>
        <name>right_rule_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="496" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1aa456268c0589deb20fbd587fed072d73" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOBNBOX::left_crossing_rule_</definition>
        <argsstring></argsstring>
        <name>left_crossing_rule_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="497" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a2ddb8b3e730d0b5dfc1ddf4ac3b92849" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOBNBOX::right_crossing_rule_</definition>
        <argsstring></argsstring>
        <name>right_crossing_rule_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="498" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1aa3b5822ff4a60265a00621940bb9e0fd" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOBNBOX::base_char_top_</definition>
        <argsstring></argsstring>
        <name>base_char_top_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="499" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a02570ba9a2fd212d05510334235f1825" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 BLOBNBOX::base_char_bottom_</definition>
        <argsstring></argsstring>
        <name>base_char_bottom_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="500" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a7e06e627dd036834e8da5609b023f934" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int BLOBNBOX::line_crossings_</definition>
        <argsstring></argsstring>
        <name>line_crossings_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="501" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a5583843249f6be0406a9afd77f2d566e" prot="private" static="no" mutable="no">
        <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
        <definition>BLOBNBOX* BLOBNBOX::base_char_blob_</definition>
        <argsstring></argsstring>
        <name>base_char_blob_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="502" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a6e45926c2540a7165ba80a59c7a0d476" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BLOBNBOX::horz_stroke_width_</definition>
        <argsstring></argsstring>
        <name>horz_stroke_width_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="503" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1ae98a4c4e24ec6059af720ea23e5cfb7c" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BLOBNBOX::vert_stroke_width_</definition>
        <argsstring></argsstring>
        <name>vert_stroke_width_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="504" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="504" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a5342a4710238304893f0f9d69d4723ca" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float BLOBNBOX::area_stroke_width_</definition>
        <argsstring></argsstring>
        <name>area_stroke_width_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="505" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1ac9e6e85a7421d18d3d513682dbe0daac" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_col_partition" kindref="compound">tesseract::ColPartition</ref> *</type>
        <definition>tesseract::ColPartition* BLOBNBOX::owner_</definition>
        <argsstring></argsstring>
        <name>owner_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="506" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1ac2b40d2a9ff5cc5a2a1411c2c4f7b512" prot="private" static="no" mutable="no">
        <type><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref></type>
        <definition>BlobSpecialTextType BLOBNBOX::spt_type_</definition>
        <argsstring></argsstring>
        <name>spt_type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="507" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1aa1062ce0ed5dce444970a9cedc1a9f3b" prot="private" static="no" mutable="no">
        <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
        <definition>BLOBNBOX* BLOBNBOX::neighbours_[BND_COUNT]</definition>
        <argsstring>[BND_COUNT]</argsstring>
        <name>neighbours_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="508" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a9ac7f32a57e0df4754f194c3dc972523" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BLOBNBOX::good_stroke_neighbours_[BND_COUNT]</definition>
        <argsstring>[BND_COUNT]</argsstring>
        <name>good_stroke_neighbours_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="509" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="509" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a0719ac5182a48c77c947a785950ac355" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BLOBNBOX::horz_possible_</definition>
        <argsstring></argsstring>
        <name>horz_possible_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="510" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a26f392e755e59d3b0db25dd4099f68d7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BLOBNBOX::vert_possible_</definition>
        <argsstring></argsstring>
        <name>vert_possible_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="511" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1abd34258e65ce9baec0f84ab9ad8a35f1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BLOBNBOX::leader_on_left_</definition>
        <argsstring></argsstring>
        <name>leader_on_left_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="512" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_b_l_o_b_n_b_o_x_1a358d34a790d880b373c6d428ebe0e004" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BLOBNBOX::leader_on_right_</definition>
        <argsstring></argsstring>
        <name>leader_on_right_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="513" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a5bc9450ba27c245929b70bec357089f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BLOBNBOX::BLOBNBOX</definition>
        <argsstring>()</argsstring>
        <name>BLOBNBOX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="131" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a11689c19e089b0982f645448802230bd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BLOBNBOX::BLOBNBOX</definition>
        <argsstring>(C_BLOB *srcblob)</argsstring>
        <name>BLOBNBOX</name>
        <param>
          <type><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref> *</type>
          <declname>srcblob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="134" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a8f79871ca8d190fc7ceaebbdf7fad379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::rotate</definition>
        <argsstring>(FCOORD rotation)</argsstring>
        <name>rotate</name>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="146" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ac869963632fa38cc8eb38327fe498aee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::reflect_box_in_y_axis</definition>
        <argsstring>()</argsstring>
        <name>reflect_box_in_y_axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="150" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a3f37300a9cdd252ca74df4a725787587" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::rotate_box</definition>
        <argsstring>(FCOORD rotation)</argsstring>
        <name>rotate_box</name>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="154" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="62" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ad8c450bb29bba6199db25a1f9ccdc244" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::translate_box</definition>
        <argsstring>(ICOORD v)</argsstring>
        <name>translate_box</name>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="156" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="156" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ae4415dbdf1257052f22ee726f98db893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::merge</definition>
        <argsstring>(BLOBNBOX *nextblob)</argsstring>
        <name>merge</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>nextblob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="166" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a35e6f3923186941c2cd0c12b76be914d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::really_merge</definition>
        <argsstring>(BLOBNBOX *other)</argsstring>
        <name>really_merge</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="167" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="94" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a118eeb16f7c775dc58129a5869425f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::chop</definition>
        <argsstring>(BLOBNBOX_IT *start_it, BLOBNBOX_IT *blob_it, FCOORD rotation, float xheight)</argsstring>
        <name>chop</name>
        <param>
          <type>BLOBNBOX_IT *</type>
          <declname>start_it</declname>
        </param>
        <param>
          <type>BLOBNBOX_IT *</type>
          <declname>blob_it</declname>
        </param>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>float</type>
          <declname>xheight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="168" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="111" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ab4222cadac89dc2c9675d35cf2170042" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::NeighbourGaps</definition>
        <argsstring>(int gaps[BND_COUNT]) const </argsstring>
        <name>NeighbourGaps</name>
        <param>
          <type>int</type>
          <declname>gaps</declname>
          <array>[BND_COUNT]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="174" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="172" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a5f17b374b3a0e8b547d1a41e43054ee2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::MinMaxGapsClipped</definition>
        <argsstring>(int *h_min, int *h_max, int *v_min, int *v_max) const </argsstring>
        <name>MinMaxGapsClipped</name>
        <param>
          <type>int *</type>
          <declname>h_min</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>h_max</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>v_min</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>v_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="175" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="191" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ae27906ce7e33b0714e87ecda31dcc825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::CleanNeighbours</definition>
        <argsstring>()</argsstring>
        <name>CleanNeighbours</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="177" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="205" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a17600c15bdfd57f24bb7ec5b2765a48f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::GoodTextBlob</definition>
        <argsstring>() const </argsstring>
        <name>GoodTextBlob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="180" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="217" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a33a55d6d0da2ae6f24a5b6e95b9d10cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::NoisyNeighbours</definition>
        <argsstring>() const </argsstring>
        <name>NoisyNeighbours</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="182" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="228" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a446180da938c7511ec23d59b9fd4e8f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::DeletableNoise</definition>
        <argsstring>() const </argsstring>
        <name>DeletableNoise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="185" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a151439eae2683e30695bbf567df04982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::DefiniteIndividualFlow</definition>
        <argsstring>()</argsstring>
        <name>DefiniteIndividualFlow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="193" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="243" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a05bf035f2a4e78b71d80c719110be401" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::ConfirmNoTabViolation</definition>
        <argsstring>(const BLOBNBOX &amp;other) const </argsstring>
        <name>ConfirmNoTabViolation</name>
        <param>
          <type>const <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="196" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="282" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a2f6e04e9e729b577e2b9577983a03016" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::MatchingStrokeWidth</definition>
        <argsstring>(const BLOBNBOX &amp;other, double fractional_tolerance, double constant_tolerance) const </argsstring>
        <name>MatchingStrokeWidth</name>
        <param>
          <type>const <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fractional_tolerance</declname>
        </param>
        <param>
          <type>double</type>
          <declname>constant_tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="199" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="295" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a5922e4cbb809ee92c2fbffe2f64be1a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>TBOX BLOBNBOX::BoundsWithinLimits</definition>
        <argsstring>(int left, int right)</argsstring>
        <name>BoundsWithinLimits</name>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="205" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="323" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
        <definition>const TBOX&amp; BLOBNBOX::bounding_box</definition>
        <argsstring>() const </argsstring>
        <name>bounding_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="208" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a8f076c06c79a5d3637d2f2f3b03a1a85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_bounding_box</definition>
        <argsstring>(const TBOX &amp;new_box)</argsstring>
        <name>set_bounding_box</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>new_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="213" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a32d07b97c559e7f7f7c58323491aedec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::compute_bounding_box</definition>
        <argsstring>()</argsstring>
        <name>compute_bounding_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="218" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a2a58ed6acac5958581d271f8f25e884e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
        <definition>const TBOX&amp; BLOBNBOX::reduced_box</definition>
        <argsstring>() const </argsstring>
        <name>reduced_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="223" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a4a160da41a3fa28a30d478a99fd80cce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_reduced_box</definition>
        <argsstring>(TBOX new_box)</argsstring>
        <name>set_reduced_box</name>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
          <declname>new_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="226" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ae89d284497727130cbb4e072c26c8990" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 BLOBNBOX::enclosed_area</definition>
        <argsstring>() const </argsstring>
        <name>enclosed_area</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="230" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1af37f373c72851534101f4caf296a3cf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::joined_to_prev</definition>
        <argsstring>() const </argsstring>
        <name>joined_to_prev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="233" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1aac6ebb94348a824de9da94509e88d6a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::red_box_set</definition>
        <argsstring>() const </argsstring>
        <name>red_box_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="236" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a6c315527653e756b1f82f5522929da08" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::repeated_set</definition>
        <argsstring>() const </argsstring>
        <name>repeated_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="239" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a4c2b662bd87162e3a0de4fe96845a449" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_repeated_set</definition>
        <argsstring>(int set_id)</argsstring>
        <name>set_repeated_set</name>
        <param>
          <type>int</type>
          <declname>set_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="242" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref> *</type>
        <definition>C_BLOB* BLOBNBOX::cblob</definition>
        <argsstring>() const </argsstring>
        <name>cblob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="245" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cc" kindref="member">TabType</ref></type>
        <definition>TabType BLOBNBOX::left_tab_type</definition>
        <argsstring>() const </argsstring>
        <name>left_tab_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="248" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a098a0c7864a31569db4c32e32f54504c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_left_tab_type</definition>
        <argsstring>(TabType new_type)</argsstring>
        <name>set_left_tab_type</name>
        <param>
          <type><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cc" kindref="member">TabType</ref></type>
          <declname>new_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="251" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cc" kindref="member">TabType</ref></type>
        <definition>TabType BLOBNBOX::right_tab_type</definition>
        <argsstring>() const </argsstring>
        <name>right_tab_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="254" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a2a26da567144a5131817df4a23e9ec31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_right_tab_type</definition>
        <argsstring>(TabType new_type)</argsstring>
        <name>set_right_tab_type</name>
        <param>
          <type><ref refid="blobbox_8h_1a6d0b33e703e1291d0b60d4fe5a5e12cc" kindref="member">TabType</ref></type>
          <declname>new_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="257" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref></type>
        <definition>BlobRegionType BLOBNBOX::region_type</definition>
        <argsstring>() const </argsstring>
        <name>region_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="260" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_region_type</definition>
        <argsstring>(BlobRegionType new_type)</argsstring>
        <name>set_region_type</name>
        <param>
          <type><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref></type>
          <declname>new_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="263" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1aa33e4d1cf720df979dc50d2b39abb4e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref></type>
        <definition>BlobSpecialTextType BLOBNBOX::special_text_type</definition>
        <argsstring>() const </argsstring>
        <name>special_text_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="266" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a1650427df7e6b935dd737ad9eb70c36b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_special_text_type</definition>
        <argsstring>(BlobSpecialTextType new_type)</argsstring>
        <name>set_special_text_type</name>
        <param>
          <type><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref></type>
          <declname>new_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="269" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="269" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref></type>
        <definition>BlobTextFlowType BLOBNBOX::flow</definition>
        <argsstring>() const </argsstring>
        <name>flow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="272" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="272" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_flow</definition>
        <argsstring>(BlobTextFlowType value)</argsstring>
        <name>set_flow</name>
        <param>
          <type><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="275" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a4ab21b274ede7a7080d5b2bca8f2c268" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::vert_possible</definition>
        <argsstring>() const </argsstring>
        <name>vert_possible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="278" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a500153b288f379ebabbeaa18a7005d04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_vert_possible</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_vert_possible</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="281" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="281" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a9009e27a6c6f2025035170850dcf62c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::horz_possible</definition>
        <argsstring>() const </argsstring>
        <name>horz_possible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="284" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a49a43bb4c47b434aa36ad79ea53a0485" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_horz_possible</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_horz_possible</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="287" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="287" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ac149d9356065f3836019b2da3e311740" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::left_rule</definition>
        <argsstring>() const </argsstring>
        <name>left_rule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="290" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="290" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a37c2f715b4cb67ae8ec6a507dd029787" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_left_rule</definition>
        <argsstring>(int new_left)</argsstring>
        <name>set_left_rule</name>
        <param>
          <type>int</type>
          <declname>new_left</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="293" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="293" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a9b323abfc9e7e03a3edccab8f725315b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::right_rule</definition>
        <argsstring>() const </argsstring>
        <name>right_rule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="296" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="296" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ae90db382b3842419f291ae29dd7cd778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_right_rule</definition>
        <argsstring>(int new_right)</argsstring>
        <name>set_right_rule</name>
        <param>
          <type>int</type>
          <declname>new_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="299" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a08111bdb9d526eab5432a1bc48834106" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::left_crossing_rule</definition>
        <argsstring>() const </argsstring>
        <name>left_crossing_rule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="302" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="302" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1af1c12b91267640dc5634f8992f96cb1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_left_crossing_rule</definition>
        <argsstring>(int new_left)</argsstring>
        <name>set_left_crossing_rule</name>
        <param>
          <type>int</type>
          <declname>new_left</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="305" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="305" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a2f061c25817d44575426977155555fb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::right_crossing_rule</definition>
        <argsstring>() const </argsstring>
        <name>right_crossing_rule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="308" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="308" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a234b1b56e0790a98a0c549a36580ca60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_right_crossing_rule</definition>
        <argsstring>(int new_right)</argsstring>
        <name>set_right_crossing_rule</name>
        <param>
          <type>int</type>
          <declname>new_right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="311" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a8e76ce198ed496c365844807cbbf9338" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float BLOBNBOX::horz_stroke_width</definition>
        <argsstring>() const </argsstring>
        <name>horz_stroke_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="314" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="314" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ab8e3703ad9c72b61dedafb61c4b32358" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_horz_stroke_width</definition>
        <argsstring>(float width)</argsstring>
        <name>set_horz_stroke_width</name>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="317" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a0e0f6b25af6e86fd229bfdc53825dcb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float BLOBNBOX::vert_stroke_width</definition>
        <argsstring>() const </argsstring>
        <name>vert_stroke_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="320" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="320" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1aeb808226b8dd08e875eb3cf38a61a6d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_vert_stroke_width</definition>
        <argsstring>(float width)</argsstring>
        <name>set_vert_stroke_width</name>
        <param>
          <type>float</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="323" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a5b86dba65d0679a91c74aeae12630918" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float BLOBNBOX::area_stroke_width</definition>
        <argsstring>() const </argsstring>
        <name>area_stroke_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="326" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesseract_1_1_col_partition" kindref="compound">tesseract::ColPartition</ref> *</type>
        <definition>tesseract::ColPartition* BLOBNBOX::owner</definition>
        <argsstring>() const </argsstring>
        <name>owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="329" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="329" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_owner</definition>
        <argsstring>(tesseract::ColPartition *new_owner)</argsstring>
        <name>set_owner</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition" kindref="compound">tesseract::ColPartition</ref> *</type>
          <declname>new_owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="332" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a2ac782044b1e472f8ee6bfc9c0072bc9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::leader_on_left</definition>
        <argsstring>() const </argsstring>
        <name>leader_on_left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="335" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="335" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a6e6bb579df4620ecf4a1bdc46bc21d60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_leader_on_left</definition>
        <argsstring>(bool flag)</argsstring>
        <name>set_leader_on_left</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="338" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="338" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a2d3bd49977c92a46d2cedfe410484732" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::leader_on_right</definition>
        <argsstring>() const </argsstring>
        <name>leader_on_right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="341" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="341" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a0bc3500cc908c86d40c828358063797a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_leader_on_right</definition>
        <argsstring>(bool flag)</argsstring>
        <name>set_leader_on_right</name>
        <param>
          <type>bool</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="344" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="344" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
        <definition>BLOBNBOX* BLOBNBOX::neighbour</definition>
        <argsstring>(BlobNeighbourDir n) const </argsstring>
        <name>neighbour</name>
        <param>
          <type><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="347" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="347" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1ac975a83c42bf7f9e07e06eedea3d67a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::good_stroke_neighbour</definition>
        <argsstring>(BlobNeighbourDir n) const </argsstring>
        <name>good_stroke_neighbour</name>
        <param>
          <type><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="350" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_neighbour</definition>
        <argsstring>(BlobNeighbourDir n, BLOBNBOX *neighbour, bool good)</argsstring>
        <name>set_neighbour</name>
        <param>
          <type><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>neighbour</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>good</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="353" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="353" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a3dc859a710d5a7473489c2f3e1e36326" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::IsDiacritic</definition>
        <argsstring>() const </argsstring>
        <name>IsDiacritic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="357" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="357" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1af83ee964739e33a2611a1ba4b21f7a4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::base_char_top</definition>
        <argsstring>() const </argsstring>
        <name>base_char_top</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="360" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="360" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a6fd24eab699bad3b00917fea0a82792b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::base_char_bottom</definition>
        <argsstring>() const </argsstring>
        <name>base_char_bottom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="363" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="363" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a5289a77ebcdf99bab97b8027e8559c00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int BLOBNBOX::line_crossings</definition>
        <argsstring>() const </argsstring>
        <name>line_crossings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="366" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="366" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a567e99fc9c08dfebbe144eb520c1322f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_line_crossings</definition>
        <argsstring>(int value)</argsstring>
        <name>set_line_crossings</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="369" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="369" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1af354be28840859b8a4b593aa6db467f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_diacritic_box</definition>
        <argsstring>(const TBOX &amp;diacritic_box)</argsstring>
        <name>set_diacritic_box</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>diacritic_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="372" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a924df3654c8d3436b30c5a5652e62a89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
        <definition>BLOBNBOX* BLOBNBOX::base_char_blob</definition>
        <argsstring>() const </argsstring>
        <name>base_char_blob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="376" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="376" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a6f9b52a46f0c77c395c0a03a99270ac8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::set_base_char_blob</definition>
        <argsstring>(BLOBNBOX *blob)</argsstring>
        <name>set_base_char_blob</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="379" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="379" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::UniquelyVertical</definition>
        <argsstring>() const </argsstring>
        <name>UniquelyVertical</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="383" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a4faf8ec29ebb0f3c2fbdd158fd33cdc9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool BLOBNBOX::UniquelyHorizontal</definition>
        <argsstring>() const </argsstring>
        <name>UniquelyHorizontal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="386" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="386" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a88b94d1e2384a734dba0b553e86307b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
        <definition>ScrollView::Color BLOBNBOX::BoxColor</definition>
        <argsstring>() const </argsstring>
        <name>BoxColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="430" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="430" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a298c71714cb9c1dfa613bddb8e48f75d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::plot</definition>
        <argsstring>(ScrollView *window, ScrollView::Color blob_colour, ScrollView::Color child_colour)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>blob_colour</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>child_colour</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="432" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="434" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1acc9406df0e800aaf5721a6a1127629f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::ConstructionInit</definition>
        <argsstring>()</argsstring>
        <name>ConstructionInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="439" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="439" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a582c976fe68be6127b2ce4e54e5e7181" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::ReInit</definition>
        <argsstring>()</argsstring>
        <name>ReInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="449" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="449" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1acdf3cc39226f3378516956b0e33fa533" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::ClearNeighbours</definition>
        <argsstring>()</argsstring>
        <name>ClearNeighbours</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="476" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="476" bodyend="481"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1aa750241e977f7dd90452cfbe317fa468" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
        <definition>static BLOBNBOX* BLOBNBOX::RealBlob</definition>
        <argsstring>(C_OUTLINE *outline)</argsstring>
        <name>RealBlob</name>
        <param>
          <type><ref refid="class_c___o_u_t_l_i_n_e" kindref="compound">C_OUTLINE</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="140" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a07444bc838d7efe7c41f8b00913447ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool BLOBNBOX::IsTextType</definition>
        <argsstring>(BlobRegionType type)</argsstring>
        <name>IsTextType</name>
        <param>
          <type><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="391" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="391" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a12fed2b0c8e14c0145019f8f214e4262" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool BLOBNBOX::IsImageType</definition>
        <argsstring>(BlobRegionType type)</argsstring>
        <name>IsImageType</name>
        <param>
          <type><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="395" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="395" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a86decfe35457329f062098901d56015f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool BLOBNBOX::IsLineType</definition>
        <argsstring>(BlobRegionType type)</argsstring>
        <name>IsLineType</name>
        <param>
          <type><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="399" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="399" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1aed57b07f933309970d23490dfc5a5e52" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool BLOBNBOX::UnMergeableType</definition>
        <argsstring>(BlobRegionType type)</argsstring>
        <name>UnMergeableType</name>
        <param>
          <type><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="403" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="403" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a18b3026a08be5da3d4397b2622c8da5f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::CleanNeighbours</definition>
        <argsstring>(BLOBNBOX_LIST *blobs)</argsstring>
        <name>CleanNeighbours</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="407" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="346" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a08e197e85c158f4bb9cbe388b980598e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::DeleteNoiseBlobs</definition>
        <argsstring>(BLOBNBOX_LIST *blobs)</argsstring>
        <name>DeleteNoiseBlobs</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="409" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="354" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a4390090c077b282cb4bc814633cb8e27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::PlotBlobs</definition>
        <argsstring>(BLOBNBOX_LIST *list, ScrollView::Color body_colour, ScrollView::Color child_colour, ScrollView *win)</argsstring>
        <name>PlotBlobs</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>body_colour</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>child_colour</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="414" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="368" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a64e7f32e8eb4319767dfb632db3867bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BLOBNBOX::PlotNoiseBlobs</definition>
        <argsstring>(BLOBNBOX_LIST *list, ScrollView::Color body_colour, ScrollView::Color child_colour, ScrollView *win)</argsstring>
        <name>PlotNoiseBlobs</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>list</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>body_colour</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>child_colour</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="421" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="381" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_b_l_o_b_n_b_o_x_1a7351d74f423975d676f47e4dc05e267f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
        <definition>ScrollView::Color BLOBNBOX::TextlineColor</definition>
        <argsstring>(BlobRegionType region_type, BlobTextFlowType flow_type)</argsstring>
        <name>TextlineColor</name>
        <param>
          <type><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref></type>
          <declname>region_type</declname>
        </param>
        <param>
          <type><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref></type>
          <declname>flow_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="426" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.cpp" bodystart="393" bodyend="427"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="281">
        <label>ELIST_LINK</label>
        <link refid="class_e_l_i_s_t___l_i_n_k"/>
      </node>
      <node id="280">
        <label>BLOBNBOX</label>
        <link refid="class_b_l_o_b_n_b_o_x"/>
        <childnode refid="281" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="283">
        <label>ELIST_LINK</label>
        <link refid="class_e_l_i_s_t___l_i_n_k"/>
      </node>
      <node id="282">
        <label>BLOBNBOX</label>
        <link refid="class_b_l_o_b_n_b_o_x"/>
        <childnode refid="283" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" line="129" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobbox.h" bodystart="128" bodyend="514"/>
    <listofallmembers>
      <member refid="class_b_l_o_b_n_b_o_x_1ad4f9f99b9b5ef29aacda3e035deb7cea" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>area</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a5b86dba65d0679a91c74aeae12630918" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>area_stroke_width</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a5342a4710238304893f0f9d69d4723ca" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>area_stroke_width_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a924df3654c8d3436b30c5a5652e62a89" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>base_char_blob</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a5583843249f6be0406a9afd77f2d566e" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>base_char_blob_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a6fd24eab699bad3b00917fea0a82792b" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>base_char_bottom</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a02570ba9a2fd212d05510334235f1825" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>base_char_bottom_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1af83ee964739e33a2611a1ba4b21f7a4c" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>base_char_top</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aa3b5822ff4a60265a00621940bb9e0fd" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>base_char_top_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a5bc9450ba27c245929b70bec357089f5" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>BLOBNBOX</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a11689c19e089b0982f645448802230bd" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>BLOBNBOX</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>bounding_box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a5922e4cbb809ee92c2fbffe2f64be1a7" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>BoundsWithinLimits</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a7b13a788fc40467aa670c2850d081f8d" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a88b94d1e2384a734dba0b553e86307b1" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>BoxColor</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>cblob</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a6622a9c24c8c18d507eb427763d67ace" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>cblob_ptr</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a118eeb16f7c775dc58129a5869425f4b" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>chop</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ae27906ce7e33b0714e87ecda31dcc825" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>CleanNeighbours</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a18b3026a08be5da3d4397b2622c8da5f" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>CleanNeighbours</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1acdf3cc39226f3378516956b0e33fa533" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>ClearNeighbours</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a32d07b97c559e7f7f7c58323491aedec" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>compute_bounding_box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a05bf035f2a4e78b71d80c719110be401" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>ConfirmNoTabViolation</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1acc9406df0e800aaf5721a6a1127629f4" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>ConstructionInit</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a151439eae2683e30695bbf567df04982" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>DefiniteIndividualFlow</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a446180da938c7511ec23d59b9fd4e8f1" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>DeletableNoise</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a08e197e85c158f4bb9cbe388b980598e" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>DeleteNoiseBlobs</name></member>
      <member refid="class_e_l_i_s_t___l_i_n_k_1ab3cdce5789339d12de62e18fdfb52974" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>ELIST_LINK</name></member>
      <member refid="class_e_l_i_s_t___l_i_n_k_1a30be968896fac3d1c88d127213aa03f7" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>ELIST_LINK</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ae89d284497727130cbb4e072c26c8990" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>enclosed_area</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>flow</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ae0ee7f21c328001352cb26457ba4f8f5" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>flow_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ac975a83c42bf7f9e07e06eedea3d67a7" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>good_stroke_neighbour</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a9ac7f32a57e0df4754f194c3dc972523" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>good_stroke_neighbours_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a17600c15bdfd57f24bb7ec5b2765a48f" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>GoodTextBlob</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a9009e27a6c6f2025035170850dcf62c2" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>horz_possible</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a0719ac5182a48c77c947a785950ac355" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>horz_possible_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a8e76ce198ed496c365844807cbbf9338" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>horz_stroke_width</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a6e45926c2540a7165ba80a59c7a0d476" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>horz_stroke_width_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a3dc859a710d5a7473489c2f3e1e36326" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>IsDiacritic</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a12fed2b0c8e14c0145019f8f214e4262" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>IsImageType</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a86decfe35457329f062098901d56015f" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>IsLineType</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a07444bc838d7efe7c41f8b00913447ac" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>IsTextType</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a11f568ec5fcb55e58cf5caa278db5d8b" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>joined</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1af37f373c72851534101f4caf296a3cf7" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>joined_to_prev</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a2ac782044b1e472f8ee6bfc9c0072bc9" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>leader_on_left</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1abd34258e65ce9baec0f84ab9ad8a35f1" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>leader_on_left_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a2d3bd49977c92a46d2cedfe410484732" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>leader_on_right</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a358d34a790d880b373c6d428ebe0e004" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>leader_on_right_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a08111bdb9d526eab5432a1bc48834106" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>left_crossing_rule</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aa456268c0589deb20fbd587fed072d73" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>left_crossing_rule_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ac149d9356065f3836019b2da3e311740" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>left_rule</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aa0cd537f13f18a8591a29d9ee24b439d" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>left_rule_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a8b16d77deb75ed8aa2ff9d6be9462ec1" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>left_tab_type</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1afe6255ae4368e6b725b5a6f37257fa9f" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>left_tab_type_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a5289a77ebcdf99bab97b8027e8559c00" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>line_crossings</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a7e06e627dd036834e8da5609b023f934" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>line_crossings_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a2f6e04e9e729b577e2b9577983a03016" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>MatchingStrokeWidth</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ae4415dbdf1257052f22ee726f98db893" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>merge</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a5f17b374b3a0e8b547d1a41e43054ee2" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>MinMaxGapsClipped</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>neighbour</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ab4222cadac89dc2c9675d35cf2170042" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>NeighbourGaps</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aa1062ce0ed5dce444970a9cedc1a9f3b" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>neighbours_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a33a55d6d0da2ae6f24a5b6e95b9d10cf" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>NoisyNeighbours</name></member>
      <member refid="class_e_l_i_s_t___l_i_n_k_1a949f5dfcc3c145a19f2d61ee3461701e" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>operator=</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>owner</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ac9e6e85a7421d18d3d513682dbe0daac" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>owner_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a298c71714cb9c1dfa613bddb8e48f75d" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>plot</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a4390090c077b282cb4bc814633cb8e27" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>PlotBlobs</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a64e7f32e8eb4319767dfb632db3867bf" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>PlotNoiseBlobs</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aa750241e977f7dd90452cfbe317fa468" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>RealBlob</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a35e6f3923186941c2cd0c12b76be914d" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>really_merge</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a256a2e9c070bd201fad4d47b1b744f5a" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>red_box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aac6ebb94348a824de9da94509e88d6a8" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>red_box_set</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a4d42f365c7753dca4f6c052f6d149970" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>reduced</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a2a58ed6acac5958581d271f8f25e884e" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>reduced_box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ac869963632fa38cc8eb38327fe498aee" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>reflect_box_in_y_axis</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>region_type</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aa31536645a0e0d02c60c2671e2e35f29" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>region_type_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a582c976fe68be6127b2ce4e54e5e7181" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>ReInit</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a6c315527653e756b1f82f5522929da08" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>repeated_set</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a2ffb170fbd66862fbf740ab7a730be3e" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>repeated_set_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a2f061c25817d44575426977155555fb7" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>right_crossing_rule</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a2ddb8b3e730d0b5dfc1ddf4ac3b92849" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>right_crossing_rule_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a9b323abfc9e7e03a3edccab8f725315b" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>right_rule</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a0cc0e83b0385b9a81ae9c746e604e028" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>right_rule_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a13607f52743a9ef3ec1f9d452aca0df5" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>right_tab_type</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a7ec09de35b82b4fb8eb009d9844fc045" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>right_tab_type_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a8f79871ca8d190fc7ceaebbdf7fad379" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>rotate</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a3f37300a9cdd252ca74df4a725787587" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>rotate_box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a6f9b52a46f0c77c395c0a03a99270ac8" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_base_char_blob</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a8f076c06c79a5d3637d2f2f3b03a1a85" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_bounding_box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1af354be28840859b8a4b593aa6db467f2" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_diacritic_box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_flow</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a49a43bb4c47b434aa36ad79ea53a0485" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_horz_possible</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ab8e3703ad9c72b61dedafb61c4b32358" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_horz_stroke_width</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a6e6bb579df4620ecf4a1bdc46bc21d60" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_leader_on_left</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a0bc3500cc908c86d40c828358063797a" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_leader_on_right</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1af1c12b91267640dc5634f8992f96cb1a" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_left_crossing_rule</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a37c2f715b4cb67ae8ec6a507dd029787" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_left_rule</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a098a0c7864a31569db4c32e32f54504c" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_left_tab_type</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a567e99fc9c08dfebbe144eb520c1322f" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_line_crossings</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a80beaf33ba73b0145cdc6a53ce774465" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_neighbour</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_owner</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a4a160da41a3fa28a30d478a99fd80cce" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_reduced_box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_region_type</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a4c2b662bd87162e3a0de4fe96845a449" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_repeated_set</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a234b1b56e0790a98a0c549a36580ca60" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_right_crossing_rule</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ae90db382b3842419f291ae29dd7cd778" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_right_rule</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a2a26da567144a5131817df4a23e9ec31" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_right_tab_type</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a1650427df7e6b935dd737ad9eb70c36b" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_special_text_type</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a500153b288f379ebabbeaa18a7005d04" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_vert_possible</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aeb808226b8dd08e875eb3cf38a61a6d5" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>set_vert_stroke_width</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aa33e4d1cf720df979dc50d2b39abb4e9" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>special_text_type</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ac2b40d2a9ff5cc5a2a1411c2c4f7b512" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>spt_type_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a7351d74f423975d676f47e4dc05e267f" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>TextlineColor</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ad8c450bb29bba6199db25a1f9ccdc244" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>translate_box</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a4faf8ec29ebb0f3c2fbdd158fd33cdc9" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>UniquelyHorizontal</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>UniquelyVertical</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1aed57b07f933309970d23490dfc5a5e52" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>UnMergeableType</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a4ab21b274ede7a7080d5b2bca8f2c268" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>vert_possible</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a26f392e755e59d3b0db25dd4099f68d7" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>vert_possible_</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1a0e0f6b25af6e86fd229bfdc53825dcb9" prot="public" virt="non-virtual"><scope>BLOBNBOX</scope><name>vert_stroke_width</name></member>
      <member refid="class_b_l_o_b_n_b_o_x_1ae98a4c4e24ec6059af720ea23e5cfb7c" prot="private" virt="non-virtual"><scope>BLOBNBOX</scope><name>vert_stroke_width_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
