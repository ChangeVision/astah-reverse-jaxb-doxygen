<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="word__unigrams_8cpp" kind="file">
    <compoundname>word_unigrams.cpp</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="cube__utils_8h" local="yes">cube_utils.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includes refid="word__unigrams_8h" local="yes">word_unigrams.h</includes>
    <incdepgraph>
      <node id="32354">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="32336">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="32350">
        <label>stdlib.h</label>
      </node>
      <node id="32369">
        <label>lang_model.h</label>
        <link refid="lang__model_8h"/>
        <childnode refid="32370" relation="include">
        </childnode>
        <childnode refid="32373" relation="include">
        </childnode>
        <childnode refid="32339" relation="include">
        </childnode>
        <childnode refid="32372" relation="include">
        </childnode>
      </node>
      <node id="32345">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="32346" relation="include">
        </childnode>
      </node>
      <node id="32338">
        <label>allheaders.h</label>
      </node>
      <node id="32333">
        <label>string</label>
      </node>
      <node id="32331">
        <label>cube/word_unigrams.cpp</label>
        <link refid="word_unigrams.cpp"/>
        <childnode refid="32332" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32337" relation="include">
        </childnode>
        <childnode refid="32354" relation="include">
        </childnode>
        <childnode refid="32368" relation="include">
        </childnode>
      </node>
      <node id="32357">
        <label>stddef.h</label>
      </node>
      <node id="32360">
        <label>memory.h</label>
      </node>
      <node id="32372">
        <label>tuning_params.h</label>
        <link refid="tuning__params_8h"/>
        <childnode refid="32333" relation="include">
        </childnode>
      </node>
      <node id="32352">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="32344" relation="include">
        </childnode>
      </node>
      <node id="32346">
        <label>limits.h</label>
      </node>
      <node id="32363">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="32350" relation="include">
        </childnode>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32364" relation="include">
        </childnode>
        <childnode refid="32341" relation="include">
        </childnode>
      </node>
      <node id="32339">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="32340" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32341" relation="include">
        </childnode>
        <childnode refid="32342" relation="include">
        </childnode>
        <childnode refid="32358" relation="include">
        </childnode>
        <childnode refid="32362" relation="include">
        </childnode>
      </node>
      <node id="32340">
        <label>string.h</label>
      </node>
      <node id="32361">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="32359" relation="include">
        </childnode>
      </node>
      <node id="32359">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="32360" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
      </node>
      <node id="32337">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="32334" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32338" relation="include">
        </childnode>
        <childnode refid="32336" relation="include">
        </childnode>
        <childnode refid="32339" relation="include">
        </childnode>
        <childnode refid="32363" relation="include">
        </childnode>
        <childnode refid="32367" relation="include">
        </childnode>
      </node>
      <node id="32334">
        <label>vector</label>
      </node>
      <node id="32351">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="32344" relation="include">
        </childnode>
      </node>
      <node id="32332">
        <label>math.h</label>
      </node>
      <node id="32370">
        <label>lang_mod_edge.h</label>
        <link refid="lang__mod__edge_8h"/>
        <childnode refid="32371" relation="include">
        </childnode>
        <childnode refid="32339" relation="include">
        </childnode>
      </node>
      <node id="32348">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32349" relation="include">
        </childnode>
        <childnode refid="32355" relation="include">
        </childnode>
      </node>
      <node id="32349">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32350" relation="include">
        </childnode>
        <childnode refid="32351" relation="include">
        </childnode>
        <childnode refid="32352" relation="include">
        </childnode>
        <childnode refid="32353" relation="include">
        </childnode>
        <childnode refid="32354" relation="include">
        </childnode>
      </node>
      <node id="32356">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="32357" relation="include">
        </childnode>
        <childnode refid="32344" relation="include">
        </childnode>
      </node>
      <node id="32364">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="32350" relation="include">
        </childnode>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32365" relation="include">
        </childnode>
        <childnode refid="32366" relation="include">
        </childnode>
      </node>
      <node id="32365">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="32368">
        <label>word_unigrams.h</label>
        <link refid="word__unigrams_8h"/>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32339" relation="include">
        </childnode>
        <childnode refid="32369" relation="include">
        </childnode>
      </node>
      <node id="32371">
        <label>cube_tuning_params.h</label>
        <link refid="cube__tuning__params_8h"/>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32372" relation="include">
        </childnode>
      </node>
      <node id="32358">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="32352" relation="include">
        </childnode>
        <childnode refid="32353" relation="include">
        </childnode>
        <childnode refid="32355" relation="include">
        </childnode>
        <childnode refid="32351" relation="include">
        </childnode>
        <childnode refid="32359" relation="include">
        </childnode>
        <childnode refid="32361" relation="include">
        </childnode>
      </node>
      <node id="32373">
        <label>char_altlist.h</label>
        <link refid="char__altlist_8h"/>
        <childnode refid="32374" relation="include">
        </childnode>
        <childnode refid="32339" relation="include">
        </childnode>
      </node>
      <node id="32362">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="32367">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="32356" relation="include">
        </childnode>
      </node>
      <node id="32347">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="32348" relation="include">
        </childnode>
      </node>
      <node id="32335">
        <label>algorithm</label>
      </node>
      <node id="32344">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="32345" relation="include">
        </childnode>
      </node>
      <node id="32366">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
      </node>
      <node id="32343">
        <label>stdio.h</label>
      </node>
      <node id="32341">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="32340" relation="include">
        </childnode>
        <childnode refid="32333" relation="include">
        </childnode>
        <childnode refid="32335" relation="include">
        </childnode>
        <childnode refid="32334" relation="include">
        </childnode>
      </node>
      <node id="32342">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32344" relation="include">
        </childnode>
        <childnode refid="32347" relation="include">
        </childnode>
      </node>
      <node id="32355">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
        <childnode refid="32345" relation="include">
        </childnode>
        <childnode refid="32356" relation="include">
        </childnode>
      </node>
      <node id="32374">
        <label>altlist.h</label>
        <link refid="altlist_8h"/>
        <childnode refid="32332" relation="include">
        </childnode>
        <childnode refid="32337" relation="include">
        </childnode>
      </node>
      <node id="32353">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="32343" relation="include">
        </childnode>
        <childnode refid="32340" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_unigrams.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Implementation<sp/>of<sp/>the<sp/>Word<sp/>Unigrams<sp/>Class</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2008</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__utils_8h" kindref="compound">cube_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="word__unigrams_8h" kindref="compound">word_unigrams.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classtesseract_1_1_word_unigrams_1afd00490f957dd1842384c372a2949141" kindref="member">WordUnigrams::WordUnigrams</ref>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>costs_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>words_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>word_cnt_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="classtesseract_1_1_word_unigrams_1a60f14b6354f60c7411695103bc422601" kindref="member">WordUnigrams::~WordUnigrams</ref>()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words_[0]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]words_[0];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]words_;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>words_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(costs_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]costs_;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>word-list<sp/>and<sp/>unigrams<sp/>from<sp/>file<sp/>and<sp/>create<sp/>an<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>word<sp/>list<sp/>is<sp/>assumed<sp/>to<sp/>be<sp/>sorted<sp/>in<sp/>lexicographic<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">WordUnigrams<sp/>*<ref refid="classtesseract_1_1_word_unigrams_1a7e57ac1c4afd17adaeb8abb06351dc76" kindref="member">WordUnigrams::Create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>file_name;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>file_name<sp/>=<sp/>data_file_path<sp/>+<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>file_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.cube.word-freq&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>string<sp/>into<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_cube_utils_1ac5c5bf284cd96f78f62f19938bec750a" kindref="member">CubeUtils::ReadFileToString</ref>(file_name,<sp/>&amp;str)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>into<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>vector&lt;string&gt;<sp/>str_vec;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1af7dea4521db1e7099c93606d0f5bf4a4" kindref="member">CubeUtils::SplitStringUsing</ref>(str,<sp/></highlight><highlight class="stringliteral">&quot;\r\n<sp/>\t&quot;</highlight><highlight class="normal">,<sp/>&amp;str_vec);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_vec.size()<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_word_unigrams_1afd00490f957dd1842384c372a2949141" kindref="member">WordUnigrams</ref><sp/>*word_unigrams_obj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_word_unigrams_1afd00490f957dd1842384c372a2949141" kindref="member">WordUnigrams</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_unigrams_obj<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(WordUnigrams::Create):<sp/>could<sp/>not<sp/>create<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;word<sp/>unigrams<sp/>object.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>full_len<sp/>=<sp/>str.length();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_cnt<sp/>=<sp/>str_vec.size()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>word_unigrams_obj-&gt;words_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*[word_cnt];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>word_unigrams_obj-&gt;costs_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[word_cnt];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_unigrams_obj-&gt;words_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_unigrams_obj-&gt;costs_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(WordUnigrams::Create):<sp/>error<sp/>allocating<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;word<sp/>unigram<sp/>fields.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>word_unigrams_obj;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>word_unigrams_obj-&gt;words_[0]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[full_len];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_unigrams_obj-&gt;words_[0]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(WordUnigrams::Create):<sp/>error<sp/>allocating<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;word<sp/>unigram<sp/>fields.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>word_unigrams_obj;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>sorted<sp/>list<sp/>of<sp/>words<sp/>and<sp/>costs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>word_unigrams_obj-&gt;word_cnt_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*char_buff<sp/>=<sp/>word_unigrams_obj-&gt;words_[0];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>word_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_cost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrd<sp/>=<sp/>0;<sp/>wrd<sp/>&lt;<sp/>str_vec.size();<sp/>wrd<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>word_unigrams_obj-&gt;words_[word_cnt]<sp/>=<sp/>char_buff;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(char_buff,<sp/>str_vec[wrd].c_str());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>char_buff<sp/>+=<sp/>(str_vec[wrd].length()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(str_vec[wrd<sp/>+<sp/>1].c_str(),<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_unigrams_obj-&gt;costs_<sp/>+<sp/>word_cnt)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(WordUnigrams::Create):<sp/>error<sp/>reading<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;word<sp/>unigram<sp/>data.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>word_unigrams_obj;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>max<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>max_cost<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(max_cost,<sp/>word_unigrams_obj-&gt;costs_[word_cnt]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>word_cnt++;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>word_unigrams_obj-&gt;word_cnt_<sp/>=<sp/>word_cnt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>not-in-list-cost<sp/>by<sp/>assuming<sp/>that<sp/>a<sp/>word<sp/>not<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[ahmadab]:<sp/>This<sp/>can<sp/>be<sp/>computed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Given<sp/>that<sp/>the<sp/>distribution<sp/>of<sp/>words<sp/>follow<sp/>Zipf&apos;s<sp/>law:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(F<sp/>=<sp/>K<sp/>/<sp/>(rank<sp/>^<sp/>S)),<sp/>where<sp/>s<sp/>is<sp/>slightly<sp/>&gt;<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Number<sp/>of<sp/>words<sp/>in<sp/>the<sp/>list<sp/>is<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>mean<sp/>frequency<sp/>of<sp/>a<sp/>word<sp/>that<sp/>did<sp/>not<sp/>appear<sp/>in<sp/>the<sp/>list<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>area<sp/>under<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>Zipf&apos;s<sp/>curve<sp/>divided<sp/>by<sp/>2<sp/>(the<sp/>mean)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>The<sp/>area<sp/>would<sp/>be<sp/>the<sp/>bound<sp/>integral<sp/>from<sp/>N<sp/>to<sp/>infinity<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>(K<sp/>*<sp/>S)<sp/>/<sp/>(N<sp/>^<sp/>(S<sp/>+<sp/>1))<sp/>~=<sp/>K<sp/>/<sp/>(N<sp/>^<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Given<sp/>that<sp/>cost<sp/>=<sp/>-LOG(prob),<sp/>the<sp/>cost<sp/>of<sp/>an<sp/>unlisted<sp/>word<sp/>would<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>=<sp/>max_cost<sp/>+<sp/>2*LOG(N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>word_unigrams_obj-&gt;not_in_list_cost_<sp/>=<sp/>max_cost<sp/>+</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(2<sp/>*<sp/><ref refid="classtesseract_1_1_cube_utils_1a0983096f5ebcb35879a1e0e6038c32f8" kindref="member">CubeUtils::Prob2Cost</ref>(1.0<sp/>/<sp/>word_cnt));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>success</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>word_unigrams_obj;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Split<sp/>input<sp/>into<sp/>space-separated<sp/>tokens,<sp/>strip<sp/>trailing<sp/>punctuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>each,<sp/>determine<sp/>case<sp/>properties,<sp/>call<sp/>UTF-8<sp/>flavor<sp/>of<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>on<sp/>each<sp/>word,<sp/>and<sp/>aggregate<sp/>all<sp/>into<sp/>single<sp/>mean<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_word_unigrams_1a298b0661e1327c8dcb27bfdd790d92d3" kindref="member">WordUnigrams::Cost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*key_str32,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModel<sp/>*lang_mod,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharSet<sp/>*char_set)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!key_str32)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>string<sp/>to<sp/>UTF8<sp/>to<sp/>split<sp/>into<sp/>space-separated<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>key_str;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a30c20693fc79e49a67c9694700f1d0b5" kindref="member">CubeUtils::UTF32ToUTF8</ref>(key_str32,<sp/>&amp;key_str);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>vector&lt;string&gt;<sp/>words;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1af7dea4521db1e7099c93606d0f5bf4a4" kindref="member">CubeUtils::SplitStringUsing</ref>(key_str,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\t&quot;</highlight><highlight class="normal">,<sp/>&amp;words);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>words<sp/>=&gt;<sp/>no<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words.size()<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>aggregate<sp/>the<sp/>costs<sp/>of<sp/>all<sp/>the<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_idx<sp/>=<sp/>0;<sp/>word_idx<sp/>&lt;<sp/>words.size();<sp/>word_idx++)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>each<sp/>word<sp/>back<sp/>to<sp/>UTF32<sp/>for<sp/>analyzing<sp/>case<sp/>and<sp/>punctuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" kindref="member">string_32</ref><sp/>str32;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a911ee12931d18c46e7db79c6758a91cc" kindref="member">CubeUtils::UTF8ToUTF32</ref>(words[word_idx].c_str(),<sp/>&amp;str32);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1a88fe596e3dcadab7909c0bff64f61f59" kindref="member">CubeUtils::StrLen</ref>(str32.c_str());</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>strip<sp/>all<sp/>trailing<sp/>punctuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>clean_str;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clean_len<sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trunc<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(clean_len<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lang_mod-&gt;IsTrailingPunc(str32.c_str()[clean_len<sp/>-<sp/>1]))<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--clean_len;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trunc<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>either<sp/>the<sp/>original<sp/>string<sp/>was<sp/>not<sp/>truncated<sp/>(no<sp/>trailing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>punctuation)<sp/>or<sp/>the<sp/>entire<sp/>string<sp/>was<sp/>removed<sp/>(all<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>trailing<sp/>punctuation),<sp/>evaluate<sp/>original<sp/>word<sp/>as<sp/>is;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise,<sp/>copy<sp/>all<sp/>but<sp/>the<sp/>trailing<sp/>punctuation<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*clean_str32<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clean_len<sp/>==<sp/>0<sp/>||<sp/>!trunc)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clean_str32<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1a2cea16ea1fc9c8d1020c159617ed90e3" kindref="member">CubeUtils::StrDup</ref>(str32.c_str());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clean_str32<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref>[clean_len<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>clean_len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clean_str32[i]<sp/>=<sp/>str32[i];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clean_str32[clean_len]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(clean_str32<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str8;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a30c20693fc79e49a67c9694700f1d0b5" kindref="member">CubeUtils::UTF32ToUTF8</ref>(clean_str32,<sp/>&amp;str8);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_cost<sp/>=<sp/><ref refid="classtesseract_1_1_word_unigrams_1a14623fdba39beee456c834cdc6a8976f" kindref="member">CostInternal</ref>(str8.c_str());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>case<sp/>invariant,<sp/>get<sp/>costs<sp/>of<sp/>all-upper-case<sp/>and<sp/>all-lower-case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>versions<sp/>and<sp/>return<sp/>the<sp/>min<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clean_len<sp/>&gt;=<sp/>kMinLengthNumOrCaseInvariant<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a0c67516e85144e0d736f30c21208aeda" kindref="member">CubeUtils::IsCaseInvariant</ref>(clean_str32,<sp/>char_set))<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*lower_32<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1ac051dbde8b019f824b1bd8ae8d69d10e" kindref="member">CubeUtils::ToLower</ref>(clean_str32,<sp/>char_set);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower_32)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>lower_8;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a30c20693fc79e49a67c9694700f1d0b5" kindref="member">CubeUtils::UTF32ToUTF8</ref>(lower_32,<sp/>&amp;lower_8);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_cost<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(word_cost,<sp/><ref refid="classtesseract_1_1_word_unigrams_1a14623fdba39beee456c834cdc6a8976f" kindref="member">CostInternal</ref>(lower_8.c_str()));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>lower_32;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*upper_32<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1ac5f9453d9b30ec4343940ad428a4638d" kindref="member">CubeUtils::ToUpper</ref>(clean_str32,<sp/>char_set);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper_32)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>upper_8;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a30c20693fc79e49a67c9694700f1d0b5" kindref="member">CubeUtils::UTF32ToUTF8</ref>(upper_32,<sp/>&amp;upper_8);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_cost<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(word_cost,<sp/><ref refid="classtesseract_1_1_word_unigrams_1a14623fdba39beee456c834cdc6a8976f" kindref="member">CostInternal</ref>(upper_8.c_str()));</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>upper_32;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clean_len<sp/>&gt;=<sp/>kMinLengthNumOrCaseInvariant)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>characters<sp/>are<sp/>all<sp/>numeric,<sp/>incur<sp/>0<sp/>word<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_numeric<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>clean_len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lang_mod-&gt;IsDigit(clean_str32[i]))</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_numeric<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_numeric)</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_cost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>clean_str32;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>cost<sp/>+=<sp/>word_cost;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>word_idx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>mean<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cost<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(words.size()));</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>UTF-8<sp/>string<sp/>using<sp/>binary<sp/>search<sp/>of<sp/>sorted<sp/>words_<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_word_unigrams_1a14623fdba39beee456c834cdc6a8976f" kindref="member">WordUnigrams::CostInternal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_str)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(key_str)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not_in_list_cost_;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi<sp/>=<sp/>word_cnt_<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(lo<sp/>&lt;=<sp/>hi)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>(hi<sp/>+<sp/>lo)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comp<sp/>=<sp/>strcmp(key_str,<sp/>words_[current]);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>costs_[current];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comp<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hi<sp/>=<sp/>current<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>higher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lo<sp/>=<sp/>current<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>not_in_list_cost_;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/word_unigrams.cpp"/>
  </compounddef>
</doxygen>
