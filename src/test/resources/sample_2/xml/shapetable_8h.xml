<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="shapetable_8h" kind="file">
    <compoundname>shapetable.h</compoundname>
    <includes refid="genericvector_8h" local="yes">genericvector.h</includes>
    <includes refid="intmatcher_8h" local="yes">intmatcher.h</includes>
    <includedby refid="adaptmatch_8cpp" local="yes">classify/adaptmatch.cpp</includedby>
    <includedby refid="trainingsample_8h" local="yes">classify/trainingsample.h</includedby>
    <includedby refid="classify_8cpp" local="yes">classify/classify.cpp</includedby>
    <includedby refid="errorcounter_8cpp" local="yes">classify/errorcounter.cpp</includedby>
    <includedby refid="trainingsampleset_8h" local="yes">classify/trainingsampleset.h</includedby>
    <includedby refid="intmatcher_8cpp" local="yes">classify/intmatcher.cpp</includedby>
    <includedby refid="intproto_8cpp" local="yes">classify/intproto.cpp</includedby>
    <includedby refid="mastertrainer_8h" local="yes">classify/mastertrainer.h</includedby>
    <includedby refid="mastertrainer_8cpp" local="yes">classify/mastertrainer.cpp</includedby>
    <includedby refid="sampleiterator_8cpp" local="yes">classify/sampleiterator.cpp</includedby>
    <includedby refid="shapetable_8cpp" local="yes">classify/shapetable.cpp</includedby>
    <includedby refid="trainingsample_8cpp" local="yes">classify/trainingsample.cpp</includedby>
    <includedby refid="trainingsampleset_8cpp" local="yes">classify/trainingsampleset.cpp</includedby>
    <includedby refid="commontraining_8cpp" local="yes">training/commontraining.cpp</includedby>
    <includedby refid="mftraining_8cpp" local="yes">training/mftraining.cpp</includedby>
    <incdepgraph>
      <node id="27631">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="27632" relation="include">
        </childnode>
        <childnode refid="27643" relation="include">
        </childnode>
        <childnode refid="27620" relation="include">
        </childnode>
      </node>
      <node id="27617">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="27643">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="27609">
        <label>stdlib.h</label>
      </node>
      <node id="27612">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="27613" relation="include">
        </childnode>
      </node>
      <node id="27655">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="27611" relation="include">
        </childnode>
      </node>
      <node id="27632">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="27633" relation="include">
        </childnode>
        <childnode refid="27614" relation="include">
        </childnode>
        <childnode refid="27620" relation="include">
        </childnode>
        <childnode refid="27640" relation="include">
        </childnode>
        <childnode refid="27619" relation="include">
        </childnode>
        <childnode refid="27638" relation="include">
        </childnode>
        <childnode refid="27641" relation="include">
        </childnode>
        <childnode refid="27642" relation="include">
        </childnode>
      </node>
      <node id="27652">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
      </node>
      <node id="27635">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="27609" relation="include">
        </childnode>
        <childnode refid="27616" relation="include">
        </childnode>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27621" relation="include">
        </childnode>
        <childnode refid="27614" relation="include">
        </childnode>
        <childnode refid="27636" relation="include">
        </childnode>
      </node>
      <node id="27648">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27611" relation="include">
        </childnode>
        <childnode refid="27635" relation="include">
        </childnode>
        <childnode refid="27637" relation="include">
        </childnode>
      </node>
      <node id="27646">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="27611" relation="include">
        </childnode>
        <childnode refid="27647" relation="include">
        </childnode>
        <childnode refid="27619" relation="include">
        </childnode>
      </node>
      <node id="27622">
        <label>stddef.h</label>
      </node>
      <node id="27626">
        <label>memory.h</label>
      </node>
      <node id="27657">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="27624" relation="include">
        </childnode>
      </node>
      <node id="27644">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="27611" relation="include">
        </childnode>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27645" relation="include">
        </childnode>
      </node>
      <node id="27614">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="27611" relation="include">
        </childnode>
      </node>
      <node id="27624">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="27611" relation="include">
        </childnode>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27625" relation="include">
        </childnode>
      </node>
      <node id="27613">
        <label>limits.h</label>
      </node>
      <node id="27606">
        <label>classify/shapetable.h</label>
        <link refid="shapetable.h"/>
        <childnode refid="27607" relation="include">
        </childnode>
        <childnode refid="27618" relation="include">
        </childnode>
      </node>
      <node id="27651">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="27645" relation="include">
        </childnode>
      </node>
      <node id="27641">
        <label>pthread.h</label>
      </node>
      <node id="27616">
        <label>string.h</label>
      </node>
      <node id="27639">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="27625" relation="include">
        </childnode>
      </node>
      <node id="27625">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="27626" relation="include">
        </childnode>
        <childnode refid="27616" relation="include">
        </childnode>
      </node>
      <node id="27629">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27616" relation="include">
        </childnode>
        <childnode refid="27609" relation="include">
        </childnode>
        <childnode refid="27611" relation="include">
        </childnode>
        <childnode refid="27630" relation="include">
        </childnode>
        <childnode refid="27631" relation="include">
        </childnode>
      </node>
      <node id="27649">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="27645" relation="include">
        </childnode>
        <childnode refid="27650" relation="include">
        </childnode>
        <childnode refid="27617" relation="include">
        </childnode>
        <childnode refid="27652" relation="include">
        </childnode>
        <childnode refid="27630" relation="include">
        </childnode>
      </node>
      <node id="27610">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="27611" relation="include">
        </childnode>
      </node>
      <node id="27642">
        <label>semaphore.h</label>
      </node>
      <node id="27636">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="27614" relation="include">
        </childnode>
      </node>
      <node id="27627">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="27611" relation="include">
        </childnode>
        <childnode refid="27628" relation="include">
        </childnode>
        <childnode refid="27644" relation="include">
        </childnode>
        <childnode refid="27646" relation="include">
        </childnode>
        <childnode refid="27619" relation="include">
        </childnode>
      </node>
      <node id="27633">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="27634" relation="include">
        </childnode>
        <childnode refid="27630" relation="include">
        </childnode>
        <childnode refid="27625" relation="include">
        </childnode>
        <childnode refid="27638" relation="include">
        </childnode>
        <childnode refid="27607" relation="include">
        </childnode>
      </node>
      <node id="27656">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="27610" relation="include">
        </childnode>
        <childnode refid="27614" relation="include">
        </childnode>
        <childnode refid="27607" relation="include">
        </childnode>
      </node>
      <node id="27645">
        <label>math.h</label>
      </node>
      <node id="27637">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="27614" relation="include">
        </childnode>
      </node>
      <node id="27653">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="27645" relation="include">
        </childnode>
        <childnode refid="27647" relation="include">
        </childnode>
      </node>
      <node id="27628">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="27629" relation="include">
        </childnode>
        <childnode refid="27610" relation="include">
        </childnode>
      </node>
      <node id="27619">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27607" relation="include">
        </childnode>
        <childnode refid="27620" relation="include">
        </childnode>
      </node>
      <node id="27607">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27609" relation="include">
        </childnode>
        <childnode refid="27610" relation="include">
        </childnode>
        <childnode refid="27614" relation="include">
        </childnode>
        <childnode refid="27615" relation="include">
        </childnode>
        <childnode refid="27617" relation="include">
        </childnode>
      </node>
      <node id="27621">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="27622" relation="include">
        </childnode>
        <childnode refid="27611" relation="include">
        </childnode>
      </node>
      <node id="27654">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="27655" relation="include">
        </childnode>
        <childnode refid="27629" relation="include">
        </childnode>
        <childnode refid="27625" relation="include">
        </childnode>
        <childnode refid="27656" relation="include">
        </childnode>
        <childnode refid="27619" relation="include">
        </childnode>
      </node>
      <node id="27634">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27611" relation="include">
        </childnode>
        <childnode refid="27635" relation="include">
        </childnode>
        <childnode refid="27637" relation="include">
        </childnode>
      </node>
      <node id="27638">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="27614" relation="include">
        </childnode>
        <childnode refid="27615" relation="include">
        </childnode>
        <childnode refid="27620" relation="include">
        </childnode>
        <childnode refid="27610" relation="include">
        </childnode>
        <childnode refid="27625" relation="include">
        </childnode>
        <childnode refid="27639" relation="include">
        </childnode>
      </node>
      <node id="27650">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27645" relation="include">
        </childnode>
        <childnode refid="27634" relation="include">
        </childnode>
        <childnode refid="27651" relation="include">
        </childnode>
      </node>
      <node id="27630">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="27619" relation="include">
        </childnode>
      </node>
      <node id="27618">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="27619" relation="include">
        </childnode>
        <childnode refid="27623" relation="include">
        </childnode>
        <childnode refid="27657" relation="include">
        </childnode>
      </node>
      <node id="27611">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="27612" relation="include">
        </childnode>
      </node>
      <node id="27608">
        <label>stdio.h</label>
      </node>
      <node id="27623">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="27607" relation="include">
        </childnode>
        <childnode refid="27624" relation="include">
        </childnode>
        <childnode refid="27627" relation="include">
        </childnode>
        <childnode refid="27654" relation="include">
        </childnode>
        <childnode refid="27652" relation="include">
        </childnode>
        <childnode refid="27638" relation="include">
        </childnode>
      </node>
      <node id="27640">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27611" relation="include">
        </childnode>
        <childnode refid="27630" relation="include">
        </childnode>
      </node>
      <node id="27620">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27616" relation="include">
        </childnode>
        <childnode refid="27612" relation="include">
        </childnode>
        <childnode refid="27621" relation="include">
        </childnode>
      </node>
      <node id="27647">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="27648" relation="include">
        </childnode>
        <childnode refid="27649" relation="include">
        </childnode>
        <childnode refid="27653" relation="include">
        </childnode>
      </node>
      <node id="27615">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="27608" relation="include">
        </childnode>
        <childnode refid="27616" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27670">
        <label>classify/sampleiterator.cpp</label>
        <link refid="sampleiterator_8cpp"/>
      </node>
      <node id="27665">
        <label>classify/mastertrainer.cpp</label>
        <link refid="mastertrainer_8cpp"/>
      </node>
      <node id="27667">
        <label>training/commontraining.cpp</label>
        <link refid="commontraining_8cpp"/>
      </node>
      <node id="27675">
        <label>classify/trainingsample.cpp</label>
        <link refid="trainingsample_8cpp"/>
      </node>
      <node id="27676">
        <label>classify/classify.cpp</label>
        <link refid="classify_8cpp"/>
      </node>
      <node id="27679">
        <label>classify/shapetable.cpp</label>
        <link refid="shapetable_8cpp"/>
      </node>
      <node id="27662">
        <label>classify/errorcounter.cpp</label>
        <link refid="errorcounter_8cpp"/>
      </node>
      <node id="27658">
        <label>classify/shapetable.h</label>
        <link refid="shapetable.h"/>
        <childnode refid="27659" relation="include">
        </childnode>
        <childnode refid="27660" relation="include">
        </childnode>
        <childnode refid="27676" relation="include">
        </childnode>
        <childnode refid="27662" relation="include">
        </childnode>
        <childnode refid="27663" relation="include">
        </childnode>
        <childnode refid="27677" relation="include">
        </childnode>
        <childnode refid="27678" relation="include">
        </childnode>
        <childnode refid="27664" relation="include">
        </childnode>
        <childnode refid="27665" relation="include">
        </childnode>
        <childnode refid="27670" relation="include">
        </childnode>
        <childnode refid="27679" relation="include">
        </childnode>
        <childnode refid="27675" relation="include">
        </childnode>
        <childnode refid="27671" relation="include">
        </childnode>
        <childnode refid="27667" relation="include">
        </childnode>
        <childnode refid="27668" relation="include">
        </childnode>
      </node>
      <node id="27674">
        <label>classify/tessclassifier.cpp</label>
        <link refid="tessclassifier_8cpp"/>
      </node>
      <node id="27678">
        <label>classify/intproto.cpp</label>
        <link refid="intproto_8cpp"/>
      </node>
      <node id="27668">
        <label>training/mftraining.cpp</label>
        <link refid="mftraining_8cpp"/>
      </node>
      <node id="27672">
        <label>classify/intfx.cpp</label>
        <link refid="intfx_8cpp"/>
      </node>
      <node id="27671">
        <label>classify/trainingsampleset.cpp</label>
        <link refid="trainingsampleset_8cpp"/>
      </node>
      <node id="27659">
        <label>classify/adaptmatch.cpp</label>
        <link refid="adaptmatch_8cpp"/>
      </node>
      <node id="27661">
        <label>ccmain/cubeclassifier.cpp</label>
        <link refid="cubeclassifier_8cpp"/>
      </node>
      <node id="27673">
        <label>classify/picofeat.cpp</label>
        <link refid="picofeat_8cpp"/>
      </node>
      <node id="27663">
        <label>classify/trainingsampleset.h</label>
        <link refid="trainingsampleset_8h"/>
        <childnode refid="27662" relation="include">
        </childnode>
        <childnode refid="27664" relation="include">
        </childnode>
        <childnode refid="27670" relation="include">
        </childnode>
        <childnode refid="27671" relation="include">
        </childnode>
      </node>
      <node id="27677">
        <label>classify/intmatcher.cpp</label>
        <link refid="intmatcher_8cpp"/>
      </node>
      <node id="27660">
        <label>classify/trainingsample.h</label>
        <link refid="trainingsample_8h"/>
        <childnode refid="27661" relation="include">
        </childnode>
        <childnode refid="27659" relation="include">
        </childnode>
        <childnode refid="27662" relation="include">
        </childnode>
        <childnode refid="27663" relation="include">
        </childnode>
        <childnode refid="27672" relation="include">
        </childnode>
        <childnode refid="27664" relation="include">
        </childnode>
        <childnode refid="27673" relation="include">
        </childnode>
        <childnode refid="27670" relation="include">
        </childnode>
        <childnode refid="27674" relation="include">
        </childnode>
        <childnode refid="27675" relation="include">
        </childnode>
        <childnode refid="27671" relation="include">
        </childnode>
      </node>
      <node id="27669">
        <label>training/shapeclustering.cpp</label>
        <link refid="shapeclustering_8cpp"/>
      </node>
      <node id="27666">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="27664">
        <label>classify/mastertrainer.h</label>
        <link refid="mastertrainer_8h"/>
        <childnode refid="27665" relation="include">
        </childnode>
        <childnode refid="27666" relation="include">
        </childnode>
        <childnode refid="27667" relation="include">
        </childnode>
        <childnode refid="27668" relation="include">
        </childnode>
        <childnode refid="27669" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structtesseract_1_1_unichar_and_fonts" prot="public">tesseract::UnicharAndFonts</innerclass>
    <innerclass refid="classtesseract_1_1_shape" prot="public">tesseract::Shape</innerclass>
    <innerclass refid="classtesseract_1_1_shape_table" prot="public">tesseract::ShapeTable</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2010<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>rays@google.com<sp/>(Ray<sp/>Smith)</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shapetable.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Class<sp/>to<sp/>map<sp/>a<sp/>classifier<sp/>shape<sp/>index<sp/>to<sp/>unicharset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices<sp/>and<sp/>font<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Oct<sp/>28<sp/>17:46:32<sp/>PDT<sp/>2010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2010,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_CLASSIFY_SHAPETABLE_H_</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_CLASSIFY_SHAPETABLE_H_</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericvector_8h" kindref="compound">genericvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intmatcher_8h" kindref="compound">intmatcher.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>struct<sp/>to<sp/>hold<sp/>a<sp/>set<sp/>of<sp/>fonts<sp/>associated<sp/>with<sp/>a<sp/>single<sp/>unichar-id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>vector<sp/>of<sp/>UnicharAndFonts<sp/>makes<sp/>a<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structtesseract_1_1_unichar_and_fonts" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesseract_1_1_unichar_and_fonts" kindref="compound">UnicharAndFonts</ref><sp/>{</highlight></codeline>
<codeline lineno="37" refid="structtesseract_1_1_unichar_and_fonts_1acb6e439f7efaaa2953b1239c67992b84" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1acb6e439f7efaaa2953b1239c67992b84" kindref="member">UnicharAndFonts</ref>()<sp/>:<sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1a403559d5097fc81a0fa4afb823759ba9" kindref="member">unichar_id</ref>(0)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39" refid="structtesseract_1_1_unichar_and_fonts_1a6a85fd614ea1a315bb5c03e0fbaac534" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1a6a85fd614ea1a315bb5c03e0fbaac534" kindref="member">UnicharAndFonts</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uni_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id)<sp/>:<sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1a403559d5097fc81a0fa4afb823759ba9" kindref="member">unichar_id</ref>(uni_id)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1a0e1a3d64d3276cf117efc983a02b38ba" kindref="member">font_ids</ref>.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(font_id);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1a9fc03f938c74c07debc8c5bd58e9c3d1" kindref="member">Serialize</ref>(FILE*<sp/>fp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1a2e3240e66a31a30ec518493693149efa" kindref="member">DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>function<sp/>to<sp/>sort<sp/>a<sp/>pair<sp/>of<sp/>UnicharAndFonts<sp/>by<sp/>unichar_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1a416f42c44c1bde4d7fdbc9c7ab8bf660" kindref="member">SortByUnicharId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>v2);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structtesseract_1_1_unichar_and_fonts_1a0e1a3d64d3276cf117efc983a02b38ba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;inT32&gt;</ref><sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1a0e1a3d64d3276cf117efc983a02b38ba" kindref="member">font_ids</ref>;</highlight></codeline>
<codeline lineno="53" refid="structtesseract_1_1_unichar_and_fonts_1a403559d5097fc81a0fa4afb823759ba9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="structtesseract_1_1_unichar_and_fonts_1a403559d5097fc81a0fa4afb823759ba9" kindref="member">unichar_id</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>Shape<sp/>is<sp/>a<sp/>collection<sp/>of<sp/>unichar-ids<sp/>and<sp/>a<sp/>list<sp/>of<sp/>fonts<sp/>associated<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>each,<sp/>organized<sp/>as<sp/>a<sp/>vector<sp/>of<sp/>UnicharAndFonts.<sp/>Conceptually<sp/>a<sp/>Shape<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>classifiable<sp/>unit,<sp/>and<sp/>represents<sp/>a<sp/>group<sp/>of<sp/>characters<sp/>or<sp/>parts<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>characters<sp/>that<sp/>have<sp/>a<sp/>similar<sp/>or<sp/>identical<sp/>shape.<sp/>Shapes/ShapeTables<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>organized<sp/>hierarchically<sp/>from<sp/>identical<sp/>shapes<sp/>at<sp/>the<sp/>leaves<sp/>to<sp/>vaguely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>similar<sp/>shapes<sp/>near<sp/>the<sp/>root.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classtesseract_1_1_shape" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64" refid="classtesseract_1_1_shape_1a68d9b4600cf7683fcc0dd4452ddd6e44" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_shape_1a68d9b4600cf7683fcc0dd4452ddd6e44" kindref="member">Shape</ref>()<sp/>:<sp/>destination_index_(-1)<sp/>{}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1ae8e294fc321170b61d73ad989244b16a" kindref="member">Serialize</ref>(FILE*<sp/>fp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1a19655bb2ebbd46892099346c9902feec" kindref="member">DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classtesseract_1_1_shape_1a425abfc0fed0d7c7096365b8d9b26c02" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1a425abfc0fed0d7c7096365b8d9b26c02" kindref="member">destination_index</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>destination_index_;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="75" refid="classtesseract_1_1_shape_1a230e3a68e297afe566f40a1da932454f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1a230e3a68e297afe566f40a1da932454f" kindref="member">set_destination_index</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>destination_index_<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78" refid="classtesseract_1_1_shape_1a0fca7f64992c74492787d00240a22913" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1a0fca7f64992c74492787d00240a22913" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unichars_.size();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>UnicharAndFonts<sp/>entry<sp/>for<sp/>the<sp/>given<sp/>index,<sp/>which<sp/>must<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>range<sp/>[0,<sp/>size()).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classtesseract_1_1_shape_1a332db4b9b4f9a698df9300f667f7b51d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_unichar_and_fonts" kindref="compound">UnicharAndFonts</ref>&amp;<sp/><ref refid="classtesseract_1_1_shape_1a332db4b9b4f9a698df9300f667f7b51d" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unichars_[index];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>font_id<sp/>for<sp/>the<sp/>given<sp/>unichar_id.<sp/>If<sp/>the<sp/>unichar_id<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>shape,<sp/>it<sp/>is<sp/>added.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1a8ba6275e93ed4704cf486e911f42f420" kindref="member">AddToShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>everything<sp/>in<sp/>other<sp/>to<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1ab958a107a2f7c2a665c54a749b8ff0f4" kindref="member">AddShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>shape<sp/>contains<sp/>the<sp/>given<sp/>unichar_id,<sp/>font_id<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1aa6d5091ec6842cfa5c0622bc772ca26c" kindref="member">ContainsUnicharAndFont</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>shape<sp/>contains<sp/>the<sp/>given<sp/>unichar_id,<sp/>ignoring<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1a736c652adf59c9e1bdc68756f7e1e7e6" kindref="member">ContainsUnichar</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>shape<sp/>contains<sp/>the<sp/>given<sp/>font,<sp/>ignoring<sp/>unichar_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1a826ee7935903995239b27f1b4e68e1ba" kindref="member">ContainsFont</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>this<sp/>is<sp/>a<sp/>subset<sp/>(including<sp/>equal)<sp/>of<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1a797653eeb0584320326b599f5653e2df" kindref="member">IsSubsetOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>&amp;<sp/>other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>lists<sp/>of<sp/>unichar<sp/>ids<sp/>are<sp/>the<sp/>same<sp/>in<sp/>this<sp/>and<sp/>other,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ignoring<sp/>fonts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOT<sp/>const,<sp/>as<sp/>it<sp/>will<sp/>sort<sp/>the<sp/>unichars<sp/>on<sp/>demand.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_1ac6bd7e4be5dc4755ad66b62ecb5f86e6" kindref="member">IsEqualUnichars</ref>(<ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>*<sp/>other);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sorts<sp/>the<sp/>unichars_<sp/>vector<sp/>by<sp/>unichar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SortUnichars();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>indicates<sp/>that<sp/>the<sp/>unichars<sp/>are<sp/>sorted,<sp/>allowing<sp/>faster<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>operations<sp/>with<sp/>another<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unichars_sorted_;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>Shape<sp/>is<sp/>part<sp/>of<sp/>a<sp/>ShapeTable<sp/>the<sp/>destiation_index_<sp/>is<sp/>the<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>some<sp/>other<sp/>shape<sp/>in<sp/>the<sp/>ShapeTable<sp/>with<sp/>which<sp/>this<sp/>shape<sp/>is<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>destination_index_;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>of<sp/>unichars,<sp/>each<sp/>with<sp/>a<sp/>set<sp/>of<sp/>fonts.<sp/>Each<sp/>unichar<sp/>has<sp/>at<sp/>most</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>entry<sp/>in<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;UnicharAndFonts&gt;</ref><sp/>unichars_;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ShapeTable<sp/>is<sp/>a<sp/>class<sp/>to<sp/>encapsulate<sp/>the<sp/>triple<sp/>indirection<sp/>that<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ShapeTable<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>shape<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>UnicharAndFonts<sp/>representing<sp/>the<sp/>set<sp/>of<sp/>unichars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>shape<sp/>represents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>UnicharAndFonts<sp/>also<sp/>lists<sp/>the<sp/>fonts<sp/>of<sp/>the<sp/>unichar_id<sp/>that<sp/>were</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mapped<sp/>to<sp/>the<sp/>shape<sp/>during<sp/>training.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classtesseract_1_1_shape_table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_shape_table_1a281dee38659ef559b59964bfb9f35582" kindref="member">ShapeTable</ref>();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>UNICHARSET<sp/>reference<sp/>supplied<sp/>here,<sp/>or<sp/>in<sp/>set_unicharset<sp/>below<sp/>must</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>exist<sp/>for<sp/>the<sp/>entire<sp/>life<sp/>of<sp/>the<sp/>ShapeTable.<sp/>It<sp/>is<sp/>used<sp/>only<sp/>by<sp/>DebugStr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a281dee38659ef559b59964bfb9f35582" kindref="member">ShapeTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/><ref refid="classtesseract_1_1_shape_table_1af72db112512667caacdc79bbdef5e86e" kindref="member">unicharset</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1afba3bb1970bb5e5fe626d3259955a8d3" kindref="member">Serialize</ref>(FILE*<sp/>fp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1adfba8cbf1c85a12b6b826d332614072f" kindref="member">DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classtesseract_1_1_shape_table_1a924919daeadb48539e3d68c65013c173" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a924919daeadb48539e3d68c65013c173" kindref="member">NumShapes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_table_.size();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143" refid="classtesseract_1_1_shape_table_1af72db112512667caacdc79bbdef5e86e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/><ref refid="classtesseract_1_1_shape_table_1af72db112512667caacdc79bbdef5e86e" kindref="member">unicharset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*unicharset_;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shapetable<sp/>takes<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>UNICHARSET,<sp/>so<sp/>it<sp/>must<sp/>persist<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>entire<sp/>life<sp/>of<sp/>the<sp/>ShapeTable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classtesseract_1_1_shape_table_1a9f5e464a789541736e9b422640dcdedb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a9f5e464a789541736e9b422640dcdedb" kindref="member">set_unicharset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>unicharset_<sp/>=<sp/>&amp;<ref refid="classtesseract_1_1_shape_table_1af72db112512667caacdc79bbdef5e86e" kindref="member">unicharset</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>string<sp/>listing<sp/>the<sp/>classes/fonts<sp/>in<sp/>a<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="classtesseract_1_1_shape_table_1a87937c115d25036a961833c8b8ab79dd" kindref="member">DebugStr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>debug<sp/>string<sp/>summarizing<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="classtesseract_1_1_shape_table_1aeaa348185383beb3f14daf445919b30c" kindref="member">SummaryStr</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>new<sp/>shape<sp/>starting<sp/>with<sp/>the<sp/>given<sp/>unichar_id<sp/>and<sp/>font_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>assigned<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a4560e30f0df9126da3462e4858e6a2db" kindref="member">AddShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>given<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>assigned<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a4560e30f0df9126da3462e4858e6a2db" kindref="member">AddShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Removes<sp/>the<sp/>shape<sp/>given<sp/>by<sp/>the<sp/>shape<sp/>index.<sp/>All<sp/>indices<sp/>above<sp/>are<sp/>changed!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1aa50746fbf2f1676290ab5e372b228167" kindref="member">DeleteShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>font_id<sp/>to<sp/>the<sp/>given<sp/>existing<sp/>shape<sp/>index<sp/>for<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unichar_id.<sp/>If<sp/>the<sp/>unichar_id<sp/>is<sp/>not<sp/>in<sp/>the<sp/>shape,<sp/>it<sp/>is<sp/>added.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1ac8c09a4d3aefed5026a4837f514a3c14" kindref="member">AddToShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>the<sp/>given<sp/>shape<sp/>to<sp/>the<sp/>existing<sp/>shape<sp/>with<sp/>the<sp/>given<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1abf52fa86adb98bedc1e2677ec35b1a9c" kindref="member">AddShapeToShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>id<sp/>of<sp/>the<sp/>shape<sp/>that<sp/>contains<sp/>the<sp/>given<sp/>unichar<sp/>and<sp/>font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>found,<sp/>returns<sp/>-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>font_id<sp/>&lt;<sp/>0,<sp/>the<sp/>font_id<sp/>is<sp/>ignored<sp/>and<sp/>the<sp/>first<sp/>shape<sp/>that<sp/>matches</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>unichar_id<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a6bd8104b89a7c7ffeb8c4bc8996fff6c" kindref="member">FindShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>first<sp/>unichar_id<sp/>and<sp/>font_id<sp/>in<sp/>the<sp/>given<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1ade3f46eb910d83302b04f9f530277290" kindref="member">GetFirstUnicharAndFont</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>unichar_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>font_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessors<sp/>for<sp/>the<sp/>Shape<sp/>with<sp/>the<sp/>given<sp/>shape_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classtesseract_1_1_shape_table_1a9334161c64756c591ff7d4fca22277f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>&amp;<sp/><ref refid="classtesseract_1_1_shape_table_1a9334161c64756c591ff7d4fca22277f5" kindref="member">GetShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*shape_table_[shape_id];</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182" refid="classtesseract_1_1_shape_table_1aa14fea6bc3cfbcb528f709c99d75a0e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>*<sp/><ref refid="classtesseract_1_1_shape_table_1aa14fea6bc3cfbcb528f709c99d75a0e3" kindref="member">MutableShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_table_[shape_id];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Expands<sp/>all<sp/>the<sp/>classes/fonts<sp/>in<sp/>the<sp/>shape<sp/>individually<sp/>to<sp/>build</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>ShapeTable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1ac2bd77883160f685122f6fa87f8e9c52" kindref="member">BuildFromShape</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>&amp;<sp/>shape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>&amp;<sp/>master_shapes);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>shapes<sp/>are<sp/>already<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a08b63fc54885f62f112079c575c33ffb" kindref="member">AlreadyMerged</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id2)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>any<sp/>shape<sp/>contains<sp/>multiple<sp/>unichars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a77fc3b88ce452fe84f66476ebd0567ff" kindref="member">AnyMultipleUnichars</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>unichars<sp/>over<sp/>all<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1ad130bbb0f12679804c93bbaa10bec04e" kindref="member">MaxNumUnichars</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merges<sp/>shapes<sp/>with<sp/>a<sp/>common<sp/>unichar<sp/>over<sp/>the<sp/>[start,<sp/>end)<sp/>interval.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>single<sp/>unichar<sp/>per<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1ae6c7d40a14971256995d61405c899a0a" kindref="member">ForceFontMerges</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>unichars<sp/>in<sp/>the<sp/>master<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a0d9f69c9ee9d5bcb6d8658925a881831" kindref="member">MasterUnicharCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>font<sp/>counts<sp/>in<sp/>the<sp/>master<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a25fa21bfc400b72a334e3e2fd474cb53" kindref="member">MasterFontCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>unichars<sp/>that<sp/>would<sp/>result<sp/>from<sp/>merging<sp/>the<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a7a76eef56cbc9fe1a959b8988faef0fb" kindref="member">MergedUnicharCount</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id2)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merges<sp/>two<sp/>shape_ids,<sp/>leaving<sp/>shape_id2<sp/>marked<sp/>as<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a894d3a172873cbfb9def40cc2d02fbae" kindref="member">MergeShapes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id2);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Appends<sp/>the<sp/>master<sp/>shapes<sp/>from<sp/>other<sp/>to<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>create<sp/>a<sp/>clean<sp/>ShapeTable<sp/>from<sp/>a<sp/>merged<sp/>one,<sp/>or<sp/>to<sp/>create<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>of<sp/>a<sp/>ShapeTable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1ae8a8a15df8f549f59e729eab865d6e66" kindref="member">AppendMasterShapes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>master<sp/>shapes<sp/>remaining<sp/>after<sp/>merging.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a2c23ee547c7157870d3be58a431b7033" kindref="member">NumMasterShapes</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>destination<sp/>of<sp/>this<sp/>shape,<sp/>(if<sp/>merged),<sp/>taking<sp/>into<sp/>account</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>fact<sp/>that<sp/>the<sp/>destination<sp/>may<sp/>itself<sp/>have<sp/>been<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>non-merged<sp/>shape,<sp/>returns<sp/>the<sp/>input<sp/>shape_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table_1a27ddf900a8b1463aeb5db4e3128e6636" kindref="member">MasterDestinationIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>to<sp/>a<sp/>provided<sp/>unicharset<sp/>used<sp/>only<sp/>by<sp/>the<sp/>Debugstr<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>*<sp/>unicharset_;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Vector<sp/>of<sp/>pointers<sp/>to<sp/>the<sp/>Shapes<sp/>in<sp/>this<sp/>ShapeTable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_pointer_vector" kindref="compound">PointerVector&lt;Shape&gt;</ref><sp/>shape_table_;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_CLASSIFY_SHAPETABLE_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/shapetable.h"/>
  </compounddef>
</doxygen>
