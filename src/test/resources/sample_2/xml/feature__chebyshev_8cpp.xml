<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="feature__chebyshev_8cpp" kind="file">
    <compoundname>feature_chebyshev.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes refid="feature__base_8h" local="yes">feature_base.h</includes>
    <includes refid="feature__chebyshev_8h" local="yes">feature_chebyshev.h</includes>
    <includes refid="cube__utils_8h" local="yes">cube_utils.h</includes>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="char__samp_8h" local="yes">char_samp.h</includes>
    <incdepgraph>
      <node id="30747">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="30735">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="30719">
        <label>stdlib.h</label>
      </node>
      <node id="30739">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="30740" relation="include">
        </childnode>
      </node>
      <node id="30717">
        <label>cube/feature_chebyshev.cpp</label>
        <link refid="feature_chebyshev.cpp"/>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30719" relation="include">
        </childnode>
        <childnode refid="30720" relation="include">
        </childnode>
        <childnode refid="30721" relation="include">
        </childnode>
        <childnode refid="30722" relation="include">
        </childnode>
        <childnode refid="30723" relation="include">
        </childnode>
        <childnode refid="30724" relation="include">
        </childnode>
        <childnode refid="30732" relation="include">
        </childnode>
        <childnode refid="30733" relation="include">
        </childnode>
        <childnode refid="30735" relation="include">
        </childnode>
        <childnode refid="30725" relation="include">
        </childnode>
      </node>
      <node id="30734">
        <label>allheaders.h</label>
      </node>
      <node id="30721">
        <label>string</label>
      </node>
      <node id="30750">
        <label>stddef.h</label>
      </node>
      <node id="30753">
        <label>memory.h</label>
      </node>
      <node id="30731">
        <label>tuning_params.h</label>
        <link refid="tuning__params_8h"/>
        <childnode refid="30721" relation="include">
        </childnode>
      </node>
      <node id="30724">
        <label>feature_base.h</label>
        <link refid="feature__base_8h"/>
        <childnode refid="30725" relation="include">
        </childnode>
        <childnode refid="30731" relation="include">
        </childnode>
      </node>
      <node id="30745">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="30738" relation="include">
        </childnode>
      </node>
      <node id="30740">
        <label>limits.h</label>
      </node>
      <node id="30725">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="30719" relation="include">
        </childnode>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30721" relation="include">
        </childnode>
        <childnode refid="30726" relation="include">
        </childnode>
        <childnode refid="30729" relation="include">
        </childnode>
      </node>
      <node id="30736">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="30730" relation="include">
        </childnode>
        <childnode refid="30721" relation="include">
        </childnode>
        <childnode refid="30723" relation="include">
        </childnode>
        <childnode refid="30729" relation="include">
        </childnode>
        <childnode refid="30737" relation="include">
        </childnode>
        <childnode refid="30751" relation="include">
        </childnode>
        <childnode refid="30755" relation="include">
        </childnode>
      </node>
      <node id="30730">
        <label>string.h</label>
      </node>
      <node id="30754">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="30752" relation="include">
        </childnode>
      </node>
      <node id="30752">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="30753" relation="include">
        </childnode>
        <childnode refid="30730" relation="include">
        </childnode>
      </node>
      <node id="30733">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="30722" relation="include">
        </childnode>
        <childnode refid="30721" relation="include">
        </childnode>
        <childnode refid="30734" relation="include">
        </childnode>
        <childnode refid="30735" relation="include">
        </childnode>
        <childnode refid="30736" relation="include">
        </childnode>
        <childnode refid="30725" relation="include">
        </childnode>
        <childnode refid="30756" relation="include">
        </childnode>
      </node>
      <node id="30732">
        <label>feature_chebyshev.h</label>
        <link refid="feature__chebyshev_8h"/>
        <childnode refid="30725" relation="include">
        </childnode>
        <childnode refid="30724" relation="include">
        </childnode>
      </node>
      <node id="30722">
        <label>vector</label>
      </node>
      <node id="30744">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="30738" relation="include">
        </childnode>
      </node>
      <node id="30720">
        <label>math.h</label>
      </node>
      <node id="30742">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30743" relation="include">
        </childnode>
        <childnode refid="30748" relation="include">
        </childnode>
      </node>
      <node id="30743">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30719" relation="include">
        </childnode>
        <childnode refid="30744" relation="include">
        </childnode>
        <childnode refid="30745" relation="include">
        </childnode>
        <childnode refid="30746" relation="include">
        </childnode>
        <childnode refid="30747" relation="include">
        </childnode>
      </node>
      <node id="30749">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="30750" relation="include">
        </childnode>
        <childnode refid="30738" relation="include">
        </childnode>
      </node>
      <node id="30726">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="30719" relation="include">
        </childnode>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30727" relation="include">
        </childnode>
        <childnode refid="30728" relation="include">
        </childnode>
      </node>
      <node id="30727">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="30751">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="30745" relation="include">
        </childnode>
        <childnode refid="30746" relation="include">
        </childnode>
        <childnode refid="30748" relation="include">
        </childnode>
        <childnode refid="30744" relation="include">
        </childnode>
        <childnode refid="30752" relation="include">
        </childnode>
        <childnode refid="30754" relation="include">
        </childnode>
      </node>
      <node id="30755">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="30756">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="30749" relation="include">
        </childnode>
      </node>
      <node id="30741">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="30742" relation="include">
        </childnode>
      </node>
      <node id="30723">
        <label>algorithm</label>
      </node>
      <node id="30738">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="30739" relation="include">
        </childnode>
      </node>
      <node id="30728">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30721" relation="include">
        </childnode>
      </node>
      <node id="30718">
        <label>stdio.h</label>
      </node>
      <node id="30729">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="30730" relation="include">
        </childnode>
        <childnode refid="30721" relation="include">
        </childnode>
        <childnode refid="30723" relation="include">
        </childnode>
        <childnode refid="30722" relation="include">
        </childnode>
      </node>
      <node id="30737">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30738" relation="include">
        </childnode>
        <childnode refid="30741" relation="include">
        </childnode>
      </node>
      <node id="30748">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30730" relation="include">
        </childnode>
        <childnode refid="30739" relation="include">
        </childnode>
        <childnode refid="30749" relation="include">
        </childnode>
      </node>
      <node id="30746">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="30718" relation="include">
        </childnode>
        <childnode refid="30730" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_chebyshev.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Implementation<sp/>of<sp/>the<sp/>Chebyshev<sp/>coefficients<sp/>Feature<sp/>Class</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2008</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="feature__base_8h" kindref="compound">feature_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="feature__chebyshev_8h" kindref="compound">feature_chebyshev.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__utils_8h" kindref="compound">cube_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__samp_8h" kindref="compound">char_samp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>M_PI</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>M_PI<sp/>3.14159265358979323846</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="classtesseract_1_1_feature_chebyshev_1a8b58e75e816e73814c03f43ed3b3c5a3" kindref="member">FeatureChebyshev::FeatureChebyshev</ref>(TuningParams<sp/>*params)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>FeatureBase(params)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="classtesseract_1_1_feature_chebyshev_1a4e529ae00f59392d9ee8b1a0d164929d" kindref="member">FeatureChebyshev::~FeatureChebyshev</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Render<sp/>a<sp/>visualization<sp/>of<sp/>the<sp/>features<sp/>to<sp/>a<sp/>CharSamp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>mainly<sp/>used<sp/>by<sp/>visual-debuggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">CharSamp<sp/>*<ref refid="classtesseract_1_1_feature_chebyshev_1aa6affc71e334b7f600fa3aa50affaafd" kindref="member">FeatureChebyshev::ComputeFeatureBitmap</ref>(CharSamp<sp/>*char_samp)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_samp;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>Chebyshev<sp/>coefficients<sp/>for<sp/>the<sp/>specified<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_feature_chebyshev_1a3dbb1eba0a1fae9546d0a9199bf84fac" kindref="member">FeatureChebyshev::ChebyshevCoefficients</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;float&gt;<sp/>&amp;input,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coeff_cnt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*coeff)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>re-sample<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input_range<sp/>=<sp/>(input.size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>vector&lt;float&gt;<sp/>resamp(coeff_cnt);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samp_idx<sp/>=<sp/>0;<sp/>samp_idx<sp/>&lt;<sp/>coeff_cnt;<sp/>samp_idx++)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>sampling<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>samp_pos<sp/>=<sp/>input_range<sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>+<sp/>cos(M_PI<sp/>*<sp/>(samp_idx<sp/>+<sp/>0.5)<sp/>/<sp/>coeff_cnt))<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interpolate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samp_start<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(samp_pos);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samp_end<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(samp_pos<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>func_delta<sp/>=<sp/>input[samp_end]<sp/>-<sp/>input[samp_start];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>resamp[samp_idx]<sp/>=<sp/>input[samp_start]<sp/>+</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((samp_pos<sp/>-<sp/>samp_start)<sp/>*<sp/>func_delta);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>coefficients</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>normalizer<sp/>=<sp/>2.0<sp/>/<sp/>coeff_cnt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coeff_idx<sp/>=<sp/>0;<sp/>coeff_idx<sp/>&lt;<sp/>coeff_cnt;<sp/>coeff_idx++,<sp/>coeff++)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samp_idx<sp/>=<sp/>0;<sp/>samp_idx<sp/>&lt;<sp/>coeff_cnt;<sp/>samp_idx++)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>resamp[samp_idx]<sp/>*<sp/>cos(M_PI<sp/>*<sp/>coeff_idx<sp/>*<sp/>(samp_idx<sp/>+<sp/>0.5)<sp/>/</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coeff_cnt);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>(*coeff)<sp/>=<sp/>(normalizer<sp/>*<sp/>sum);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>features<sp/>of<sp/>a<sp/>given<sp/>CharSamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_feature_chebyshev_1a7442728318377a994283c980ae0016c1" kindref="member">FeatureChebyshev::ComputeFeatures</ref>(CharSamp<sp/>*char_samp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*features)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_feature_chebyshev_1a75697da43e347ef72d196a195e14f848" kindref="member">ComputeChebyshevCoefficients</ref>(char_samp,<sp/>features);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>Chebyshev<sp/>coefficients<sp/>of<sp/>a<sp/>given<sp/>CharSamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_feature_chebyshev_1a75697da43e347ef72d196a195e14f848" kindref="member">FeatureChebyshev::ComputeChebyshevCoefficients</ref>(CharSamp<sp/>*char_samp,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*features)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_samp-&gt;NormBottom()<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*raw_data<sp/>=<sp/>char_samp-&gt;RawData();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>=<sp/>char_samp-&gt;Stride();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>height<sp/>of<sp/>the<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_hgt<sp/>=<sp/>(255<sp/>*<sp/>(char_samp-&gt;Top()<sp/>+<sp/>char_samp-&gt;Height())<sp/>/</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_samp-&gt;NormBottom());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>left<sp/>&amp;<sp/>right<sp/>profiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>vector&lt;float&gt;<sp/>left_profile(word_hgt,<sp/>0.0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>vector&lt;float&gt;<sp/>right_profile(word_hgt,<sp/>0.0);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line_data<sp/>=<sp/>raw_data;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>char_samp-&gt;Height();<sp/>y++,<sp/>line_data<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_x<sp/>=<sp/>char_samp-&gt;Width();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_x<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>char_samp-&gt;Width();<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_data[x]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(x,<sp/>&amp;min_x,<sp/>&amp;max_x);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>left_profile[char_samp-&gt;Top()<sp/>+<sp/>y]<sp/>=</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>*<sp/>(min_x<sp/>==<sp/>char_samp-&gt;Width()<sp/>?<sp/>0<sp/>:<sp/>(min_x<sp/>+<sp/>1))<sp/>/</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_samp-&gt;Width();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>right_profile[char_samp-&gt;Top()<sp/>+<sp/>y]<sp/>=</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>*<sp/>(max_x<sp/>==<sp/>-1<sp/>?<sp/>0<sp/>:<sp/>char_samp-&gt;Width()<sp/>-<sp/>max_x)<sp/>/</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_samp-&gt;Width();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>top<sp/>and<sp/>bottom<sp/>profiles</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>vector&lt;float&gt;<sp/>top_profile(char_samp-&gt;Width(),<sp/>0);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>vector&lt;float&gt;<sp/>bottom_profile(char_samp-&gt;Width(),<sp/>0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>char_samp-&gt;Width();<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_y<sp/>=<sp/>word_hgt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_y<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>line_data<sp/>=<sp/>raw_data;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>char_samp-&gt;Height();<sp/>y++,<sp/>line_data<sp/>+=<sp/>stride)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_data[x]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(y<sp/>+<sp/>char_samp-&gt;Top(),<sp/>&amp;min_y,<sp/>&amp;max_y);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>top_profile[x]<sp/>=<sp/>1.0<sp/>*<sp/>(min_y<sp/>==<sp/>word_hgt<sp/>?<sp/>0<sp/>:<sp/>(min_y<sp/>+<sp/>1))<sp/>/<sp/>word_hgt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>bottom_profile[x]<sp/>=<sp/>1.0<sp/>*<sp/>(max_y<sp/>==<sp/>-1<sp/>?<sp/>0<sp/>:<sp/>(word_hgt<sp/>-<sp/>max_y))<sp/>/<sp/>word_hgt;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>chebyshev<sp/>coefficients<sp/>of<sp/>each<sp/>profile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_feature_chebyshev_1a3dbb1eba0a1fae9546d0a9199bf84fac" kindref="member">ChebyshevCoefficients</ref>(left_profile,<sp/><ref refid="classtesseract_1_1_feature_chebyshev_1af68b6651397cb8446b5543d77c729adb" kindref="member">kChebychevCoefficientCnt</ref>,<sp/>features);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_feature_chebyshev_1a3dbb1eba0a1fae9546d0a9199bf84fac" kindref="member">ChebyshevCoefficients</ref>(top_profile,<sp/><ref refid="classtesseract_1_1_feature_chebyshev_1af68b6651397cb8446b5543d77c729adb" kindref="member">kChebychevCoefficientCnt</ref>,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features<sp/>+<sp/><ref refid="classtesseract_1_1_feature_chebyshev_1af68b6651397cb8446b5543d77c729adb" kindref="member">kChebychevCoefficientCnt</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_feature_chebyshev_1a3dbb1eba0a1fae9546d0a9199bf84fac" kindref="member">ChebyshevCoefficients</ref>(right_profile,<sp/><ref refid="classtesseract_1_1_feature_chebyshev_1af68b6651397cb8446b5543d77c729adb" kindref="member">kChebychevCoefficientCnt</ref>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features<sp/>+<sp/>(2<sp/>*<sp/><ref refid="classtesseract_1_1_feature_chebyshev_1af68b6651397cb8446b5543d77c729adb" kindref="member">kChebychevCoefficientCnt</ref>));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_feature_chebyshev_1a3dbb1eba0a1fae9546d0a9199bf84fac" kindref="member">ChebyshevCoefficients</ref>(bottom_profile,<sp/><ref refid="classtesseract_1_1_feature_chebyshev_1af68b6651397cb8446b5543d77c729adb" kindref="member">kChebychevCoefficientCnt</ref>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features<sp/>+<sp/>(3<sp/>*<sp/><ref refid="classtesseract_1_1_feature_chebyshev_1af68b6651397cb8446b5543d77c729adb" kindref="member">kChebychevCoefficientCnt</ref>));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/feature_chebyshev.cpp"/>
  </compounddef>
</doxygen>
