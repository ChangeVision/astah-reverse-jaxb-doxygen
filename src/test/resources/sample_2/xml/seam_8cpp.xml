<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="seam_8cpp" kind="file">
    <compoundname>seam.cpp</compoundname>
    <includes refid="seam_8h" local="yes">seam.h</includes>
    <includes refid="blobs_8h" local="yes">blobs.h</includes>
    <includes refid="callcpp_8h" local="yes">callcpp.h</includes>
    <includes refid="structures_8h" local="yes">structures.h</includes>
    <incdepgraph>
      <node id="12020">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="12021" relation="include">
        </childnode>
        <childnode refid="12030" relation="include">
        </childnode>
        <childnode refid="12015" relation="include">
        </childnode>
      </node>
      <node id="12033">
        <label>assert.h</label>
      </node>
      <node id="12034">
        <label>structures.h</label>
        <link refid="structures_8h"/>
        <childnode refid="12018" relation="include">
        </childnode>
        <childnode refid="12035" relation="include">
        </childnode>
        <childnode refid="12036" relation="include">
        </childnode>
      </node>
      <node id="12008">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="12030">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="11996">
        <label>stdlib.h</label>
      </node>
      <node id="11993">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="11994" relation="include">
        </childnode>
      </node>
      <node id="12021">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="12022" relation="include">
        </childnode>
        <childnode refid="12000" relation="include">
        </childnode>
        <childnode refid="12015" relation="include">
        </childnode>
        <childnode refid="12027" relation="include">
        </childnode>
        <childnode refid="12011" relation="include">
        </childnode>
        <childnode refid="12025" relation="include">
        </childnode>
        <childnode refid="12028" relation="include">
        </childnode>
        <childnode refid="12029" relation="include">
        </childnode>
      </node>
      <node id="12009">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
      </node>
      <node id="11995">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="11996" relation="include">
        </childnode>
        <childnode refid="11997" relation="include">
        </childnode>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="11998" relation="include">
        </childnode>
        <childnode refid="12000" relation="include">
        </childnode>
        <childnode refid="12001" relation="include">
        </childnode>
      </node>
      <node id="12031">
        <label>tessarray.h</label>
        <link refid="tessarray_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
      </node>
      <node id="11990">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="11992" relation="include">
        </childnode>
        <childnode refid="11995" relation="include">
        </childnode>
        <childnode refid="12002" relation="include">
        </childnode>
      </node>
      <node id="11999">
        <label>stddef.h</label>
      </node>
      <node id="12024">
        <label>memory.h</label>
      </node>
      <node id="12032">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="12033" relation="include">
        </childnode>
        <childnode refid="11992" relation="include">
        </childnode>
        <childnode refid="12011" relation="include">
        </childnode>
        <childnode refid="12023" relation="include">
        </childnode>
      </node>
      <node id="12000">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="11992" relation="include">
        </childnode>
      </node>
      <node id="11994">
        <label>limits.h</label>
      </node>
      <node id="12007">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="12004" relation="include">
        </childnode>
      </node>
      <node id="12028">
        <label>pthread.h</label>
      </node>
      <node id="11997">
        <label>string.h</label>
      </node>
      <node id="12026">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="12023" relation="include">
        </childnode>
      </node>
      <node id="12023">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="12024" relation="include">
        </childnode>
        <childnode refid="11997" relation="include">
        </childnode>
      </node>
      <node id="12019">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="11997" relation="include">
        </childnode>
        <childnode refid="11996" relation="include">
        </childnode>
        <childnode refid="11992" relation="include">
        </childnode>
        <childnode refid="12010" relation="include">
        </childnode>
        <childnode refid="12020" relation="include">
        </childnode>
      </node>
      <node id="12003">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="12004" relation="include">
        </childnode>
        <childnode refid="12005" relation="include">
        </childnode>
        <childnode refid="12008" relation="include">
        </childnode>
        <childnode refid="12009" relation="include">
        </childnode>
        <childnode refid="12010" relation="include">
        </childnode>
      </node>
      <node id="12013">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="11992" relation="include">
        </childnode>
      </node>
      <node id="12029">
        <label>semaphore.h</label>
      </node>
      <node id="12036">
        <label>danerror.h</label>
        <link refid="danerror_8h"/>
      </node>
      <node id="12001">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="12000" relation="include">
        </childnode>
      </node>
      <node id="12022">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="12006" relation="include">
        </childnode>
        <childnode refid="12010" relation="include">
        </childnode>
        <childnode refid="12023" relation="include">
        </childnode>
        <childnode refid="12025" relation="include">
        </childnode>
        <childnode refid="12012" relation="include">
        </childnode>
      </node>
      <node id="12004">
        <label>math.h</label>
      </node>
      <node id="12017">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="11989" relation="include">
        </childnode>
        <childnode refid="12018" relation="include">
        </childnode>
      </node>
      <node id="12002">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="12000" relation="include">
        </childnode>
      </node>
      <node id="12016">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="12004" relation="include">
        </childnode>
        <childnode refid="11989" relation="include">
        </childnode>
      </node>
      <node id="12018">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="12019" relation="include">
        </childnode>
        <childnode refid="12013" relation="include">
        </childnode>
      </node>
      <node id="12011">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="12012" relation="include">
        </childnode>
        <childnode refid="12015" relation="include">
        </childnode>
      </node>
      <node id="12012">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="11996" relation="include">
        </childnode>
        <childnode refid="12013" relation="include">
        </childnode>
        <childnode refid="12000" relation="include">
        </childnode>
        <childnode refid="12014" relation="include">
        </childnode>
        <childnode refid="12008" relation="include">
        </childnode>
      </node>
      <node id="11998">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="11999" relation="include">
        </childnode>
        <childnode refid="11992" relation="include">
        </childnode>
      </node>
      <node id="12035">
        <label>freelist.h</label>
        <link refid="freelist_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
      </node>
      <node id="12006">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="11992" relation="include">
        </childnode>
        <childnode refid="11995" relation="include">
        </childnode>
        <childnode refid="12002" relation="include">
        </childnode>
      </node>
      <node id="12025">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="12000" relation="include">
        </childnode>
        <childnode refid="12014" relation="include">
        </childnode>
        <childnode refid="12015" relation="include">
        </childnode>
        <childnode refid="12013" relation="include">
        </childnode>
        <childnode refid="12023" relation="include">
        </childnode>
        <childnode refid="12026" relation="include">
        </childnode>
      </node>
      <node id="11988">
        <label>seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="11989" relation="include">
        </childnode>
        <childnode refid="12017" relation="include">
        </childnode>
        <childnode refid="12031" relation="include">
        </childnode>
      </node>
      <node id="11987">
        <label>ccstruct/seam.cpp</label>
        <link refid="seam.cpp"/>
        <childnode refid="11988" relation="include">
        </childnode>
        <childnode refid="11989" relation="include">
        </childnode>
        <childnode refid="12032" relation="include">
        </childnode>
        <childnode refid="12034" relation="include">
        </childnode>
      </node>
      <node id="12005">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="12004" relation="include">
        </childnode>
        <childnode refid="12006" relation="include">
        </childnode>
        <childnode refid="12007" relation="include">
        </childnode>
      </node>
      <node id="12010">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="12011" relation="include">
        </childnode>
      </node>
      <node id="11992">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="11993" relation="include">
        </childnode>
      </node>
      <node id="11991">
        <label>stdio.h</label>
      </node>
      <node id="12027">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="11992" relation="include">
        </childnode>
        <childnode refid="12010" relation="include">
        </childnode>
      </node>
      <node id="12015">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="11997" relation="include">
        </childnode>
        <childnode refid="11993" relation="include">
        </childnode>
        <childnode refid="11998" relation="include">
        </childnode>
      </node>
      <node id="11989">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="11990" relation="include">
        </childnode>
        <childnode refid="12003" relation="include">
        </childnode>
        <childnode refid="12016" relation="include">
        </childnode>
      </node>
      <node id="12014">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="11991" relation="include">
        </childnode>
        <childnode refid="11997" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>point_in_split</header>
      <description><para>Check to see if either of these points are present in the current split. <simplesect kind="return"><para>TRUE if one of them is split. </para></simplesect>
</para></description>
      <memberdef kind="function" id="seam_8cpp_1aa99fcacebf577884a20fa20e38bc9ce6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool point_in_split</definition>
        <argsstring>(SPLIT *split, EDGEPT *point1, EDGEPT *point2)</argsstring>
        <name>point_in_split</name>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="53" bodyend="59"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>point_in_seam</header>
      <description><para>Check to see if either of these points are present in the current seam. <simplesect kind="return"><para>TRUE if one of them is. </para></simplesect>
</para></description>
      <memberdef kind="function" id="seam_8cpp_1a4f81c70096397ac934c970ef0578dbf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool point_in_seam</definition>
        <argsstring>(SEAM *seam, SPLIT *split)</argsstring>
        <name>point_in_seam</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="69" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="69" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>point_used_by_split</header>
      <description><para>Return whether this particular <ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> * is used in a given split. <simplesect kind="return"><para>TRUE if the edgept is used by the split. </para></simplesect>
</para></description>
      <memberdef kind="function" id="seam_8cpp_1a3208e522fd8ab9f6193e8f896128acc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool point_used_by_split</definition>
        <argsstring>(SPLIT *split, EDGEPT *point)</argsstring>
        <name>point_used_by_split</name>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="81" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>point_used_by_seam</header>
      <description><para>Return whether this particular <ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> * is used in a given seam. <simplesect kind="return"><para>TRUE if the edgept is used by the seam. </para></simplesect>
</para></description>
      <memberdef kind="function" id="seam_8cpp_1aa90d43705c8b8286bf9751240ea6ffe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool point_used_by_seam</definition>
        <argsstring>(SEAM *seam, EDGEPT *point)</argsstring>
        <name>point_used_by_seam</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="92" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>add_seam</header>
      <description><para>Add another seam to a collection of seams. </para></description>
      <memberdef kind="function" id="seam_8cpp_1a386b602215ed348b1996b7558c0e3af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
        <definition>SEAMS add_seam</definition>
        <argsstring>(SEAMS seam_list, SEAM *seam)</argsstring>
        <name>add_seam</name>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seam_list</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="104" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="104" bodyend="106"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>combine_seam</header>
      <description><para>Combine two seam records into a single seam. Move the split references from the second seam to the first one. The argument convention is patterned after strcpy. </para></description>
      <memberdef kind="function" id="seam_8cpp_1a40334b288fc229372aa2fc7ae6116bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void combine_seams</definition>
        <argsstring>(SEAM *dest_seam, SEAM *source_seam)</argsstring>
        <name>combine_seams</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>dest_seam</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>source_seam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="116" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="116" bodyend="146"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>delete_seam</header>
      <description><para>Free this seam record and the splits that are attached to it. </para></description>
      <memberdef kind="function" id="seam_8cpp_1abe1c472bf676a613f555cee9d29f7c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delete_seam</definition>
        <argsstring>(void *arg)</argsstring>
        <name>delete_seam</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="154" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="154" bodyend="166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>start_seam_list</header>
      <description><para>Initialize a list of seams that match the original number of blobs present in the starting segmentation. Each of the seams created by this routine have location information only. </para></description>
      <memberdef kind="function" id="seam_8cpp_1a748ec120eaad6a5a10d05dd684d90bd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
        <definition>SEAMS start_seam_list</definition>
        <argsstring>(TBLOB *blobs)</argsstring>
        <name>start_seam_list</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="175" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="175" bodyend="192"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>free_seam_list</header>
      <description><para>Free all the seams that have been allocated in this list. Reclaim the memory for each of the splits as well. </para></description>
      <memberdef kind="function" id="seam_8cpp_1af3ccc9cfabc13e163f5cd7cee5994e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_seam_list</definition>
        <argsstring>(SEAMS seam_list)</argsstring>
        <name>free_seam_list</name>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seam_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="200" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="200" bodyend="205"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>test_insert_seam</header>
      <description><para><simplesect kind="return"><para>true if insert_seam will succeed. </para></simplesect>
</para></description>
      <memberdef kind="function" id="seam_8cpp_1ad5c40a87abe7dd3af10a13614f321be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool test_insert_seam</definition>
        <argsstring>(SEAMS seam_list, int index, TBLOB *left_blob, TBLOB *first_blob)</argsstring>
        <name>test_insert_seam</name>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seam_list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>left_blob</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>first_blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="213" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="213" bodyend="242"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>insert_seam</header>
      <description><para>Add another seam to a collection of seams at a particular location in the seam array. </para></description>
      <memberdef kind="function" id="seam_8cpp_1abb7a3f834120eb2357b71b09405a2ec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
        <definition>SEAMS insert_seam</definition>
        <argsstring>(SEAMS seam_list, int index, SEAM *seam, TBLOB *left_blob, TBLOB *first_blob)</argsstring>
        <name>insert_seam</name>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seam_list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>left_blob</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>first_blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="250" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="250" bodyend="292"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>account_splits_right</header>
      <description><para>Account for all the splits by looking to the right. in the blob list. </para></description>
      <memberdef kind="function" id="seam_8cpp_1a565f5b6019c0a1e5766b9e38f042b47e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int account_splits_right</definition>
        <argsstring>(SEAM *seam, TBLOB *blob)</argsstring>
        <name>account_splits_right</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="301" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="301" bodyend="325"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>account_splits_left</header>
      <description><para>Account for all the splits by looking to the left. in the blob list. </para></description>
      <memberdef kind="function" id="seam_8cpp_1aedde185b891fd20bee84cf2b387a90dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int account_splits_left</definition>
        <argsstring>(SEAM *seam, TBLOB *blob, TBLOB *end_blob)</argsstring>
        <name>account_splits_left</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>end_blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="334" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="334" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="seam_8cpp_1ae70f3c8de4c4aaba0428117d1e89f671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void account_splits_left_helper</definition>
        <argsstring>(SEAM *seam, TBLOB *blob, TBLOB *end_blob, inT32 *depth, inT8 *width, inT8 *found_em)</argsstring>
        <name>account_splits_left_helper</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>end_blob</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref> *</type>
          <declname>depth</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref> *</type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref> *</type>
          <declname>found_em</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="342" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="342" bodyend="367"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>find_split_in_blob</header>
      <description><para><simplesect kind="return"><para>TRUE if the split is somewhere in this blob. </para></simplesect>
</para></description>
      <memberdef kind="function" id="seam_8cpp_1afa474844118165a14a30aaf2c9a1986b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool find_split_in_blob</definition>
        <argsstring>(SPLIT *split, TBLOB *blob)</argsstring>
        <name>find_split_in_blob</name>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="375" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="375" bodyend="387"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>join_two_seams</header>
      <description><para>Merge these two seams into a new seam. Duplicate the split records in both of the input seams. Return the resultant seam. </para></description>
      <memberdef kind="function" id="seam_8cpp_1ab0747cde950e63b99888b8dcbc654177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
        <definition>SEAM* join_two_seams</definition>
        <argsstring>(SEAM *seam1, SEAM *seam2)</argsstring>
        <name>join_two_seams</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam1</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="396" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="396" bodyend="411"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>new_seam</header>
      <description><para>Create a structure for a &quot;seam&quot; between two blobs. This data structure may actually hold up to three different splits. Initailization of this record is done by this routine. </para></description>
      <memberdef kind="function" id="seam_8cpp_1ad7bc7a3af5617ff4762369a6aa879ed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
        <definition>SEAM* new_seam</definition>
        <argsstring>(PRIORITY priority, const TPOINT &amp;location, SPLIT *split1, SPLIT *split2, SPLIT *split3)</argsstring>
        <name>new_seam</name>
        <param>
          <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
          <declname>priority</declname>
        </param>
        <param>
          <type>const <ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split1</declname>
        </param>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split2</declname>
        </param>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="421" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="421" bodyend="439"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>new_seam_list</header>
      <description><para>Create a collection of seam records in an array. </para></description>
      <memberdef kind="function" id="seam_8cpp_1a61322eb2fa2f38f1324d584b17d8e80e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
        <definition>SEAMS new_seam_list</definition>
        <argsstring>()</argsstring>
        <name>new_seam_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="447" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="447" bodyend="449"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>print_seam</header>
      <description><para>Print a list of splits. Show the coordinates of both points in each split. </para></description>
      <memberdef kind="function" id="seam_8cpp_1a2168b2b29d8981405d068256c2b61e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_seam</definition>
        <argsstring>(const char *label, SEAM *seam)</argsstring>
        <name>print_seam</name>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="458" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="458" bodyend="476"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>print_seams</header>
      <description><para>Print a list of splits. Show the coordinates of both points in each split. </para></description>
      <memberdef kind="function" id="seam_8cpp_1abb1ad769b4318ae71f1a36294d29f5af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_seams</definition>
        <argsstring>(const char *label, SEAMS seams)</argsstring>
        <name>print_seams</name>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="485" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="485" bodyend="497"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>shared_split_points</header>
      <description><para>Check these two seams to make sure that neither of them have two points in common. Return TRUE if any of the same points are present in any of the splits of both seams. </para></description>
      <memberdef kind="function" id="seam_8cpp_1a1fcf833e097b1c5963a9374433f56497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int shared_split_points</definition>
        <argsstring>(SEAM *seam1, SEAM *seam2)</argsstring>
        <name>shared_split_points</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam1</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="507" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="507" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="seam_8cpp_1ac76b2d230d4c44cb0346f516b8a7134a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void break_pieces</definition>
        <argsstring>(TBLOB *blobs, SEAMS seams, inT16 start, inT16 end)</argsstring>
        <name>break_pieces</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blobs</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seams</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="535" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="535" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="seam_8cpp_1a919dc51833c934e6738e5e18d2dd43f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void join_pieces</definition>
        <argsstring>(TBLOB *piece_blobs, SEAMS seams, inT16 start, inT16 end)</argsstring>
        <name>join_pieces</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>piece_blobs</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seams</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="564" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="564" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="seam_8cpp_1aac5ee8dc7ef201bea7b12b38ac10b7a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hide_seam</definition>
        <argsstring>(SEAM *seam)</argsstring>
        <name>hide_seam</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="598" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="598" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="seam_8cpp_1a34e8666460ef157385e2964b71345713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hide_edge_pair</definition>
        <argsstring>(EDGEPT *pt1, EDGEPT *pt2)</argsstring>
        <name>hide_edge_pair</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>pt1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>pt2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="619" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="619" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="seam_8cpp_1a2b25c514788f76369faf8d727034896d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reveal_seam</definition>
        <argsstring>(SEAM *seam)</argsstring>
        <name>reveal_seam</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="651" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="651" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="seam_8cpp_1af3e347318ff5e7e1c31604b008235d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reveal_edge_pair</definition>
        <argsstring>(EDGEPT *pt1, EDGEPT *pt2)</argsstring>
        <name>reveal_edge_pair</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>pt1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>pt2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="672" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="672" bodyend="695"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="seam_8cpp_1a35c7297f662954f7833db70b211a4586" prot="public" static="no">
        <name>NUM_STARTING_SEAMS</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="40" column="9" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="seam_8cpp_1a98676f617f1712d1ac37d59a97dcfaf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>makestructure</definition>
        <argsstring>(newseam, free_seam, SEAM)</argsstring>
        <name>makestructure</name>
        <param>
          <type><ref refid="seam_8h_1a282fca5b8b4f9f178ed07d95b82454cd" kindref="member">newseam</ref></type>
        </param>
        <param>
          <type>free_seam</type>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp" line="41" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-C-*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seam.c<sp/><sp/>(Formerly<sp/>seam.c)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Description:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mark<sp/>Seaman,<sp/>OCR<sp/>Technology</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/>Fri<sp/>Oct<sp/>16<sp/>14:37:00<sp/>1987</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Modified:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>May<sp/>17<sp/>16:30:13<sp/>1991<sp/>(Mark<sp/>Seaman)<sp/>marks@hpgrlt</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Language:<sp/><sp/><sp/><sp/><sp/>C</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Package:<sp/><sp/><sp/><sp/><sp/><sp/>N/A</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Status:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reusable<sp/>Software<sp/>Component</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Copyright<sp/>1987,<sp/>Hewlett-Packard<sp/>Company.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>n<sp/>c<sp/>l<sp/>u<sp/>d<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="27"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="seam_8h" kindref="compound">seam.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobs_8h" kindref="compound">blobs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callcpp_8h" kindref="compound">callcpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="structures_8h" kindref="compound">structures.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__UNIX__</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>a<sp/>r<sp/>i<sp/>a<sp/>b<sp/>l<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="39"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_STARTING_SEAMS<sp/><sp/>20</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="structures_8h_1a0fd8109d8986f1193f87ec26e0729d11" kindref="member">makestructure</ref>(<ref refid="seam_8h_1a282fca5b8b4f9f178ed07d95b82454cd" kindref="member">newseam</ref>,<sp/>free_seam,<sp/><ref refid="structseam__record" kindref="compound">SEAM</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Function<sp/>Code</highlight></codeline>
<codeline lineno="45"><highlight class="comment">----------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="53"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1aa99fcacebf577884a20fa20e38bc9ce6" kindref="member">point_in_split</ref>(<ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*split,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*point1,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*point2)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((split)<sp/>?<sp/>((<ref refid="seam_8h_1afb94c26f2bc904be74bda6e72575e95b" kindref="member">exact_point</ref><sp/>(split-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>point1)<sp/>||</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8h_1afb94c26f2bc904be74bda6e72575e95b" kindref="member">exact_point</ref><sp/>(split-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>point2)<sp/>||</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8h_1afb94c26f2bc904be74bda6e72575e95b" kindref="member">exact_point</ref><sp/>(split-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>,<sp/>point1)<sp/>||</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8h_1afb94c26f2bc904be74bda6e72575e95b" kindref="member">exact_point</ref><sp/>(split-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>,<sp/>point2))<sp/>?<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>:<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>FALSE);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a4f81c70096397ac934c970ef0578dbf6" kindref="member">point_in_seam</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam,<sp/><ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*split)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="seam_8cpp_1aa99fcacebf577884a20fa20e38bc9ce6" kindref="member">point_in_split</ref>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>,<sp/>split-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>split-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>)<sp/>||</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1aa99fcacebf577884a20fa20e38bc9ce6" kindref="member">point_in_split</ref>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>,<sp/>split-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>split-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>)<sp/>||</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1aa99fcacebf577884a20fa20e38bc9ce6" kindref="member">point_in_split</ref>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>,<sp/>split-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>split-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>));</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a3208e522fd8ab9f6193e8f896128acc3" kindref="member">point_used_by_split</ref>(<ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*split,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*point)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>point<sp/>==<sp/>split-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref><sp/>||<sp/>point<sp/>==<sp/>split-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1aa90d43705c8b8286bf9751240ea6ffe0" kindref="member">point_used_by_seam</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*point)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a3208e522fd8ab9f6193e8f896128acc3" kindref="member">point_used_by_split</ref>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>,<sp/>point)<sp/>||</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a3208e522fd8ab9f6193e8f896128acc3" kindref="member">point_used_by_split</ref>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>,<sp/>point)<sp/>||</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a3208e522fd8ab9f6193e8f896128acc3" kindref="member">point_used_by_split</ref>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>,<sp/>point);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/><ref refid="seam_8cpp_1a386b602215ed348b1996b7558c0e3af1" kindref="member">add_seam</ref>(<ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/>seam_list,<sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="tessarray_8cpp_1ab13e09dec91158c58e0f2427f1d18e07" kindref="member">array_push</ref><sp/>(seam_list,<sp/>seam));</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a40334b288fc229372aa2fc7ae6116bf2" kindref="member">combine_seams</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*dest_seam,<sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*source_seam)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>dest_seam-&gt;<ref refid="structseam__record_1a73a33b08d22988d595cd18da31235dc4" kindref="member">priority</ref><sp/>+=<sp/>source_seam-&gt;<ref refid="structseam__record_1a73a33b08d22988d595cd18da31235dc4" kindref="member">priority</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>dest_seam-&gt;<ref refid="structseam__record_1a62ddded2ea46187c395f40823d036ed3" kindref="member">location</ref><sp/>+=<sp/>source_seam-&gt;<ref refid="structseam__record_1a62ddded2ea46187c395f40823d036ed3" kindref="member">location</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>dest_seam-&gt;<ref refid="structseam__record_1a62ddded2ea46187c395f40823d036ed3" kindref="member">location</ref><sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source_seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest_seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest_seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>=<sp/>source_seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest_seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest_seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>=<sp/>source_seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest_seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest_seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>=<sp/>source_seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;combine_seam:<sp/>Seam<sp/>is<sp/>too<sp/>crowded,<sp/>can&apos;t<sp/>be<sp/>combined<sp/>!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source_seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest_seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest_seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>=<sp/>source_seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest_seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest_seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>=<sp/>source_seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;combine_seam:<sp/>Seam<sp/>is<sp/>too<sp/>crowded,<sp/>can&apos;t<sp/>be<sp/>combined<sp/>!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source_seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dest_seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest_seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>=<sp/>source_seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;combine_seam:<sp/>Seam<sp/>is<sp/>too<sp/>crowded,<sp/>can&apos;t<sp/>be<sp/>combined<sp/>!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>free_seam(source_seam);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1abe1c472bf676a613f555cee9d29f7c3d" kindref="member">delete_seam</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)<sp/>{<sp/><sp/></highlight><highlight class="comment">//SEAM<sp/><sp/>*seam)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam<sp/>=<sp/>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*)<sp/>arg;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="split_8cpp_1a6462aa6ed767d7f46c4a72506cceaeeb" kindref="member">delete_split</ref>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="split_8cpp_1a6462aa6ed767d7f46c4a72506cceaeeb" kindref="member">delete_split</ref>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="split_8cpp_1a6462aa6ed767d7f46c4a72506cceaeeb" kindref="member">delete_split</ref>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>free_seam(seam);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/><ref refid="seam_8cpp_1a748ec120eaad6a5a10d05dd684d90bd5" kindref="member">start_seam_list</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blobs)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/>seam_list;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>location;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Seam<sp/>slot<sp/>per<sp/>char<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>seam_list<sp/>=<sp/><ref refid="seam_8cpp_1a61322eb2fa2f38f1324d584b17d8e80e" kindref="member">new_seam_list</ref><sp/>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob<sp/>=<sp/>blobs;<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>bbox<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>nbox<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>location.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>(bbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>+<sp/>nbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>location.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>(bbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>bbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>nbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>nbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>seam_list<sp/>=<sp/><ref refid="seam_8cpp_1a386b602215ed348b1996b7558c0e3af1" kindref="member">add_seam</ref>(seam_list,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1ad7bc7a3af5617ff4762369a6aa879ed3" kindref="member">new_seam</ref>(0.0,<sp/>location,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seam_list;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1af3ccc9cfabc13e163f5cd7cee5994e49" kindref="member">free_seam_list</ref>(<ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/>seam_list)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="tessarray_8h_1a6cb2253ca40c87d6ee706418575fb3e5" kindref="member">array_loop</ref>(seam_list,<sp/>x)<sp/><ref refid="seam_8cpp_1abe1c472bf676a613f555cee9d29f7c3d" kindref="member">delete_seam</ref>(<ref refid="tessarray_8h_1a290cd2ea119e279ad48b57fbe5ca1aad" kindref="member">array_value</ref><sp/>(seam_list,<sp/>x));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="tessarray_8h_1aa10b4761a8b4ccd6d4a6c7e792671f78" kindref="member">array_free</ref>(seam_list);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1ad5c40a87abe7dd3af10a13614f321be4" kindref="member">test_insert_seam</ref>(<ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/>seam_list,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*left_blob,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*first_blob)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*test_seam;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_index;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>list_length;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>list_length<sp/>=<sp/><ref refid="tessarray_8h_1a89ee8010120771c8612dc7058b327f84" kindref="member">array_count</ref><sp/>(seam_list);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(test_index=0,<sp/>blob=first_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_index<sp/>&lt;<sp/>index;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_index++,<sp/>blob=blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>test_seam<sp/>=<sp/>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*)<sp/><ref refid="tessarray_8h_1a290cd2ea119e279ad48b57fbe5ca1aad" kindref="member">array_value</ref>(seam_list,<sp/>test_index);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_index<sp/>+<sp/>test_seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref><sp/>&lt;<sp/>index<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref><sp/>+<sp/>test_index<sp/>==<sp/>index<sp/>-<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a565f5b6019c0a1e5766b9e38f042b47e" kindref="member">account_splits_right</ref>(test_seam,<sp/>blob)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(test_index=index,<sp/>blob=left_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_index<sp/>&lt;<sp/>list_length;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_index++,<sp/>blob=blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>test_seam<sp/>=<sp/>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*)<sp/><ref refid="tessarray_8h_1a290cd2ea119e279ad48b57fbe5ca1aad" kindref="member">array_value</ref>(seam_list,<sp/>test_index);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_index<sp/>-<sp/>test_seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref><sp/>&gt;=<sp/>index<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_index<sp/>-<sp/>test_seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref><sp/>==<sp/>index<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1aedde185b891fd20bee84cf2b387a90dc" kindref="member">account_splits_left</ref>(test_seam,<sp/>first_blob,<sp/>blob)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/><ref refid="seam_8cpp_1abb7a3f834120eb2357b71b09405a2ec6" kindref="member">insert_seam</ref>(<ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/>seam_list,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*left_blob,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*first_blob)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*test_seam;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_index;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>list_length;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>list_length<sp/>=<sp/><ref refid="tessarray_8h_1a89ee8010120771c8612dc7058b327f84" kindref="member">array_count</ref>(seam_list);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(test_index=0,<sp/>blob=first_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_index<sp/>&lt;<sp/>index;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_index++,<sp/>blob=blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>test_seam<sp/>=<sp/>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*)<sp/><ref refid="tessarray_8h_1a290cd2ea119e279ad48b57fbe5ca1aad" kindref="member">array_value</ref>(seam_list,<sp/>test_index);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_index<sp/>+<sp/>test_seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref><sp/>&gt;=<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref>++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*got<sp/>in<sp/>the<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref><sp/>+<sp/>test_index<sp/>==<sp/>index<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref><sp/>=<sp/><ref refid="seam_8cpp_1a565f5b6019c0a1e5766b9e38f042b47e" kindref="member">account_splits_right</ref>(test_seam,<sp/>blob);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>any<sp/>right<sp/>blob<sp/>for<sp/>a<sp/>split!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a2168b2b29d8981405d068256c2b61e3b" kindref="member">print_seam</ref>(</highlight><highlight class="stringliteral">&quot;New<sp/>dud<sp/>seam&quot;</highlight><highlight class="normal">,<sp/>seam);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a2168b2b29d8981405d068256c2b61e3b" kindref="member">print_seam</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>seam&quot;</highlight><highlight class="normal">,<sp/>test_seam);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(test_index=index,<sp/>blob=left_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_index<sp/>&lt;<sp/>list_length;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_index++,<sp/>blob=blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>test_seam<sp/>=<sp/>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*)<sp/><ref refid="tessarray_8h_1a290cd2ea119e279ad48b57fbe5ca1aad" kindref="member">array_value</ref>(seam_list,<sp/>test_index);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_index<sp/>-<sp/>test_seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref><sp/>&lt;<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref>++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*got<sp/>in<sp/>the<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_index<sp/>-<sp/>test_seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref><sp/>==<sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>test_seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref><sp/>=<sp/><ref refid="seam_8cpp_1aedde185b891fd20bee84cf2b387a90dc" kindref="member">account_splits_left</ref>(test_seam,<sp/>first_blob,<sp/>blob);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>find<sp/>any<sp/>left<sp/>blob<sp/>for<sp/>a<sp/>split!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a2168b2b29d8981405d068256c2b61e3b" kindref="member">print_seam</ref>(</highlight><highlight class="stringliteral">&quot;New<sp/>dud<sp/>seam&quot;</highlight><highlight class="normal">,<sp/>seam);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a2168b2b29d8981405d068256c2b61e3b" kindref="member">print_seam</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>seam&quot;</highlight><highlight class="normal">,<sp/>test_seam);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="tessarray_8cpp_1a3dfb24ce59e6a92c41385fe0aa7dd47d" kindref="member">array_insert</ref><sp/>(seam_list,<sp/>index,<sp/>seam));</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a565f5b6019c0a1e5766b9e38f042b47e" kindref="member">account_splits_right</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam,<sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>found_em[3];</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>width;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>found_em[0]<sp/>=<sp/>seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>found_em[1]<sp/>=<sp/>seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>found_em[2]<sp/>=<sp/>seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found_em[0]<sp/>&amp;&amp;<sp/>found_em[1]<sp/>&amp;&amp;<sp/>found_em[2])</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found_em[0])</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>found_em[0]<sp/>=<sp/><ref refid="seam_8cpp_1afa474844118165a14a30aaf2c9a1986b" kindref="member">find_split_in_blob</ref>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>,<sp/>blob);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found_em[1])</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>found_em[1]<sp/>=<sp/><ref refid="seam_8cpp_1afa474844118165a14a30aaf2c9a1986b" kindref="member">find_split_in_blob</ref>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>,<sp/>blob);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found_em[2])</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>found_em[2]<sp/>=<sp/><ref refid="seam_8cpp_1afa474844118165a14a30aaf2c9a1986b" kindref="member">find_split_in_blob</ref>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>,<sp/>blob);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found_em[0]<sp/>&amp;&amp;<sp/>found_em[1]<sp/>&amp;&amp;<sp/>found_em[2])<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>width++;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1aedde185b891fd20bee84cf2b387a90dc" kindref="member">account_splits_left</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam,<sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob,<sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*end_blob)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>found_em[3];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="seam_8cpp_1ae70f3c8de4c4aaba0428117d1e89f671" kindref="member">account_splits_left_helper</ref>(seam,<sp/>blob,<sp/>end_blob,<sp/>&amp;depth,<sp/>&amp;width,<sp/>found_em);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1ae70f3c8de4c4aaba0428117d1e89f671" kindref="member">account_splits_left_helper</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam,<sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob,<sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*end_blob,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>*depth,<sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>*width,<sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref>*<sp/>found_em)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob<sp/>!=<sp/>end_blob)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>(*depth)++;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1ae70f3c8de4c4aaba0428117d1e89f671" kindref="member">account_splits_left_helper</ref>(seam,<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>,<sp/>end_blob,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth,<sp/>width,<sp/>found_em);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>(*depth)--;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>found_em[0]<sp/>=<sp/>seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>found_em[1]<sp/>=<sp/>seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>found_em[2]<sp/>=<sp/>seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>*width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found_em[0])</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>found_em[0]<sp/>=<sp/><ref refid="seam_8cpp_1afa474844118165a14a30aaf2c9a1986b" kindref="member">find_split_in_blob</ref>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>,<sp/>blob);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found_em[1])</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>found_em[1]<sp/>=<sp/><ref refid="seam_8cpp_1afa474844118165a14a30aaf2c9a1986b" kindref="member">find_split_in_blob</ref>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>,<sp/>blob);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found_em[2])</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>found_em[2]<sp/>=<sp/><ref refid="seam_8cpp_1afa474844118165a14a30aaf2c9a1986b" kindref="member">find_split_in_blob</ref>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>,<sp/>blob);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found_em[0]<sp/>||<sp/>!found_em[1]<sp/>||<sp/>!found_em[2])<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>(*width)++;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*depth<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*width<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1afa474844118165a14a30aaf2c9a1986b" kindref="member">find_split_in_blob</ref>(<ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*split,<sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref><sp/>*outline;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outline<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a773cb9dc285571e38369773f7b6196e0" kindref="member">Contains</ref>(split-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>))</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outline<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a773cb9dc285571e38369773f7b6196e0" kindref="member">Contains</ref>(split-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>))</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*<ref refid="seam_8cpp_1ab0747cde950e63b99888b8dcbc654177" kindref="member">join_two_seams</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam1,<sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam2)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*result<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*temp;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>assert(seam1<sp/>&amp;&amp;seam2);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((seam1-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>seam2-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(seam1-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>seam2-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seam1-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>seam2-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(!<ref refid="seam_8cpp_1a1fcf833e097b1c5963a9374433f56497" kindref="member">shared_split_points</ref>(seam1,<sp/>seam2)))<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="seam_8h_1a8c9377a3d389d1f95639e33ef74ff0f2" kindref="member">clone_seam</ref>(result,<sp/>seam1);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="seam_8h_1a8c9377a3d389d1f95639e33ef74ff0f2" kindref="member">clone_seam</ref>(temp,<sp/>seam2);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a40334b288fc229372aa2fc7ae6116bf2" kindref="member">combine_seams</ref>(result,<sp/>temp);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(result);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*<ref refid="seam_8cpp_1ad7bc7a3af5617ff4762369a6aa879ed3" kindref="member">new_seam</ref>(<ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref><sp/>priority,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>&amp;<sp/>location,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*split1,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*split2,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*split3)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>seam<sp/>=<sp/><ref refid="seam_8h_1a282fca5b8b4f9f178ed07d95b82454cd" kindref="member">newseam</ref><sp/>();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>seam-&gt;<ref refid="structseam__record_1a73a33b08d22988d595cd18da31235dc4" kindref="member">priority</ref><sp/>=<sp/>priority;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>seam-&gt;<ref refid="structseam__record_1a62ddded2ea46187c395f40823d036ed3" kindref="member">location</ref><sp/>=<sp/>location;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>=<sp/>split1;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>=<sp/>split2;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>=<sp/>split3;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(seam);</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/><ref refid="seam_8cpp_1a61322eb2fa2f38f1324d584b17d8e80e" kindref="member">new_seam_list</ref>()<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="tessarray_8cpp_1a1d08b311b6dfa0573eeeed0038df93aa" kindref="member">array_new</ref><sp/>(<ref refid="seam_8cpp_1a35c7297f662954f7833db70b211a4586" kindref="member">NUM_STARTING_SEAMS</ref>));</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a2168b2b29d8981405d068256c2b61e3b" kindref="member">print_seam</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label,<sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(label);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%6.2f<sp/>@<sp/>(%d,%d),<sp/>p=%d,<sp/>n=%d<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seam-&gt;<ref refid="structseam__record_1a73a33b08d22988d595cd18da31235dc4" kindref="member">priority</ref>,<sp/>seam-&gt;<ref refid="structseam__record_1a62ddded2ea46187c395f40823d036ed3" kindref="member">location</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>seam-&gt;<ref refid="structseam__record_1a62ddded2ea46187c395f40823d036ed3" kindref="member">location</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref>,<sp/>seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="split_8cpp_1a24210aac50f8b01c1c50b94262865269" kindref="member">print_split</ref>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="split_8cpp_1a24210aac50f8b01c1c50b94262865269" kindref="member">print_split</ref><sp/>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;,<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="split_8cpp_1a24210aac50f8b01c1c50b94262865269" kindref="member">print_split</ref><sp/>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1abb1ad769b4318ae71f1a36294d29f5af" kindref="member">print_seams</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label,<sp/><ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/>seams)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>number[<ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>];</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seams)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>label);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tessarray_8h_1a6cb2253ca40c87d6ee706418575fb3e5" kindref="member">array_loop</ref>(seams,<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(number,<sp/></highlight><highlight class="stringliteral">&quot;%2d:<sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a2168b2b29d8981405d068256c2b61e3b" kindref="member">print_seam</ref>(number,<sp/>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*)<sp/><ref refid="tessarray_8h_1a290cd2ea119e279ad48b57fbe5ca1aad" kindref="member">array_value</ref>(seams,<sp/>x));</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a1fcf833e097b1c5963a9374433f56497" kindref="member">shared_split_points</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam1,<sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam2)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam1<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>seam2<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam2-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="seam_8cpp_1a4f81c70096397ac934c970ef0578dbf6" kindref="member">point_in_seam</ref>(seam1,<sp/>seam2-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>))</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam2-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="seam_8cpp_1a4f81c70096397ac934c970ef0578dbf6" kindref="member">point_in_seam</ref>(seam1,<sp/>seam2-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>))</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam2-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="seam_8cpp_1a4f81c70096397ac934c970ef0578dbf6" kindref="member">point_in_seam</ref>(seam1,<sp/>seam2-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>))</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*<sp/>break_pieces</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*<sp/>Break<sp/>up<sp/>the<sp/>blobs<sp/>in<sp/>this<sp/>chain<sp/>so<sp/>that<sp/>they<sp/>are<sp/>all<sp/>independent.</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*<sp/>This<sp/>operation<sp/>should<sp/>undo<sp/>the<sp/>affect<sp/>of<sp/>join_pieces.</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1ac76b2d230d4c44cb0346f516b8a7134a" kindref="member">break_pieces</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blobs,<sp/><ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/>seams,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>start,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref><sp/>*outline<sp/>=<sp/>blobs-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*next_blob;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>x;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>start;<sp/>x<sp/>&lt;<sp/>end;<sp/>x++)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1a2b25c514788f76369faf8d727034896d" kindref="member">reveal_seam</ref><sp/>((<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*)<sp/><ref refid="tessarray_8h_1a290cd2ea119e279ad48b57fbe5ca1aad" kindref="member">array_value</ref><sp/>(seams,<sp/>x));</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>next_blob<sp/>=<sp/>blobs-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outline<sp/>&amp;&amp;<sp/>next_blob)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>==<sp/>next_blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>next_blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_blob<sp/>=<sp/>next_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*<sp/>join_pieces</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*<sp/>Join<sp/>a<sp/>group<sp/>of<sp/>base<sp/>level<sp/>pieces<sp/>into<sp/>a<sp/>single<sp/>blob<sp/>that<sp/>can<sp/>then</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*<sp/>be<sp/>classified.</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a919dc51833c934e6738e5e18d2dd43f6" kindref="member">join_pieces</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*piece_blobs,<sp/><ref refid="structarray__record" kindref="compound">SEAMS</ref><sp/>seams,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>start,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*next_blob;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>x;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref><sp/>*outline;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0,<sp/>blob<sp/>=<sp/>piece_blobs;<sp/>x<sp/>&lt;<sp/>start;<sp/>x++)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>next_blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>outline<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>if<sp/>(!outline)</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>seam<sp/>=<sp/>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*)<sp/><ref refid="tessarray_8h_1a290cd2ea119e279ad48b57fbe5ca1aad" kindref="member">array_value</ref><sp/>(seams,<sp/>x);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>-<sp/>seam-&gt;<ref refid="structseam__record_1ab1f7d314db1200aacb26ccaf0c5dd39f" kindref="member">widthn</ref><sp/>&gt;=<sp/>start<sp/>&amp;&amp;<sp/>x<sp/>+<sp/>seam-&gt;<ref refid="structseam__record_1a1d750c3c54edcad7dcb33c7b0ce79c15" kindref="member">widthp</ref><sp/>&lt;<sp/>end)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seam_8cpp_1aac5ee8dc7ef201bea7b12b38ac10b7a8" kindref="member">hide_seam</ref>(seam);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>=<sp/>next_blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>next_blob<sp/>=<sp/>next_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*<sp/>hide_seam</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*<sp/>Change<sp/>the<sp/>edge<sp/>points<sp/>that<sp/>are<sp/>referenced<sp/>by<sp/>this<sp/>seam<sp/>to<sp/>make</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/>them<sp/>hidden<sp/>edges.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1aac5ee8dc7ef201bea7b12b38ac10b7a8" kindref="member">hide_seam</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="seam_8cpp_1a34e8666460ef157385e2964b71345713" kindref="member">hide_edge_pair</ref><sp/>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><ref refid="seam_8cpp_1a34e8666460ef157385e2964b71345713" kindref="member">hide_edge_pair</ref><sp/>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><ref refid="seam_8cpp_1a34e8666460ef157385e2964b71345713" kindref="member">hide_edge_pair</ref><sp/>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>hide_edge_pair</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*<sp/>Change<sp/>the<sp/>edge<sp/>points<sp/>that<sp/>are<sp/>referenced<sp/>by<sp/>this<sp/>seam<sp/>to<sp/>make</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*<sp/>them<sp/>hidden<sp/>edges.</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a34e8666460ef157385e2964b71345713" kindref="member">hide_edge_pair</ref>(<ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*pt1,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*pt2)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*edgept;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>edgept<sp/>=<sp/>pt1;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a0f054c7f746f3249bf0c6fdd84de2dac" kindref="member">Hide</ref>();</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>edgept<sp/>=<sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="seam_8h_1afb94c26f2bc904be74bda6e72575e95b" kindref="member">exact_point</ref><sp/>(edgept,<sp/>pt2)<sp/>&amp;&amp;<sp/>edgept<sp/>!=<sp/>pt1);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgept<sp/>==<sp/>pt1)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cprintf(&quot;Hid<sp/>entire<sp/>outline<sp/>at<sp/>(%d,%d)!!\n&quot;,</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgept-&gt;pos.x,edgept-&gt;pos.y);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>edgept<sp/>=<sp/>pt2;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a0f054c7f746f3249bf0c6fdd84de2dac" kindref="member">Hide</ref>();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>edgept<sp/>=<sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="seam_8h_1afb94c26f2bc904be74bda6e72575e95b" kindref="member">exact_point</ref><sp/>(edgept,<sp/>pt1)<sp/>&amp;&amp;<sp/>edgept<sp/>!=<sp/>pt2);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgept<sp/>==<sp/>pt2)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cprintf(&quot;Hid<sp/>entire<sp/>outline<sp/>at<sp/>(%d,%d)!!\n&quot;,</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgept-&gt;pos.x,edgept-&gt;pos.y);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>*<sp/>reveal_seam</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>*<sp/>Change<sp/>the<sp/>edge<sp/>points<sp/>that<sp/>are<sp/>referenced<sp/>by<sp/>this<sp/>seam<sp/>to<sp/>make</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>*<sp/>them<sp/>hidden<sp/>edges.</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1a2b25c514788f76369faf8d727034896d" kindref="member">reveal_seam</ref>(<ref refid="structseam__record" kindref="compound">SEAM</ref><sp/>*seam)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><ref refid="seam_8cpp_1af3e347318ff5e7e1c31604b008235d60" kindref="member">reveal_edge_pair</ref><sp/>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref>-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><ref refid="seam_8cpp_1af3e347318ff5e7e1c31604b008235d60" kindref="member">reveal_edge_pair</ref><sp/>(seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>seam-&gt;<ref refid="structseam__record_1a75d831b3365583331780636979fbb321" kindref="member">split2</ref>-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><ref refid="seam_8cpp_1af3e347318ff5e7e1c31604b008235d60" kindref="member">reveal_edge_pair</ref><sp/>(seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>,<sp/>seam-&gt;<ref refid="structseam__record_1ad3878ea3c362e24fcdd063ed81f9ac5a" kindref="member">split3</ref>-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/>*<sp/>reveal_edge_pair</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>*<sp/>Change<sp/>the<sp/>edge<sp/>points<sp/>that<sp/>are<sp/>referenced<sp/>by<sp/>this<sp/>seam<sp/>to<sp/>make</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>*<sp/>them<sp/>hidden<sp/>edges.</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="seam_8cpp_1af3e347318ff5e7e1c31604b008235d60" kindref="member">reveal_edge_pair</ref>(<ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*pt1,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*pt2)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*edgept;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>edgept<sp/>=<sp/>pt1;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a668c2e2a44f809802b6c72cfdef485d5" kindref="member">Reveal</ref>();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>edgept<sp/>=<sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="seam_8h_1afb94c26f2bc904be74bda6e72575e95b" kindref="member">exact_point</ref><sp/>(edgept,<sp/>pt2)<sp/>&amp;&amp;<sp/>edgept<sp/>!=<sp/>pt1);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgept<sp/>==<sp/>pt1)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cprintf(&quot;Hid<sp/>entire<sp/>outline<sp/>at<sp/>(%d,%d)!!\n&quot;,</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgept-&gt;pos.x,edgept-&gt;pos.y);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>edgept<sp/>=<sp/>pt2;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a668c2e2a44f809802b6c72cfdef485d5" kindref="member">Reveal</ref>();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>edgept<sp/>=<sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="seam_8h_1afb94c26f2bc904be74bda6e72575e95b" kindref="member">exact_point</ref><sp/>(edgept,<sp/>pt1)<sp/>&amp;&amp;<sp/>edgept<sp/>!=<sp/>pt2);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edgept<sp/>==<sp/>pt2)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cprintf(&quot;Hid<sp/>entire<sp/>outline<sp/>at<sp/>(%d,%d)!!\n&quot;,</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgept-&gt;pos.x,edgept-&gt;pos.y);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/seam.cpp"/>
  </compounddef>
</doxygen>
