<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="trie_8h" kind="file">
    <compoundname>trie.h</compoundname>
    <includes refid="dawg_8h" local="yes">dawg.h</includes>
    <includes refid="cutil_8h" local="yes">cutil.h</includes>
    <includes refid="genericvector_8h" local="yes">genericvector.h</includes>
    <includedby refid="word__list__lang__model_8cpp" local="yes">cube/word_list_lang_model.cpp</includedby>
    <includedby refid="dict_8h" local="yes">dict/dict.h</includedby>
    <includedby refid="permute_8cpp" local="yes">dict/permute.cpp</includedby>
    <includedby refid="trie_8cpp" local="yes">dict/trie.cpp</includedby>
    <includedby refid="dawg2wordlist_8cpp" local="yes">training/dawg2wordlist.cpp</includedby>
    <includedby refid="wordlist2dawg_8cpp" local="yes">training/wordlist2dawg.cpp</includedby>
    <incdepgraph>
      <node id="35709">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="35710" relation="include">
        </childnode>
        <childnode refid="35715" relation="include">
        </childnode>
        <childnode refid="35688" relation="include">
        </childnode>
      </node>
      <node id="35678">
        <label>assert.h</label>
      </node>
      <node id="35683">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="35715">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="35670">
        <label>stdlib.h</label>
      </node>
      <node id="35667">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="35668" relation="include">
        </childnode>
      </node>
      <node id="35694">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="35674" relation="include">
        </childnode>
      </node>
      <node id="35710">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="35711" relation="include">
        </childnode>
        <childnode refid="35674" relation="include">
        </childnode>
        <childnode refid="35688" relation="include">
        </childnode>
        <childnode refid="35712" relation="include">
        </childnode>
        <childnode refid="35691" relation="include">
        </childnode>
        <childnode refid="35687" relation="include">
        </childnode>
        <childnode refid="35713" relation="include">
        </childnode>
        <childnode refid="35714" relation="include">
        </childnode>
      </node>
      <node id="35703">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
      </node>
      <node id="35669">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="35670" relation="include">
        </childnode>
        <childnode refid="35671" relation="include">
        </childnode>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35672" relation="include">
        </childnode>
        <childnode refid="35674" relation="include">
        </childnode>
        <childnode refid="35675" relation="include">
        </childnode>
      </node>
      <node id="35679">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35666" relation="include">
        </childnode>
        <childnode refid="35669" relation="include">
        </childnode>
        <childnode refid="35676" relation="include">
        </childnode>
      </node>
      <node id="35695">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="35696" relation="include">
        </childnode>
        <childnode refid="35702" relation="include">
        </childnode>
      </node>
      <node id="35662">
        <label>dict/trie.h</label>
        <link refid="trie.h"/>
        <childnode refid="35663" relation="include">
        </childnode>
        <childnode refid="35708" relation="include">
        </childnode>
        <childnode refid="35680" relation="include">
        </childnode>
      </node>
      <node id="35677">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="35678" relation="include">
        </childnode>
        <childnode refid="35679" relation="include">
        </childnode>
        <childnode refid="35680" relation="include">
        </childnode>
        <childnode refid="35684" relation="include">
        </childnode>
        <childnode refid="35685" relation="include">
        </childnode>
        <childnode refid="35687" relation="include">
        </childnode>
        <childnode refid="35690" relation="include">
        </childnode>
      </node>
      <node id="35673">
        <label>stddef.h</label>
      </node>
      <node id="35686">
        <label>memory.h</label>
      </node>
      <node id="35674">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="35666" relation="include">
        </childnode>
      </node>
      <node id="35668">
        <label>limits.h</label>
      </node>
      <node id="35700">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="35699" relation="include">
        </childnode>
      </node>
      <node id="35701">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="35698" relation="include">
        </childnode>
      </node>
      <node id="35693">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35666" relation="include">
        </childnode>
        <childnode refid="35669" relation="include">
        </childnode>
        <childnode refid="35676" relation="include">
        </childnode>
      </node>
      <node id="35713">
        <label>pthread.h</label>
      </node>
      <node id="35671">
        <label>string.h</label>
      </node>
      <node id="35689">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="35685" relation="include">
        </childnode>
      </node>
      <node id="35685">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="35686" relation="include">
        </childnode>
        <childnode refid="35671" relation="include">
        </childnode>
      </node>
      <node id="35708">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35671" relation="include">
        </childnode>
        <childnode refid="35670" relation="include">
        </childnode>
        <childnode refid="35666" relation="include">
        </childnode>
        <childnode refid="35704" relation="include">
        </childnode>
        <childnode refid="35709" relation="include">
        </childnode>
      </node>
      <node id="35702">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="35699" relation="include">
        </childnode>
        <childnode refid="35698" relation="include">
        </childnode>
        <childnode refid="35683" relation="include">
        </childnode>
        <childnode refid="35703" relation="include">
        </childnode>
        <childnode refid="35704" relation="include">
        </childnode>
      </node>
      <node id="35692">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="35666" relation="include">
        </childnode>
      </node>
      <node id="35681">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="35666" relation="include">
        </childnode>
      </node>
      <node id="35714">
        <label>semaphore.h</label>
      </node>
      <node id="35696">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="35697" relation="include">
        </childnode>
        <childnode refid="35701" relation="include">
        </childnode>
        <childnode refid="35692" relation="include">
        </childnode>
        <childnode refid="35702" relation="include">
        </childnode>
        <childnode refid="35694" relation="include">
        </childnode>
        <childnode refid="35703" relation="include">
        </childnode>
      </node>
      <node id="35690">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="35691" relation="include">
        </childnode>
        <childnode refid="35692" relation="include">
        </childnode>
        <childnode refid="35693" relation="include">
        </childnode>
        <childnode refid="35688" relation="include">
        </childnode>
        <childnode refid="35694" relation="include">
        </childnode>
        <childnode refid="35695" relation="include">
        </childnode>
        <childnode refid="35705" relation="include">
        </childnode>
      </node>
      <node id="35705">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35706" relation="include">
        </childnode>
        <childnode refid="35690" relation="include">
        </childnode>
      </node>
      <node id="35675">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="35674" relation="include">
        </childnode>
      </node>
      <node id="35711">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="35664" relation="include">
        </childnode>
        <childnode refid="35704" relation="include">
        </childnode>
        <childnode refid="35685" relation="include">
        </childnode>
        <childnode refid="35687" relation="include">
        </childnode>
        <childnode refid="35680" relation="include">
        </childnode>
      </node>
      <node id="35699">
        <label>math.h</label>
      </node>
      <node id="35697">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="35698" relation="include">
        </childnode>
        <childnode refid="35701" relation="include">
        </childnode>
      </node>
      <node id="35676">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="35674" relation="include">
        </childnode>
      </node>
      <node id="35707">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="35698" relation="include">
        </childnode>
      </node>
      <node id="35691">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35680" relation="include">
        </childnode>
        <childnode refid="35688" relation="include">
        </childnode>
      </node>
      <node id="35680">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35670" relation="include">
        </childnode>
        <childnode refid="35681" relation="include">
        </childnode>
        <childnode refid="35674" relation="include">
        </childnode>
        <childnode refid="35682" relation="include">
        </childnode>
        <childnode refid="35683" relation="include">
        </childnode>
      </node>
      <node id="35672">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="35673" relation="include">
        </childnode>
        <childnode refid="35666" relation="include">
        </childnode>
      </node>
      <node id="35664">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35666" relation="include">
        </childnode>
        <childnode refid="35669" relation="include">
        </childnode>
        <childnode refid="35676" relation="include">
        </childnode>
      </node>
      <node id="35687">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="35674" relation="include">
        </childnode>
        <childnode refid="35682" relation="include">
        </childnode>
        <childnode refid="35688" relation="include">
        </childnode>
        <childnode refid="35681" relation="include">
        </childnode>
        <childnode refid="35685" relation="include">
        </childnode>
        <childnode refid="35689" relation="include">
        </childnode>
      </node>
      <node id="35663">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="35664" relation="include">
        </childnode>
        <childnode refid="35677" relation="include">
        </childnode>
        <childnode refid="35691" relation="include">
        </childnode>
        <childnode refid="35681" relation="include">
        </childnode>
      </node>
      <node id="35698">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35699" relation="include">
        </childnode>
        <childnode refid="35664" relation="include">
        </childnode>
        <childnode refid="35700" relation="include">
        </childnode>
      </node>
      <node id="35684">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="35704">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="35691" relation="include">
        </childnode>
      </node>
      <node id="35666">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="35667" relation="include">
        </childnode>
      </node>
      <node id="35665">
        <label>stdio.h</label>
      </node>
      <node id="35712">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35666" relation="include">
        </childnode>
        <childnode refid="35704" relation="include">
        </childnode>
      </node>
      <node id="35688">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35671" relation="include">
        </childnode>
        <childnode refid="35667" relation="include">
        </childnode>
        <childnode refid="35672" relation="include">
        </childnode>
      </node>
      <node id="35682">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="35665" relation="include">
        </childnode>
        <childnode refid="35671" relation="include">
        </childnode>
      </node>
      <node id="35706">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="35707" relation="include">
        </childnode>
        <childnode refid="35669" relation="include">
        </childnode>
        <childnode refid="35672" relation="include">
        </childnode>
        <childnode refid="35702" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="35755">
        <label>ccmain/cube_control.cpp</label>
        <link refid="cube__control_8cpp"/>
      </node>
      <node id="35739">
        <label>classify/protos.cpp</label>
        <link refid="protos_8cpp"/>
      </node>
      <node id="35748">
        <label>ccmain/fixspace.cpp</label>
        <link refid="fixspace_8cpp"/>
      </node>
      <node id="35796">
        <label>dict/context.cpp</label>
        <link refid="context_8cpp"/>
      </node>
      <node id="35754">
        <label>ccmain/tessedit.h</label>
        <link refid="tessedit_8h"/>
        <childnode refid="35753" relation="include">
        </childnode>
      </node>
      <node id="35742">
        <label>wordrec/wordrec.h</label>
        <link refid="wordrec_8h"/>
        <childnode refid="35743" relation="include">
        </childnode>
        <childnode refid="35777" relation="include">
        </childnode>
        <childnode refid="35778" relation="include">
        </childnode>
        <childnode refid="35779" relation="include">
        </childnode>
        <childnode refid="35780" relation="include">
        </childnode>
        <childnode refid="35781" relation="include">
        </childnode>
        <childnode refid="35782" relation="include">
        </childnode>
        <childnode refid="35783" relation="include">
        </childnode>
        <childnode refid="35784" relation="include">
        </childnode>
        <childnode refid="35785" relation="include">
        </childnode>
        <childnode refid="35786" relation="include">
        </childnode>
        <childnode refid="35787" relation="include">
        </childnode>
        <childnode refid="35788" relation="include">
        </childnode>
      </node>
      <node id="35761">
        <label>ccmain/output.cpp</label>
        <link refid="output_8cpp"/>
      </node>
      <node id="35782">
        <label>wordrec/heuristic.cpp</label>
        <link refid="heuristic_8cpp"/>
      </node>
      <node id="35743">
        <label>ccmain/tesseractclass.h</label>
        <link refid="tesseractclass_8h"/>
        <childnode refid="35744" relation="include">
        </childnode>
        <childnode refid="35745" relation="include">
        </childnode>
        <childnode refid="35746" relation="include">
        </childnode>
        <childnode refid="35750" relation="include">
        </childnode>
        <childnode refid="35751" relation="include">
        </childnode>
        <childnode refid="35747" relation="include">
        </childnode>
        <childnode refid="35755" relation="include">
        </childnode>
        <childnode refid="35719" relation="include">
        </childnode>
        <childnode refid="35756" relation="include">
        </childnode>
        <childnode refid="35757" relation="include">
        </childnode>
        <childnode refid="35721" relation="include">
        </childnode>
        <childnode refid="35748" relation="include">
        </childnode>
        <childnode refid="35758" relation="include">
        </childnode>
        <childnode refid="35759" relation="include">
        </childnode>
        <childnode refid="35760" relation="include">
        </childnode>
        <childnode refid="35761" relation="include">
        </childnode>
        <childnode refid="35762" relation="include">
        </childnode>
        <childnode refid="35763" relation="include">
        </childnode>
        <childnode refid="35764" relation="include">
        </childnode>
        <childnode refid="35765" relation="include">
        </childnode>
        <childnode refid="35752" relation="include">
        </childnode>
        <childnode refid="35767" relation="include">
        </childnode>
        <childnode refid="35768" relation="include">
        </childnode>
        <childnode refid="35769" relation="include">
        </childnode>
        <childnode refid="35770" relation="include">
        </childnode>
        <childnode refid="35749" relation="include">
        </childnode>
        <childnode refid="35753" relation="include">
        </childnode>
        <childnode refid="35772" relation="include">
        </childnode>
        <childnode refid="35773" relation="include">
        </childnode>
        <childnode refid="35771" relation="include">
        </childnode>
        <childnode refid="35774" relation="include">
        </childnode>
        <childnode refid="35775" relation="include">
        </childnode>
        <childnode refid="35776" relation="include">
        </childnode>
      </node>
      <node id="35757">
        <label>ccmain/docqual.cpp</label>
        <link refid="docqual_8cpp"/>
      </node>
      <node id="35720">
        <label>classify/classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="35721" relation="include">
        </childnode>
        <childnode refid="35722" relation="include">
        </childnode>
        <childnode refid="35720" relation="include">
        </childnode>
        <childnode refid="35723" relation="include">
        </childnode>
        <childnode refid="35724" relation="include">
        </childnode>
        <childnode refid="35725" relation="include">
        </childnode>
        <childnode refid="35726" relation="include">
        </childnode>
        <childnode refid="35727" relation="include">
        </childnode>
        <childnode refid="35728" relation="include">
        </childnode>
        <childnode refid="35729" relation="include">
        </childnode>
        <childnode refid="35730" relation="include">
        </childnode>
        <childnode refid="35735" relation="include">
        </childnode>
        <childnode refid="35736" relation="include">
        </childnode>
        <childnode refid="35737" relation="include">
        </childnode>
        <childnode refid="35738" relation="include">
        </childnode>
        <childnode refid="35739" relation="include">
        </childnode>
        <childnode refid="35740" relation="include">
        </childnode>
        <childnode refid="35732" relation="include">
        </childnode>
        <childnode refid="35733" relation="include">
        </childnode>
        <childnode refid="35741" relation="include">
        </childnode>
        <childnode refid="35742" relation="include">
        </childnode>
      </node>
      <node id="35760">
        <label>ccmain/osdetect.cpp</label>
        <link refid="osdetect_8cpp"/>
      </node>
      <node id="35806">
        <label>training/dawg2wordlist.cpp</label>
        <link refid="dawg2wordlist_8cpp"/>
      </node>
      <node id="35741">
        <label>training/wordlist2dawg.cpp</label>
        <link refid="wordlist2dawg_8cpp"/>
      </node>
      <node id="35730">
        <label>classify/mastertrainer.cpp</label>
        <link refid="mastertrainer_8cpp"/>
      </node>
      <node id="35803">
        <label>dict/trie.cpp</label>
        <link refid="trie_8cpp"/>
      </node>
      <node id="35746">
        <label>ccmain/adaptions.cpp</label>
        <link refid="adaptions_8cpp"/>
      </node>
      <node id="35719">
        <label>ccmain/cube_reco_context.cpp</label>
        <link refid="cube__reco__context_8cpp"/>
      </node>
      <node id="35792">
        <label>cube/cube_line_object.h</label>
        <link refid="cube__line__object_8h"/>
        <childnode refid="35793" relation="include">
        </childnode>
      </node>
      <node id="35783">
        <label>wordrec/outlines.cpp</label>
        <link refid="outlines_8cpp"/>
      </node>
      <node id="35759">
        <label>ccmain/ltrresultiterator.cpp</label>
        <link refid="ltrresultiterator_8cpp"/>
      </node>
      <node id="35793">
        <label>cube/cube_line_object.cpp</label>
        <link refid="cube__line__object_8cpp"/>
      </node>
      <node id="35732">
        <label>training/commontraining.cpp</label>
        <link refid="commontraining_8cpp"/>
      </node>
      <node id="35735">
        <label>classify/mfoutline.cpp</label>
        <link refid="mfoutline_8cpp"/>
      </node>
      <node id="35758">
        <label>ccmain/fixxht.cpp</label>
        <link refid="fixxht_8cpp"/>
      </node>
      <node id="35717">
        <label>cube/word_list_lang_model.cpp</label>
        <link refid="word__list__lang__model_8cpp"/>
      </node>
      <node id="35779">
        <label>wordrec/chopper.cpp</label>
        <link refid="chopper_8cpp"/>
      </node>
      <node id="35724">
        <label>classify/classify.cpp</label>
        <link refid="classify_8cpp"/>
      </node>
      <node id="35774">
        <label>cube/beam_search.cpp</label>
        <link refid="beam__search_8cpp"/>
      </node>
      <node id="35726">
        <label>classify/float2int.cpp</label>
        <link refid="float2int_8cpp"/>
      </node>
      <node id="35801">
        <label>dict/permute.cpp</label>
        <link refid="permute_8cpp"/>
      </node>
      <node id="35716">
        <label>dict/trie.h</label>
        <link refid="trie.h"/>
        <childnode refid="35717" relation="include">
        </childnode>
        <childnode refid="35718" relation="include">
        </childnode>
        <childnode refid="35801" relation="include">
        </childnode>
        <childnode refid="35803" relation="include">
        </childnode>
        <childnode refid="35806" relation="include">
        </childnode>
        <childnode refid="35741" relation="include">
        </childnode>
      </node>
      <node id="35737">
        <label>classify/outfeat.cpp</label>
        <link refid="outfeat_8cpp"/>
      </node>
      <node id="35768">
        <label>ccmain/reject.cpp</label>
        <link refid="reject_8cpp"/>
      </node>
      <node id="35787">
        <label>wordrec/wordclass.cpp</label>
        <link refid="wordclass_8cpp"/>
      </node>
      <node id="35744">
        <label>api/baseapi.cpp</label>
        <link refid="baseapi_8cpp"/>
      </node>
      <node id="35764">
        <label>ccmain/pagewalk.cpp</label>
        <link refid="pagewalk_8cpp"/>
      </node>
      <node id="35747">
        <label>ccmain/control.cpp</label>
        <link refid="control_8cpp"/>
      </node>
      <node id="35797">
        <label>dict/dawg.cpp</label>
        <link refid="dawg_8cpp"/>
      </node>
      <node id="35788">
        <label>wordrec/wordrec.cpp</label>
        <link refid="wordrec_8cpp"/>
      </node>
      <node id="35780">
        <label>wordrec/findseam.cpp</label>
        <link refid="findseam_8cpp"/>
      </node>
      <node id="35762">
        <label>ccmain/pageiterator.cpp</label>
        <link refid="pageiterator_8cpp"/>
      </node>
      <node id="35763">
        <label>ccmain/pagesegmain.cpp</label>
        <link refid="pagesegmain_8cpp"/>
      </node>
      <node id="35736">
        <label>classify/normmatch.cpp</label>
        <link refid="normmatch_8cpp"/>
      </node>
      <node id="35805">
        <label>wordrec/language_model.cpp</label>
        <link refid="language__model_8cpp"/>
      </node>
      <node id="35771">
        <label>ccmain/tfacepp.cpp</label>
        <link refid="tfacepp_8cpp"/>
      </node>
      <node id="35725">
        <label>classify/cutoffs.cpp</label>
        <link refid="cutoffs_8cpp"/>
      </node>
      <node id="35718">
        <label>dict/dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="35719" relation="include">
        </childnode>
        <childnode refid="35720" relation="include">
        </childnode>
        <childnode refid="35723" relation="include">
        </childnode>
        <childnode refid="35789" relation="include">
        </childnode>
        <childnode refid="35775" relation="include">
        </childnode>
        <childnode refid="35796" relation="include">
        </childnode>
        <childnode refid="35797" relation="include">
        </childnode>
        <childnode refid="35798" relation="include">
        </childnode>
        <childnode refid="35799" relation="include">
        </childnode>
        <childnode refid="35800" relation="include">
        </childnode>
        <childnode refid="35801" relation="include">
        </childnode>
        <childnode refid="35802" relation="include">
        </childnode>
        <childnode refid="35803" relation="include">
        </childnode>
        <childnode refid="35776" relation="include">
        </childnode>
        <childnode refid="35741" relation="include">
        </childnode>
        <childnode refid="35777" relation="include">
        </childnode>
        <childnode refid="35742" relation="include">
        </childnode>
        <childnode refid="35804" relation="include">
        </childnode>
      </node>
      <node id="35766">
        <label>ccmain/paramsd.cpp</label>
        <link refid="paramsd_8cpp"/>
      </node>
      <node id="35740">
        <label>classify/tessclassifier.cpp</label>
        <link refid="tessclassifier_8cpp"/>
      </node>
      <node id="35750">
        <label>ccmain/applybox.cpp</label>
        <link refid="applybox_8cpp"/>
      </node>
      <node id="35785">
        <label>wordrec/segsearch.cpp</label>
        <link refid="segsearch_8cpp"/>
      </node>
      <node id="35728">
        <label>classify/intproto.cpp</label>
        <link refid="intproto_8cpp"/>
      </node>
      <node id="35753">
        <label>ccmain/tessedit.cpp</label>
        <link refid="tessedit_8cpp"/>
      </node>
      <node id="35751">
        <label>ccmain/pgedit.h</label>
        <link refid="pgedit_8h"/>
        <childnode refid="35744" relation="include">
        </childnode>
        <childnode refid="35747" relation="include">
        </childnode>
        <childnode refid="35752" relation="include">
        </childnode>
        <childnode refid="35753" relation="include">
        </childnode>
        <childnode refid="35754" relation="include">
        </childnode>
      </node>
      <node id="35791">
        <label>cube/cube_object.h</label>
        <link refid="cube__object_8h"/>
        <childnode refid="35755" relation="include">
        </childnode>
        <childnode refid="35756" relation="include">
        </childnode>
        <childnode refid="35772" relation="include">
        </childnode>
        <childnode refid="35792" relation="include">
        </childnode>
        <childnode refid="35794" relation="include">
        </childnode>
      </node>
      <node id="35794">
        <label>cube/cube_object.cpp</label>
        <link refid="cube__object_8cpp"/>
      </node>
      <node id="35733">
        <label>training/mftraining.cpp</label>
        <link refid="mftraining_8cpp"/>
      </node>
      <node id="35772">
        <label>ccmain/tesseract_cube_combiner.cpp</label>
        <link refid="tesseract__cube__combiner_8cpp"/>
      </node>
      <node id="35777">
        <label>wordrec/bestfirst.cpp</label>
        <link refid="bestfirst_8cpp"/>
      </node>
      <node id="35800">
        <label>dict/permdawg.cpp</label>
        <link refid="permdawg_8cpp"/>
      </node>
      <node id="35790">
        <label>cube/conv_net_classifier.cpp</label>
        <link refid="conv__net__classifier_8cpp"/>
      </node>
      <node id="35722">
        <label>classify/adaptive.cpp</label>
        <link refid="adaptive_8cpp"/>
      </node>
      <node id="35781">
        <label>wordrec/gradechop.cpp</label>
        <link refid="gradechop_8cpp"/>
      </node>
      <node id="35776">
        <label>training/ambiguous_words.cpp</label>
        <link refid="ambiguous__words_8cpp"/>
      </node>
      <node id="35775">
        <label>cube/tess_lang_model.cpp</label>
        <link refid="tess__lang__model_8cpp"/>
      </node>
      <node id="35723">
        <label>classify/adaptmatch.cpp</label>
        <link refid="adaptmatch_8cpp"/>
      </node>
      <node id="35756">
        <label>ccmain/cubeclassifier.cpp</label>
        <link refid="cubeclassifier_8cpp"/>
      </node>
      <node id="35765">
        <label>ccmain/paramsd.h</label>
        <link refid="paramsd_8h"/>
        <childnode refid="35744" relation="include">
        </childnode>
        <childnode refid="35766" relation="include">
        </childnode>
        <childnode refid="35752" relation="include">
        </childnode>
      </node>
      <node id="35802">
        <label>dict/stopper.cpp</label>
        <link refid="stopper_8cpp"/>
      </node>
      <node id="35738">
        <label>classify/picofeat.cpp</label>
        <link refid="picofeat_8cpp"/>
      </node>
      <node id="35721">
        <label>ccmain/equationdetect.cpp</label>
        <link refid="equationdetect_8cpp"/>
      </node>
      <node id="35784">
        <label>wordrec/pieces.cpp</label>
        <link refid="pieces_8cpp"/>
      </node>
      <node id="35727">
        <label>classify/intmatcher.cpp</label>
        <link refid="intmatcher_8cpp"/>
      </node>
      <node id="35804">
        <label>wordrec/language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="35742" relation="include">
        </childnode>
        <childnode refid="35805" relation="include">
        </childnode>
        <childnode refid="35785" relation="include">
        </childnode>
        <childnode refid="35788" relation="include">
        </childnode>
      </node>
      <node id="35778">
        <label>wordrec/chop.cpp</label>
        <link refid="chop_8cpp"/>
      </node>
      <node id="35773">
        <label>ccmain/tesseractclass.cpp</label>
        <link refid="tesseractclass_8cpp"/>
      </node>
      <node id="35734">
        <label>training/shapeclustering.cpp</label>
        <link refid="shapeclustering_8cpp"/>
      </node>
      <node id="35731">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="35749">
        <label>ccmain/tessbox.cpp</label>
        <link refid="tessbox_8cpp"/>
      </node>
      <node id="35769">
        <label>ccmain/resultiterator.cpp</label>
        <link refid="resultiterator_8cpp"/>
      </node>
      <node id="35798">
        <label>dict/dict.cpp</label>
        <link refid="dict_8cpp"/>
      </node>
      <node id="35786">
        <label>wordrec/tface.cpp</label>
        <link refid="tface_8cpp"/>
      </node>
      <node id="35799">
        <label>dict/hyphen.cpp</label>
        <link refid="hyphen_8cpp"/>
      </node>
      <node id="35745">
        <label>ccmain/tessbox.h</label>
        <link refid="tessbox_8h"/>
        <childnode refid="35744" relation="include">
        </childnode>
        <childnode refid="35746" relation="include">
        </childnode>
        <childnode refid="35747" relation="include">
        </childnode>
        <childnode refid="35748" relation="include">
        </childnode>
        <childnode refid="35749" relation="include">
        </childnode>
      </node>
      <node id="35770">
        <label>ccmain/tfacepp.h</label>
        <link refid="tfacepp_8h"/>
        <childnode refid="35749" relation="include">
        </childnode>
        <childnode refid="35771" relation="include">
        </childnode>
      </node>
      <node id="35789">
        <label>cube/tess_lang_model.h</label>
        <link refid="tess__lang__model_8h"/>
        <childnode refid="35719" relation="include">
        </childnode>
        <childnode refid="35790" relation="include">
        </childnode>
        <childnode refid="35791" relation="include">
        </childnode>
        <childnode refid="35795" relation="include">
        </childnode>
        <childnode refid="35775" relation="include">
        </childnode>
      </node>
      <node id="35752">
        <label>ccmain/pgedit.cpp</label>
        <link refid="pgedit_8cpp"/>
      </node>
      <node id="35795">
        <label>cube/hybrid_neural_net_classifier.cpp</label>
        <link refid="hybrid__neural__net__classifier_8cpp"/>
      </node>
      <node id="35729">
        <label>classify/mastertrainer.h</label>
        <link refid="mastertrainer_8h"/>
        <childnode refid="35730" relation="include">
        </childnode>
        <childnode refid="35731" relation="include">
        </childnode>
        <childnode refid="35732" relation="include">
        </childnode>
        <childnode refid="35733" relation="include">
        </childnode>
        <childnode refid="35734" relation="include">
        </childnode>
      </node>
      <node id="35767">
        <label>ccmain/recogtraining.cpp</label>
        <link refid="recogtraining_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" prot="public">TRIE_NODE_RECORD</innerclass>
    <innerclass refid="classtesseract_1_1_trie" prot="public">tesseract::Trie</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" prot="public" static="no">
        <type><ref refid="host_8h_1ac53c9cafaf7fe16f985994c49f6b0964" kindref="member">inT64</ref></type>
        <definition>typedef inT64 EDGE_INDEX</definition>
        <argsstring></argsstring>
        <name>EDGE_INDEX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/trie.h" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/trie.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="trie_8h_1a48a570537b653a890670d576f8d314cf" prot="public" static="no">
        <type>bool *</type>
        <definition>typedef bool* NODE_MARKER</definition>
        <argsstring></argsstring>
        <name>NODE_MARKER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/trie.h" line="45" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/trie.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="trie_8h_1a2843c489332ffcd2f48572974d9244ad" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref> &gt;</type>
        <definition>typedef GenericVector&lt;EDGE_RECORD&gt; EDGE_VECTOR</definition>
        <argsstring></argsstring>
        <name>EDGE_VECTOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/trie.h" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/trie.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="trie_8h_1a20d5be7dac21807f513ecaf1efcd4594" prot="public" static="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" kindref="compound">TRIE_NODE_RECORD</ref> * &gt;</type>
        <definition>typedef GenericVector&lt;TRIE_NODE_RECORD *&gt; TRIE_NODES</definition>
        <argsstring></argsstring>
        <name>TRIE_NODES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/trie.h" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/trie.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-C-*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trie.h<sp/><sp/>(Formerly<sp/>trie.h)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Description:<sp/><sp/>Functions<sp/>to<sp/>build<sp/>a<sp/>trie<sp/>data<sp/>structure.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mark<sp/>Seaman,<sp/>SW<sp/>Productivity</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/>Fri<sp/>Oct<sp/>16<sp/>14:37:00<sp/>1987</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Modified:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Jul<sp/>26<sp/>11:26:34<sp/>1991<sp/>(Mark<sp/>Seaman)<sp/>marks@hpgrlt</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Language:<sp/><sp/><sp/><sp/><sp/>C</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Package:<sp/><sp/><sp/><sp/><sp/><sp/>N/A</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Status:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reusable<sp/>Software<sp/>Component</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Copyright<sp/>1987,<sp/>Hewlett-Packard<sp/>Company.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRIE_H</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRIE_H</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dawg_8h" kindref="compound">dawg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cutil_8h" kindref="compound">cutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericvector_8h" kindref="compound">genericvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>if<sp/>we<sp/>consider<sp/>either<sp/>NODE_REF<sp/>or<sp/>EDGE_INDEX<sp/>to<sp/>ever<sp/>exceed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>max<sp/>int32,<sp/>we<sp/>will<sp/>need<sp/>to<sp/>change<sp/>GenericVector<sp/>to<sp/>use<sp/>int64<sp/>for<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>address<sp/>indices.<sp/>This<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>be<sp/>needed<sp/>immediately,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>currently<sp/>the<sp/>largest<sp/>number<sp/>of<sp/>edges<sp/>limit<sp/>used<sp/>by<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(kMaxNumEdges<sp/>in<sp/>wordlist2dawg.cpp)<sp/>is<sp/>far<sp/>less<sp/>than<sp/>max<sp/>int32.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>also<sp/>int<sp/>casts<sp/>below<sp/>to<sp/>satisfy<sp/>the<sp/>WIN32<sp/>compiler<sp/>that<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>be<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>might<sp/>be<sp/>cleanest<sp/>to<sp/>change<sp/>the<sp/>types<sp/>of<sp/>most<sp/>of<sp/>the<sp/>Trie/Dawg<sp/>related</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>typedefs<sp/>to<sp/>int<sp/>and<sp/>restrict<sp/>the<sp/>casts<sp/>to<sp/>extracting<sp/>these<sp/>values<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>64<sp/>bit<sp/>EDGE_RECORD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="host_8h_1ac53c9cafaf7fe16f985994c49f6b0964" kindref="member">inT64</ref><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>of<sp/>an<sp/>edge<sp/>in<sp/>a<sp/>given<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="trie_8h_1a48a570537b653a890670d576f8d314cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*<ref refid="trie_8h_1a48a570537b653a890670d576f8d314cf" kindref="member">NODE_MARKER</ref>;</highlight></codeline>
<codeline lineno="46" refid="trie_8h_1a2843c489332ffcd2f48572974d9244ad" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;EDGE_RECORD&gt;</ref><sp/><ref refid="trie_8h_1a2843c489332ffcd2f48572974d9244ad" kindref="member">EDGE_VECTOR</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" kindref="compound">TRIE_NODE_RECORD</ref><sp/>{</highlight></codeline>
<codeline lineno="49" refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/><ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" kindref="member">forward_edges</ref>;</highlight></codeline>
<codeline lineno="50" refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a76de0df03c81b62eb914fe1f08e009b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/><ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a76de0df03c81b62eb914fe1f08e009b3" kindref="member">backward_edges</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52" refid="trie_8h_1a20d5be7dac21807f513ecaf1efcd4594" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;TRIE_NODE_RECORD *&gt;</ref><sp/><ref refid="trie_8h_1a20d5be7dac21807f513ecaf1efcd4594" kindref="member">TRIE_NODES</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classtesseract_1_1_trie" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_trie" kindref="compound">Trie</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64" refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80" kindref="member">RTLReversePolicy</ref><sp/>{</highlight></codeline>
<codeline lineno="65" refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80ae8a8310ee84c647dc1f9a4f289a0dc8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80ae8a8310ee84c647dc1f9a4f289a0dc8b" kindref="member">RRP_DO_NO_REVERSE</ref>,</highlight></codeline>
<codeline lineno="66" refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80aebb1e29c59c60c902106a61853e183e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80aebb1e29c59c60c902106a61853e183e3" kindref="member">RRP_REVERSE_IF_HAS_RTL</ref>,</highlight></codeline>
<codeline lineno="67" refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80af7ddb14bc4c549b47f4b1b32f3c284f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80af7ddb14bc4c549b47f4b1b32f3c284f2" kindref="member">RRP_FORCE_REVERSE</ref>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>number<sp/>of<sp/>concrete<sp/>characters<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>user<sp/>patterns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classtesseract_1_1_trie_1af3cc86948eeedc1f4a32835bb0723eb7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1af3cc86948eeedc1f4a32835bb0723eb7" kindref="member">kSaneNumConcreteChars</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Various<sp/>unicode<sp/>whitespace<sp/>characters<sp/>are<sp/>used<sp/>to<sp/>denote<sp/>unichar<sp/>patterns,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(character<sp/>classifier<sp/>would<sp/>never<sp/>produce<sp/>these<sp/>whitespace<sp/>characters<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>valid<sp/>classification).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classtesseract_1_1_trie_1accb2db10883874ef33e8fc10485d233d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1accb2db10883874ef33e8fc10485d233d" kindref="member">kAlphaPatternUnicode</ref>[];</highlight></codeline>
<codeline lineno="76" refid="classtesseract_1_1_trie_1a5bfe332d0b72fdf02e06fa22aa997f4e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a5bfe332d0b72fdf02e06fa22aa997f4e" kindref="member">kDigitPatternUnicode</ref>[];</highlight></codeline>
<codeline lineno="77" refid="classtesseract_1_1_trie_1a1e9b435df559db4d5b609ea597af5db9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a1e9b435df559db4d5b609ea597af5db9" kindref="member">kAlphanumPatternUnicode</ref>[];</highlight></codeline>
<codeline lineno="78" refid="classtesseract_1_1_trie_1a8e0965655cc0eb3df2325ba15af9b6e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a8e0965655cc0eb3df2325ba15af9b6e6" kindref="member">kPuncPatternUnicode</ref>[];</highlight></codeline>
<codeline lineno="79" refid="classtesseract_1_1_trie_1a17ea14c41c90b5c16daf49a0d4ae05fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a17ea14c41c90b5c16daf49a0d4ae05fa" kindref="member">kLowerPatternUnicode</ref>[];</highlight></codeline>
<codeline lineno="80" refid="classtesseract_1_1_trie_1a37a2d83dfea61a9ed42c71fce82d2650" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a37a2d83dfea61a9ed42c71fce82d2650" kindref="member">kUpperPatternUnicode</ref>[];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classtesseract_1_1_trie_1abd47ba165316b0d3218a61af590ddc25" kindref="member">get_reverse_policy_name</ref>(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80" kindref="member">RTLReversePolicy</ref><sp/>reverse_policy);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>max_num_edges<sp/>argument<sp/>allows<sp/>limiting<sp/>the<sp/>amount<sp/>of<sp/>memory<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Trie<sp/>can<sp/>consume<sp/>(if<sp/>a<sp/>new<sp/>word<sp/>insert<sp/>would<sp/>cause<sp/>the<sp/>Trie<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>contain<sp/>more<sp/>edges<sp/>than<sp/>max_num_edges,<sp/>all<sp/>the<sp/>edges<sp/>are<sp/>cleared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>new<sp/>inserts<sp/>can<sp/>proceed).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classtesseract_1_1_trie_1aa7181b957e2250479cf14afe86b0ec63" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_trie_1aa7181b957e2250479cf14afe86b0ec63" kindref="member">Trie</ref>(<ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151" kindref="member">DawgType</ref><sp/><ref refid="classtesseract_1_1_dawg_1a746cceae242993f4945f454e9752d4a5" kindref="member">type</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;<ref refid="classtesseract_1_1_dawg_1a317802599bebeb7a6939c5b2bc1669ad" kindref="member">lang</ref>,<sp/>PermuterType<sp/>perm,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7b5288262772176824620c2fb01a0abc" kindref="member">uinT64</ref><sp/>max_num_edges,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicharset_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug_level)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a6b415183039524d69b370b4e93acdf56" kindref="member">init</ref>(type,<sp/>lang,<sp/>perm,<sp/>unicharset_size,<sp/>debug_level);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1abcc7db0ede4b8657e021f90c2966677f" kindref="member">max_num_edges_</ref><sp/>=<sp/>max_num_edges;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1ad0be857bc98cecc809dcbbbb207a867e" kindref="member">deref_node_index_mask_</ref><sp/>=<sp/>~<ref refid="classtesseract_1_1_dawg_1ad67c4d32f31869f9a592d01fc65a3a73" kindref="member">letter_mask_</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1adb83b76780ee631a66db075a043205fc" kindref="member">new_dawg_node</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>allocate<sp/>node<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a1705accff61ce96e5491d99eb177f55c" kindref="member">initialized_patterns_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98" refid="classtesseract_1_1_trie_1a0e0b2e5e68fa4a134b371d073ad9b2d4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a0e0b2e5e68fa4a134b371d073ad9b2d4" kindref="member">~Trie</ref>()<sp/>{<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>Trie<sp/>to<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a344c89fd53c0773ff274848e0cd26e17" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><ref refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" kindref="member">edge_char_of</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node_ref,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*edge_ptr;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>edge_index;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" kindref="member">edge_char_of</ref>(node_ref,<sp/>NO_EDGE,<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>,<sp/>word_end,<sp/>unichar_id,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;edge_ptr,<sp/>&amp;edge_index))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a3e0402ddf1740d6ce9c29c2657f52655" kindref="member">make_edge_ref</ref>(node_ref,<sp/>edge_index);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classtesseract_1_1_trie_1ae29335b9ec1836a58dfb4425c635c708" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1ae29335b9ec1836a58dfb4425c635c708" kindref="member">unichar_ids_of</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,<sp/><ref refid="class_generic_vector" kindref="compound">NodeChildVector</ref><sp/>*vec)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/>&amp;forward_edges<sp/>=</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(node)]-&gt;forward_edges;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>forward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vec-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="structtesseract_1_1_node_child" kindref="compound">NodeChild</ref>(<ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(forward_edges[i]),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a3e0402ddf1740d6ce9c29c2657f52655" kindref="member">make_edge_ref</ref>(node,<sp/>i)));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classtesseract_1_1_trie_1a6dcd5c5eafcddd03ee64abd1ec42d4c0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/><ref refid="classtesseract_1_1_trie_1a6dcd5c5eafcddd03ee64abd1ec42d4c0" kindref="member">next_node</ref>(<ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_ref<sp/>==<sp/>NO_EDGE<sp/>||<sp/><ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(*<ref refid="classtesseract_1_1_trie_1a3dd5b782303e745c4818936246663f61" kindref="member">deref_edge_ref</ref>(edge_ref));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classtesseract_1_1_trie_1a42ba6f54332148febd38a426c42b403a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a42ba6f54332148febd38a426c42b403a" kindref="member">end_of_word</ref>(<ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_ref<sp/>==<sp/>NO_EDGE<sp/>||<sp/><ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(*<ref refid="classtesseract_1_1_trie_1a3dd5b782303e745c4818936246663f61" kindref="member">deref_edge_ref</ref>(edge_ref));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="classtesseract_1_1_trie_1a77b23425f9a6dab9a96de9b6d173d0b9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_trie_1a77b23425f9a6dab9a96de9b6d173d0b9" kindref="member">edge_letter</ref>(<ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_ref<sp/>==<sp/>NO_EDGE<sp/>||<sp/><ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_UNICHAR_ID;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(*<ref refid="classtesseract_1_1_trie_1a3dd5b782303e745c4818936246663f61" kindref="member">deref_edge_ref</ref>(edge_ref));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prints<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>node<sp/>indicated<sp/>by<sp/>the<sp/>given<sp/>NODE_REF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>most<sp/>max_num_edges<sp/>will<sp/>be<sp/>printed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a38abf00b13ad917570c6cb3226ceb74d" kindref="member">print_node</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_num_edges)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>edges<sp/>from<sp/>nodes_<sp/>to<sp/>an<sp/>EDGE_ARRAY<sp/>and<sp/>creates<sp/>a<sp/>SquishedDawg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Eliminates<sp/>redundant<sp/>edges<sp/>and<sp/>returns<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>SquishedDawg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>the<sp/>caller<sp/>is<sp/>responsible<sp/>for<sp/>deallocating<sp/>memory<sp/>associated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>returned<sp/>SquishedDawg<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_squished_dawg" kindref="compound">SquishedDawg</ref><sp/>*<ref refid="classtesseract_1_1_trie_1a434d71a349e7c6e7d1a239b0b71064de" kindref="member">trie_to_dawg</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserts<sp/>the<sp/>list<sp/>of<sp/>words<sp/>from<sp/>the<sp/>given<sp/>file<sp/>into<sp/>the<sp/>Trie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>reverse<sp/>is<sp/>true,<sp/>calls<sp/>WERD_CHOICE::reverse_unichar_ids_if_rtl()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>each<sp/>word<sp/>before<sp/>inserting<sp/>it<sp/>into<sp/>the<sp/>Trie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a6c611d36dee495e8954a783abe567727" kindref="member">read_word_list</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a920adf78e22cbdb661e0c2aef58a8c80" kindref="member">Trie::RTLReversePolicy</ref><sp/><ref refid="oldlist_8cpp_1ade6fcdcd343af2f9b32c79583a5a0637" kindref="member">reverse</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Inserts<sp/>the<sp/>list<sp/>of<sp/>patterns<sp/>from<sp/>the<sp/>given<sp/>file<sp/>into<sp/>the<sp/>Trie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>pattern<sp/>list<sp/>file<sp/>should<sp/>contain<sp/>one<sp/>pattern<sp/>per<sp/>line<sp/>in<sp/>UTF-8<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>pattern<sp/>can<sp/>contain<sp/>any<sp/>non-whitespace<sp/>characters,<sp/>however<sp/>only<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>patterns<sp/>that<sp/>contain<sp/>characters<sp/>from<sp/>the<sp/>unicharset<sp/>of<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>language<sp/>will<sp/>be<sp/>useful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>only<sp/>meta<sp/>character<sp/>is<sp/>&apos;\&apos;.<sp/>To<sp/>be<sp/>used<sp/>in<sp/>a<sp/>pattern<sp/>as<sp/>an<sp/>ordinary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>string<sp/>it<sp/>should<sp/>be<sp/>escaped<sp/>with<sp/>&apos;\&apos;<sp/>(e.g.<sp/>string<sp/>&quot;C:\Documents&quot;<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>written<sp/>in<sp/>the<sp/>patterns<sp/>file<sp/>as<sp/>&quot;C:\\Documents&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>supports<sp/>a<sp/>very<sp/>limited<sp/>regular<sp/>expression<sp/>syntax.<sp/>One<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>express<sp/>a<sp/>character,<sp/>a<sp/>certain<sp/>character<sp/>class<sp/>and<sp/>a<sp/>number<sp/>of<sp/>times<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>entity<sp/>should<sp/>be<sp/>repeated<sp/>in<sp/>the<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>denote<sp/>a<sp/>character<sp/>class<sp/>use<sp/>one<sp/>of:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>\c<sp/>-<sp/>unichar<sp/>for<sp/>which<sp/>UNICHARSET::get_isalpha()<sp/>is<sp/>true<sp/>(character)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>\d<sp/>-<sp/>unichar<sp/>for<sp/>which<sp/>UNICHARSET::get_isdigit()<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>\n<sp/>-<sp/>unichar<sp/>for<sp/>which<sp/>UNICHARSET::get_isdigit()<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>UNICHARSET::isalpha()<sp/>are<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>\p<sp/>-<sp/>unichar<sp/>for<sp/>which<sp/>UNICHARSET::get_ispunct()<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>\a<sp/>-<sp/>unichar<sp/>for<sp/>which<sp/>UNICHARSET::get_islower()<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>\A<sp/>-<sp/>unichar<sp/>for<sp/>which<sp/>UNICHARSET::get_isupper()<sp/>is<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>\*<sp/>could<sp/>be<sp/>specified<sp/>after<sp/>each<sp/>character<sp/>or<sp/>pattern<sp/>to<sp/>indicate<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>character/pattern<sp/>can<sp/>be<sp/>repeated<sp/>any<sp/>number<sp/>of<sp/>times<sp/>before<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>character/pattern<sp/>occurs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Examples:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1-8\d\d-GOOG-411<sp/>will<sp/>be<sp/>expanded<sp/>to<sp/>strings:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1-800-GOOG-411,<sp/>1-801-GOOG-411,<sp/>...<sp/>1-899-GOOG-411.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>http://www.\n\*.com<sp/>will<sp/>be<sp/>expanded<sp/>to<sp/>strings<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>http://www.a.com<sp/>http://www.a123.com<sp/>...<sp/>http://www.ABCDefgHIJKLMNop.com</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>In<sp/>choosing<sp/>which<sp/>patterns<sp/>to<sp/>include<sp/>please<sp/>be<sp/>aware<sp/>of<sp/>the<sp/>fact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>providing<sp/>very<sp/>generic<sp/>patterns<sp/>will<sp/>make<sp/>tesseract<sp/>run<sp/>slower.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>example<sp/>\n\*<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>pattern<sp/>will<sp/>make<sp/>Tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>consider<sp/>all<sp/>the<sp/>combinations<sp/>of<sp/>proposed<sp/>character<sp/>choices<sp/>for<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>segmentations,<sp/>which<sp/>will<sp/>be<sp/>unacceptably<sp/>slow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>of<sp/>potential<sp/>problems<sp/>with<sp/>speed<sp/>that<sp/>could<sp/>be<sp/>difficult<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>identify,<sp/>each<sp/>user<sp/>pattern<sp/>has<sp/>to<sp/>have<sp/>at<sp/>least<sp/>kSaneNumConcreteChars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>concrete<sp/>characters<sp/>from<sp/>the<sp/>unicharset<sp/>at<sp/>the<sp/>beginning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a5e75fe75d1803bd3f5e18d423b7b8f1f" kindref="member">read_pattern_list</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>the<sp/>values<sp/>of<sp/>*_pattern_<sp/>unichar<sp/>ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>should<sp/>be<sp/>called<sp/>before<sp/>calling<sp/>read_pattern_list().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a32fd568d04d81e5d5a7e30aac9b82daa" kindref="member">initialize_patterns</ref>(<ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>*unicharset);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fills<sp/>in<sp/>the<sp/>given<sp/>unichar<sp/>id<sp/>vector<sp/>with<sp/>the<sp/>unichar<sp/>ids<sp/>that<sp/>represent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>patterns<sp/>of<sp/>the<sp/>character<sp/>classes<sp/>of<sp/>the<sp/>given<sp/>unichar_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a6f0727490d09b82d4b60a7a96191e832" kindref="member">unichar_id_to_patterns</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;UNICHAR_ID&gt;</ref><sp/>*vec)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>given<sp/>EDGE_REF<sp/>if<sp/>the<sp/>EDGE_RECORD<sp/>that<sp/>it<sp/>points<sp/>to<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>self<sp/>loop<sp/>and<sp/>the<sp/>given<sp/>unichar_id<sp/>matches<sp/>the<sp/>unichar_id<sp/>stored<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>EDGE_RECORD,<sp/>returns<sp/>NO_EDGE<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="classtesseract_1_1_trie_1a6addef8f1c5d6ca6302db5280993dfdd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><ref refid="classtesseract_1_1_trie_1a6addef8f1c5d6ca6302db5280993dfdd" kindref="member">pattern_loop_edge</ref>(<ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_ref<sp/>==<sp/>NO_EDGE)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*edge_rec<sp/>=<sp/><ref refid="classtesseract_1_1_trie_1a3dd5b782303e745c4818936246663f61" kindref="member">deref_edge_ref</ref>(edge_ref);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_dawg_1a1729e82cc3d78d51d97c8be89a5409ca" kindref="member" tooltip="Returns the marker flag of this edge. ">marker_flag_from_edge_rec</ref>(*edge_rec)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id<sp/>==<sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(*edge_rec)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_end<sp/>==<sp/><ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(*edge_rec))<sp/>?</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_ref<sp/>:<sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>word<sp/>to<sp/>the<sp/>Trie<sp/>(creates<sp/>the<sp/>necessary<sp/>nodes<sp/>and<sp/>edges).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>repetitions<sp/>vector<sp/>is<sp/>not<sp/>NULL,<sp/>each<sp/>entry<sp/>in<sp/>the<sp/>vector<sp/>indicates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>whether<sp/>the<sp/>unichar<sp/>id<sp/>with<sp/>the<sp/>corresponding<sp/>index<sp/>in<sp/>the<sp/>word<sp/>is<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>repeat<sp/>an<sp/>unlimited<sp/>number<sp/>of<sp/>times.<sp/>For<sp/>each<sp/>entry<sp/>that<sp/>is<sp/>true,<sp/>MARKER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>flag<sp/>of<sp/>the<sp/>corresponding<sp/>edge<sp/>created<sp/>for<sp/>this<sp/>unichar<sp/>id<sp/>is<sp/>set<sp/>to<sp/>true).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>add<sp/>succeeded,<sp/>false<sp/>otherwise<sp/>(e.g.<sp/>when<sp/>a<sp/>word<sp/>contained</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>invalid<sp/>unichar<sp/>id<sp/>or<sp/>the<sp/>trie<sp/>was<sp/>getting<sp/>too<sp/>large<sp/>and<sp/>was<sp/>cleared).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1abafc5803b471a28d781ffc74d7a2f652" kindref="member">add_word_to_dawg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;bool&gt;</ref><sp/>*repetitions);</highlight></codeline>
<codeline lineno="245" refid="classtesseract_1_1_trie_1a5e7ede39bc02eba399d7a5e5062a73ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a5e7ede39bc02eba399d7a5e5062a73ec" kindref="member">add_word_to_dawg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>&amp;word)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1abafc5803b471a28d781ffc74d7a2f652" kindref="member">add_word_to_dawg</ref>(word,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>structure<sp/>of<sp/>an<sp/>EDGE_REF<sp/>for<sp/>Trie<sp/>edges<sp/>is<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[LETTER_START_BIT,<sp/>flag_start_bit_):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge<sp/>index<sp/>in<sp/>*_edges<sp/>in<sp/>a<sp/>TRIE_NODE_RECORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[flag_start_bit,<sp/>30th<sp/>bit]:<sp/>node<sp/>index<sp/>in<sp/>nodes<sp/>(TRIE_NODES<sp/>vector)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>this<sp/>arrangement<sp/>there<sp/>are<sp/>enough<sp/>bits<sp/>to<sp/>represent<sp/>edge<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(each<sp/>node<sp/>can<sp/>have<sp/>at<sp/>most<sp/>unicharset_size_<sp/>forward<sp/>edges<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>position<sp/>of<sp/>flag_start_bit<sp/>is<sp/>set<sp/>to<sp/>be<sp/>log2(unicharset_size_)).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>also<sp/>possible<sp/>to<sp/>accommodate<sp/>a<sp/>maximum<sp/>number<sp/>of<sp/>nodes<sp/>that<sp/>is<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>least<sp/>as<sp/>large<sp/>as<sp/>that<sp/>of<sp/>the<sp/>SquishedDawg<sp/>representation<sp/>(in<sp/>SquishedDawg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>EDGE_RECORD<sp/>has<sp/>32-(flag_start_bit+NUM_FLAG_BITS)<sp/>bits<sp/>to<sp/>represent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>node<sp/>index).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>pointer<sp/>to<sp/>EDGE_RECORD<sp/>after<sp/>decoding<sp/>the<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>edge<sp/>from<sp/>the<sp/>information<sp/>in<sp/>the<sp/>given<sp/>EDGE_REF.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>assumes<sp/>that<sp/>EDGE_REF<sp/>holds<sp/>valid<sp/>node/edge<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="classtesseract_1_1_trie_1a3dd5b782303e745c4818936246663f61" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*<ref refid="classtesseract_1_1_trie_1a3dd5b782303e745c4818936246663f61" kindref="member">deref_edge_ref</ref>(<ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_index<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(edge_ref<sp/>&amp;<sp/><ref refid="classtesseract_1_1_dawg_1ad67c4d32f31869f9a592d01fc65a3a73" kindref="member">letter_mask_</ref>)<sp/>&gt;&gt;<sp/><ref refid="dawg_8h_1abd290e0ea4e54e330815019aae6148aa" kindref="member">LETTER_START_BIT</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_index<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(edge_ref<sp/>&amp;<sp/><ref refid="classtesseract_1_1_trie_1ad0be857bc98cecc809dcbbbb207a867e" kindref="member">deref_node_index_mask_</ref>)<sp/>&gt;&gt;<sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d" kindref="compound">TRIE_NODE_RECORD</ref><sp/>*node_rec<sp/>=<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[node_index];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;(node_rec-&gt;<ref refid="struct_t_r_i_e___n_o_d_e___r_e_c_o_r_d_1a89deebd4b30244967014d70b06c550e3" kindref="member">forward_edges</ref>[edge_index]);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276" refid="classtesseract_1_1_trie_1a3e0402ddf1740d6ce9c29c2657f52655" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><ref refid="classtesseract_1_1_trie_1a3e0402ddf1740d6ce9c29c2657f52655" kindref="member">make_edge_ref</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node_index,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>edge_index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((node_index<sp/>&lt;&lt;<sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref>)<sp/>|</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(edge_index<sp/>&lt;&lt;<sp/><ref refid="dawg_8h_1abd290e0ea4e54e330815019aae6148aa" kindref="member">LETTER_START_BIT</ref>));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282" refid="classtesseract_1_1_trie_1a0efb447c693077c00d4c793acb760e52" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a0efb447c693077c00d4c793acb760e52" kindref="member">link_edge</ref>(<ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*edge,<sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>nxt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>repeats,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vecfuncs_8cpp_1a57d4a186a22b01e2110793bc22a5d8f0" kindref="member">direction</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(repeats)<sp/>flags<sp/>|=<sp/><ref refid="dawg_8h_1a7e0df79bf5779569d0c9f325216e7613" kindref="member">MARKER_FLAG</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_end)<sp/>flags<sp/>|=<sp/><ref refid="dawg_8h_1a0fe1bde7916f6e5869319634b341449d" kindref="member">WERD_END_FLAG</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(direction<sp/>==<sp/><ref refid="dawg_8h_1a1b595d17c69b114ee1042e96e51a19bd" kindref="member">BACKWARD_EDGE</ref>)<sp/>flags<sp/>|=<sp/><ref refid="dawg_8h_1afc8f59f76bf176bfc7ee72f7f96bcc7a" kindref="member">DIRECTION_FLAG</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>*edge<sp/>=<sp/>((nxt<sp/>&lt;&lt;<sp/><ref refid="classtesseract_1_1_dawg_1a8a140175a0051a3691084942da99dfb0" kindref="member">next_node_start_bit_</ref>)<sp/>|</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(static_cast&lt;EDGE_RECORD&gt;(flags)<sp/>&lt;&lt;<sp/><ref refid="classtesseract_1_1_dawg_1a1c15b73bdf9dc00d548836439a61925c" kindref="member">flag_start_bit_</ref>)<sp/>|</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(static_cast&lt;EDGE_RECORD&gt;(unichar_id)<sp/>&lt;&lt;<sp/><ref refid="dawg_8h_1abd290e0ea4e54e330815019aae6148aa" kindref="member">LETTER_START_BIT</ref>));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293" refid="classtesseract_1_1_trie_1a1705a4d141922e55fa5b09f67b33301f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a1705a4d141922e55fa5b09f67b33301f" kindref="member">print_edge_rec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;edge_rec)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a85a5bf216156dfa399c5edd26f3694db" kindref="member">REFFORMAT</ref><sp/></highlight><highlight class="stringliteral">&quot;|%s%s%s|%d|&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(edge_rec),</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a1729e82cc3d78d51d97c8be89a5409ca" kindref="member" tooltip="Returns the marker flag of this edge. ">marker_flag_from_edge_rec</ref>(edge_rec)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;R,&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classtesseract_1_1_dawg_1af6f9affc795811d63e2f255f413bb36e" kindref="member" tooltip="Returns the direction flag of this edge. ">direction_from_edge_rec</ref>(edge_rec)<sp/>==<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a7b0b2851a321a4dee49609995f1cc018" kindref="member" tooltip="Returns true if this edge marks the end of a word. ">end_of_word_from_edge_rec</ref>(edge_rec)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,E&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_dawg_1a89f558c998d293d7e2feabeb03eca5ef" kindref="member" tooltip="Returns UNICHAR_ID recorded in this edge. ">unichar_id_from_edge_rec</ref>(edge_rec));</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>next<sp/>node<sp/>in<sp/>recorded<sp/>the<sp/>given<sp/>EDGE_RECORD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>exactly<sp/>one<sp/>forward<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classtesseract_1_1_trie_1ae0fcbf55e0568a52bc5eeb7c42aff18e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1ae0fcbf55e0568a52bc5eeb7c42aff18e" kindref="member">can_be_eliminated</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;edge_rec)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node_ref<sp/>=<sp/><ref refid="classtesseract_1_1_dawg_1a8fda693bddf7420100b13312831dfe53" kindref="member" tooltip="Returns the next node visited by following this edge. ">next_node_from_edge_rec</ref>(edge_rec);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(node_ref<sp/>!=<sp/>NO_EDGE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>[static_cast&lt;int&gt;(node_ref)]-&gt;forward_edges.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prints<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>Trie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>most<sp/>max_num_edges<sp/>will<sp/>be<sp/>printed<sp/>for<sp/>each<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="classtesseract_1_1_trie_1a34ed0e1ea9fce2a12bb02a61e166a784" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a34ed0e1ea9fce2a12bb02a61e166a784" kindref="member">print_all</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_num_edges)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n__________________________\n%s\n&quot;</highlight><highlight class="normal">,<sp/>msg);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/><ref refid="classtesseract_1_1_trie_1a38abf00b13ad917570c6cb3226ceb74d" kindref="member">print_node</ref>(i,<sp/>max_num_edges);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;__________________________\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>edge<sp/>with<sp/>the<sp/>given<sp/>direction,<sp/>word_end<sp/>and<sp/>unichar_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>node<sp/>indicated<sp/>by<sp/>node_ref.<sp/>Fills<sp/>in<sp/>the<sp/>pointer<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>EDGE_RECORD<sp/>and<sp/>the<sp/>index<sp/>of<sp/>the<sp/>edge<sp/>with<sp/>the<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>corresponding<sp/>to<sp/>the<sp/>edge<sp/>found.<sp/>Returns<sp/>true<sp/>if<sp/>an<sp/>edge<sp/>was<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1ade0ed371c5aa6f137fdbdb485c617eba" kindref="member">edge_char_of</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node_ref,<sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/><ref refid="classtesseract_1_1_trie_1a6dcd5c5eafcddd03ee64abd1ec42d4c0" kindref="member">next_node</ref>,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vecfuncs_8cpp_1a57d4a186a22b01e2110793bc22a5d8f0" kindref="member">direction</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>**edge_ptr,<sp/><ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>*edge_index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>an<sp/>single<sp/>edge<sp/>linkage<sp/>between<sp/>node1<sp/>and<sp/>node2<sp/>in<sp/>the<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>indicated<sp/>by<sp/>direction<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a43827367f1b019273a399f03ecaf9c6d" kindref="member">add_edge_linkage</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node1,<sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node2,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>repeats,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vecfuncs_8cpp_1a57d4a186a22b01e2110793bc22a5d8f0" kindref="member">direction</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>forward<sp/>edge<sp/>linkage<sp/>from<sp/>node1<sp/>to<sp/>node2<sp/>and<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>backward<sp/>edge<sp/>linkage<sp/>in<sp/>the<sp/>other<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="classtesseract_1_1_trie_1a2bdf4197cdfb791df18dd373804d3372" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a2bdf4197cdfb791df18dd373804d3372" kindref="member">add_new_edge</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node1,<sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node2,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>repeats,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_trie_1a43827367f1b019273a399f03ecaf9c6d" kindref="member">add_edge_linkage</ref>(node1,<sp/>node2,<sp/>repeats,<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_end,<sp/>unichar_id)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a43827367f1b019273a399f03ecaf9c6d" kindref="member">add_edge_linkage</ref>(node2,<sp/>node1,<sp/>repeats,<sp/><ref refid="dawg_8h_1a1b595d17c69b114ee1042e96e51a19bd" kindref="member">BACKWARD_EDGE</ref>,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_end,<sp/>unichar_id));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>word<sp/>ending<sp/>flags<sp/>in<sp/>an<sp/>already<sp/>existing<sp/>edge<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>on<sp/>success.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1affb7341ac1fa928396b525565ef6d625" kindref="member">add_word_ending</ref>(<ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>*edge,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>the_next_node,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>repeats,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocates<sp/>space<sp/>for<sp/>a<sp/>new<sp/>node<sp/>in<sp/>the<sp/>Trie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/><ref refid="classtesseract_1_1_trie_1adb83b76780ee631a66db075a043205fc" kindref="member">new_dawg_node</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Removes<sp/>a<sp/>single<sp/>edge<sp/>linkage<sp/>to<sp/>between<sp/>node1<sp/>and<sp/>node2<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>indicated<sp/>by<sp/>direction<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a7c6ee32ebb143eea68aeaf16dfc1edfd" kindref="member">remove_edge_linkage</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node1,<sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vecfuncs_8cpp_1a57d4a186a22b01e2110793bc22a5d8f0" kindref="member">direction</ref>,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Removes<sp/>forward<sp/>edge<sp/>linkage<sp/>from<sp/>node1<sp/>to<sp/>node2<sp/>and<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>backward<sp/>edge<sp/>linkage<sp/>in<sp/>the<sp/>other<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="classtesseract_1_1_trie_1a257f7036f5799ec557d56570686a4cb8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a257f7036f5799ec557d56570686a4cb8" kindref="member">remove_edge</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node1,<sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node2,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a7c6ee32ebb143eea68aeaf16dfc1edfd" kindref="member">remove_edge_linkage</ref>(node1,<sp/>node2,<sp/><ref refid="dawg_8h_1a1e19d6a48aa61d422cce885b812bb733" kindref="member">FORWARD_EDGE</ref>,<sp/>word_end,<sp/>unichar_id);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_trie_1a7c6ee32ebb143eea68aeaf16dfc1edfd" kindref="member">remove_edge_linkage</ref>(node2,<sp/>node1,<sp/><ref refid="dawg_8h_1a1b595d17c69b114ee1042e96e51a19bd" kindref="member">BACKWARD_EDGE</ref>,<sp/>word_end,<sp/>unichar_id);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compares<sp/>edge1<sp/>and<sp/>edge2<sp/>in<sp/>the<sp/>given<sp/>node<sp/>to<sp/>see<sp/>if<sp/>they<sp/>point<sp/>to<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>nodes<sp/>that<sp/>could<sp/>be<sp/>collapsed.<sp/>If<sp/>they<sp/>do,<sp/>performs<sp/>the<sp/>reduction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>returns<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a33de60074d1ede69f4a17be28b1c03c8" kindref="member">eliminate_redundant_edges</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;edge1,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dawg_8h_1a04b50b4c4f290148d1bee82f401a31fa" kindref="member">EDGE_RECORD</ref><sp/>&amp;edge2);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assuming<sp/>that<sp/>edge_index<sp/>indicates<sp/>the<sp/>first<sp/>edge<sp/>in<sp/>a<sp/>group<sp/>of<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>node<sp/>with<sp/>a<sp/>particular<sp/>letter<sp/>value,<sp/>looks<sp/>through<sp/>these<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>see<sp/>if<sp/>any<sp/>of<sp/>them<sp/>can<sp/>be<sp/>collapsed.<sp/>If<sp/>so<sp/>does<sp/>it.<sp/>Returns<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>caller<sp/>when<sp/>all<sp/>edges<sp/>with<sp/>this<sp/>letter<sp/>have<sp/>been<sp/>reduced.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>further<sp/>reduction<sp/>is<sp/>possible<sp/>with<sp/>this<sp/>same<sp/>letter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a32561d4a203cd179f7d8310be7eadb68" kindref="member">reduce_lettered_edges</ref>(<ref refid="trie_8h_1adc7fb154cd5e9ffd8581b037e614d591" kindref="member">EDGE_INDEX</ref><sp/>edge_index,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/>&amp;backward_edges,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trie_8h_1a48a570537b653a890670d576f8d314cf" kindref="member">NODE_MARKER</ref><sp/>reduced_nodes);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a83dff0c6f9e38ecc02eae8c4ae0ba041" kindref="member">sort_edges</ref>(<ref refid="class_generic_vector" kindref="compound">EDGE_VECTOR</ref><sp/>*edges);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a65c0034f258b73575a13e0f53759ca80" kindref="member">reduce_node_input</ref>(<ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node,<sp/><ref refid="trie_8h_1a48a570537b653a890670d576f8d314cf" kindref="member">NODE_MARKER</ref><sp/>reduced_nodes);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>pattern<sp/>unichar<sp/>id<sp/>for<sp/>the<sp/>given<sp/>character<sp/>class<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_trie_1ab3bd9782abfe9da25e01ced2bcc5000e" kindref="member">character_class_to_pattern</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Member<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">TRIE_NODES</ref><sp/><ref refid="classtesseract_1_1_trie_1a33827eeb84a5847af8fa6ba9e4e64844" kindref="member">nodes_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>of<sp/>nodes<sp/>in<sp/>the<sp/>Trie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a7b5288262772176824620c2fb01a0abc" kindref="member">uinT64</ref><sp/><ref refid="classtesseract_1_1_trie_1ab0b71a3889baa598365cde4f5c9d1078" kindref="member">num_edges_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sum<sp/>of<sp/>all<sp/>edges<sp/>(forward<sp/>and<sp/>backward)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="classtesseract_1_1_trie_1abcc7db0ede4b8657e021f90c2966677f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a7b5288262772176824620c2fb01a0abc" kindref="member">uinT64</ref><sp/><ref refid="classtesseract_1_1_trie_1abcc7db0ede4b8657e021f90c2966677f" kindref="member">max_num_edges_</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>number<sp/>of<sp/>edges<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="classtesseract_1_1_trie_1adb2947aaf4be6fad2801721f7b7bdf2e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a7b5288262772176824620c2fb01a0abc" kindref="member">uinT64</ref><sp/><ref refid="classtesseract_1_1_trie_1adb2947aaf4be6fad2801721f7b7bdf2e" kindref="member">deref_direction_mask_</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>for<sp/>EDGE_REF<sp/>to<sp/>extract<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="classtesseract_1_1_trie_1ad0be857bc98cecc809dcbbbb207a867e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a7b5288262772176824620c2fb01a0abc" kindref="member">uinT64</ref><sp/><ref refid="classtesseract_1_1_trie_1ad0be857bc98cecc809dcbbbb207a867e" kindref="member">deref_node_index_mask_</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>mask<sp/>for<sp/>EDGE_REF<sp/>to<sp/>extract<sp/>node<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Variables<sp/>for<sp/>translating<sp/>character<sp/>class<sp/>codes<sp/>denoted<sp/>in<sp/>user<sp/>patterns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>file<sp/>to<sp/>the<sp/>unichar<sp/>ids<sp/>used<sp/>to<sp/>represent<sp/>them<sp/>in<sp/>a<sp/>Trie.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="classtesseract_1_1_trie_1a1705accff61ce96e5491d99eb177f55c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_trie_1a1705accff61ce96e5491d99eb177f55c" kindref="member">initialized_patterns_</ref>;</highlight></codeline>
<codeline lineno="403" refid="classtesseract_1_1_trie_1a01dba4e633d98d8bdddebeeb4b6240fd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_trie_1a01dba4e633d98d8bdddebeeb4b6240fd" kindref="member">alpha_pattern_</ref>;</highlight></codeline>
<codeline lineno="404" refid="classtesseract_1_1_trie_1a38439594c671a06605349f781e2d1c2c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_trie_1a38439594c671a06605349f781e2d1c2c" kindref="member">digit_pattern_</ref>;</highlight></codeline>
<codeline lineno="405" refid="classtesseract_1_1_trie_1a855761cc68c5bb75e792a2587fc24d2a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_trie_1a855761cc68c5bb75e792a2587fc24d2a" kindref="member">alphanum_pattern_</ref>;</highlight></codeline>
<codeline lineno="406" refid="classtesseract_1_1_trie_1a7533c8651890d62e6b0d678ed7155cb4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_trie_1a7533c8651890d62e6b0d678ed7155cb4" kindref="member">punc_pattern_</ref>;</highlight></codeline>
<codeline lineno="407" refid="classtesseract_1_1_trie_1a5a4f976d9be06ec5a7e7dcbe6cc12a88" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_trie_1a5a4f976d9be06ec5a7e7dcbe6cc12a88" kindref="member">lower_pattern_</ref>;</highlight></codeline>
<codeline lineno="408" refid="classtesseract_1_1_trie_1a6a9287a8e75f94462c17b13966ed2669" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="classtesseract_1_1_trie_1a6a9287a8e75f94462c17b13966ed2669" kindref="member">upper_pattern_</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">};</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/dict/trie.h"/>
  </compounddef>
</doxygen>
