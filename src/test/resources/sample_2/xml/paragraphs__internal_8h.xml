<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="paragraphs__internal_8h" kind="file">
    <compoundname>paragraphs_internal.h</compoundname>
    <includes refid="paragraphs_8h" local="yes">paragraphs.h</includes>
    <includes local="yes">strings.h</includes>
    <includedby refid="paragraphs_8cpp" local="yes">ccmain/paragraphs.cpp</includedby>
    <incdepgraph>
      <node id="3128">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="3120">
        <label>stdlib.h</label>
      </node>
      <node id="3117">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="3118" relation="include">
        </childnode>
      </node>
      <node id="3129">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="3114" relation="include">
        </childnode>
      </node>
      <node id="3119">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="3120" relation="include">
        </childnode>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3122" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
      </node>
      <node id="3109">
        <label>ccmain/paragraphs_internal.h</label>
        <link refid="paragraphs_internal.h"/>
        <childnode refid="3110" relation="include">
        </childnode>
        <childnode refid="3138" relation="include">
        </childnode>
      </node>
      <node id="3123">
        <label>stddef.h</label>
      </node>
      <node id="3124">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="3116" relation="include">
        </childnode>
      </node>
      <node id="3118">
        <label>limits.h</label>
      </node>
      <node id="3127">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="3112" relation="include">
        </childnode>
      </node>
      <node id="3121">
        <label>string.h</label>
      </node>
      <node id="3111">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="3112" relation="include">
        </childnode>
        <childnode refid="3113" relation="include">
        </childnode>
        <childnode refid="3128" relation="include">
        </childnode>
        <childnode refid="3129" relation="include">
        </childnode>
        <childnode refid="3130" relation="include">
        </childnode>
      </node>
      <node id="3133">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="3116" relation="include">
        </childnode>
      </node>
      <node id="3125">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="3124" relation="include">
        </childnode>
      </node>
      <node id="3112">
        <label>math.h</label>
      </node>
      <node id="3126">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="3124" relation="include">
        </childnode>
      </node>
      <node id="3138">
        <label>strings.h</label>
      </node>
      <node id="3137">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="3110">
        <label>paragraphs.h</label>
        <link refid="paragraphs_8h"/>
        <childnode refid="3111" relation="include">
        </childnode>
        <childnode refid="3136" relation="include">
        </childnode>
        <childnode refid="3132" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
      </node>
      <node id="3131">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3132" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
      </node>
      <node id="3132">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3120" relation="include">
        </childnode>
        <childnode refid="3133" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
        <childnode refid="3134" relation="include">
        </childnode>
        <childnode refid="3128" relation="include">
        </childnode>
      </node>
      <node id="3122">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="3123" relation="include">
        </childnode>
        <childnode refid="3116" relation="include">
        </childnode>
      </node>
      <node id="3136">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="3137" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3135" relation="include">
        </childnode>
      </node>
      <node id="3115">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3116" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
      </node>
      <node id="3113">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3112" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3127" relation="include">
        </childnode>
      </node>
      <node id="3130">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="3131" relation="include">
        </childnode>
      </node>
      <node id="3116">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="3117" relation="include">
        </childnode>
      </node>
      <node id="3114">
        <label>stdio.h</label>
      </node>
      <node id="3135">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3121" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3122" relation="include">
        </childnode>
      </node>
      <node id="3134">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3121" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3140">
        <label>ccmain/paragraphs.cpp</label>
        <link refid="paragraphs_8cpp"/>
      </node>
      <node id="3139">
        <label>ccmain/paragraphs_internal.h</label>
        <link refid="paragraphs_internal.h"/>
        <childnode refid="3140" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structtesseract_1_1_line_hypothesis" prot="public">tesseract::LineHypothesis</innerclass>
    <innerclass refid="classtesseract_1_1_row_scratch_registers" prot="public">tesseract::RowScratchRegisters</innerclass>
    <innerclass refid="classtesseract_1_1_paragraph_theory" prot="public">tesseract::ParagraphTheory</innerclass>
    <innerclass refid="classtesseract_1_1_paragraph_model_smearer" prot="public">tesseract::ParagraphModelSmearer</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paragraphs.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Paragraph<sp/>Detection<sp/>internal<sp/>data<sp/>structures.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>David<sp/>Eger</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/>11<sp/>March<sp/>2011</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2011,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_CCMAIN_PARAGRAPHS_INTERNAL_H_</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_CCMAIN_PARAGRAPHS_INTERNAL_H_</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="paragraphs_8h" kindref="compound">paragraphs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;strings.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NO<sp/>CODE<sp/>OUTSIDE<sp/>OF<sp/>paragraphs.cpp<sp/>AND<sp/>TESTS<sp/>SHOULD<sp/>NEED<sp/>TO<sp/>ACCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DATA<sp/>STRUCTURES<sp/>OR<sp/>FUNCTIONS<sp/>IN<sp/>THIS<sp/>FILE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>given<sp/>word<sp/>is<sp/>likely<sp/>to<sp/>be<sp/>a<sp/>list<sp/>item<sp/>start<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a4b153a6c7f9116c12cffe35964cf6ba3" kindref="member">AsciiLikelyListItem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;word);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>first<sp/>Unicode<sp/>Codepoint<sp/>from<sp/>werd[pos].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1abe22d992db19f44c79906b66dc846eaa" kindref="member">UnicodeFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>*u,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*werd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>right<sp/>word<sp/>attributes<sp/>given<sp/>either<sp/>a<sp/>unicharset<sp/>and<sp/>werd<sp/>or<sp/>a<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa0bc43fa3c52639420ed7eeb1093aa24" kindref="member">RightWordAttributes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>*unicharset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*werd,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;utf8,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*is_list,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*starts_idea,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*ends_idea);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>left<sp/>word<sp/>attributes<sp/>given<sp/>either<sp/>a<sp/>unicharset<sp/>and<sp/>werd<sp/>or<sp/>a<sp/>utf8<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a04498cd763cc4a381f1b7c2d0e17f020" kindref="member">LeftWordAttributes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>*unicharset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*werd,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;utf8,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*is_list,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*starts_idea,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*ends_idea);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4" kindref="member">LineType</ref><sp/>{</highlight></codeline>
<codeline lineno="55" refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a350c14d666e61e3ad1310244edde8537" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a350c14d666e61e3ad1310244edde8537" kindref="member">LT_START</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>line<sp/>of<sp/>a<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a92f4e011332f48d7de7ddef587dff012" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a92f4e011332f48d7de7ddef587dff012" kindref="member">LT_BODY</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Continuation<sp/>line<sp/>of<sp/>a<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a5dc9805a3ad0a4c99b98ff282e36d204" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a5dc9805a3ad0a4c99b98ff282e36d204" kindref="member">LT_UNKNOWN</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>clues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a923acc0db591045108d7903821a8a594" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a923acc0db591045108d7903821a8a594" kindref="member">LT_MULTIPLE</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">,<sp/><sp/></highlight><highlight class="comment">//<sp/>Matches<sp/>for<sp/>both<sp/>LT_START<sp/>and<sp/>LT_BODY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>paragraph<sp/>in<sp/>a<sp/>page<sp/>of<sp/>body<sp/>text<sp/>is<sp/>often<sp/>un-indented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>typographic<sp/>convention<sp/>which<sp/>is<sp/>common<sp/>to<sp/>indicate<sp/>either<sp/>that:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(1)<sp/>The<sp/>paragraph<sp/>is<sp/>the<sp/>continuation<sp/>of<sp/>a<sp/>previous<sp/>paragraph,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(2)<sp/>The<sp/>paragraph<sp/>is<sp/>the<sp/>first<sp/>paragraph<sp/>in<sp/>a<sp/>chapter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I<sp/>refer<sp/>to<sp/>such<sp/>paragraphs<sp/>as<sp/>&quot;crown&quot;s,<sp/>and<sp/>the<sp/>output<sp/>of<sp/>the<sp/>paragraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>detection<sp/>algorithm<sp/>attempts<sp/>to<sp/>give<sp/>them<sp/>the<sp/>same<sp/>paragraph<sp/>model<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>body<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Nonetheless,<sp/>while<sp/>building<sp/>hypotheses,<sp/>it<sp/>is<sp/>useful<sp/>to<sp/>mark<sp/>the<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>crown<sp/>paragraphs<sp/>temporarily<sp/>as<sp/>crowns,<sp/>either<sp/>aligned<sp/>left<sp/>or<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*<ref refid="namespacetesseract_1a98233252a018dc9eb158c8223e2db208" kindref="member">kCrownLeft</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*<ref refid="namespacetesseract_1a9fec475017947c91c5cdb29b160f4453" kindref="member">kCrownRight</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="namespacetesseract_1a2f0e8f8921e73010316eaf366ec45852" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a2f0e8f8921e73010316eaf366ec45852" kindref="member">StrongModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*model)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>model<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>model<sp/>!=<sp/><ref refid="namespacetesseract_1a98233252a018dc9eb158c8223e2db208" kindref="member">kCrownLeft</ref><sp/>&amp;&amp;<sp/>model<sp/>!=<sp/><ref refid="namespacetesseract_1a9fec475017947c91c5cdb29b160f4453" kindref="member">kCrownRight</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structtesseract_1_1_line_hypothesis" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtesseract_1_1_line_hypothesis" kindref="compound">LineHypothesis</ref><sp/>{</highlight></codeline>
<codeline lineno="80" refid="structtesseract_1_1_line_hypothesis_1adfa78be50626c43e8fa64500f4cb08ed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtesseract_1_1_line_hypothesis_1adfa78be50626c43e8fa64500f4cb08ed" kindref="member">LineHypothesis</ref>()<sp/>:<sp/><ref refid="structtesseract_1_1_line_hypothesis_1a9dbc369f700ac22eb77973c389cbcefa" kindref="member">ty</ref>(<ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4a5dc9805a3ad0a4c99b98ff282e36d204" kindref="member">LT_UNKNOWN</ref>),<sp/><ref refid="structtesseract_1_1_line_hypothesis_1a40094dd9208b225aa9467ebc0ea53a4f" kindref="member">model</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="81" refid="structtesseract_1_1_line_hypothesis_1a406ded33b01a5773adc552c46339f5da" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtesseract_1_1_line_hypothesis_1a406ded33b01a5773adc552c46339f5da" kindref="member">LineHypothesis</ref>(<ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4" kindref="member">LineType</ref><sp/>line_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*m)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesseract_1_1_line_hypothesis_1a9dbc369f700ac22eb77973c389cbcefa" kindref="member">ty</ref>(line_type),<sp/><ref refid="structtesseract_1_1_line_hypothesis_1a40094dd9208b225aa9467ebc0ea53a4f" kindref="member">model</ref>(m)<sp/>{}</highlight></codeline>
<codeline lineno="83" refid="structtesseract_1_1_line_hypothesis_1ab380e9064f80d80460c7f288372226a8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structtesseract_1_1_line_hypothesis_1ab380e9064f80d80460c7f288372226a8" kindref="member">LineHypothesis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_line_hypothesis" kindref="compound">LineHypothesis</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structtesseract_1_1_line_hypothesis_1a9dbc369f700ac22eb77973c389cbcefa" kindref="member">ty</ref>(other.<ref refid="structtesseract_1_1_line_hypothesis_1a9dbc369f700ac22eb77973c389cbcefa" kindref="member">ty</ref>),<sp/><ref refid="structtesseract_1_1_line_hypothesis_1a40094dd9208b225aa9467ebc0ea53a4f" kindref="member">model</ref>(other.<ref refid="structtesseract_1_1_line_hypothesis_1a40094dd9208b225aa9467ebc0ea53a4f" kindref="member">model</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="structtesseract_1_1_line_hypothesis_1adfbe05985d7d2773f0c3ee8b72b52eae" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_line_hypothesis_1adfbe05985d7d2773f0c3ee8b72b52eae" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_line_hypothesis" kindref="compound">LineHypothesis</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_line_hypothesis_1a9dbc369f700ac22eb77973c389cbcefa" kindref="member">ty</ref><sp/>==<sp/>other.<ref refid="structtesseract_1_1_line_hypothesis_1a9dbc369f700ac22eb77973c389cbcefa" kindref="member">ty</ref><sp/>&amp;&amp;<sp/><ref refid="structtesseract_1_1_line_hypothesis_1a40094dd9208b225aa9467ebc0ea53a4f" kindref="member">model</ref><sp/>==<sp/>other.<ref refid="structtesseract_1_1_line_hypothesis_1a40094dd9208b225aa9467ebc0ea53a4f" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structtesseract_1_1_line_hypothesis_1a9dbc369f700ac22eb77973c389cbcefa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4" kindref="member">LineType</ref><sp/><ref refid="structtesseract_1_1_line_hypothesis_1a9dbc369f700ac22eb77973c389cbcefa" kindref="member">ty</ref>;</highlight></codeline>
<codeline lineno="91" refid="structtesseract_1_1_line_hypothesis_1a40094dd9208b225aa9467ebc0ea53a4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*<ref refid="structtesseract_1_1_line_hypothesis_1a40094dd9208b225aa9467ebc0ea53a4f" kindref="member">model</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="namespacetesseract_1a5616e4c6a53be12ea0d684b1f0fb8485" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Forward<sp/>Declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;const ParagraphModel *&gt;</ref><sp/><ref refid="namespacetesseract_1a5616e4c6a53be12ea0d684b1f0fb8485" kindref="member">SetOfModels</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Row<sp/>Scratch<sp/>Registers<sp/>are<sp/>data<sp/>generated<sp/>by<sp/>the<sp/>paragraph<sp/>detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>algorithm<sp/>based<sp/>on<sp/>a<sp/>RowInfo<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="classtesseract_1_1_row_scratch_registers" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>presume<sp/>row<sp/>will<sp/>outlive<sp/>us.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1af7939bb6dda65342551cf0f958ffe285" kindref="member">Init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_info" kindref="compound">RowInfo</ref><sp/>&amp;row);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4" kindref="member">LineType</ref><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a799dffc5a36821b0751fec9de5bfe8c7" kindref="member">GetLineType</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1af86c486b511cb293ee45a39233f99bd4" kindref="member">LineType</ref><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a799dffc5a36821b0751fec9de5bfe8c7" kindref="member">GetLineType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*model)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>this<sp/>as<sp/>a<sp/>start<sp/>line<sp/>type,<sp/>sans<sp/>model.<sp/><sp/>This<sp/>is<sp/>useful<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>marking<sp/>of<sp/>probable<sp/>body<sp/>lines<sp/>or<sp/>paragraph<sp/>start<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a5ac1cfb79119ecac5dcc7f292714b58e" kindref="member">SetStartLine</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>this<sp/>as<sp/>a<sp/>body<sp/>line<sp/>type,<sp/>sans<sp/>model.<sp/><sp/>This<sp/>is<sp/>useful<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initial<sp/>marking<sp/>of<sp/>probably<sp/>body<sp/>lines<sp/>or<sp/>paragraph<sp/>start<sp/>lines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a4444df7bef80fb2baa7f94dcc848eab3" kindref="member">SetBodyLine</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>that<sp/>this<sp/>row<sp/>fits<sp/>as<sp/>a<sp/>paragraph<sp/>start<sp/>line<sp/>in<sp/>the<sp/>given<sp/>model,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1ac661ad034b57b7f5a2886c9976933b1b" kindref="member">AddStartLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*model);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>that<sp/>this<sp/>row<sp/>fits<sp/>as<sp/>a<sp/>paragraph<sp/>body<sp/>line<sp/>in<sp/>the<sp/>given<sp/>model,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a6bd11d00c7e46e5546f5a3a9e8e80bb9" kindref="member">AddBodyLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*model);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>all<sp/>hypotheses<sp/>about<sp/>this<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classtesseract_1_1_row_scratch_registers_1a4b5abb3df8a610b52476ae463c4a900f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a4b5abb3df8a610b52476ae463c4a900f" kindref="member">SetUnknown</ref>()<sp/>{<sp/>hypotheses_.truncate(0);<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>all<sp/>hypotheses<sp/>of<sp/>strong<sp/>models<sp/>that<sp/>match<sp/>this<sp/>row<sp/>as<sp/>a<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1ae97c077ce2f7231d098ad4c36ed397bc" kindref="member">StartHypotheses</ref>(<ref refid="class_generic_vector_eq_eq" kindref="compound">SetOfModels</ref><sp/>*models)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>all<sp/>hypotheses<sp/>of<sp/>strong<sp/>models<sp/>matching<sp/>this<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a286be9e6a0dbff4773e63908e47128bd" kindref="member">StrongHypotheses</ref>(<ref refid="class_generic_vector_eq_eq" kindref="compound">SetOfModels</ref><sp/>*models)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>all<sp/>hypotheses<sp/>for<sp/>this<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a2734f261fcc7d1c69ce511dd0a57f818" kindref="member">NonNullHypotheses</ref>(<ref refid="class_generic_vector_eq_eq" kindref="compound">SetOfModels</ref><sp/>*models)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>any<sp/>hypotheses<sp/>whose<sp/>model<sp/>is<sp/>not<sp/>in<sp/>the<sp/>given<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1ab4b4ba0ceb0dc647802c7dfb45021797" kindref="member">DiscardNonMatchingHypotheses</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">SetOfModels</ref><sp/>&amp;models);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>only<sp/>one<sp/>hypothesis<sp/>and<sp/>that<sp/>is<sp/>that<sp/>this<sp/>line<sp/>is<sp/>a<sp/>paragraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>line<sp/>of<sp/>a<sp/>certain<sp/>model,<sp/>return<sp/>that<sp/>model.<sp/><sp/>Else<sp/>return<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*<ref refid="classtesseract_1_1_row_scratch_registers_1a6ff04cb924366a9448613f454b3543fe" kindref="member">UniqueStartHypothesis</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>only<sp/>one<sp/>hypothesis<sp/>and<sp/>that<sp/>is<sp/>that<sp/>this<sp/>line<sp/>is<sp/>a<sp/>paragraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>body<sp/>line<sp/>of<sp/>a<sp/>certain<sp/>model,<sp/>return<sp/>that<sp/>model.<sp/><sp/>Else<sp/>return<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*<ref refid="classtesseract_1_1_row_scratch_registers_1abca09d3b4538c40ba7da907dd41fff79" kindref="member">UniqueBodyHypothesis</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>indentation<sp/>for<sp/>the<sp/>side<sp/>opposite<sp/>of<sp/>the<sp/>aligned<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classtesseract_1_1_row_scratch_registers_1a56b066d9f536e64951140317d060b637" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a56b066d9f536e64951140317d060b637" kindref="member">OffsideIndent</ref>(<ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1" kindref="member">tesseract::ParagraphJustification</ref><sp/>just)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(just)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a93a23b19fec3ebdb587df6e0aa9e9fce" kindref="member">tesseract::JUSTIFICATION_RIGHT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a880a72675fbddb983dfd23b8c0dc6177" kindref="member">lindent_</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a0141f695e0959de2dc43e0eb94023ff6" kindref="member">tesseract::JUSTIFICATION_LEFT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a03b35da914e3dffa0454959f2a642432" kindref="member">rindent_</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a880a72675fbddb983dfd23b8c0dc6177" kindref="member">lindent_</ref><sp/>&gt;<sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a03b35da914e3dffa0454959f2a642432" kindref="member">rindent_</ref><sp/>?<sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a880a72675fbddb983dfd23b8c0dc6177" kindref="member">lindent_</ref><sp/>:<sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a03b35da914e3dffa0454959f2a642432" kindref="member">rindent_</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>indentation<sp/>for<sp/>the<sp/>side<sp/>the<sp/>text<sp/>is<sp/>aligned<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classtesseract_1_1_row_scratch_registers_1a1b995f3649381c72ba904b0b628d7fd7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a1b995f3649381c72ba904b0b628d7fd7" kindref="member">AlignsideIndent</ref>(<ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1" kindref="member">tesseract::ParagraphJustification</ref><sp/>just)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(just)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a93a23b19fec3ebdb587df6e0aa9e9fce" kindref="member">tesseract::JUSTIFICATION_RIGHT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a03b35da914e3dffa0454959f2a642432" kindref="member">rindent_</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a0141f695e0959de2dc43e0eb94023ff6" kindref="member">tesseract::JUSTIFICATION_LEFT</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a880a72675fbddb983dfd23b8c0dc6177" kindref="member">lindent_</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a880a72675fbddb983dfd23b8c0dc6177" kindref="member">lindent_</ref><sp/>&gt;<sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a03b35da914e3dffa0454959f2a642432" kindref="member">rindent_</ref><sp/>?<sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a880a72675fbddb983dfd23b8c0dc6177" kindref="member">lindent_</ref><sp/>:<sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a03b35da914e3dffa0454959f2a642432" kindref="member">rindent_</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>header<sp/>fields<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>row<sp/>headings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a0d7b1cca6b735498a9286b1842e55f92" kindref="member">AppendDebugHeaderFields</ref>(<ref refid="class_generic_vector" kindref="compound">GenericVector&lt;STRING&gt;</ref><sp/>*header);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>data<sp/>for<sp/>this<sp/>row<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>debug<sp/>strings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a57cc3690c4f6306a3af08421f8b7f006" kindref="member">AppendDebugInfo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref><sp/>&amp;theory,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;STRING&gt;</ref><sp/>*dbg)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classtesseract_1_1_row_scratch_registers_1a7a86a2a63937c6b9976d275bd42360fb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_info" kindref="compound">RowInfo</ref><sp/>*<ref refid="classtesseract_1_1_row_scratch_registers_1a7a86a2a63937c6b9976d275bd42360fb" kindref="member">ri_</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>four<sp/>constants<sp/>form<sp/>a<sp/>horizontal<sp/>box<sp/>model<sp/>for<sp/>the<sp/>white<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>edges<sp/>of<sp/>each<sp/>line.<sp/><sp/>At<sp/>each<sp/>point<sp/>in<sp/>the<sp/>algorithm,<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shall<sp/>hold:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ri_-&gt;pix_ldistance<sp/>=<sp/>lmargin_<sp/>+<sp/>lindent_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ri_-&gt;pix_rdistance<sp/>=<sp/>rindent_<sp/>+<sp/>rmargin_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="classtesseract_1_1_row_scratch_registers_1a5980c9d63c4c7fde05f13eade2356838" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a5980c9d63c4c7fde05f13eade2356838" kindref="member">lmargin_</ref>;</highlight></codeline>
<codeline lineno="178" refid="classtesseract_1_1_row_scratch_registers_1a880a72675fbddb983dfd23b8c0dc6177" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a880a72675fbddb983dfd23b8c0dc6177" kindref="member">lindent_</ref>;</highlight></codeline>
<codeline lineno="179" refid="classtesseract_1_1_row_scratch_registers_1a03b35da914e3dffa0454959f2a642432" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a03b35da914e3dffa0454959f2a642432" kindref="member">rindent_</ref>;</highlight></codeline>
<codeline lineno="180" refid="classtesseract_1_1_row_scratch_registers_1a36b06387969774ec5a66e496ade5561b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers_1a36b06387969774ec5a66e496ade5561b" kindref="member">rmargin_</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Hypotheses<sp/>of<sp/>either<sp/>LT_START<sp/>or<sp/>LT_BODY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;LineHypothesis&gt;</ref><sp/>hypotheses_;</highlight></codeline>
<codeline lineno="185"><highlight class="normal">};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>collection<sp/>of<sp/>convenience<sp/>functions<sp/>for<sp/>wrapping<sp/>the<sp/>set<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Paragraph<sp/>Models<sp/>we<sp/>believe<sp/>correctly<sp/>model<sp/>the<sp/>paragraphs<sp/>in<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classtesseract_1_1_paragraph_theory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>presume<sp/>models<sp/>will<sp/>outlive<sp/>us,<sp/>and<sp/>that<sp/>models<sp/>will<sp/>take<sp/>ownership</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>any<sp/>ParagraphModel<sp/>*&apos;s<sp/>we<sp/>add.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classtesseract_1_1_paragraph_theory_1a29153455785e1ee8d290a3f9217bc9c9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_paragraph_theory_1a29153455785e1ee8d290a3f9217bc9c9" kindref="member">ParagraphTheory</ref>(<ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ParagraphModel *&gt;</ref><sp/>*<ref refid="classtesseract_1_1_paragraph_theory_1a15ae7e55f888813fe2b72f74ea11c23a" kindref="member">models</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>models_(models)<sp/>{}</highlight></codeline>
<codeline lineno="195" refid="classtesseract_1_1_paragraph_theory_1a15ae7e55f888813fe2b72f74ea11c23a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ParagraphModel *&gt;</ref><sp/>&amp;<ref refid="classtesseract_1_1_paragraph_theory_1a15ae7e55f888813fe2b72f74ea11c23a" kindref="member">models</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*models_;<sp/>}</highlight></codeline>
<codeline lineno="196" refid="classtesseract_1_1_paragraph_theory_1aa44ab1d539807b2d4e78aaad876eaa66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ParagraphModel *&gt;</ref><sp/>&amp;<ref refid="classtesseract_1_1_paragraph_theory_1aa44ab1d539807b2d4e78aaad876eaa66" kindref="member">models</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*models_;<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>existing<sp/>model<sp/>if<sp/>one<sp/>that<sp/>is<sp/>Comparable()<sp/>can<sp/>be<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Else,<sp/>allocate<sp/>a<sp/>new<sp/>copy<sp/>of<sp/>model<sp/>to<sp/>save<sp/>and<sp/>return<sp/>a<sp/>pointer<sp/>to<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*<ref refid="classtesseract_1_1_paragraph_theory_1ae701beca9a73ff95107e82b6fa3aa1ff" kindref="member">AddModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>&amp;model);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>any<sp/>models<sp/>we&apos;ve<sp/>made<sp/>that<sp/>are<sp/>not<sp/>in<sp/>the<sp/>list<sp/>of<sp/>used<sp/>models.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_paragraph_theory_1ac945b8be877a405dd556cf830e8d1c7e" kindref="member">DiscardUnusedModels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">SetOfModels</ref><sp/>&amp;used_models);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>set<sp/>of<sp/>all<sp/>non-centered<sp/>models.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_paragraph_theory_1a33e212251fa9eb84dd8270c7f238ff61" kindref="member">NonCenteredModels</ref>(<ref refid="class_generic_vector_eq_eq" kindref="compound">SetOfModels</ref><sp/>*<ref refid="classtesseract_1_1_paragraph_theory_1a15ae7e55f888813fe2b72f74ea11c23a" kindref="member">models</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>any<sp/>of<sp/>the<sp/>non-centered<sp/>paragraph<sp/>models<sp/>we<sp/>know<sp/>about<sp/>fit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rows[start,<sp/>end),<sp/>return<sp/>it.<sp/><sp/>Else<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*<ref refid="classtesseract_1_1_paragraph_theory_1a6686340f77a669565d345995ac171a0d" kindref="member">Fits</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;RowScratchRegisters&gt;</ref><sp/>*rows,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_paragraph_theory_1a6824d3c12724d31d2eef0b514cbba192" kindref="member">IndexOf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*model)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ParagraphModel *&gt;</ref><sp/>*models_;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;ParagraphModel *&gt;</ref><sp/>models_we_added_;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a8f44dde2641dd1047debf38c4429dc2b" kindref="member">ValidFirstLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;RowScratchRegisters&gt;</ref><sp/>*rows,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*model);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a7933d5b144ff81c13320bfb6f32e0264" kindref="member">ValidBodyLine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;RowScratchRegisters&gt;</ref><sp/>*rows,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*model);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a2327e0fae9f7527a805d6cb2ac9bfc16" kindref="member">CrownCompatible</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;RowScratchRegisters&gt;</ref><sp/>*rows,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*model);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>class<sp/>for<sp/>smearing<sp/>Paragraph<sp/>Model<sp/>hypotheses<sp/>to<sp/>surrounding<sp/>rows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>idea<sp/>here<sp/>is<sp/>that<sp/>StrongEvidenceClassify<sp/>first<sp/>marks<sp/>only<sp/>exceedingly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>obvious<sp/>start<sp/>and<sp/>body<sp/>rows<sp/>and<sp/>constructs<sp/>models<sp/>of<sp/>them.<sp/><sp/>Thereafter,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>may<sp/>have<sp/>left<sp/>over<sp/>unmarked<sp/>lines<sp/>(mostly<sp/>end-of-paragraph<sp/>lines)<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>were<sp/>too<sp/>short<sp/>to<sp/>have<sp/>much<sp/>confidence<sp/>about,<sp/>but<sp/>which<sp/>fit<sp/>the<sp/>models<sp/>we&apos;ve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constructed<sp/>perfectly<sp/>and<sp/>which<sp/>we<sp/>ought<sp/>to<sp/>mark.<sp/><sp/>This<sp/>class<sp/>is<sp/>used<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;smear&quot;<sp/>our<sp/>models<sp/>over<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classtesseract_1_1_paragraph_model_smearer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_paragraph_model_smearer" kindref="compound">ParagraphModelSmearer</ref><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_paragraph_model_smearer_1a42b97ade9478b6198e94bae46b8de969" kindref="member">ParagraphModelSmearer</ref>(<ref refid="class_generic_vector" kindref="compound">GenericVector&lt;RowScratchRegisters&gt;</ref><sp/>*rows,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_end,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref><sp/>*theory);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Smear<sp/>forward<sp/>paragraph<sp/>models<sp/>from<sp/>existing<sp/>row<sp/>markings<sp/>to<sp/>subsequent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>lines<sp/>if<sp/>they<sp/>fit,<sp/>and<sp/>mark<sp/>any<sp/>thereafter<sp/>still<sp/>unmodeled<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>any<sp/>model<sp/>in<sp/>the<sp/>theory<sp/>that<sp/>fits<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_paragraph_model_smearer_1ad5865041cc00c68c5cb2235e35c31b31" kindref="member">Smear</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>in<sp/>open_models_<sp/>for<sp/>rows<sp/>[start_row,<sp/>end_row)<sp/>the<sp/>list<sp/>of<sp/>models</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>currently<sp/>open<sp/>at<sp/>each<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>model<sp/>is<sp/>still<sp/>open<sp/>in<sp/>a<sp/>row<sp/>if<sp/>some<sp/>previous<sp/>row<sp/>has<sp/>said<sp/>model<sp/>as<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>hypothesis,<sp/>and<sp/>all<sp/>rows<sp/>since<sp/>(including<sp/>this<sp/>row)<sp/>would<sp/>fit<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>either<sp/>a<sp/>body<sp/>or<sp/>start<sp/>line<sp/>in<sp/>that<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CalculateOpenModels(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_end);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">SetOfModels</ref><sp/>&amp;OpenModels(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>open_models_[row<sp/>-<sp/>row_start_<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_paragraph_theory" kindref="compound">ParagraphTheory</ref><sp/>*theory_;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;RowScratchRegisters&gt;</ref><sp/>*rows_;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_start_;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_end_;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>open_models_<sp/>corresponds<sp/>to<sp/>rows[start_row_<sp/>-<sp/>1,<sp/>end_row_]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>open_models_:<sp/><sp/>Contains<sp/>models<sp/>which<sp/>there<sp/>was<sp/>an<sp/>active<sp/>(open)<sp/>paragraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>as<sp/>of<sp/>the<sp/>previous<sp/>line<sp/>and<sp/>for<sp/>which<sp/>the<sp/>left<sp/>and<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indents<sp/>admit<sp/>the<sp/>possibility<sp/>that<sp/>this<sp/>text<sp/>line<sp/>continues</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>fit<sp/>the<sp/>same<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(eger):<sp/>Think<sp/>about<sp/>whether<sp/>we<sp/>can<sp/>get<sp/>rid<sp/>of<sp/>&quot;Open&quot;<sp/>models<sp/>and<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>use<sp/>the<sp/>current<sp/>hypotheses<sp/>on<sp/>RowScratchRegisters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;SetOfModels&gt;</ref><sp/>open_models_;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">};</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>all<sp/>hypotheses<sp/>about<sp/>lines<sp/>[start,<sp/>end)<sp/>and<sp/>reset<sp/>the<sp/>margins<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>percentile<sp/>(0..100)<sp/>value<sp/>of<sp/>the<sp/>left<sp/>and<sp/>right<sp/>row<sp/>edges<sp/>for<sp/>this<sp/>run<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a8f083a56b3a7be7431cea88c86f49216" kindref="member">RecomputeMarginsAndClearHypotheses</ref>(</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;RowScratchRegisters&gt;</ref><sp/>*rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>percentile);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>median<sp/>inter-word<sp/>space<sp/>in<sp/>rows[row_start,<sp/>row_end).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1adf0128a0f8d13a8183820ce034d56122" kindref="member">InterwordSpace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;RowScratchRegisters&gt;</ref><sp/>&amp;rows,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_end);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>first<sp/>word<sp/>on<sp/>the<sp/>after<sp/>line<sp/>can<sp/>fit<sp/>in<sp/>the<sp/>space<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>end<sp/>of<sp/>the<sp/>before<sp/>line<sp/>(knowing<sp/>which<sp/>way<sp/>the<sp/>text<sp/>is<sp/>aligned<sp/>and<sp/>read).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a5d73136a6cc816e7f51fcfbfe99d52c1" kindref="member">FirstWordWouldHaveFit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref><sp/>&amp;before,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref><sp/>&amp;after,</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1" kindref="member">tesseract::ParagraphJustification</ref><sp/>justification);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>first<sp/>word<sp/>on<sp/>the<sp/>after<sp/>line<sp/>can<sp/>fit<sp/>in<sp/>the<sp/>space<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>end<sp/>of<sp/>the<sp/>before<sp/>line<sp/>(not<sp/>knowing<sp/>the<sp/>text<sp/>alignment).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a5d73136a6cc816e7f51fcfbfe99d52c1" kindref="member">FirstWordWouldHaveFit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref><sp/>&amp;before,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref><sp/>&amp;after);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>rows[start,<sp/>end)<sp/>form<sp/>a<sp/>single<sp/>instance<sp/>of<sp/>the<sp/>given<sp/>paragraph<sp/>model?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ac1812316831faad241ffadb840e9a21e" kindref="member">RowsFitModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;RowScratchRegisters&gt;</ref><sp/>*rows,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>*model);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>text<sp/>and<sp/>geometry<sp/>of<sp/>two<sp/>rows<sp/>support<sp/>a<sp/>paragraph<sp/>break<sp/>between<sp/>them?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ac154ce339833f35931ef5b2e57d47a2a" kindref="member">LikelyParagraphStart</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref><sp/>&amp;before,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_row_scratch_registers" kindref="compound">RowScratchRegisters</ref><sp/>&amp;after,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1" kindref="member">tesseract::ParagraphJustification</ref><sp/>j);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>a<sp/>set<sp/>of<sp/>row_owners<sp/>pointing<sp/>to<sp/>PARAs<sp/>or<sp/>NULL<sp/>(no<sp/>paragraph<sp/>known),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>normalize<sp/>each<sp/>row_owner<sp/>to<sp/>point<sp/>to<sp/>an<sp/>actual<sp/>PARA,<sp/>and<sp/>output<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>paragraphs<sp/>in<sp/>order<sp/>onto<sp/>paragraphs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a9cafdf34c1f6a37446d3e656da69afdc" kindref="member">CanonicalizeDetectionResults</ref>(</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;PARA *&gt;</ref><sp/>*row_owners,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>PARA_LIST<sp/>*paragraphs);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_CCMAIN_PARAGRAPHS_INTERNAL_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccmain/paragraphs_internal.h"/>
  </compounddef>
</doxygen>
