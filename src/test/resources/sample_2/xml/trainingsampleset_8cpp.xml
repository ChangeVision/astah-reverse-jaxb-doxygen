<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="trainingsampleset_8cpp" kind="file">
    <compoundname>trainingsampleset.cpp</compoundname>
    <includes refid="trainingsampleset_8h" local="yes">trainingsampleset.h</includes>
    <includes local="yes">allheaders.h</includes>
    <includes refid="boxread_8h" local="yes">boxread.h</includes>
    <includes refid="fontinfo_8h" local="yes">fontinfo.h</includes>
    <includes refid="indexmapbidi_8h" local="yes">indexmapbidi.h</includes>
    <includes refid="intfeaturedist_8h" local="yes">intfeaturedist.h</includes>
    <includes refid="intfeaturemap_8h" local="yes">intfeaturemap.h</includes>
    <includes refid="intfeaturespace_8h" local="yes">intfeaturespace.h</includes>
    <includes refid="shapetable_8h" local="yes">shapetable.h</includes>
    <includes refid="trainingsample_8h" local="yes">trainingsample.h</includes>
    <includes refid="unicity__table_8h" local="yes">unicity_table.h</includes>
    <incdepgraph>
      <node id="28105">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="28106" relation="include">
        </childnode>
        <childnode refid="28111" relation="include">
        </childnode>
        <childnode refid="28077" relation="include">
        </childnode>
      </node>
      <node id="28052">
        <label>assert.h</label>
      </node>
      <node id="28063">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="28111">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="28058">
        <label>stdlib.h</label>
      </node>
      <node id="28055">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="28056" relation="include">
        </childnode>
      </node>
      <node id="28117">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="28054" relation="include">
        </childnode>
      </node>
      <node id="28083">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="28060" relation="include">
        </childnode>
      </node>
      <node id="28106">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="28107" relation="include">
        </childnode>
        <childnode refid="28060" relation="include">
        </childnode>
        <childnode refid="28077" relation="include">
        </childnode>
        <childnode refid="28108" relation="include">
        </childnode>
        <childnode refid="28080" relation="include">
        </childnode>
        <childnode refid="28076" relation="include">
        </childnode>
        <childnode refid="28109" relation="include">
        </childnode>
        <childnode refid="28110" relation="include">
        </childnode>
      </node>
      <node id="28127">
        <label>allheaders.h</label>
      </node>
      <node id="28093">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
      </node>
      <node id="28068">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="28058" relation="include">
        </childnode>
        <childnode refid="28062" relation="include">
        </childnode>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28069" relation="include">
        </childnode>
        <childnode refid="28060" relation="include">
        </childnode>
        <childnode refid="28071" relation="include">
        </childnode>
      </node>
      <node id="28067">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28068" relation="include">
        </childnode>
        <childnode refid="28072" relation="include">
        </childnode>
      </node>
      <node id="28051">
        <label>bitvector.h</label>
        <link refid="bitvector_8h"/>
        <childnode refid="28052" relation="include">
        </childnode>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28054" relation="include">
        </childnode>
      </node>
      <node id="28113">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28114" relation="include">
        </childnode>
        <childnode refid="28080" relation="include">
        </childnode>
      </node>
      <node id="28125">
        <label>mf.h</label>
        <link refid="mf_8h"/>
        <childnode refid="28122" relation="include">
        </childnode>
        <childnode refid="28114" relation="include">
        </childnode>
      </node>
      <node id="28132">
        <label>intfeaturespace.h</label>
        <link refid="intfeaturespace_8h"/>
        <childnode refid="28057" relation="include">
        </childnode>
        <childnode refid="28100" relation="include">
        </childnode>
      </node>
      <node id="28084">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="28085" relation="include">
        </childnode>
        <childnode refid="28092" relation="include">
        </childnode>
      </node>
      <node id="28066">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="28052" relation="include">
        </childnode>
        <childnode refid="28067" relation="include">
        </childnode>
        <childnode refid="28057" relation="include">
        </childnode>
        <childnode refid="28073" relation="include">
        </childnode>
        <childnode refid="28074" relation="include">
        </childnode>
        <childnode refid="28076" relation="include">
        </childnode>
        <childnode refid="28079" relation="include">
        </childnode>
      </node>
      <node id="28070">
        <label>stddef.h</label>
      </node>
      <node id="28075">
        <label>memory.h</label>
      </node>
      <node id="28119">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="28101" relation="include">
        </childnode>
      </node>
      <node id="28112">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28088" relation="include">
        </childnode>
      </node>
      <node id="28060">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="28054" relation="include">
        </childnode>
      </node>
      <node id="28101">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28074" relation="include">
        </childnode>
      </node>
      <node id="28056">
        <label>limits.h</label>
      </node>
      <node id="28098">
        <label>shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="28057" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
      </node>
      <node id="28123">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="28114" relation="include">
        </childnode>
        <childnode refid="28100" relation="include">
        </childnode>
        <childnode refid="28124" relation="include">
        </childnode>
        <childnode refid="28088" relation="include">
        </childnode>
      </node>
      <node id="28090">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="28088" relation="include">
        </childnode>
      </node>
      <node id="28091">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="28087" relation="include">
        </childnode>
      </node>
      <node id="28082">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28068" relation="include">
        </childnode>
        <childnode refid="28072" relation="include">
        </childnode>
      </node>
      <node id="28109">
        <label>pthread.h</label>
      </node>
      <node id="28131">
        <label>intfeaturemap.h</label>
        <link refid="intfeaturemap_8h"/>
        <childnode refid="28132" relation="include">
        </childnode>
        <childnode refid="28064" relation="include">
        </childnode>
        <childnode refid="28100" relation="include">
        </childnode>
      </node>
      <node id="28062">
        <label>string.h</label>
      </node>
      <node id="28078">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="28074" relation="include">
        </childnode>
      </node>
      <node id="28074">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="28075" relation="include">
        </childnode>
        <childnode refid="28062" relation="include">
        </childnode>
      </node>
      <node id="28104">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28062" relation="include">
        </childnode>
        <childnode refid="28058" relation="include">
        </childnode>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28094" relation="include">
        </childnode>
        <childnode refid="28105" relation="include">
        </childnode>
      </node>
      <node id="28092">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="28088" relation="include">
        </childnode>
        <childnode refid="28087" relation="include">
        </childnode>
        <childnode refid="28063" relation="include">
        </childnode>
        <childnode refid="28093" relation="include">
        </childnode>
        <childnode refid="28094" relation="include">
        </childnode>
      </node>
      <node id="28081">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="28054" relation="include">
        </childnode>
      </node>
      <node id="28059">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="28054" relation="include">
        </childnode>
      </node>
      <node id="28110">
        <label>semaphore.h</label>
      </node>
      <node id="28128">
        <label>boxread.h</label>
        <link refid="boxread_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28077" relation="include">
        </childnode>
      </node>
      <node id="28085">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="28086" relation="include">
        </childnode>
        <childnode refid="28091" relation="include">
        </childnode>
        <childnode refid="28081" relation="include">
        </childnode>
        <childnode refid="28092" relation="include">
        </childnode>
        <childnode refid="28083" relation="include">
        </childnode>
        <childnode refid="28093" relation="include">
        </childnode>
      </node>
      <node id="28079">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="28080" relation="include">
        </childnode>
        <childnode refid="28081" relation="include">
        </childnode>
        <childnode refid="28082" relation="include">
        </childnode>
        <childnode refid="28077" relation="include">
        </childnode>
        <childnode refid="28083" relation="include">
        </childnode>
        <childnode refid="28084" relation="include">
        </childnode>
        <childnode refid="28095" relation="include">
        </childnode>
      </node>
      <node id="28095">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28096" relation="include">
        </childnode>
        <childnode refid="28079" relation="include">
        </childnode>
      </node>
      <node id="28049">
        <label>classify/trainingsampleset.cpp</label>
        <link refid="trainingsampleset.cpp"/>
        <childnode refid="28050" relation="include">
        </childnode>
        <childnode refid="28127" relation="include">
        </childnode>
        <childnode refid="28128" relation="include">
        </childnode>
        <childnode refid="28129" relation="include">
        </childnode>
        <childnode refid="28064" relation="include">
        </childnode>
        <childnode refid="28130" relation="include">
        </childnode>
        <childnode refid="28131" relation="include">
        </childnode>
        <childnode refid="28132" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28120" relation="include">
        </childnode>
        <childnode refid="28118" relation="include">
        </childnode>
      </node>
      <node id="28071">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="28060" relation="include">
        </childnode>
      </node>
      <node id="28102">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28103" relation="include">
        </childnode>
        <childnode refid="28112" relation="include">
        </childnode>
        <childnode refid="28113" relation="include">
        </childnode>
        <childnode refid="28080" relation="include">
        </childnode>
      </node>
      <node id="28107">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="28089" relation="include">
        </childnode>
        <childnode refid="28094" relation="include">
        </childnode>
        <childnode refid="28074" relation="include">
        </childnode>
        <childnode refid="28076" relation="include">
        </childnode>
        <childnode refid="28057" relation="include">
        </childnode>
      </node>
      <node id="28118">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="28059" relation="include">
        </childnode>
        <childnode refid="28060" relation="include">
        </childnode>
        <childnode refid="28057" relation="include">
        </childnode>
      </node>
      <node id="28088">
        <label>math.h</label>
      </node>
      <node id="28086">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="28087" relation="include">
        </childnode>
        <childnode refid="28091" relation="include">
        </childnode>
      </node>
      <node id="28072">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="28060" relation="include">
        </childnode>
      </node>
      <node id="28050">
        <label>trainingsampleset.h</label>
        <link refid="trainingsampleset_8h"/>
        <childnode refid="28051" relation="include">
        </childnode>
        <childnode refid="28057" relation="include">
        </childnode>
        <childnode refid="28064" relation="include">
        </childnode>
        <childnode refid="28065" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28120" relation="include">
        </childnode>
      </node>
      <node id="28126">
        <label>picofeat.h</label>
        <link refid="picofeat_8h"/>
        <childnode refid="28122" relation="include">
        </childnode>
        <childnode refid="28080" relation="include">
        </childnode>
      </node>
      <node id="28097">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="28087" relation="include">
        </childnode>
      </node>
      <node id="28115">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="28088" relation="include">
        </childnode>
        <childnode refid="28114" relation="include">
        </childnode>
      </node>
      <node id="28103">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="28104" relation="include">
        </childnode>
        <childnode refid="28059" relation="include">
        </childnode>
      </node>
      <node id="28122">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="28114" relation="include">
        </childnode>
        <childnode refid="28053" relation="include">
        </childnode>
      </node>
      <node id="28080">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28057" relation="include">
        </childnode>
        <childnode refid="28077" relation="include">
        </childnode>
      </node>
      <node id="28057">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28058" relation="include">
        </childnode>
        <childnode refid="28059" relation="include">
        </childnode>
        <childnode refid="28060" relation="include">
        </childnode>
        <childnode refid="28061" relation="include">
        </childnode>
        <childnode refid="28063" relation="include">
        </childnode>
      </node>
      <node id="28069">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="28070" relation="include">
        </childnode>
        <childnode refid="28054" relation="include">
        </childnode>
      </node>
      <node id="28116">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="28117" relation="include">
        </childnode>
        <childnode refid="28104" relation="include">
        </childnode>
        <childnode refid="28074" relation="include">
        </childnode>
        <childnode refid="28118" relation="include">
        </childnode>
        <childnode refid="28080" relation="include">
        </childnode>
      </node>
      <node id="28120">
        <label>trainingsample.h</label>
        <link refid="trainingsample_8h"/>
        <childnode refid="28089" relation="include">
        </childnode>
        <childnode refid="28121" relation="include">
        </childnode>
        <childnode refid="28123" relation="include">
        </childnode>
        <childnode refid="28099" relation="include">
        </childnode>
        <childnode refid="28065" relation="include">
        </childnode>
        <childnode refid="28125" relation="include">
        </childnode>
        <childnode refid="28126" relation="include">
        </childnode>
        <childnode refid="28098" relation="include">
        </childnode>
        <childnode refid="28076" relation="include">
        </childnode>
      </node>
      <node id="28121">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="28122" relation="include">
        </childnode>
      </node>
      <node id="28089">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28068" relation="include">
        </childnode>
        <childnode refid="28072" relation="include">
        </childnode>
      </node>
      <node id="28076">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="28060" relation="include">
        </childnode>
        <childnode refid="28061" relation="include">
        </childnode>
        <childnode refid="28077" relation="include">
        </childnode>
        <childnode refid="28059" relation="include">
        </childnode>
        <childnode refid="28074" relation="include">
        </childnode>
        <childnode refid="28078" relation="include">
        </childnode>
      </node>
      <node id="28130">
        <label>intfeaturedist.h</label>
        <link refid="intfeaturedist_8h"/>
        <childnode refid="28057" relation="include">
        </childnode>
      </node>
      <node id="28129">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="28057" relation="include">
        </childnode>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28074" relation="include">
        </childnode>
      </node>
      <node id="28087">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28088" relation="include">
        </childnode>
        <childnode refid="28089" relation="include">
        </childnode>
        <childnode refid="28090" relation="include">
        </childnode>
      </node>
      <node id="28073">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="28094">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="28080" relation="include">
        </childnode>
      </node>
      <node id="28099">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="28080" relation="include">
        </childnode>
        <childnode refid="28100" relation="include">
        </childnode>
        <childnode refid="28119" relation="include">
        </childnode>
      </node>
      <node id="28054">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="28055" relation="include">
        </childnode>
      </node>
      <node id="28053">
        <label>stdio.h</label>
      </node>
      <node id="28064">
        <label>indexmapbidi.h</label>
        <link refid="indexmapbidi_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28057" relation="include">
        </childnode>
      </node>
      <node id="28065">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="28066" relation="include">
        </childnode>
        <childnode refid="28076" relation="include">
        </childnode>
      </node>
      <node id="28100">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="28057" relation="include">
        </childnode>
        <childnode refid="28101" relation="include">
        </childnode>
        <childnode refid="28102" relation="include">
        </childnode>
        <childnode refid="28116" relation="include">
        </childnode>
        <childnode refid="28093" relation="include">
        </childnode>
        <childnode refid="28076" relation="include">
        </childnode>
      </node>
      <node id="28108">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28054" relation="include">
        </childnode>
        <childnode refid="28094" relation="include">
        </childnode>
      </node>
      <node id="28124">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28054" relation="include">
        </childnode>
      </node>
      <node id="28077">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28062" relation="include">
        </childnode>
        <childnode refid="28055" relation="include">
        </childnode>
        <childnode refid="28069" relation="include">
        </childnode>
      </node>
      <node id="28114">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="28067" relation="include">
        </childnode>
        <childnode refid="28092" relation="include">
        </childnode>
        <childnode refid="28115" relation="include">
        </childnode>
      </node>
      <node id="28061">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="28053" relation="include">
        </childnode>
        <childnode refid="28062" relation="include">
        </childnode>
      </node>
      <node id="28096">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="28097" relation="include">
        </childnode>
        <childnode refid="28068" relation="include">
        </childnode>
        <childnode refid="28069" relation="include">
        </childnode>
        <childnode refid="28092" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2010<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>rays@google.com<sp/>(Ray<sp/>Smith)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trainingsampleset_8h" kindref="compound">trainingsampleset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="boxread_8h" kindref="compound">boxread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fontinfo_8h" kindref="compound">fontinfo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="indexmapbidi_8h" kindref="compound">indexmapbidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intfeaturedist_8h" kindref="compound">intfeaturedist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intfeaturemap_8h" kindref="compound">intfeaturemap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intfeaturespace_8h" kindref="compound">intfeaturespace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shapetable_8h" kindref="compound">shapetable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trainingsample_8h" kindref="compound">trainingsample.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicity__table_8h" kindref="compound">unicity_table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aedc256912be3e2d615b8899ba661300a" kindref="member">kTestChar</ref><sp/>=<sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>37;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>number<sp/>of<sp/>distances<sp/>to<sp/>compute<sp/>the<sp/>squared<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aeaad2b6ef5a02069d1898468d26da372" kindref="member">kSquareLimit</ref><sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prime<sp/>numbers<sp/>for<sp/>subsampling<sp/>distances.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ab57f233601ee3f43a6bdcc4478b59547" kindref="member">kPrime1</ref><sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a606492ee81ad0e6765a6b2f8dbb798df" kindref="member">kPrime2</ref><sp/>=<sp/>13;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>samples<sp/>from<sp/>which<sp/>to<sp/>start<sp/>discarding<sp/>outliers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aaaac2947d8026a1e91fc20287ef90e3a" kindref="member">kMinOutlierSamples</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">TrainingSampleSet::FontClassInfo::FontClassInfo()</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>:<sp/>num_raw_samples(0),<sp/>canonical_sample(-1),<sp/>canonical_dist(0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TrainingSampleSet::FontClassInfo::Serialize(FILE*<sp/>fp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;num_raw_samples,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(num_raw_samples),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;canonical_sample,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(canonical_sample),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;canonical_dist,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(canonical_dist),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!samples.Serialize(fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TrainingSampleSet::FontClassInfo::DeSerialize(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;num_raw_samples,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(num_raw_samples),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;canonical_sample,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(canonical_sample),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;canonical_dist,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(canonical_dist),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!samples.DeSerialize(swap,<sp/>fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1ae7eeeca49954d4b13d269729f2fecd5a" kindref="member">ReverseN</ref>(&amp;num_raw_samples,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(num_raw_samples));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1ae7eeeca49954d4b13d269729f2fecd5a" kindref="member">ReverseN</ref>(&amp;canonical_sample,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(canonical_sample));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1ae7eeeca49954d4b13d269729f2fecd5a" kindref="member">ReverseN</ref>(&amp;canonical_dist,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(canonical_dist));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="classtesseract_1_1_training_sample_set_1a12d0f6b42d499e6c1e9a203280784153" kindref="member">TrainingSampleSet::TrainingSampleSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_unicity_table" kindref="compound">UnicityTable&lt;FontInfo&gt;</ref>&amp;<sp/>font_table)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>:<sp/>num_raw_samples_(0),<sp/>unicharset_size_(0),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>font_class_array_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>fontinfo_table_(font_table)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="classtesseract_1_1_training_sample_set_1ad4a373a77c4484d2a5d294e62ea229fc" kindref="member">TrainingSampleSet::~TrainingSampleSet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>font_class_array_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a68f083fa05878091a702900135658ee7" kindref="member">TrainingSampleSet::Serialize</ref>(FILE*<sp/>fp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!samples_.Serialize(fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a1f82a51ad2d63d499a625b97ec806811" kindref="member">save_to_file</ref>(fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1aa92b1c868939853b0e20c6842ece0f1a" kindref="member">Serialize</ref>(fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>not_null<sp/>=<sp/>font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;not_null,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(not_null),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not_null)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font_class_array_-&gt;<ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y_1a79342ffa17a841cd11eec223dfffbc57" kindref="member">SerializeClasses</ref>(fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a71116090704f3cea5b54b541460fe1e7" kindref="member">TrainingSampleSet::DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!samples_.DeSerialize(swap,<sp/>fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>num_raw_samples_<sp/>=<sp/>samples_.size();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af066ba55fdc20f996eaaed05618b377e" kindref="member">load_from_file</ref>(fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1ad54cf4a1295408ec26e87ce377a8747d" kindref="member">DeSerialize</ref>(swap,<sp/>fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>font_class_array_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>font_class_array_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>not_null;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;not_null,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(not_null),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not_null)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>FontClassInfo<sp/>empty;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>font_class_array_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y" kindref="compound">GENERIC_2D_ARRAY&lt;FontClassInfo &gt;</ref>(1,<sp/>1<sp/>,<sp/>empty);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!font_class_array_-&gt;<ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y_1a34b8abb019eceb7baf3a6848ff0c02c3" kindref="member">DeSerializeClasses</ref>(swap,<sp/>fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>unicharset_size_<sp/>=<sp/>unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>an<sp/>initial<sp/>unicharset,<sp/>or<sp/>set<sp/>one<sp/>up<sp/>if<sp/>the<sp/>file<sp/>cannot<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a7ea5c9008105e71b050cd8e6d528c7e8" kindref="member">TrainingSampleSet::LoadUnicharset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af066ba55fdc20f996eaaed05618b377e" kindref="member">load_from_file</ref>(filename))<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>load<sp/>unicharset<sp/>from<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Building<sp/>unicharset<sp/>for<sp/>boosting<sp/>from<sp/>scratch...\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad9060160cd52065e89cbc8927454f525" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Space<sp/>character<sp/>needed<sp/>to<sp/>represent<sp/>NIL_LIST<sp/>classification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>unicharset_size_<sp/>=<sp/>unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>character<sp/>sample<sp/>to<sp/>this<sp/>sample<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>unichar<sp/>is<sp/>not<sp/>already<sp/>in<sp/>the<sp/>local<sp/>unicharset,<sp/>it<sp/>is<sp/>added.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>unichar_id<sp/>of<sp/>the<sp/>added<sp/>sample,<sp/>from<sp/>the<sp/>local<sp/>unicharset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a277711d46f9298fb058502dbcae3560d" kindref="member">TrainingSampleSet::AddSample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>unichar,<sp/>TrainingSample*<sp/><ref refid="structsample" kindref="compound">sample</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(unichar))<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(unichar);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>()<sp/>&gt;<sp/><ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Size<sp/>of<sp/>unicharset<sp/>in<sp/>TrainingSampleSet::AddSample<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;greater<sp/>than<sp/>MAX_NUM_CLASSES\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>char_id<sp/>=<sp/>unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(unichar);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1a277711d46f9298fb058502dbcae3560d" kindref="member">AddSample</ref>(char_id,<sp/>sample);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_id;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>character<sp/>sample<sp/>to<sp/>this<sp/>sample<sp/>set<sp/>with<sp/>the<sp/>given<sp/>unichar_id,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>must<sp/>correspond<sp/>to<sp/>the<sp/>local<sp/>unicharset<sp/>(in<sp/>this).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a277711d46f9298fb058502dbcae3560d" kindref="member">TrainingSampleSet::AddSample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id,<sp/>TrainingSample*<sp/>sample)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>sample-&gt;set_class_id(unichar_id);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>samples_.push_back(sample);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>num_raw_samples_<sp/>=<sp/>samples_.size();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>unicharset_size_<sp/>=<sp/>unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>for<sp/>the<sp/>given<sp/>font,class<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>randomize<sp/>is<sp/>true,<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>randomizing<sp/>on.<sp/>(Increases<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>if<sp/>small.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a7f5168960275b7cfed23408acd78d275" kindref="member">TrainingSampleSet::NumClassSamples</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>randomize)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_id<sp/>&lt;<sp/>0<sp/>||<sp/>class_id<sp/>&lt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font_id<sp/>&gt;=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1ae108e47d0f0049137072ad2bc1f6705d" kindref="member">SparseSize</ref>()<sp/>||<sp/>class_id<sp/>&gt;=<sp/>unicharset_size_)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>no<sp/>samples<sp/>because<sp/>the<sp/>font<sp/>or<sp/>class<sp/>doesn&apos;t<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_index<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>font<sp/>has<sp/>no<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(randomize)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*font_class_array_)(font_index,<sp/>class_id).samples.size();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*font_class_array_)(font_index,<sp/>class_id).<ref refid="classtesseract_1_1_training_sample_set_1af48888d68fc56c5b6911957530b59389" kindref="member">num_raw_samples</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>a<sp/>sample<sp/>by<sp/>its<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample*<sp/><ref refid="classtesseract_1_1_training_sample_set_1a8fa00414deb6726dcf6b770df5af6e8a" kindref="member">TrainingSampleSet::GetSample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples_[index];</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>a<sp/>sample<sp/>by<sp/>its<sp/>font,<sp/>class,<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample*<sp/><ref refid="classtesseract_1_1_training_sample_set_1a8fa00414deb6726dcf6b770df5af6e8a" kindref="member">TrainingSampleSet::GetSample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_index<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_index<sp/>=<sp/>(*font_class_array_)(font_index,<sp/>class_id).samples[index];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples_[sample_index];</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>sample<sp/>by<sp/>its<sp/>font,<sp/>class,<sp/>index.<sp/>Does<sp/>not<sp/>randomize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">TrainingSample*<sp/><ref refid="classtesseract_1_1_training_sample_set_1af960a1e74b485c6f7d0baad12c93a925" kindref="member">TrainingSampleSet::MutableSample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_index<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_index<sp/>=<sp/>(*font_class_array_)(font_index,<sp/>class_id).samples[index];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples_[sample_index];</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>string<sp/>debug<sp/>representation<sp/>of<sp/>the<sp/>given<sp/>sample:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>font,<sp/>unichar_str,<sp/>bounding<sp/>box,<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="classtesseract_1_1_training_sample_set_1a5e48aa19b8dcc15bdaca1fb0b5ec685c" kindref="member">TrainingSampleSet::SampleToString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample&amp;<sp/>sample)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>boxfile_str;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="boxread_8cpp_1a12d56f93e661ff006a382fb8d7314898" kindref="member">MakeBoxFileStr</ref>(unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(sample.class_id()),</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample.bounding_box(),<sp/>sample.page_num(),<sp/>&amp;boxfile_str);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>(fontinfo_table_.get(sample.font_id()).name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>boxfile_str;</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>combined<sp/>set<sp/>of<sp/>features<sp/>used<sp/>by<sp/>all<sp/>the<sp/>samples<sp/>of<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>font/class<sp/>combination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BitVector&amp;<sp/><ref refid="classtesseract_1_1_training_sample_set_1a75dac50ffd51d39ef76894e88aa1b8a2" kindref="member">TrainingSampleSet::GetCloudFeatures</ref>(</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_index<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*font_class_array_)(font_index,<sp/>class_id).cloud_features;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>indexed<sp/>features<sp/>of<sp/>the<sp/>canonical<sp/>sample<sp/>of<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>font/class<sp/>combination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/><ref refid="classtesseract_1_1_training_sample_set_1aeff8d3e8f232385ffd02e859b77c0573" kindref="member">TrainingSampleSet::GetCanonicalFeatures</ref>(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_index<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*font_class_array_)(font_index,<sp/>class_id).canonical_features;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>given<sp/>UniCharAndFonts<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>matched_fonts,<sp/>only<sp/>matching<sp/>fonts,<sp/>are<sp/>considered,<sp/>unless<sp/>that<sp/>yields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>empty<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1afeb41df79aa69ffa132fc1a0e03cb040" kindref="member">TrainingSampleSet::UnicharDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnicharAndFonts&amp;<sp/>uf1,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnicharAndFonts&amp;<sp/>uf2,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matched_fonts,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureMap&amp;<sp/>feature_map)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_fonts1<sp/>=<sp/>uf1.font_ids.size();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>uf1.unichar_id;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_fonts2<sp/>=<sp/>uf2.font_ids.size();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2<sp/>=<sp/>uf2.unichar_id;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist_sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matched_fonts)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>distances<sp/>only<sp/>where<sp/>fonts<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_fonts1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>uf1.font_ids[i];</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>num_fonts2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f2<sp/>=<sp/>uf2.font_ids[j];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f1<sp/>==<sp/>f2)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist_sum<sp/>+=<sp/><ref refid="classtesseract_1_1_training_sample_set_1ac43ab2ddfca3d7a77dfda920b65853ca" kindref="member">ClusterDistance</ref>(f1,<sp/>c1,<sp/>f2,<sp/>c2,<sp/>feature_map);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++dist_count;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_fonts1<sp/>*<sp/>num_fonts2<sp/>&lt;=<sp/><ref refid="namespacetesseract_1aeaad2b6ef5a02069d1898468d26da372" kindref="member">kSquareLimit</ref>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>enough<sp/>sets<sp/>to<sp/>compute<sp/>all<sp/>the<sp/>distances.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_fonts1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>uf1.font_ids[i];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>num_fonts2;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f2<sp/>=<sp/>uf2.font_ids[j];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist_sum<sp/>+=<sp/><ref refid="classtesseract_1_1_training_sample_set_1ac43ab2ddfca3d7a77dfda920b65853ca" kindref="member">ClusterDistance</ref>(f1,<sp/>c1,<sp/>f2,<sp/>c2,<sp/>feature_map);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Cluster<sp/>dist<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>=<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1,<sp/>c1,<sp/>f2,<sp/>c2,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1ac43ab2ddfca3d7a77dfda920b65853ca" kindref="member">ClusterDistance</ref>(f1,<sp/>c1,<sp/>f2,<sp/>c2,<sp/>feature_map));</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++dist_count;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Subsample<sp/>distances,<sp/>using<sp/>the<sp/>largest<sp/>set<sp/>once,<sp/>and<sp/>stepping<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>smaller<sp/>set<sp/>so<sp/>as<sp/>to<sp/>ensure<sp/>that<sp/>all<sp/>the<sp/>pairs<sp/>are<sp/>different.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment<sp/>=<sp/><ref refid="namespacetesseract_1ab57f233601ee3f43a6bdcc4478b59547" kindref="member">kPrime1</ref><sp/>!=<sp/>num_fonts2<sp/>?<sp/><ref refid="namespacetesseract_1ab57f233601ee3f43a6bdcc4478b59547" kindref="member">kPrime1</ref><sp/>:<sp/><ref refid="namespacetesseract_1a606492ee81ad0e6765a6b2f8dbb798df" kindref="member">kPrime2</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a6d2560a4ae24102d9919eb961d0bca34" kindref="member">num_samples</ref><sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(num_fonts1,<sp/>num_fonts2);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_training_sample_set_1a6d2560a4ae24102d9919eb961d0bca34" kindref="member">num_samples</ref>;<sp/>++i,<sp/>index<sp/>+=<sp/>increment)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>uf1.font_ids[i<sp/>%<sp/>num_fonts1];</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f2<sp/>=<sp/>uf2.font_ids[index<sp/>%<sp/>num_fonts2];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Cluster<sp/>dist<sp/>%d<sp/>%d<sp/>%d<sp/>%d<sp/>=<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1,<sp/>c1,<sp/>f2,<sp/>c2,<sp/><ref refid="classtesseract_1_1_training_sample_set_1ac43ab2ddfca3d7a77dfda920b65853ca" kindref="member">ClusterDistance</ref>(f1,<sp/>c1,<sp/>f2,<sp/>c2,<sp/>feature_map));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dist_sum<sp/>+=<sp/><ref refid="classtesseract_1_1_training_sample_set_1ac43ab2ddfca3d7a77dfda920b65853ca" kindref="member">ClusterDistance</ref>(f1,<sp/>c1,<sp/>f2,<sp/>c2,<sp/>feature_map);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++dist_count;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist_count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matched_fonts)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1afeb41df79aa69ffa132fc1a0e03cb040" kindref="member">UnicharDistance</ref>(uf1,<sp/>uf2,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>feature_map);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dist_sum<sp/>/<sp/>dist_count;</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>given<sp/>pair<sp/>of<sp/>font/class<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>in<sp/>cache<sp/>or<sp/>computes<sp/>and<sp/>caches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ac43ab2ddfca3d7a77dfda920b65853ca" kindref="member">TrainingSampleSet::ClusterDistance</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id1,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id2,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureMap&amp;<sp/>feature_map)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index1<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id1);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index2<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id2);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_index1<sp/>&lt;<sp/>0<sp/>||<sp/>font_index2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>FontClassInfo&amp;<sp/>fc_info<sp/>=<sp/>(*font_class_array_)(font_index1,<sp/>class_id1);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_id1<sp/>==<sp/>font_id2)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>case<sp/>cache<sp/>for<sp/>speed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc_info.unichar_distance_cache.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc_info.unichar_distance_cache.init_to_size(unicharset_size_,<sp/>-1.0f);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc_info.unichar_distance_cache[class_id2]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Distance<sp/>has<sp/>to<sp/>be<sp/>calculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1afa47d459869c3824552699a6965edd15" kindref="member">ComputeClusterDistance</ref>(font_id1,<sp/>class_id1,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_id2,<sp/>class_id2,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_map);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc_info.unichar_distance_cache[class_id2]<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>to<sp/>the<sp/>symmetric<sp/>cache<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FontClassInfo&amp;<sp/>fc_info2<sp/>=<sp/>(*font_class_array_)(font_index2,<sp/>class_id2);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc_info2.unichar_distance_cache.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc_info2.unichar_distance_cache.init_to_size(unicharset_size_,<sp/>-1.0f);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc_info2.unichar_distance_cache[class_id1]<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc_info.unichar_distance_cache[class_id2];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_id1<sp/>==<sp/>class_id2)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Another<sp/>special-case<sp/>cache<sp/>for<sp/>equal<sp/>class-id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc_info.font_distance_cache.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc_info.font_distance_cache.init_to_size(font_id_map_.<ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>(),</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0f);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc_info.font_distance_cache[font_index2]<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Distance<sp/>has<sp/>to<sp/>be<sp/>calculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1afa47d459869c3824552699a6965edd15" kindref="member">ComputeClusterDistance</ref>(font_id1,<sp/>class_id1,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_id2,<sp/>class_id2,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_map);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc_info.font_distance_cache[font_index2]<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>to<sp/>the<sp/>symmetric<sp/>cache<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FontClassInfo&amp;<sp/>fc_info2<sp/>=<sp/>(*font_class_array_)(font_index2,<sp/>class_id2);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fc_info2.font_distance_cache.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc_info2.font_distance_cache.init_to_size(font_id_map_.<ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>(),</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0f);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fc_info2.font_distance_cache[font_index1]<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc_info.font_distance_cache[font_index2];</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>font<sp/>and<sp/>class<sp/>are<sp/>different.<sp/>Linear<sp/>search<sp/>for<sp/>class_id2/font_id2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>what<sp/>is<sp/>a<sp/>hopefully<sp/>short<sp/>list<sp/>of<sp/>distances.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cache_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cache_index<sp/>&lt;<sp/>fc_info.distance_cache.size()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fc_info.distance_cache[cache_index].unichar_id<sp/>!=<sp/>class_id2<sp/>||</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fc_info.distance_cache[cache_index].font_id<sp/>!=<sp/>font_id2))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>++cache_index;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cache_index<sp/>==<sp/>fc_info.distance_cache.size())<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Distance<sp/>has<sp/>to<sp/>be<sp/>calculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1afa47d459869c3824552699a6965edd15" kindref="member">ComputeClusterDistance</ref>(font_id1,<sp/>class_id1,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_id2,<sp/>class_id2,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_map);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>FontClassDistance<sp/>fc_dist<sp/>=<sp/>{<sp/>class_id2,<sp/>font_id2,<sp/>result<sp/>};</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>fc_info.distance_cache.push_back(fc_dist);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>to<sp/>the<sp/>symmetric<sp/>cache<sp/>entry.<sp/>We<sp/>know<sp/>it<sp/>isn&apos;t<sp/>there<sp/>already,<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>always<sp/>copy<sp/>to<sp/>the<sp/>symmetric<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>FontClassInfo&amp;<sp/>fc_info2<sp/>=<sp/>(*font_class_array_)(font_index2,<sp/>class_id2);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>fc_dist.unichar_id<sp/>=<sp/>class_id1;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>fc_dist.font_id<sp/>=<sp/>font_id1;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>fc_info2.distance_cache.push_back(fc_dist);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fc_info.distance_cache[cache_index].distance;</highlight></codeline>
<codeline lineno="365"><highlight class="normal">}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>given<sp/>pair<sp/>of<sp/>font/class<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1afa47d459869c3824552699a6965edd15" kindref="member">TrainingSampleSet::ComputeClusterDistance</ref>(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id2,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureMap&amp;<sp/>feature_map)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1a3b36d6df2a88be723a19bfb87cdde125" kindref="member">ReliablySeparable</ref>(font_id1,<sp/>class_id1,<sp/>font_id2,<sp/>class_id2,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_map,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>dist<sp/>+=<sp/><ref refid="classtesseract_1_1_training_sample_set_1a3b36d6df2a88be723a19bfb87cdde125" kindref="member">ReliablySeparable</ref>(font_id2,<sp/>class_id2,<sp/>font_id1,<sp/>class_id1,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature_map,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denominator<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1aeff8d3e8f232385ffd02e859b77c0573" kindref="member">GetCanonicalFeatures</ref>(font_id1,<sp/>class_id1).<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>denominator<sp/>+=<sp/><ref refid="classtesseract_1_1_training_sample_set_1aeff8d3e8f232385ffd02e859b77c0573" kindref="member">GetCanonicalFeatures</ref>(font_id2,<sp/>class_id2).<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(dist)<sp/>/<sp/>denominator;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>add<sp/>a<sp/>feature<sp/>and<sp/>its<sp/>near<sp/>neighbors<sp/>to<sp/>the<sp/>good_features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>levels<sp/>indicates<sp/>how<sp/>many<sp/>times<sp/>to<sp/>compute<sp/>the<sp/>offset<sp/>features<sp/>of<sp/>what<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>already<sp/>there.<sp/>This<sp/>is<sp/>done<sp/>by<sp/>iteration<sp/>rather<sp/>than<sp/>recursion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddNearFeatures(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureMap&amp;<sp/>feature_map,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>levels,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>*<sp/>good_features)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_num_features<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>good_features-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(f);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_features<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;<sp/>level<sp/>&lt;<sp/>levels;<sp/>++level)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>prev_num_features;<sp/>i<sp/>&lt;<sp/>num_features;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feature<sp/>=<sp/>(*good_features)[i];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/>-kNumOffsetMaps;<sp/>dir<sp/>&lt;=<sp/>kNumOffsetMaps;<sp/>++dir)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>feature_map.OffsetFeature(feature,<sp/>dir);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f1<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good_features-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(f1);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_num_features<sp/>=<sp/>num_features;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>num_features<sp/>=<sp/>good_features-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>canonical<sp/>features<sp/>of<sp/>font/class<sp/>2<sp/>for<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>neither<sp/>the<sp/>feature<sp/>nor<sp/>any<sp/>of<sp/>its<sp/>near<sp/>neighbors<sp/>occurs<sp/>in<sp/>the<sp/>cloud</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>font/class<sp/>1.<sp/>Each<sp/>such<sp/>feature<sp/>is<sp/>a<sp/>reliable<sp/>separation<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>classes,<sp/>ASSUMING<sp/>that<sp/>the<sp/>canonical<sp/>sample<sp/>is<sp/>sufficiently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>representative<sp/>that<sp/>every<sp/>sample<sp/>has<sp/>a<sp/>feature<sp/>near<sp/>that<sp/>particular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>feature.<sp/>To<sp/>check<sp/>that<sp/>this<sp/>is<sp/>so<sp/>on<sp/>the<sp/>fly<sp/>would<sp/>be<sp/>prohibitively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expensive,<sp/>but<sp/>it<sp/>might<sp/>be<sp/>possible<sp/>to<sp/>pre-qualify<sp/>the<sp/>canonical<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>include<sp/>only<sp/>those<sp/>for<sp/>which<sp/>this<sp/>assumption<sp/>is<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ComputeCanonicalFeatures<sp/>and<sp/>ComputeCloudFeatures<sp/>must<sp/>have<sp/>been<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">//<sp/>first,<sp/>or<sp/>the<sp/>results<sp/>will<sp/>be<sp/>nonsense.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a3b36d6df2a88be723a19bfb87cdde125" kindref="member">TrainingSampleSet::ReliablySeparable</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id1,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id2,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureMap&amp;<sp/>feature_map,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>thorough)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample*<sp/>sample2<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1a37f9b8b95e9cd6e221524bc94f401783" kindref="member">GetCanonicalSample</ref>(font_id2,<sp/>class_id2);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample2<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>no<sp/>canonical<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/>canonical2<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1aeff8d3e8f232385ffd02e859b77c0573" kindref="member">GetCanonicalFeatures</ref>(font_id2,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id2);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BitVector&amp;<sp/>cloud1<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1a75dac50ffd51d39ef76894e88aa1b8a2" kindref="member">GetCloudFeatures</ref>(font_id1,<sp/>class_id1);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cloud1.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>canonical2.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>no<sp/>cloud<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>a<sp/>canonical2<sp/>feature<sp/>that<sp/>is<sp/>not<sp/>in<sp/>cloud1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>canonical2.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feature<sp/>=<sp/>canonical2[<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cloud1[feature])</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gather<sp/>the<sp/>near<sp/>neighbours<sp/>of<sp/>f.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>good_features;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>AddNearFeatures(feature_map,<sp/>feature,<sp/>1,<sp/>&amp;good_features);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>none<sp/>of<sp/>the<sp/>good_features<sp/>are<sp/>in<sp/>the<sp/>cloud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>good_features.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>good_f<sp/>=<sp/>good_features[i];</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cloud1[good_f])<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>good_features.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>())</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>one<sp/>in<sp/>the<sp/>cloud.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>++result;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>total<sp/>index<sp/>of<sp/>the<sp/>requested<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1addf858e6da214cd31161a270e4365fe1" kindref="member">TrainingSampleSet::GlobalSampleIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_index<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*font_class_array_)(font_index,<sp/>class_id).samples[index];</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>canonical<sp/>sample<sp/>for<sp/>the<sp/>given<sp/>font,<sp/>class<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ComputeCanonicalSamples<sp/>must<sp/>have<sp/>been<sp/>called<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample*<sp/><ref refid="classtesseract_1_1_training_sample_set_1a37f9b8b95e9cd6e221524bc94f401783" kindref="member">TrainingSampleSet::GetCanonicalSample</ref>(</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_index<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_index<sp/>=<sp/>(*font_class_array_)(font_index,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id).canonical_sample;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sample_index<sp/>&gt;=<sp/>0<sp/>?<sp/>samples_[sample_index]<sp/>:<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>max<sp/>distance<sp/>for<sp/>the<sp/>given<sp/>canonical<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ComputeCanonicalSamples<sp/>must<sp/>have<sp/>been<sp/>called<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a242c0410fb2460dc63fddd16e90b9c71" kindref="member">TrainingSampleSet::GetCanonicalDist</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_index<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*font_class_array_)(font_index,<sp/>class_id).canonical_sample<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*font_class_array_)(font_index,<sp/>class_id).canonical_dist;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0f;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generates<sp/>indexed<sp/>features<sp/>for<sp/>all<sp/>samples<sp/>with<sp/>the<sp/>supplied<sp/>feature_space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a4743698b780df97c2a31e9f28a0c4791" kindref="member">TrainingSampleSet::IndexFeatures</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureSpace&amp;<sp/>feature_space)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>samples_.size();<sp/>++s)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>samples_[s]-&gt;<ref refid="classtesseract_1_1_training_sample_set_1a4743698b780df97c2a31e9f28a0c4791" kindref="member">IndexFeatures</ref>(feature_space);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Delete<sp/>outlier<sp/>samples<sp/>with<sp/>few<sp/>features<sp/>that<sp/>are<sp/>shared<sp/>with<sp/>others.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IndexFeatures<sp/>must<sp/>have<sp/>been<sp/>called<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ae8670e468b3f35f4a0b961cdb0c31c52" kindref="member">TrainingSampleSet::DeleteOutliers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureSpace&amp;<sp/>feature_space,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_class_array_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1ab5d36eabedd79031e581e5d1b870de3a" kindref="member">OrganizeByFontAndClass</ref>();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>Pixa*<sp/>pixa<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>pixa<sp/>=<sp/>pixaCreate(0);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>feature_counts;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fs_size<sp/>=<sp/>feature_space.Size();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_size<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>0;<sp/>font_index<sp/>&lt;<sp/>font_size;<sp/>++font_index)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>unicharset_size_;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>histogram<sp/>of<sp/>the<sp/>features<sp/>used<sp/>by<sp/>all<sp/>samples<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>font/class<sp/>combination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>feature_counts.<ref refid="class_generic_vector_1a6751521fd3eb461d81fc83ef93a0def3" kindref="member">init_to_size</ref>(fs_size,<sp/>0);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FontClassInfo&amp;<sp/>fcinfo<sp/>=<sp/>(*font_class_array_)(font_index,<sp/>c);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_count<sp/>=<sp/>fcinfo.samples.size();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample_count<sp/>&lt;<sp/><ref refid="namespacetesseract_1aaaac2947d8026a1e91fc20287ef90e3a" kindref="member">kMinOutlierSamples</ref>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sample_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>fcinfo.samples[i];</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/>features<sp/>=<sp/>samples_[s]-&gt;indexed_features();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>features.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++feature_counts[features[<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>]];</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sample_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>fcinfo.samples[i];</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample&amp;<sp/>sample<sp/>=<sp/>*samples_[s];</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/>features<sp/>=<sp/>sample.indexed_features();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>feature<sp/>that<sp/>has<sp/>a<sp/>histogram<sp/>count<sp/>of<sp/>1<sp/>is<sp/>only<sp/>used<sp/>by<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sample,<sp/>making<sp/>it<sp/>&apos;bad&apos;.<sp/>All<sp/>others<sp/>are<sp/>&apos;good&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>good_features<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bad_features<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>features.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(feature_counts[features[f]]<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++good_features;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++bad_features;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>more<sp/>than<sp/>1/3<sp/>features<sp/>are<sp/>bad,<sp/>then<sp/>this<sp/>is<sp/>an<sp/>outlier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bad_features<sp/>*<sp/>2<sp/>&gt;<sp/>good_features)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Deleting<sp/>outlier<sp/>sample<sp/>of<sp/>%s,<sp/>%d<sp/>good,<sp/>%d<sp/>bad\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1a5e48aa19b8dcc15bdaca1fb0b5ec685c" kindref="member">SampleToString</ref>(sample).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good_features,<sp/>bad_features);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixaAddPix(pixa,<sp/>sample.RenderToPix(&amp;unicharset_),<sp/>L_INSERT);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>previous<sp/>sample<sp/>as<sp/>well,<sp/>so<sp/>it<sp/>is<sp/>easier<sp/>to<sp/>see<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>output<sp/>what<sp/>is<sp/>wrong<sp/>with<sp/>this<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>fcinfo.samples[1];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>fcinfo.samples[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample<sp/>&amp;csample<sp/>=<sp/>*samples_[t];</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixaAddPix(pixa,<sp/>csample.RenderToPix(&amp;unicharset_),<sp/>L_INSERT);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>the<sp/>sample<sp/>for<sp/>deletion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1a6902b0cc52ff89dc5c319473d56bc3b6" kindref="member">KillSample</ref>(samples_[s]);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truly<sp/>delete<sp/>all<sp/>bad<sp/>samples<sp/>and<sp/>renumber<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1a4c605d59170dc00ddeec919984f80918" kindref="member">DeleteDeadSamples</ref>();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixa<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>Pix*<sp/>pix<sp/>=<sp/>pixaDisplayTiledInRows(pixa,<sp/>1,<sp/>2600,<sp/>1.0,<sp/>0,<sp/>10,<sp/>10);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>pixaDestroy(&amp;pixa);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;outliers.png&quot;</highlight><highlight class="normal">,<sp/>pix,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;pix);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Marks<sp/>the<sp/>given<sp/>sample<sp/>index<sp/>for<sp/>deletion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletion<sp/>is<sp/>actually<sp/>completed<sp/>by<sp/>DeleteDeadSamples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a6902b0cc52ff89dc5c319473d56bc3b6" kindref="member">TrainingSampleSet::KillSample</ref>(TrainingSample*<sp/>sample)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>sample-&gt;set_sample_index(-1);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>all<sp/>samples<sp/>with<sp/>zero<sp/>features<sp/>marked<sp/>by<sp/>KillSample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a4c605d59170dc00ddeec919984f80918" kindref="member">TrainingSampleSet::DeleteDeadSamples</ref>()<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>samples_.compact(</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classtesseract_1_1_training_sample_set_1ab9a0b43789360afede97a841cb250dc6" kindref="member">TrainingSampleSet::DeleteableSample</ref>));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>num_raw_samples_<sp/>=<sp/>samples_.size();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Samples<sp/>must<sp/>be<sp/>re-organized<sp/>now<sp/>we<sp/>have<sp/>deleted<sp/>a<sp/>few.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Callback<sp/>function<sp/>returns<sp/>true<sp/>if<sp/>the<sp/>given<sp/>sample<sp/>is<sp/>to<sp/>be<sp/>deleted,<sp/>due</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>having<sp/>a<sp/>negative<sp/>classid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ab9a0b43789360afede97a841cb250dc6" kindref="member">TrainingSampleSet::DeleteableSample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample*<sp/>sample)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sample<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>sample-&gt;class_id()<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Pix*<sp/>DebugSample(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrainingSample*<sp/>sample)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nOriginal<sp/>features:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sample-&gt;num_features();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;features()[i].print();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample-&gt;features_are_mapped())<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nMapped<sp/>features:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sample-&gt;mapped_features().size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>sample-&gt;mapped_features()[i]);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sample-&gt;RenderToPix(&amp;unicharset);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>an<sp/>array<sp/>to<sp/>access<sp/>the<sp/>samples<sp/>by<sp/>font,class<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ab5d36eabedd79031e581e5d1b870de3a" kindref="member">TrainingSampleSet::OrganizeByFontAndClass</ref>()<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Font<sp/>indexes<sp/>are<sp/>sparse,<sp/>so<sp/>we<sp/>used<sp/>a<sp/>map<sp/>to<sp/>compact<sp/>them,<sp/>so<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>an<sp/>efficient<sp/>2-d<sp/>array<sp/>of<sp/>fonts<sp/>and<sp/>character<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1ac1003d7e28f5dfb893a88ac3f60de6e5" kindref="member">SetupFontIdMap</ref>();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compact_font_size<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>2-d<sp/>array<sp/>of<sp/>generic<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>font_class_array_;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>FontClassInfo<sp/>empty;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>font_class_array_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y" kindref="compound">GENERIC_2D_ARRAY&lt;FontClassInfo&gt;</ref>(</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact_font_size,<sp/>unicharset_size_,<sp/>empty);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>samples_.size();<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>samples_[s]-&gt;font_id();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>samples_[s]-&gt;class_id();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(font_id<sp/>&lt;<sp/>0<sp/>||<sp/>font_id<sp/>&gt;=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1ae108e47d0f0049137072ad2bc1f6705d" kindref="member">SparseSize</ref>())<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Font<sp/>id<sp/>=<sp/>%d/%d,<sp/>class<sp/>id<sp/>=<sp/>%d/%d<sp/>on<sp/>sample<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_id,<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1ae108e47d0f0049137072ad2bc1f6705d" kindref="member">SparseSize</ref>(),<sp/>class_id,<sp/>unicharset_size_,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_id<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>font_id<sp/>&lt;<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1ae108e47d0f0049137072ad2bc1f6705d" kindref="member">SparseSize</ref>());</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(class_id<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>class_id<sp/>&lt;<sp/>unicharset_size_);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(font_id);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>(*font_class_array_)(font_index,<sp/>class_id).samples.push_back(s);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>num_raw_samples<sp/>member<sp/>of<sp/>the<sp/>FontClassInfo,<sp/>to<sp/>set<sp/>the<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>the<sp/>raw<sp/>samples<sp/>and<sp/>the<sp/>replicated<sp/>ones.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>compact_font_size;<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>unicharset_size_;<sp/>++c)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*font_class_array_)(<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>c).<ref refid="classtesseract_1_1_training_sample_set_1af48888d68fc56c5b6911957530b59389" kindref="member">num_raw_samples</ref><sp/>=</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*font_class_array_)(<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>c).samples.size();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>global<sp/>number<sp/>of<sp/>samples<sp/>and<sp/>also<sp/>marks<sp/>the<sp/>boundary<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>real<sp/>and<sp/>replicated<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>num_raw_samples_<sp/>=<sp/>samples_.size();</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constructs<sp/>the<sp/>font_id_map_<sp/>which<sp/>maps<sp/>real<sp/>font_ids<sp/>(sparse)<sp/>to<sp/>a<sp/>compact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">//<sp/>index<sp/>for<sp/>the<sp/>font_class_array_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ac1003d7e28f5dfb893a88ac3f60de6e5" kindref="member">TrainingSampleSet::SetupFontIdMap</ref>()<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>samples<sp/>for<sp/>each<sp/>font_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>font_counts;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>samples_.size();<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>samples_[s]-&gt;font_id();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(font_id<sp/>&gt;=<sp/>font_counts.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>())</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>font_counts.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(0);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>++font_counts[font_id];</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a165b8de5eeba0557d206f76b556793d9" kindref="member">Init</ref>(font_counts.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>font_counts.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a3b4579cc4934a996ea688de031e758f2" kindref="member">SetMap</ref>(f,<sp/>font_counts[f]<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1a909e48dddc1488311f4d7083544eca56" kindref="member">Setup</ref>();</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>sample<sp/>for<sp/>each<sp/>font,<sp/>class<sp/>pair<sp/>that<sp/>has<sp/>least<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distance<sp/>to<sp/>all<sp/>the<sp/>other<sp/>samples<sp/>of<sp/>the<sp/>same<sp/>font,<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a6cb57b891087c2d21adca1fde83d8d6f" kindref="member">TrainingSampleSet::ComputeCanonicalSamples</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureMap&amp;<sp/>map,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>IntFeatureDist<sp/>f_table;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;feature<sp/>table<sp/>size<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>map.sparse_size());</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/>f_table.Init(&amp;map);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worst_s1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worst_s2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>global_worst_dist<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>distances<sp/>independently<sp/>for<sp/>each<sp/>font<sp/>and<sp/>char<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_size<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>0;<sp/>font_index<sp/>&lt;<sp/>font_size;<sp/>++font_index)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ad9e50b500bcbadf8f3be98cd672f0c4a" kindref="member">CompactToSparse</ref>(font_index);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>unicharset_size_;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samples_found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FontClassInfo&amp;<sp/>fcinfo<sp/>=<sp/>(*font_class_array_)(font_index,<sp/>c);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fcinfo.samples.size()<sp/>==<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacetesseract_1aedc256912be3e2d615b8899ba661300a" kindref="member">kTestChar</ref><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>c<sp/>!=<sp/><ref refid="namespacetesseract_1aedc256912be3e2d615b8899ba661300a" kindref="member">kTestChar</ref>))<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.canonical_sample<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.canonical_dist<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>class<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>canonical<sp/>sample<sp/>will<sp/>be<sp/>the<sp/>one<sp/>with<sp/>the<sp/>min_max_dist,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>sample<sp/>with<sp/>the<sp/>lowest<sp/>maximum<sp/>distance<sp/>to<sp/>all<sp/>other<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_max_dist<sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>farthest<sp/>apart<sp/>pair<sp/>(max_s1,<sp/>max_s2)<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>max_max_dist<sp/>apart,<sp/>so<sp/>we<sp/>can<sp/>see<sp/>how<sp/>bad<sp/>the<sp/>variability<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_max_dist<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_s1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_s2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.canonical_sample<sp/>=<sp/>fcinfo.samples[0];</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.canonical_dist<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fcinfo.samples.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/>fcinfo.samples[i];</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/>features1<sp/>=<sp/>samples_[s1]-&gt;indexed_features();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_table.Set(features1,<sp/>features1.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_dist<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>the<sp/>full<sp/>squared-order<sp/>search<sp/>for<sp/>similar<sp/>samples.<sp/>It<sp/>is<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reasonably<sp/>fast<sp/>because<sp/>f_table.FeatureDistance<sp/>is<sp/>fast,<sp/>but<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>have<sp/>to<sp/>reconsider<sp/>if<sp/>we<sp/>start<sp/>playing<sp/>with<sp/>too<sp/>many<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>a<sp/>single<sp/>char/font.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>fcinfo.samples.size();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/>fcinfo.samples[j];</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samples_[s2]-&gt;class_id()<sp/>!=<sp/>c<sp/><sp/>||</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_[s2]-&gt;font_id()<sp/>!=<sp/>font_id<sp/>||</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>==<sp/>s1)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>features2<sp/>=<sp/>samples_[s2]-&gt;indexed_features();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dist<sp/>=<sp/>f_table.FeatureDistance(features2);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>samples_[s2]-&gt;geo_feature(<ref refid="picofeat_8h_1a41a4b5a66040b8b2deb004bd33909009af270e2a7660aa4121f6693faa62de67c" kindref="member">GeoTop</ref>)<sp/>-</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_[s2]-&gt;geo_feature(<ref refid="picofeat_8h_1a41a4b5a66040b8b2deb004bd33909009a45ab6326da25c47511791071ad13f62a" kindref="member">GeoBottom</ref>);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>==<sp/>1.0<sp/>&amp;&amp;<sp/>height<sp/>&gt;<sp/>64)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>rethink<sp/>this<sp/>when<sp/>the<sp/>polygonal<sp/>approximation<sp/>goes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently<sp/>it<sp/>is<sp/>possible<sp/>for<sp/>dots<sp/>and<sp/>other<sp/>small<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>completely<sp/>different,<sp/>even<sp/>within<sp/>the<sp/>same<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_table.DebugFeatureDistance(features2);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&gt;<sp/>max_dist)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&gt;<sp/>max_max_dist)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_s1<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_s2<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Using<sp/>Set(...,<sp/>false)<sp/>is<sp/>far<sp/>faster<sp/>than<sp/>re<sp/>initializing,<sp/>due<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>sparseness<sp/>of<sp/>the<sp/>feature<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_table.Set(features1,<sp/>features1.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_[s1]-&gt;set_max_dist(max_dist);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++samples_found;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_dist<sp/>&lt;<sp/>min_max_dist)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.canonical_sample<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.canonical_dist<sp/>=<sp/>max_dist;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(max_dist,<sp/>&amp;min_max_dist,<sp/>&amp;max_max_dist);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_max_dist<sp/>&gt;<sp/>global_worst_dist)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>a<sp/>record<sp/>of<sp/>the<sp/>worst<sp/>pair<sp/>over<sp/>all<sp/>characters/fonts<sp/>too.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_worst_dist<sp/>=<sp/>max_max_dist;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_s1<sp/>=<sp/>max_s1;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_s2<sp/>=<sp/>max_s2;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>%d<sp/>samples<sp/>of<sp/>class<sp/>%d=%s,<sp/>font<sp/>%d,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;dist<sp/>range<sp/>[%g,<sp/>%g],<sp/>worst<sp/>pair=<sp/>%s,<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_found,<sp/>c,<sp/>unicharset_.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a2543f3cb2b8da0160a87088940cc58d2" kindref="member">debug_str</ref>(c).<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font_index,<sp/>min_max_dist,<sp/>max_max_dist,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1a5e48aa19b8dcc15bdaca1fb0b5ec685c" kindref="member">SampleToString</ref>(*samples_[max_s1]).<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1a5e48aa19b8dcc15bdaca1fb0b5ec685c" kindref="member">SampleToString</ref>(*samples_[max_s2]).<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Global<sp/>worst<sp/>dist<sp/>=<sp/>%g,<sp/>between<sp/>sample<sp/>%d<sp/>and<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_worst_dist,<sp/>worst_s1,<sp/>worst_s2);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>Pix*<sp/>pix1<sp/>=<sp/>DebugSample(unicharset_,<sp/>samples_[worst_s1]);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>Pix*<sp/>pix2<sp/>=<sp/>DebugSample(unicharset_,<sp/>samples_[worst_s2]);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>pixOr(pix1,<sp/>pix1,<sp/>pix2);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;worstpair.png&quot;</highlight><highlight class="normal">,<sp/>pix1,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;pix1);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;pix2);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Replicates<sp/>the<sp/>samples<sp/>to<sp/>a<sp/>minimum<sp/>frequency<sp/>defined<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>*<sp/>kSampleRandomSize,<sp/>or<sp/>for<sp/>larger<sp/>counts<sp/>duplicates<sp/>all<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment">//<sp/>After<sp/>replication,<sp/>the<sp/>replicated<sp/>samples<sp/>are<sp/>perturbed<sp/>slightly,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>predictable<sp/>and<sp/>repeatable<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>after<sp/>OrganizeByFontAndClass().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ae0d3970c33eaf47e869d19293e5f1d2b" kindref="member">TrainingSampleSet::ReplicateAndRandomizeSamples</ref>()<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_size<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>0;<sp/>font_index<sp/>&lt;<sp/>font_size;<sp/>++font_index)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>unicharset_size_;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FontClassInfo&amp;<sp/>fcinfo<sp/>=<sp/>(*font_class_array_)(font_index,<sp/>c);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_count<sp/>=<sp/>fcinfo.samples.size();</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_samples<sp/>=<sp/>2<sp/>*<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(kSampleRandomSize,<sp/>sample_count);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample_count<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>sample_count<sp/>&lt;<sp/>min_samples)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base_count<sp/>=<sp/>sample_count;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base_index<sp/>=<sp/>0;<sp/>sample_count<sp/>&lt;<sp/>min_samples;<sp/>++sample_count)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_index<sp/>=<sp/>fcinfo.samples[base_index++];</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base_index<sp/>&gt;=<sp/>base_count)<sp/>base_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrainingSample*<sp/>sample<sp/>=<sp/>samples_[src_index]-&gt;RandomizedCopy(</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_count<sp/>%<sp/>kSampleRandomSize);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_index<sp/>=<sp/>samples_.size();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample-&gt;set_sample_index(sample_index);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_.push_back(sample);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.samples.push_back(sample_index);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Caches<sp/>the<sp/>indexed<sp/>features<sp/>of<sp/>the<sp/>canonical<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ComputeCanonicalSamples<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>see<sp/>note<sp/>on<sp/>ReliablySeparable<sp/>and<sp/>try<sp/>restricting<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment">//<sp/>canonical<sp/>features<sp/>to<sp/>those<sp/>that<sp/>truly<sp/>represent<sp/>all<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1aa59d278ace2d056fede8cec5fa2d5d80" kindref="member">TrainingSampleSet::ComputeCanonicalFeatures</ref>()<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_size<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>0;<sp/>font_index<sp/>&lt;<sp/>font_size;<sp/>++font_index)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ad9e50b500bcbadf8f3be98cd672f0c4a" kindref="member">CompactToSparse</ref>(font_index);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>unicharset_size_;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1a7f5168960275b7cfed23408acd78d275" kindref="member">NumClassSamples</ref>(font_id,<sp/>c,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample*<sp/>sample<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1a37f9b8b95e9cd6e221524bc94f401783" kindref="member">GetCanonicalSample</ref>(font_id,<sp/>c);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FontClassInfo&amp;<sp/>fcinfo<sp/>=<sp/>(*font_class_array_)(font_index,<sp/>c);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.canonical_features<sp/>=<sp/>sample-&gt;indexed_features();</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>combined<sp/>set<sp/>of<sp/>features<sp/>used<sp/>by<sp/>all<sp/>the<sp/>samples<sp/>of<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="comment">//<sp/>font/class<sp/>combination.<sp/>Use<sp/>after<sp/>ReplicateAndRandomizeSamples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a70b1a77e26913f05ea7be9d1cebc1f68" kindref="member">TrainingSampleSet::ComputeCloudFeatures</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feature_space_size)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(font_class_array_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_size<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>();</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_index<sp/>=<sp/>0;<sp/>font_index<sp/>&lt;<sp/>font_size;<sp/>++font_index)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ad9e50b500bcbadf8f3be98cd672f0c4a" kindref="member">CompactToSparse</ref>(font_index);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>unicharset_size_;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1a7f5168960275b7cfed23408acd78d275" kindref="member">NumClassSamples</ref>(font_id,<sp/>c,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_samples<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FontClassInfo&amp;<sp/>fcinfo<sp/>=<sp/>(*font_class_array_)(font_index,<sp/>c);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.cloud_features.Init(feature_space_size);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/><ref refid="classtesseract_1_1_training_sample_set_1a6d2560a4ae24102d9919eb961d0bca34" kindref="member">num_samples</ref>;<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample*<sp/>sample<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1a8fa00414deb6726dcf6b770df5af6e8a" kindref="member">GetSample</ref>(font_id,<sp/>c,<sp/>s);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/>sample_features<sp/>=<sp/>sample-&gt;indexed_features();</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sample_features.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fcinfo.cloud_features.SetBit(sample_features[i]);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>all<sp/>fonts<sp/>of<sp/>the<sp/>given<sp/>class<sp/>to<sp/>the<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1aa8a7f48e7004b719d9ee2eb2d7c54511" kindref="member">TrainingSampleSet::AddAllFontsForClass</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,<sp/>Shape*<sp/>shape)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>();<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_1ad9e50b500bcbadf8f3be98cd672f0c4a" kindref="member">CompactToSparse</ref>(f);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>shape-&gt;AddToShape(class_id,<sp/>font_id);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>samples<sp/>with<sp/>the<sp/>given<sp/>indexed<sp/>feature<sp/>that<sp/>also<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>given<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a0aa7725351aa2ea8a21c2abcae3a26db" kindref="member">TrainingSampleSet::DisplaySamplesWithFeature</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f_index,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Shape&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureSpace&amp;<sp/>space,</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color,</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/><ref refid="classtesseract_1_1_training_sample_set_1af48888d68fc56c5b6911957530b59389" kindref="member">num_raw_samples</ref>();<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample*<sp/>sample<sp/>=<sp/><ref refid="classtesseract_1_1_training_sample_set_1a8fa00414deb6726dcf6b770df5af6e8a" kindref="member">GetSample</ref>(s);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape.ContainsUnichar(sample-&gt;class_id()))<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>indexed_features;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>space.IndexAndSortFeatures(sample-&gt;features(),<sp/>sample-&gt;num_features(),</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;indexed_features);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>0;<sp/>f<sp/>&lt;<sp/>indexed_features.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indexed_features[f]<sp/>==<sp/>f_index)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample-&gt;DisplayFeatures(color,<sp/>window);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/trainingsampleset.cpp"/>
  </compounddef>
</doxygen>
