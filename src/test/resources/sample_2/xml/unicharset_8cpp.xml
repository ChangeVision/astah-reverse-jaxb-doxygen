<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="unicharset_8cpp" kind="file">
    <compoundname>unicharset.cpp</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="tesscallback_8h" local="yes">tesscallback.h</includes>
    <includes refid="tprintf_8h" local="yes">tprintf.h</includes>
    <includes refid="unichar_8h" local="yes">unichar.h</includes>
    <includes refid="unicharset_8h" local="yes">unicharset.h</includes>
    <includes refid="params_8h" local="yes">params.h</includes>
    <incdepgraph>
      <node id="22369">
        <label>assert.h</label>
      </node>
      <node id="22382">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="22379">
        <label>stdlib.h</label>
      </node>
      <node id="22374">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="22375" relation="include">
        </childnode>
      </node>
      <node id="22385">
        <label>stddef.h</label>
      </node>
      <node id="22387">
        <label>memory.h</label>
      </node>
      <node id="22380">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="22373" relation="include">
        </childnode>
      </node>
      <node id="22375">
        <label>limits.h</label>
      </node>
      <node id="22371">
        <label>string.h</label>
      </node>
      <node id="22389">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="22386" relation="include">
        </childnode>
      </node>
      <node id="22386">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="22387" relation="include">
        </childnode>
        <childnode refid="22371" relation="include">
        </childnode>
      </node>
      <node id="22368">
        <label>ccutil/unicharset.cpp</label>
        <link refid="unicharset.cpp"/>
        <childnode refid="22369" relation="include">
        </childnode>
        <childnode refid="22370" relation="include">
        </childnode>
        <childnode refid="22371" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22376" relation="include">
        </childnode>
        <childnode refid="22386" relation="include">
        </childnode>
        <childnode refid="22388" relation="include">
        </childnode>
        <childnode refid="22377" relation="include">
        </childnode>
      </node>
      <node id="22372">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="22373" relation="include">
        </childnode>
      </node>
      <node id="22377">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="22370" relation="include">
        </childnode>
        <childnode refid="22378" relation="include">
        </childnode>
        <childnode refid="22383" relation="include">
        </childnode>
      </node>
      <node id="22378">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="22370" relation="include">
        </childnode>
        <childnode refid="22379" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22380" relation="include">
        </childnode>
        <childnode refid="22381" relation="include">
        </childnode>
        <childnode refid="22382" relation="include">
        </childnode>
      </node>
      <node id="22384">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="22385" relation="include">
        </childnode>
        <childnode refid="22373" relation="include">
        </childnode>
      </node>
      <node id="22388">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="22380" relation="include">
        </childnode>
        <childnode refid="22381" relation="include">
        </childnode>
        <childnode refid="22383" relation="include">
        </childnode>
        <childnode refid="22372" relation="include">
        </childnode>
        <childnode refid="22386" relation="include">
        </childnode>
        <childnode refid="22389" relation="include">
        </childnode>
      </node>
      <node id="22376">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="22377" relation="include">
        </childnode>
      </node>
      <node id="22373">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="22374" relation="include">
        </childnode>
      </node>
      <node id="22370">
        <label>stdio.h</label>
      </node>
      <node id="22383">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="22370" relation="include">
        </childnode>
        <childnode refid="22371" relation="include">
        </childnode>
        <childnode refid="22374" relation="include">
        </childnode>
        <childnode refid="22384" relation="include">
        </childnode>
      </node>
      <node id="22381">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="22370" relation="include">
        </childnode>
        <childnode refid="22371" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_in_memory_file_pointer" prot="public">InMemoryFilePointer</innerclass>
    <innerclass refid="class_local_file_pointer" prot="public">LocalFilePointer</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="unicharset_8cpp_1a8646d32472e863b59bad7e1ef3f92fd1" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char kSeparator</definition>
        <argsstring></argsstring>
        <name>kSeparator</name>
        <initializer>= &apos;|&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="31" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unicharset_8cpp_1a1656c97f2b54c3d589fc3f5bb2e8ea06" prot="public" static="yes" mutable="no">
        <type>const char</type>
        <definition>const char kNaturalFlag</definition>
        <argsstring></argsstring>
        <name>kNaturalFlag</name>
        <initializer>= &apos;n&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unicharset_8cpp_1ad4e54934f1687346d25f013c010055cd" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int ISALPHA_MASK</definition>
        <argsstring></argsstring>
        <name>ISALPHA_MASK</name>
        <initializer>= 0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unicharset_8cpp_1aa5c644ebce83120cb8d5ac50527823da" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int ISLOWER_MASK</definition>
        <argsstring></argsstring>
        <name>ISLOWER_MASK</name>
        <initializer>= 0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unicharset_8cpp_1ae007a94d8a79e95c7e8b638ce4f3badb" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int ISUPPER_MASK</definition>
        <argsstring></argsstring>
        <name>ISUPPER_MASK</name>
        <initializer>= 0x4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unicharset_8cpp_1a0bae898376687b46ce62b1f7c48dc49e" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int ISDIGIT_MASK</definition>
        <argsstring></argsstring>
        <name>ISDIGIT_MASK</name>
        <initializer>= 0x8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="38" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unicharset_8cpp_1aa080f0ba17fe7c86597ad41eadb7ffc1" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int ISPUNCTUATION_MASK</definition>
        <argsstring></argsstring>
        <name>ISPUNCTUATION_MASK</name>
        <initializer>= 0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="39" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unicharset_8cpp_1a025ea285916155feef2d415d20f052ec" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int kMeanlineThreshold</definition>
        <argsstring></argsstring>
        <name>kMeanlineThreshold</name>
        <initializer>= 220</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unicharset_8cpp_1adc8d0ca6841f77218a8db3e9b8c61b75" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double kMinXHeightFraction</definition>
        <argsstring></argsstring>
        <name>kMinXHeightFraction</name>
        <initializer>= 0.25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="unicharset_8cpp_1a26f266710ee10c783d867b473b89490d" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double kMinCapHeightFraction</definition>
        <argsstring></argsstring>
        <name>kMinCapHeightFraction</name>
        <initializer>= 0.05</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Unicode<sp/>character/ligature<sp/>set<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Thomas<sp/>Kielbus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Wed<sp/>Jun<sp/>28<sp/>17:05:01<sp/>PDT<sp/>2006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2006,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tesscallback_8h" kindref="compound">tesscallback.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tprintf_8h" kindref="compound">tprintf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unichar_8h" kindref="compound">unichar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicharset_8h" kindref="compound">unicharset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Special<sp/>character<sp/>used<sp/>in<sp/>representing<sp/>character<sp/>fragments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kSeparator<sp/>=<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Special<sp/>character<sp/>used<sp/>in<sp/>representing<sp/>&apos;natural&apos;<sp/>character<sp/>fragments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>kNaturalFlag<sp/>=<sp/></highlight><highlight class="charliteral">&apos;n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ISALPHA_MASK<sp/>=<sp/>0x1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ISLOWER_MASK<sp/>=<sp/>0x2;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ISUPPER_MASK<sp/>=<sp/>0x4;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ISDIGIT_MASK<sp/>=<sp/>0x8;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ISPUNCTUATION_MASK<sp/>=<sp/>0x10;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Y<sp/>coordinate<sp/>threshold<sp/>for<sp/>determining<sp/>cap-height<sp/>vs<sp/>x-height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Bring<sp/>the<sp/>global<sp/>definition<sp/>down<sp/>to<sp/>the<sp/>ccutil<sp/>library<sp/>level,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>this<sp/>constant<sp/>is<sp/>relative<sp/>to<sp/>some<sp/>other<sp/>constants.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kMeanlineThreshold<sp/>=<sp/>220;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Let<sp/>C<sp/>be<sp/>the<sp/>number<sp/>of<sp/>alpha<sp/>chars<sp/>for<sp/>which<sp/>all<sp/>tops<sp/>exceed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kMeanlineThreshold,<sp/>and<sp/>X<sp/>the<sp/>number<sp/>of<sp/>alpha<sp/>chars<sp/>for<sp/>which<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tops<sp/>are<sp/>below<sp/>kMeanlineThreshold,<sp/>then<sp/>if<sp/>X<sp/>&gt;<sp/>C<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>kMinXHeightFraction<sp/>and<sp/>C<sp/>&gt;<sp/>X<sp/>*<sp/>kMinCapHeightFraction<sp/>or<sp/>more<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>half<sp/>the<sp/>alpha<sp/>characters<sp/>have<sp/>upper<sp/>or<sp/>lower<sp/>case,<sp/>then<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unicharset<sp/>&quot;has<sp/>x-height&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="unicharset_8cpp_1adc8d0ca6841f77218a8db3e9b8c61b75" kindref="member">kMinXHeightFraction</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="unicharset_8cpp_1a26f266710ee10c783d867b473b89490d" kindref="member">kMinCapHeightFraction</ref><sp/>=<sp/>0.05;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*static<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a3fe8d26af62c7e9b98c16e749f6b24ee" kindref="member">UNICHARSET::kCustomLigatures</ref>[][2]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ct&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\uE003&quot;</highlight><highlight class="normal">},<sp/><sp/></highlight><highlight class="comment">//<sp/>c<sp/>+<sp/>t<sp/>-&gt;<sp/>U+E003</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ſh&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\uE006&quot;</highlight><highlight class="normal">},<sp/><sp/></highlight><highlight class="comment">//<sp/>long-s<sp/>+<sp/>h<sp/>-&gt;<sp/>U+E006</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ſi&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\uE007&quot;</highlight><highlight class="normal">},<sp/><sp/></highlight><highlight class="comment">//<sp/>long-s<sp/>+<sp/>i<sp/>-&gt;<sp/>U+E007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ſl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\uE008&quot;</highlight><highlight class="normal">},<sp/><sp/></highlight><highlight class="comment">//<sp/>long-s<sp/>+<sp/>l<sp/>-&gt;<sp/>U+E008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;ſſ&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\uE009&quot;</highlight><highlight class="normal">},<sp/><sp/></highlight><highlight class="comment">//<sp/>long-s<sp/>+<sp/>long-s<sp/>-&gt;<sp/>U+E009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">UNICHARSET::UNICHAR_PROPERTIES::UNICHAR_PROPERTIES()<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>Init();</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initialize<sp/>all<sp/>properties<sp/>to<sp/>sensible<sp/>default<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UNICHARSET::UNICHAR_PROPERTIES::Init()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>isalpha<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>islower<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>isupper<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>isdigit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>ispunctuation<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>isngram<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>SetRangesOpen();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>script_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>other_case<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>mirror<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>normed<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="vecfuncs_8cpp_1a57d4a186a22b01e2110793bc22a5d8f0" kindref="member">direction</ref><sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078aea057cec3044e6ec313ffc0c0d85e0db" kindref="member">UNICHARSET::U_LEFT_TO_RIGHT</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>fragment<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>all<sp/>ranges<sp/>wide<sp/>open.<sp/>Initialization<sp/>default<sp/>in<sp/>case<sp/>there<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>no<sp/>useful<sp/>values<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UNICHARSET::UNICHAR_PROPERTIES::SetRangesOpen()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>min_bottom<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>max_bottom<sp/>=<sp/><ref refid="host_8h_1a05682ca8de174141447ff05a2289a27c" kindref="member">MAX_UINT8</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>min_top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>max_top<sp/>=<sp/><ref refid="host_8h_1a05682ca8de174141447ff05a2289a27c" kindref="member">MAX_UINT8</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>min_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>max_width<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>min_bearing<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>max_bearing<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>min_advance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>max_advance<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>all<sp/>ranges<sp/>to<sp/>empty.<sp/>Used<sp/>before<sp/>expanding<sp/>with<sp/>font-based<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UNICHARSET::UNICHAR_PROPERTIES::SetRangesEmpty()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>min_bottom<sp/>=<sp/><ref refid="host_8h_1a05682ca8de174141447ff05a2289a27c" kindref="member">MAX_UINT8</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>max_bottom<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>min_top<sp/>=<sp/><ref refid="host_8h_1a05682ca8de174141447ff05a2289a27c" kindref="member">MAX_UINT8</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>max_top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>min_width<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>max_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>min_bearing<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>max_bearing<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>min_advance<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>max_advance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>any<sp/>of<sp/>the<sp/>top/bottom/width/bearing/advance<sp/>ranges<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>emtpy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UNICHARSET::UNICHAR_PROPERTIES::AnyRangeEmpty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_bottom<sp/>&gt;<sp/>max_bottom<sp/>||<sp/>min_top<sp/>&gt;<sp/>max_top<sp/>||</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_width<sp/>&gt;<sp/>max_width<sp/>||<sp/>min_bearing<sp/>&gt;<sp/>max_bearing<sp/>||</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_advance<sp/>&gt;<sp/>max_advance;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expands<sp/>the<sp/>ranges<sp/>with<sp/>the<sp/>ranges<sp/>from<sp/>the<sp/>src<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UNICHARSET::UNICHAR_PROPERTIES::ExpandRangesFrom(</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNICHAR_PROPERTIES&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.min_bottom,<sp/>&amp;min_bottom,<sp/>&amp;max_bottom);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.max_bottom,<sp/>&amp;min_bottom,<sp/>&amp;max_bottom);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.min_top,<sp/>&amp;min_top,<sp/>&amp;max_top);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.max_top,<sp/>&amp;min_top,<sp/>&amp;max_top);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.min_width,<sp/>&amp;min_width,<sp/>&amp;max_width);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.max_width,<sp/>&amp;min_width,<sp/>&amp;max_width);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.min_bearing,<sp/>&amp;min_bearing,<sp/>&amp;max_bearing);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.max_bearing,<sp/>&amp;min_bearing,<sp/>&amp;max_bearing);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.min_advance,<sp/>&amp;min_advance,<sp/>&amp;max_advance);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src.max_advance,<sp/>&amp;min_advance,<sp/>&amp;max_advance);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>the<sp/>properties<sp/>from<sp/>src<sp/>into<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UNICHARSET::UNICHAR_PROPERTIES::CopyFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNICHAR_PROPERTIES&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apart<sp/>from<sp/>the<sp/>fragment,<sp/>everything<sp/>else<sp/>can<sp/>be<sp/>done<sp/>with<sp/>a<sp/>default<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t" kindref="compound">CHAR_FRAGMENT</ref>*<sp/>saved_fragment<sp/>=<sp/>fragment;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>src;<sp/><sp/></highlight><highlight class="comment">//<sp/>Bitwise<sp/>copy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>fragment<sp/>=<sp/>saved_fragment;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa422e2b9b4b6e17ac52ac25d88d295db" kindref="member">UNICHARSET::UNICHARSET</ref>()<sp/>:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>unichars(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>ids(),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>size_used(0),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>size_reserved(0),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>script_table(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>script_table_size_used(0),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>null_script(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_m_a_p_1a03d0b5a94f3b73fb17183e4bbf6a90d4" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a6b6b33beb6b71f68e56f7f71d29920dc" kindref="member">UNICHARSET::~UNICHARSET</ref>()<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad9060160cd52065e89cbc8927454f525" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a33b72579a4aabe9b2953e5cf2a18a5a6" kindref="member">UNICHARSET::reserve</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichars_number)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unichars_number<sp/>&gt;<sp/>size_reserved)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>UNICHAR_SLOT*<sp/>unichars_new<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>UNICHAR_SLOT[unichars_number];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used;<sp/>++i)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars_new[i]<sp/>=<sp/>unichars[i];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>size_used;<sp/>j<sp/>&lt;<sp/>unichars_number;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars_new[j].properties.script_id<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a7cbfd800fe71082f0e7d58b7c25330bb" kindref="member">add_script</ref>(null_script);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>unichars;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>unichars<sp/>=<sp/>unichars_new;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>size_reserved<sp/>=<sp/>unichars_number;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">UNICHARSET::unichar_to_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>unichar_repr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a7b62f14a3fc81145f3e4df6fe7ae64ce" kindref="member">contains</ref>(unichar_repr)<sp/>?</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1afda8d7b17ca0741a12edab53da366bd4" kindref="member">unichar_to_id</ref>(unichar_repr)<sp/>:<sp/>INVALID_UNICHAR_ID;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">UNICHARSET::unichar_to_id</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>unichar_repr,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>assert(length<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>length<sp/>&lt;=<sp/><ref refid="unichar_8h_1a902bc40c9d89802bc063afe30ce9e708" kindref="member">UNICHAR_LEN</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a7b62f14a3fc81145f3e4df6fe7ae64ce" kindref="member">contains</ref>(unichar_repr,<sp/>length)<sp/>?</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1afda8d7b17ca0741a12edab53da366bd4" kindref="member">unichar_to_id</ref>(unichar_repr,<sp/>length)<sp/>:<sp/>INVALID_UNICHAR_ID;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>minimum<sp/>number<sp/>of<sp/>bytes<sp/>that<sp/>matches<sp/>a<sp/>legal<sp/>UNICHAR_ID,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>while<sp/>leaving<sp/>a<sp/>legal<sp/>UNICHAR_ID<sp/>afterwards.<sp/>In<sp/>other<sp/>words,<sp/>if<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>both<sp/>a<sp/>short<sp/>and<sp/>a<sp/>long<sp/>match<sp/>to<sp/>the<sp/>string,<sp/>return<sp/>the<sp/>length<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ensures<sp/>there<sp/>is<sp/>a<sp/>legal<sp/>match<sp/>after<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">UNICHARSET::step</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>length<sp/>of<sp/>the<sp/>first<sp/>matching<sp/>unicharset<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minlength<sp/>=<sp/>ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a6295b2e22ddf302e81d81d1151ac4a8f" kindref="member">minmatch</ref>(str);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minlength<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>string<sp/>or<sp/>illegal<sp/>char.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>goodlength<sp/>=<sp/>minlength;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(goodlength<sp/>&lt;=<sp/><ref refid="unichar_8h_1a902bc40c9d89802bc063afe30ce9e708" kindref="member">UNICHAR_LEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str[goodlength]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>||<sp/>ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a6295b2e22ddf302e81d81d1151ac4a8f" kindref="member">minmatch</ref>(str<sp/>+<sp/>goodlength)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>goodlength;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>length<sp/>works!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>next<sp/>char<sp/>is<sp/>illegal<sp/>so<sp/>find<sp/>the<sp/>next<sp/>usable<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++goodlength;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[goodlength]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>goodlength<sp/>&lt;=<sp/><ref refid="unichar_8h_1a902bc40c9d89802bc063afe30ce9e708" kindref="member">UNICHAR_LEN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a7b62f14a3fc81145f3e4df6fe7ae64ce" kindref="member">contains</ref>(str,<sp/>goodlength));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(goodlength<sp/>&gt;<sp/><ref refid="unichar_8h_1a902bc40c9d89802bc063afe30ce9e708" kindref="member">UNICHAR_LEN</ref><sp/>||<sp/>!ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a7b62f14a3fc81145f3e4df6fe7ae64ce" kindref="member">contains</ref>(str,<sp/>goodlength))<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>does<sp/>not<sp/>constitute<sp/>a<sp/>good<sp/>length!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minlength;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>to<sp/>find<sp/>a<sp/>subsequent<sp/>legal<sp/>char<sp/>failed<sp/>so<sp/>return<sp/>the<sp/>minlength.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minlength;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>whether<sp/>the<sp/>given<sp/>UTF-8<sp/>string<sp/>is<sp/>encodable<sp/>with<sp/>this<sp/>UNICHARSET.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>not<sp/>encodable,<sp/>write<sp/>the<sp/>first<sp/>byte<sp/>offset<sp/>which<sp/>cannot<sp/>be<sp/>converted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>the<sp/>second<sp/>(return)<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a139844c724c4bae5e66ef4b9e8716740" kindref="member">UNICHARSET::encodable_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*first_bad_position)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>len<sp/>=<sp/>strlen(str);<sp/>i<sp/>&lt;<sp/>len;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>increment<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">step</ref>(str<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(increment<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_bad_position)<sp/>*first_bad_position<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>increment;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">UNICHARSET::id_to_unichar</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_UNICHAR;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(id<sp/>&lt;<sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unichars[id].representation;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a841e2c7277329f307c9ae8462ddc3ecf" kindref="member">UNICHARSET::id_to_unichar_ext</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>INVALID_UNICHAR;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(id<sp/>&lt;<sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Resolve<sp/>from<sp/>the<sp/>kCustomLigatures<sp/>table<sp/>if<sp/>this<sp/>is<sp/>a<sp/>private<sp/>encoding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5afe9b20cc4fe437ab3bf25b5d42298" kindref="member">get_isprivate</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ch<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a3fe8d26af62c7e9b98c16e749f6b24ee" kindref="member">kCustomLigatures</ref>[i][0]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(ch,<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a3fe8d26af62c7e9b98c16e749f6b24ee" kindref="member">kCustomLigatures</ref>[i][1]))<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a3fe8d26af62c7e9b98c16e749f6b24ee" kindref="member">kCustomLigatures</ref>[i][0];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>return<sp/>the<sp/>stored<sp/>representation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unichars[id].representation;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>STRING<sp/>that<sp/>reformats<sp/>the<sp/>utf8<sp/>str<sp/>into<sp/>the<sp/>str<sp/>followed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>its<sp/>hex<sp/>unicodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1af4928980ffba37074f8c1a6d20518730" kindref="member">UNICHARSET::debug_utf8_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>result<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>[&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">step</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Chop<sp/>into<sp/>unicodes<sp/>and<sp/>code<sp/>each<sp/>as<sp/>hex.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>str[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i<sp/>+=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">step</ref>)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>hex[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int)<sp/>*<sp/>2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_1a8182a4663f6c1df9f097700f1009ab22" kindref="member">UNICHAR::utf8_step</ref>(str<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(hex,<sp/></highlight><highlight class="stringliteral">&quot;%x&quot;</highlight><highlight class="normal">,<sp/>str[i]);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r" kindref="compound">UNICHAR</ref><sp/>ch(str<sp/>+<sp/>i,<sp/>step);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(hex,<sp/></highlight><highlight class="stringliteral">&quot;%x&quot;</highlight><highlight class="normal">,<sp/>ch.first_uni());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>hex;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>STRING<sp/>containing<sp/>debug<sp/>information<sp/>on<sp/>the<sp/>unichar,<sp/>including</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>id_to_unichar,<sp/>its<sp/>hex<sp/>unicodes<sp/>and<sp/>the<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a2543f3cb2b8da0160a87088940cc58d2" kindref="member">UNICHARSET::debug_str</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>INVALID_UNICHAR_ID)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t" kindref="compound">CHAR_FRAGMENT</ref><sp/>*fragment<sp/>=<sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af08440927e3b87f99bd3a3fbd8e126dc" kindref="member">get_fragment</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fragment)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fragment-&gt;<ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1ab845f2c4b4a4bac23392806c445f1fe4" kindref="member">to_string</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>result<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1af4928980ffba37074f8c1a6d20518730" kindref="member">debug_utf8_str</ref>(str);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>a<sp/>for<sp/>lower<sp/>alpha,<sp/>A<sp/>for<sp/>upper<sp/>alpha,<sp/>and<sp/>x<sp/>if<sp/>alpha<sp/>but<sp/>neither.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a074096c823dd5b9bc02c02a59784bf34" kindref="member">get_islower</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a482a94b3e6fcd4e5b9b9363bb9e0ee59" kindref="member">get_isupper</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>0<sp/>if<sp/>a<sp/>digit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>p<sp/>is<sp/>a<sp/>punctuation<sp/>symbol.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a57f82c4777d39c923cb9ec27cac9bcb6" kindref="member">get_ispunctuation</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>whether<sp/>the<sp/>unichar<sp/>id<sp/>represents<sp/>a<sp/>unicode<sp/>value<sp/>in<sp/>the<sp/>private<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>area.<sp/>We<sp/>use<sp/>this<sp/>range<sp/>only<sp/>internally<sp/>to<sp/>represent<sp/>uncommon<sp/>ligatures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(eg.<sp/>&apos;ct&apos;)<sp/>that<sp/>do<sp/>not<sp/>have<sp/>regular<sp/>unicode<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5afe9b20cc4fe437ab3bf25b5d42298" kindref="member">UNICHARSET::get_isprivate</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="class_u_n_i_c_h_a_r" kindref="compound">UNICHAR</ref><sp/>uc(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(unichar_id),<sp/>-1);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uni<sp/>=<sp/>uc.first_uni();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uni<sp/>&gt;=<sp/>0xE000<sp/>&amp;&amp;<sp/>uni<sp/>&lt;=<sp/>0xF8FF);</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>all<sp/>ranges<sp/>to<sp/>empty,<sp/>so<sp/>they<sp/>can<sp/>be<sp/>expanded<sp/>to<sp/>set<sp/>the<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4375f71f6c15c6837453d76db520d53f" kindref="member">UNICHARSET::set_ranges_empty</ref>()<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>size_used;<sp/>++id)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>unichars[id].properties.SetRangesEmpty();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>all<sp/>the<sp/>properties<sp/>for<sp/>this<sp/>unicharset<sp/>given<sp/>a<sp/>src<sp/>unicharset<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>everything<sp/>set.<sp/>The<sp/>unicharsets<sp/>don&apos;t<sp/>have<sp/>to<sp/>be<sp/>the<sp/>same,<sp/>and<sp/>graphemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>correctly<sp/>accounted<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a50807d5e6c3fb53d168ea698a21f47af" kindref="member">UNICHARSET::SetPropertiesFromOther</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>size_used;<sp/>++ch)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>utf8<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ch);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>UNICHAR_PROPERTIES<sp/>properties;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.GetStrProperties(utf8,<sp/>&amp;properties))<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>script_id,<sp/>other_case,<sp/>and<sp/>mirror<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script<sp/>=<sp/>src.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4fc0f6815e2091efedcff7ab6183d19a" kindref="member">get_script_from_script_id</ref>(properties.script_id);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties.script_id<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a7cbfd800fe71082f0e7d58b7c25330bb" kindref="member">add_script</ref>(script);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>other_case<sp/>=<sp/>src.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(properties.other_case);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(other_case))<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties.other_case<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(other_case);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties.other_case<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mirror_str<sp/>=<sp/>src.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(properties.mirror);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(mirror_str))<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties.mirror<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(mirror_str);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties.mirror<sp/>=<sp/>ch;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars[ch].properties.CopyFrom(properties);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expands<sp/>the<sp/>tops<sp/>and<sp/>bottoms<sp/>and<sp/>widths<sp/>for<sp/>this<sp/>unicharset<sp/>given<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>src<sp/>unicharset<sp/>with<sp/>ranges<sp/>in<sp/>it.<sp/>The<sp/>unicharsets<sp/>don&apos;t<sp/>have<sp/>to<sp/>be<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same,<sp/>and<sp/>graphemes<sp/>are<sp/>correctly<sp/>accounted<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a182050c549dfc1277ac6b655303bb92d" kindref="member">UNICHARSET::ExpandRangesFromOther</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>size_used;<sp/>++ch)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>utf8<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ch);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>UNICHAR_PROPERTIES<sp/>properties;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.GetStrProperties(utf8,<sp/>&amp;properties))<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expand<sp/>just<sp/>the<sp/>ranges<sp/>from<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars[ch].properties.ExpandRangesFrom(properties);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>id<sp/>in<sp/>src,<sp/>if<sp/>it<sp/>does<sp/>not<sp/>occur<sp/>in<sp/>this,<sp/>add<sp/>it,<sp/>as<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SetPropertiesFromOther,<sp/>otherwise<sp/>expand<sp/>the<sp/>ranges,<sp/>as<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ExpandRangesFromOther.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa7d69d3734c1dd18f8dd9faf34b1de28" kindref="member">UNICHARSET::AppendOtherUnicharset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>src.size_used;<sp/>++ch)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNICHAR_PROPERTIES&amp;<sp/>src_props<sp/>=<sp/>src.unichars[ch].properties;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>utf8<sp/>=<sp/>src.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(ch);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(utf8,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>src_props.AnyRangeEmpty())<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>use<sp/>fully<sp/>valid<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>properties<sp/>for<sp/>char<sp/>%s:<sp/>%d,%d<sp/>%d,%d<sp/>%d,%d<sp/>%d,%d<sp/>%d,%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>utf8,<sp/>src_props.min_bottom,<sp/>src_props.max_bottom,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_props.min_top,<sp/>src_props.max_top,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_props.min_width,<sp/>src_props.max_width,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_props.min_bearing,<sp/>src_props.max_bearing,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_props.min_advance,<sp/>src_props.max_advance);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>size_used;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(utf8))<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(utf8);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(utf8);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars[id].properties.SetRangesEmpty();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unichars[</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">].properties.AnyRangeEmpty())<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>expand<sp/>current<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars[id].properties.ExpandRangesFrom(src_props);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>properties<sp/>from<sp/>src_props.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars[id].properties.CopyFrom(src_props);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>script_id,<sp/>other_case<sp/>and<sp/>mirror<sp/>properly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script<sp/>=<sp/>src.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4fc0f6815e2091efedcff7ab6183d19a" kindref="member">get_script_from_script_id</ref>(src_props.script_id);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars[id].properties.script_id<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a7cbfd800fe71082f0e7d58b7c25330bb" kindref="member">add_script</ref>(script);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>other_case<sp/>=<sp/>src.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(src_props.other_case);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(other_case))<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(other_case);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichars[size_used<sp/>-<sp/>1].properties.SetRangesEmpty();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Other_case<sp/>will<sp/>have<sp/>its<sp/>ranges<sp/>set<sp/>later<sp/>as<sp/>it<sp/>is<sp/>contained<sp/>in<sp/>src.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars[id].properties.other_case<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(other_case);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mirror_str<sp/>=<sp/>src.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(src_props.mirror);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(mirror_str))<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(mirror_str);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichars[size_used<sp/>-<sp/>1].properties.SetRangesEmpty();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mirror<sp/>will<sp/>have<sp/>its<sp/>ranges<sp/>set<sp/>later<sp/>as<sp/>it<sp/>is<sp/>contained<sp/>in<sp/>src.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unichars[id].properties.mirror<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(mirror_str);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>properties<sp/>for<sp/>a<sp/>grapheme<sp/>string,<sp/>combining<sp/>properties<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiple<sp/>characters<sp/>in<sp/>a<sp/>meaningful<sp/>way<sp/>where<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>no<sp/>valid<sp/>match<sp/>was<sp/>found<sp/>in<sp/>the<sp/>unicharset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE<sp/>that<sp/>script_id,<sp/>mirror,<sp/>and<sp/>other_case<sp/>refer<sp/>to<sp/>this<sp/>unicharset<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>and<sp/>will<sp/>need<sp/>translation<sp/>if<sp/>the<sp/>target<sp/>unicharset<sp/>is<sp/>different.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UNICHARSET::GetStrProperties(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>utf8_str,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UNICHAR_PROPERTIES*<sp/>props)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>props-&gt;Init();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>props-&gt;SetRangesEmpty();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>props-&gt;min_advance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>props-&gt;max_advance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>utf8_step<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_unicodes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;<sp/>utf8_str[offset]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>offset<sp/>+=<sp/>utf8_step)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>utf8_step<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">step</ref>(utf8_str<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8_step<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(utf8_str<sp/>+<sp/>offset,<sp/>utf8_step);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UNICHAR_PROPERTIES&amp;<sp/>src_props<sp/>=<sp/>unichars[id].properties;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Logical<sp/>OR<sp/>all<sp/>the<sp/>bools.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_props.isalpha)<sp/>props-&gt;isalpha<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_props.islower)<sp/>props-&gt;islower<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_props.isupper)<sp/>props-&gt;isupper<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_props.isdigit)<sp/>props-&gt;isdigit<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_props.ispunctuation)<sp/>props-&gt;ispunctuation<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_props.isngram)<sp/>props-&gt;isngram<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_props.enabled)<sp/>props-&gt;enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Min/max<sp/>the<sp/>tops/bottoms.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src_props.min_bottom,<sp/>&amp;props-&gt;min_bottom,<sp/>&amp;props-&gt;max_bottom);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src_props.max_bottom,<sp/>&amp;props-&gt;min_bottom,<sp/>&amp;props-&gt;max_bottom);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src_props.min_top,<sp/>&amp;props-&gt;min_top,<sp/>&amp;props-&gt;max_top);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(src_props.max_top,<sp/>&amp;props-&gt;min_top,<sp/>&amp;props-&gt;max_top);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bearing<sp/>=<sp/>props-&gt;min_advance<sp/>+<sp/>src_props.min_bearing;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_unicodes<sp/>==<sp/>0<sp/>||<sp/>bearing<sp/>&lt;<sp/>props-&gt;min_bearing)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props-&gt;min_bearing<sp/>=<sp/>bearing;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>bearing<sp/>=<sp/>props-&gt;max_advance<sp/>+<sp/>src_props.max_bearing;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_unicodes<sp/>==<sp/>0<sp/>||<sp/>bearing<sp/>&lt;<sp/>props-&gt;max_bearing)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props-&gt;max_bearing<sp/>=<sp/>bearing;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>props-&gt;min_advance<sp/>+=<sp/>src_props.min_advance;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>props-&gt;max_advance<sp/>+=<sp/>src_props.max_advance;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>a<sp/>single<sp/>width,<sp/>just<sp/>use<sp/>the<sp/>widths<sp/>stored<sp/>in<sp/>the<sp/>unicharset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>props-&gt;min_width<sp/>=<sp/>src_props.min_width;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>props-&gt;max_width<sp/>=<sp/>src_props.max_width;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>first<sp/>script<sp/>id,<sp/>other_case,<sp/>mirror,<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>these<sp/>will<sp/>need<sp/>translation,<sp/>except<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_unicodes<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props-&gt;script_id<sp/>=<sp/>src_props.script_id;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props-&gt;other_case<sp/>=<sp/>src_props.other_case;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props-&gt;mirror<sp/>=<sp/>src_props.mirror;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>props-&gt;direction<sp/>=<sp/>src_props.direction;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>normed<sp/>string<sp/>for<sp/>the<sp/>compound<sp/>character<sp/>is<sp/>the<sp/>concatenation<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>normed<sp/>versions<sp/>of<sp/>the<sp/>individual<sp/>characters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>props-&gt;normed<sp/>+=<sp/>src_props.normed;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>++total_unicodes;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_unicodes<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Estimate<sp/>the<sp/>total<sp/>widths<sp/>from<sp/>the<sp/>advance<sp/>-<sp/>bearing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>props-&gt;min_width<sp/>=<sp/>props-&gt;min_advance<sp/>-<sp/>props-&gt;max_bearing;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>props-&gt;max_width<sp/>=<sp/>props-&gt;max_advance<sp/>-<sp/>props-&gt;min_bearing;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_unicodes<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a492d8caa4990fa50c481400db8f99915" kindref="member">UNICHARSET::get_properties</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>properties<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>properties<sp/>|=<sp/>ISALPHA_MASK;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a074096c823dd5b9bc02c02a59784bf34" kindref="member">get_islower</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>properties<sp/>|=<sp/>ISLOWER_MASK;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a482a94b3e6fcd4e5b9b9363bb9e0ee59" kindref="member">get_isupper</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>properties<sp/>|=<sp/>ISUPPER_MASK;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>properties<sp/>|=<sp/>ISDIGIT_MASK;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a57f82c4777d39c923cb9ec27cac9bcb6" kindref="member">get_ispunctuation</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>properties<sp/>|=<sp/>ISPUNCTUATION_MASK;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>properties;</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a52f4cf0d6d6e880201f62215770b457f" kindref="member">UNICHARSET::get_chartype</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a482a94b3e6fcd4e5b9b9363bb9e0ee59" kindref="member">get_isupper</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a074096c823dd5b9bc02c02a59784bf34" kindref="member">get_islower</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a57f82c4777d39c923cb9ec27cac9bcb6" kindref="member">get_ispunctuation</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">UNICHARSET::unichar_insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>unichar_repr)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a7b62f14a3fc81145f3e4df6fe7ae64ce" kindref="member">contains</ref>(unichar_repr))<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(unichar_repr)<sp/>&gt;<sp/><ref refid="unichar_8h_1a902bc40c9d89802bc063afe30ce9e708" kindref="member">UNICHAR_LEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Utf8<sp/>buffer<sp/>too<sp/>big,<sp/>size=%d<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(strlen(unichar_repr)),<sp/>unichar_repr);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_used<sp/>==<sp/>size_reserved)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_used<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a33b72579a4aabe9b2953e5cf2a18a5a6" kindref="member">reserve</ref>(8);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a33b72579a4aabe9b2953e5cf2a18a5a6" kindref="member">reserve</ref>(2<sp/>*<sp/>size_used);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(unichars[size_used].representation,<sp/>unichar_repr);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a825be92d5127eb24f6be6c9758e5ba4f" kindref="member">set_script</ref>(size_used,<sp/>null_script);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>given<sp/>unichar_repr<sp/>represents<sp/>a<sp/>fragmented<sp/>character,<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fragment<sp/>property<sp/>to<sp/>a<sp/>pointer<sp/>to<sp/>CHAR_FRAGMENT<sp/>class<sp/>instance<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>information<sp/>parsed<sp/>from<sp/>the<sp/>unichar<sp/>representation.<sp/>Use<sp/>the<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>base<sp/>unichar<sp/>for<sp/>the<sp/>fragmented<sp/>character<sp/>if<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t" kindref="compound">CHAR_FRAGMENT</ref><sp/>*frag<sp/>=<sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1ac56b3d4af146800dd576dd60a11ea563" kindref="member">CHAR_FRAGMENT::parse_from_string</ref>(unichar_repr);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;unichars[size_used].properties.fragment<sp/>=<sp/>frag;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frag<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(frag-&gt;<ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1aabfbe5c558b411ecb3c9a34d0615c2de" kindref="member">get_unichar</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;unichars[size_used].properties.script_id<sp/>=</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a77cdfcf9338d6565e6321a583392d5a1" kindref="member">get_script</ref>(frag-&gt;<ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1aabfbe5c558b411ecb3c9a34d0615c2de" kindref="member">get_unichar</ref>());</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;unichars[size_used].properties.enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a83ec56c382b3f94f31400ff884bbcf87" kindref="member">insert</ref>(unichar_repr,<sp/>size_used);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>++size_used;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">UNICHARSET::contains_unichar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>unichar_repr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a7b62f14a3fc81145f3e4df6fe7ae64ce" kindref="member">contains</ref>(unichar_repr);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">UNICHARSET::contains_unichar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>unichar_repr,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ids.<ref refid="class_u_n_i_c_h_a_r_m_a_p_1a7b62f14a3fc81145f3e4df6fe7ae64ce" kindref="member">contains</ref>(unichar_repr,<sp/>length);</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa0838c2b6fafdc34416794b6afe698f8" kindref="member">UNICHARSET::eq</ref>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>unichar_repr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strcmp(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(unichar_id),<sp/>unichar_repr)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a1f82a51ad2d63d499a625b97ec806811" kindref="member">UNICHARSET::save_to_file</ref>(FILE<sp/>*file)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>();<sp/>++id)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_bottom,<sp/>max_bottom,<sp/>min_top,<sp/>max_top;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1af2e0d12e80aa3aa985652d73eaf1e95f" kindref="member">get_top_bottom</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;min_bottom,<sp/>&amp;max_bottom,<sp/>&amp;min_top,<sp/>&amp;max_top);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_width,<sp/>max_width;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ac680b784b3afbbd2a5aaa85de4f48ed2" kindref="member">get_width_range</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;min_width,<sp/>&amp;max_width);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_bearing,<sp/>max_bearing;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a67f8a8936c2c021e34f4a1c878660e87" kindref="member">get_bearing_range</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;min_bearing,<sp/>&amp;max_bearing);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_advance,<sp/>max_advance;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a8a34350dc3ea46c693aae4e4f4fb33cb" kindref="member">get_advance_range</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;min_advance,<sp/>&amp;max_advance);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>properties<sp/>=<sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a492d8caa4990fa50c481400db8f99915" kindref="member">get_properties</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%x<sp/>%s<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">,<sp/>properties,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4fc0f6815e2091efedcff7ab6183d19a" kindref="member">get_script_from_script_id</ref>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a77cdfcf9338d6565e6321a583392d5a1" kindref="member">get_script</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a63bccb6db92175f2c198261f576e7fca" kindref="member">get_other_case</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%x<sp/>%d,%d,%d,%d,%d,%d,%d,%d,%d,%d<sp/>%s<sp/>%d<sp/>%d<sp/>%d<sp/>%s\t#<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>properties,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_bottom,<sp/>max_bottom,<sp/>min_top,<sp/>max_top,<sp/>min_width,<sp/>max_width,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_bearing,<sp/>max_bearing,<sp/>min_advance,<sp/>max_advance,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4fc0f6815e2091efedcff7ab6183d19a" kindref="member">get_script_from_script_id</ref>(this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a77cdfcf9338d6565e6321a583392d5a1" kindref="member">get_script</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a63bccb6db92175f2c198261f576e7fca" kindref="member">get_other_case</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f483f40e0030e839c614b9656bdb32c" kindref="member">get_direction</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a30af8eb685f6e249da0798a7e67bffc7" kindref="member">get_mirror</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a1c9099b44ba61ade75d2a5c6d782f146" kindref="member">get_normed_unichar</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a2543f3cb2b8da0160a87088940cc58d2" kindref="member">debug_str</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="class_in_memory_file_pointer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_in_memory_file_pointer" kindref="compound">InMemoryFilePointer</ref><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="class_in_memory_file_pointer_1aeaeba797277a817f8973feddfea098f2" kindref="member">InMemoryFilePointer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*memory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mem_size)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>memory_(memory),<sp/>fgets_ptr_(memory),<sp/>mem_size_(mem_size)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_in_memory_file_pointer_1a8551ddfe401336a8a75f81bd3c2677a4" kindref="member">fgets</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*orig_dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src_end<sp/>=<sp/>memory_<sp/>+<sp/>mem_size_;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst_end<sp/>=<sp/>orig_dst<sp/>+<sp/>size<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fgets_ptr_<sp/>&lt;<sp/>src_end<sp/>?<sp/>orig_dst<sp/>:<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst<sp/>=<sp/>orig_dst;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets_ptr_<sp/>&lt;<sp/>src_end<sp/>&amp;&amp;<sp/>dst<sp/>&lt;<sp/>dst_end<sp/>&amp;&amp;<sp/>ch<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch<sp/>=<sp/>*dst++<sp/>=<sp/>*fgets_ptr_++;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(dst<sp/>==<sp/>orig_dst)<sp/>?<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>:<sp/>orig_dst;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*memory_;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fgets_ptr_;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mem_size_;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">};</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a34e243b3b1434e2774ffae7c1f557e64" kindref="member">UNICHARSET::load_from_inmemory_file</ref>(</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*memory,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mem_size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skip_fragments)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="class_in_memory_file_pointer" kindref="compound">InMemoryFilePointer</ref><sp/>mem_fp(memory,<sp/>mem_size);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;char *, char *, int&gt;</ref><sp/>*fgets_cb<sp/>=</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(&amp;mem_fp,<sp/>&amp;<ref refid="class_in_memory_file_pointer_1a8551ddfe401336a8a75f81bd3c2677a4" kindref="member">InMemoryFilePointer::fgets</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>load_via_fgets(fgets_cb,<sp/>skip_fragments);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fgets_cb;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628" refid="class_local_file_pointer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_local_file_pointer" kindref="compound">LocalFilePointer</ref><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><ref refid="class_local_file_pointer_1a61bafc41e339492bc9fcdfeae1eef22c" kindref="member">LocalFilePointer</ref>(FILE<sp/>*stream)<sp/>:<sp/>fp_(stream)<sp/>{}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_local_file_pointer_1a0a9060f3119634cf4f583f596034ed5d" kindref="member">fgets</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::fgets(dst,<sp/>size,<sp/>fp_);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>FILE<sp/>*fp_;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">};</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1af066ba55fdc20f996eaaed05618b377e" kindref="member">UNICHARSET::load_from_file</ref>(FILE<sp/>*file,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skip_fragments)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><ref refid="class_local_file_pointer" kindref="compound">LocalFilePointer</ref><sp/>lfp(file);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;char *, char *, int&gt;</ref><sp/>*fgets_cb<sp/>=</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(&amp;lfp,<sp/>&amp;<ref refid="class_local_file_pointer_1a0a9060f3119634cf4f583f596034ed5d" kindref="member">LocalFilePointer::fgets</ref>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>load_via_fgets(fgets_cb,<sp/>skip_fragments);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fgets_cb;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UNICHARSET::load_via_fgets(</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;char *, char *, int&gt;</ref><sp/>*fgets_cb,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skip_fragments)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicharset_size;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[256];</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad9060160cd52065e89cbc8927454f525" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets_cb-&gt;<ref refid="class_tess_result_callback2_1a61bd799697bce338fc064326a7b764e3" kindref="member">Run</ref>(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer))<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;unicharset_size)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a33b72579a4aabe9b2953e5cf2a18a5a6" kindref="member">reserve</ref>(unicharset_size);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>unicharset_size;<sp/>++id)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>unichar[256];</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>properties;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>script[64];</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(script,<sp/>null_script);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_bottom<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_bottom<sp/>=<sp/><ref refid="host_8h_1a05682ca8de174141447ff05a2289a27c" kindref="member">MAX_UINT8</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_top<sp/>=<sp/><ref refid="host_8h_1a05682ca8de174141447ff05a2289a27c" kindref="member">MAX_UINT8</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_width<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_bearing<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_bearing<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_advance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_advance<sp/>=<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(eger):<sp/>check<sp/>that<sp/>this<sp/>default<sp/>it<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>enabling<sp/>BiDi<sp/>iterator<sp/>for<sp/>Arabic+Cube.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="vecfuncs_8cpp_1a57d4a186a22b01e2110793bc22a5d8f0" kindref="member">direction</ref><sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078aea057cec3044e6ec313ffc0c0d85e0db" kindref="member">UNICHARSET::U_LEFT_TO_RIGHT</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>other_case<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>mirror<sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>normed[64];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets_cb-&gt;<ref refid="class_tess_result_callback2_1a61bd799697bce338fc064326a7b764e3" kindref="member">Run</ref>(buffer,<sp/>sizeof<sp/>(buffer))<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((v<sp/>=<sp/>sscanf(buffer,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%x<sp/>%d,%d,%d,%d,%d,%d,%d,%d,%d,%d<sp/>%63s<sp/>%d<sp/>%d<sp/>%d<sp/>%63s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar,<sp/>&amp;properties,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_bottom,<sp/>&amp;max_bottom,<sp/>&amp;min_top,<sp/>&amp;max_top,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_width,<sp/>&amp;max_width,<sp/>&amp;min_bearing,<sp/>&amp;max_bearing,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_advance,<sp/>&amp;max_advance,<sp/>script,<sp/>&amp;other_case,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;direction,<sp/>&amp;mirror,<sp/>normed))<sp/>!=<sp/>17<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v<sp/>=<sp/>sscanf(buffer,</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%x<sp/>%d,%d,%d,%d,%d,%d,%d,%d,%d,%d<sp/>%63s<sp/>%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar,<sp/>&amp;properties,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_bottom,<sp/>&amp;max_bottom,<sp/>&amp;min_top,<sp/>&amp;max_top,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_width,<sp/>&amp;max_width,<sp/>&amp;min_bearing,<sp/>&amp;max_bearing,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_advance,<sp/>&amp;max_advance,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script,<sp/>&amp;other_case,<sp/>&amp;direction,<sp/>&amp;mirror))<sp/>!=<sp/>16<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v<sp/>=<sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%x<sp/>%d,%d,%d,%d<sp/>%63s<sp/>%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar,<sp/>&amp;properties,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_bottom,<sp/>&amp;max_bottom,<sp/>&amp;min_top,<sp/>&amp;max_top,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script,<sp/>&amp;other_case,<sp/>&amp;direction,<sp/>&amp;mirror))<sp/>!=<sp/>10<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v<sp/>=<sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%x<sp/>%d,%d,%d,%d<sp/>%63s<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>unichar,<sp/>&amp;properties,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_bottom,<sp/>&amp;max_bottom,<sp/>&amp;min_top,<sp/>&amp;max_top,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script,<sp/>&amp;other_case))<sp/>!=<sp/>8<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v<sp/>=<sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%x<sp/>%63s<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>unichar,<sp/>&amp;properties,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script,<sp/>&amp;other_case))<sp/>!=<sp/>4<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v<sp/>=<sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%x<sp/>%63s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar,<sp/>&amp;properties,<sp/>script))<sp/>!=<sp/>3<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(v<sp/>=<sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>%x&quot;</highlight><highlight class="normal">,<sp/>unichar,<sp/>&amp;properties)<sp/>!=<sp/>2)))<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>fragments<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t" kindref="compound">CHAR_FRAGMENT</ref><sp/>*frag<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skip_fragments<sp/>&amp;&amp;<sp/>(frag<sp/>=<sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1ac56b3d4af146800dd576dd60a11ea563" kindref="member">CHAR_FRAGMENT::parse_from_string</ref>(unichar)))<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>frag;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>unichar<sp/>into<sp/>unicharset<sp/>and<sp/>set<sp/>its<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(unichar,<sp/></highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(unichar);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a345a8e1c310d76ab054693a615e01df1" kindref="member">set_isalpha</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>properties<sp/>&amp;<sp/>ISALPHA_MASK);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9fbe72d0f7a00e1145a663b9e8b8a297" kindref="member">set_islower</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>properties<sp/>&amp;<sp/>ISLOWER_MASK);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a8fc89717f817046f011380fcbd59566d" kindref="member">set_isupper</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>properties<sp/>&amp;<sp/>ISUPPER_MASK);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a7137b0679c03e0c5ac2c350470f7c443" kindref="member">set_isdigit</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>properties<sp/>&amp;<sp/>ISDIGIT_MASK);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a288ea711359f8c5bd0e7c7369a63b27b" kindref="member">set_ispunctuation</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>properties<sp/>&amp;<sp/>ISPUNCTUATION_MASK);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a13e0ac21ee98a761c7d4af0e1f695957" kindref="member">set_isngram</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a825be92d5127eb24f6be6c9758e5ba4f" kindref="member">set_script</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>script);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;unichars[id].properties.enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a6960c3b1ab2f43b1fce0e3b2ba7f76ce" kindref="member">set_top_bottom</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>min_bottom,<sp/>max_bottom,<sp/>min_top,<sp/>max_top);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a230bb7ec4fd4135f13dbb9ec023b186b" kindref="member">set_width_range</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>min_width,<sp/>max_width);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a082ec8a6bc50d6c2527c2885cf272f08" kindref="member">set_bearing_range</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>min_bearing,<sp/>max_bearing);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a15eaa8e19b0204a6aa515ee6a0cb58ba" kindref="member">set_advance_range</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>min_advance,<sp/>max_advance);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a7c191fe85cb17776f4174d0f33dfb9b8" kindref="member">set_direction</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>static_cast&lt;UNICHARSET::Direction&gt;(direction));</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(other_case<sp/>&lt;<sp/>unicharset_size);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a71f4bab94d9bc56d828c67fb64364c41" kindref="member">set_other_case</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>(v&gt;3)<sp/>?<sp/>other_case<sp/>:<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(mirror<sp/>&lt;<sp/>unicharset_size);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a2c911ef9a47dc455f3b7c18a2940d5e3" kindref="member">set_mirror</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>(v&gt;8)<sp/>?<sp/>mirror<sp/>:<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a7a511c09c29cbbb292a10962ebf63096" kindref="member">set_normed</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>(v&gt;16)<sp/>?<sp/>normed<sp/>:<sp/>unichar);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ac704da42f758626cf6d24491b5ffb3e5" kindref="member">post_load_setup</ref>();</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>up<sp/>internal<sp/>data<sp/>after<sp/>loading<sp/>the<sp/>file,<sp/>based<sp/>on<sp/>the<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="comment">//<sp/>properties.<sp/>Called<sp/>from<sp/>load_from_file,<sp/>but<sp/>also<sp/>needs<sp/>to<sp/>be<sp/>run</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">//<sp/>during<sp/>set_unicharset_properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ac704da42f758626cf6d24491b5ffb3e5" kindref="member">UNICHARSET::post_load_setup</ref>()<sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>alpha<sp/>chars<sp/>with<sp/>the<sp/>case<sp/>property<sp/>minus<sp/>those<sp/>without,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>order<sp/>to<sp/>determine<sp/>that<sp/>half<sp/>the<sp/>alpha<sp/>chars<sp/>have<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>net_case_alphas<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_height_alphas<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cap_height_alphas<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/>top_bottom_set_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>size_used;<sp/>++id)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_bottom<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_bottom<sp/>=<sp/><ref refid="host_8h_1a05682ca8de174141447ff05a2289a27c" kindref="member">MAX_UINT8</ref>;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_top<sp/>=<sp/><ref refid="host_8h_1a05682ca8de174141447ff05a2289a27c" kindref="member">MAX_UINT8</ref>;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1af2e0d12e80aa3aa985652d73eaf1e95f" kindref="member">get_top_bottom</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>&amp;min_bottom,<sp/>&amp;max_bottom,<sp/>&amp;min_top,<sp/>&amp;max_top);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_top<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top_bottom_set_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a074096c823dd5b9bc02c02a59784bf34" kindref="member">get_islower</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a482a94b3e6fcd4e5b9b9363bb9e0ee59" kindref="member">get_isupper</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++net_case_alphas;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--net_case_alphas;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_top<sp/>&lt;<sp/>kMeanlineThreshold<sp/>&amp;&amp;<sp/>max_top<sp/>&lt;<sp/>kMeanlineThreshold)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++x_height_alphas;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_top<sp/>&gt;<sp/>kMeanlineThreshold<sp/>&amp;&amp;<sp/>max_top<sp/>&gt;<sp/>kMeanlineThreshold)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cap_height_alphas;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>script_has_upper_lower_<sp/>=<sp/>net_case_alphas<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>script_has_xheight_<sp/>=<sp/>script_has_upper_lower_<sp/>||</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(x_height_alphas<sp/>&gt;<sp/>cap_height_alphas<sp/>*<sp/><ref refid="unicharset_8cpp_1adc8d0ca6841f77218a8db3e9b8c61b75" kindref="member">kMinXHeightFraction</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cap_height_alphas<sp/>&gt;<sp/>x_height_alphas<sp/>*<sp/><ref refid="unicharset_8cpp_1a26f266710ee10c783d867b473b89490d" kindref="member">kMinCapHeightFraction</ref>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/>null_sid_<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4b2038eaf3a0a23d2d877705919ce547" kindref="member">get_script_id_from_name</ref>(null_script);</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(null_sid_<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/>common_sid_<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4b2038eaf3a0a23d2d877705919ce547" kindref="member">get_script_id_from_name</ref>(</highlight><highlight class="stringliteral">&quot;Common&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>latin_sid_<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4b2038eaf3a0a23d2d877705919ce547" kindref="member">get_script_id_from_name</ref>(</highlight><highlight class="stringliteral">&quot;Latin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>cyrillic_sid_<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4b2038eaf3a0a23d2d877705919ce547" kindref="member">get_script_id_from_name</ref>(</highlight><highlight class="stringliteral">&quot;Cyrillic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>greek_sid_<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4b2038eaf3a0a23d2d877705919ce547" kindref="member">get_script_id_from_name</ref>(</highlight><highlight class="stringliteral">&quot;Greek&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/>han_sid_<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4b2038eaf3a0a23d2d877705919ce547" kindref="member">get_script_id_from_name</ref>(</highlight><highlight class="stringliteral">&quot;Han&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>hiragana_sid_<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4b2038eaf3a0a23d2d877705919ce547" kindref="member">get_script_id_from_name</ref>(</highlight><highlight class="stringliteral">&quot;Hiragana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>katakana_sid_<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4b2038eaf3a0a23d2d877705919ce547" kindref="member">get_script_id_from_name</ref>(</highlight><highlight class="stringliteral">&quot;Katakana&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>default<sp/>script.<sp/>Use<sp/>the<sp/>highest-counting<sp/>alpha<sp/>script,<sp/>that<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>the<sp/>common<sp/>script,<sp/>as<sp/>that<sp/>still<sp/>contains<sp/>some<sp/>&quot;alphas&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>script_counts<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[script_table_size_used];</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>memset(script_counts,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*script_counts)<sp/>*<sp/>script_table_size_used);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>size_used;<sp/>++id)<sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++script_counts[<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a77cdfcf9338d6565e6321a583392d5a1" kindref="member">get_script</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)];</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>default_sid_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>1;<sp/>s<sp/>&lt;<sp/>script_table_size_used;<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script_counts[s]<sp/>&gt;<sp/>script_counts[default_sid_]<sp/>&amp;&amp;<sp/>s<sp/>!=<sp/>common_sid_)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default_sid_<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>script_counts;</highlight></codeline>
<codeline lineno="807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>right_to_left<sp/>scripts<sp/>are<sp/>significant<sp/>in<sp/>the<sp/>unicharset,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>without<sp/>being<sp/>so<sp/>sensitive<sp/>that<sp/>&quot;universal&quot;<sp/>unicharsets<sp/>containing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="comment">//<sp/>characters<sp/>from<sp/>many<sp/>scripts,<sp/>like<sp/>orientation<sp/>and<sp/>script<sp/>detection,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="comment">//<sp/>look<sp/>like<sp/>they<sp/>are<sp/>right_to_left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a8bf761158c6ff3c36148861cb8417b91" kindref="member">UNICHARSET::major_right_to_left</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ltr_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rtl_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>size_used;<sp/>++id)<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dir<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f483f40e0030e839c614b9656bdb32c" kindref="member">get_direction</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078aea057cec3044e6ec313ffc0c0d85e0db" kindref="member">UNICHARSET::U_LEFT_TO_RIGHT</ref>)<sp/>ltr_count++;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078ac979da8ecbc0d158b8cb516db7e3824d" kindref="member">UNICHARSET::U_RIGHT_TO_LEFT</ref><sp/>||</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>==<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078ac6664fbc7421c2ed788911b3f1ba56c8" kindref="member">UNICHARSET::U_RIGHT_TO_LEFT_ARABIC</ref><sp/>||</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>==<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078a2603bff7a0466ebbb5b9b9abd5a485e5" kindref="member">UNICHARSET::U_ARABIC_NUMBER</ref>)<sp/>rtl_count++;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rtl_count<sp/>&gt;<sp/>ltr_count;</highlight></codeline>
<codeline lineno="824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>a<sp/>whitelist<sp/>and/or<sp/>blacklist<sp/>of<sp/>characters<sp/>to<sp/>recognize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>empty<sp/>or<sp/>NULL<sp/>whitelist<sp/>enables<sp/>everything<sp/>(minus<sp/>any<sp/>blacklist).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>empty<sp/>or<sp/>NULL<sp/>blacklist<sp/>disables<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a526526e8b41e18098d8dd0faafda8fd3" kindref="member">UNICHARSET::set_black_and_whitelist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>blacklist,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>whitelist)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>def_enabled<sp/>=<sp/>whitelist<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>whitelist[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>everything<sp/>to<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch<sp/>=<sp/>0;<sp/>ch<sp/>&lt;<sp/>size_used;<sp/>++ch)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>unichars[ch].properties.enabled<sp/>=<sp/>def_enabled;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch_step;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/>if<sp/>(!def_enabled)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>the<sp/>whitelist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w_ind<sp/>=<sp/>0;<sp/>whitelist[w_ind]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>w_ind<sp/>+=<sp/>ch_step)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch_step<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">step</ref>(whitelist<sp/>+<sp/>w_ind);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch_step<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>u_id<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(whitelist<sp/>+<sp/>w_ind,<sp/>ch_step);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u_id<sp/>!=<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichars[u_id].properties.enabled<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_step<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blacklist<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>blacklist[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>the<sp/>blacklist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b_ind<sp/>=<sp/>0;<sp/>blacklist[b_ind]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>b_ind<sp/>+=<sp/>ch_step)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ch_step<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab18a1f069bcb107a7b316520d23fb57c" kindref="member">step</ref>(blacklist<sp/>+<sp/>b_ind);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch_step<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>u_id<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(blacklist<sp/>+<sp/>b_ind,<sp/>ch_step);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(u_id<sp/>!=<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichars[u_id].properties.enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ch_step<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a7cbfd800fe71082f0e7d58b7c25330bb" kindref="member">UNICHARSET::add_script</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>script_table_size_used;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(script,<sp/>script_table[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script_table_size_reserved<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>script_table_size_reserved<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>script_table<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*[script_table_size_reserved];</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script_table_size_used<sp/>+<sp/>1<sp/>&gt;=<sp/>script_table_size_reserved)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>new_script_table<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*[script_table_size_reserved<sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(new_script_table,<sp/>script_table,<sp/>script_table_size_reserved<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>script_table;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>script_table<sp/>=<sp/>new_script_table;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>script_table_size_reserved<sp/>=<sp/>2<sp/>*<sp/>script_table_size_reserved;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>script_table[script_table_size_used]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[strlen(script)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>strcpy(script_table[script_table_size_used],<sp/>script);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>script_table_size_used++;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>string<sp/>that<sp/>represents<sp/>a<sp/>fragment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>given<sp/>unichar,<sp/>pos<sp/>and<sp/>total.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1ab7a7a173907f187f44677d2ad2679e09" kindref="member">CHAR_FRAGMENT::to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*unichar,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>natural)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>(unichar);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>result<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>kSeparator;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>unichar;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[<ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1a1fe86011ab9488980aca8e8e26958b2a" kindref="member">kMaxLen</ref>];</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/>snprintf(buffer,<sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1a1fe86011ab9488980aca8e8e26958b2a" kindref="member">kMaxLen</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%c%d%c%d&quot;</highlight><highlight class="normal">,<sp/>kSeparator,<sp/>pos,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>natural<sp/>?<sp/>kNaturalFlag<sp/>:<sp/>kSeparator,<sp/>total);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/>result<sp/>+=<sp/>buffer;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="900"><highlight class="normal">}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t" kindref="compound">CHAR_FRAGMENT</ref><sp/>*<ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1ac56b3d4af146800dd576dd60a11ea563" kindref="member">CHAR_FRAGMENT::parse_from_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>string;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>strlen(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1a7f25080aacecf7533fa11ec5d7bf2b15" kindref="member">kMinLen</ref><sp/>||<sp/>*ptr<sp/>!=<sp/>kSeparator)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>string<sp/>can<sp/>not<sp/>represent<sp/>a<sp/>fragment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>ptr++;<sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>the<sp/>next<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((ptr<sp/>+<sp/>step)<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>+<sp/>len)<sp/>&amp;&amp;<sp/>*(ptr<sp/>+<sp/>step)<sp/>!=<sp/>kSeparator)<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>+=<sp/><ref refid="class_u_n_i_c_h_a_r_1a8182a4663f6c1df9f097700f1009ab22" kindref="member">UNICHAR::utf8_step</ref>(ptr<sp/>+<sp/>step);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(step<sp/>==<sp/>0<sp/>||<sp/>step<sp/>&gt;<sp/><ref refid="unichar_8h_1a902bc40c9d89802bc063afe30ce9e708" kindref="member">UNICHAR_LEN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>character<sp/>for<sp/>unichar<sp/>or<sp/>the<sp/>character<sp/>is<sp/>too<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>unichar[<ref refid="unichar_8h_1a902bc40c9d89802bc063afe30ce9e708" kindref="member">UNICHAR_LEN</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>strncpy(unichar,<sp/>ptr,<sp/>step);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>unichar[step]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>null<sp/>terminate<sp/>unichar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>ptr<sp/>+=<sp/>step;<sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>the<sp/>next<sp/>fragment<sp/>separator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>natural<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end_ptr<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>+<sp/>len<sp/>||<sp/>*ptr<sp/>!=<sp/>kSeparator)<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>*ptr<sp/>==<sp/>kNaturalFlag)</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>natural<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>to<sp/>parse<sp/>fragment<sp/>representation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr++;<sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>the<sp/>next<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>==<sp/>0<sp/>?<sp/>pos<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(strtol(ptr,<sp/>&amp;end_ptr,<sp/>10))</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>total<sp/>=<sp/>static_cast&lt;int&gt;(strtol(ptr,<sp/>&amp;end_ptr,<sp/>10));</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>end_ptr;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>+<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>malformed<sp/>fragment<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t" kindref="compound">CHAR_FRAGMENT</ref><sp/>*fragment<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t" kindref="compound">CHAR_FRAGMENT</ref>();</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>fragment-&gt;<ref refid="class_c_h_a_r___f_r_a_g_m_e_n_t_1acb20b5f377469c19f37d197ffb9559f8" kindref="member">set_all</ref>(unichar,<sp/>pos,<sp/>total,<sp/>natural);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fragment;</highlight></codeline>
<codeline lineno="942"><highlight class="normal">}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a4b2038eaf3a0a23d2d877705919ce547" kindref="member">UNICHARSET::get_script_id_from_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>script_table_size_used;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(script_name,<sp/>script_table[i])<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>is<sp/>always<sp/>the<sp/>null_script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccutil/unicharset.cpp"/>
  </compounddef>
</doxygen>
