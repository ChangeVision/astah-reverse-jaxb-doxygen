<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="strokewidth_8h" kind="file">
    <compoundname>strokewidth.h</compoundname>
    <includes refid="blobbox_8h" local="yes">blobbox.h</includes>
    <includes refid="blobgrid_8h" local="yes">blobgrid.h</includes>
    <includes refid="colpartitiongrid_8h" local="yes">colpartitiongrid.h</includes>
    <includes refid="textlineprojection_8h" local="yes">textlineprojection.h</includes>
    <includedby refid="ccnontextdetect_8cpp" local="yes">textord/ccnontextdetect.cpp</includedby>
    <includedby refid="colfind_8cpp" local="yes">textord/colfind.cpp</includedby>
    <includedby refid="strokewidth_8cpp" local="yes">textord/strokewidth.cpp</includedby>
    <incdepgraph>
      <node id="39259">
        <label>textord/strokewidth.h</label>
        <link refid="strokewidth.h"/>
        <childnode refid="39260" relation="include">
        </childnode>
        <childnode refid="39306" relation="include">
        </childnode>
        <childnode refid="39309" relation="include">
        </childnode>
        <childnode refid="39316" relation="include">
        </childnode>
      </node>
      <node id="39260">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="39261" relation="include">
        </childnode>
        <childnode refid="39274" relation="include">
        </childnode>
        <childnode refid="39275" relation="include">
        </childnode>
        <childnode refid="39298" relation="include">
        </childnode>
        <childnode refid="39305" relation="include">
        </childnode>
      </node>
      <node id="39313">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="39306" relation="include">
        </childnode>
        <childnode refid="39261" relation="include">
        </childnode>
        <childnode refid="39289" relation="include">
        </childnode>
        <childnode refid="39274" relation="include">
        </childnode>
        <childnode refid="39292" relation="include">
        </childnode>
        <childnode refid="39307" relation="include">
        </childnode>
      </node>
      <node id="39280">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="39307">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="39261" relation="include">
        </childnode>
        <childnode refid="39285" relation="include">
        </childnode>
        <childnode refid="39292" relation="include">
        </childnode>
        <childnode refid="39293" relation="include">
        </childnode>
        <childnode refid="39308" relation="include">
        </childnode>
      </node>
      <node id="39305">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39263" relation="include">
        </childnode>
        <childnode refid="39293" relation="include">
        </childnode>
      </node>
      <node id="39267">
        <label>stdlib.h</label>
      </node>
      <node id="39264">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="39265" relation="include">
        </childnode>
      </node>
      <node id="39283">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="39271" relation="include">
        </childnode>
      </node>
      <node id="39308">
        <label>allheaders.h</label>
      </node>
      <node id="39293">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
      </node>
      <node id="39266">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="39267" relation="include">
        </childnode>
        <childnode refid="39268" relation="include">
        </childnode>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39269" relation="include">
        </childnode>
        <childnode refid="39271" relation="include">
        </childnode>
        <childnode refid="39272" relation="include">
        </childnode>
      </node>
      <node id="39261">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39263" relation="include">
        </childnode>
        <childnode refid="39266" relation="include">
        </childnode>
        <childnode refid="39273" relation="include">
        </childnode>
      </node>
      <node id="39284">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="39285" relation="include">
        </childnode>
        <childnode refid="39292" relation="include">
        </childnode>
      </node>
      <node id="39270">
        <label>stddef.h</label>
      </node>
      <node id="39271">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="39263" relation="include">
        </childnode>
      </node>
      <node id="39303">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="39301" relation="include">
        </childnode>
        <childnode refid="39289" relation="include">
        </childnode>
        <childnode refid="39287" relation="include">
        </childnode>
        <childnode refid="39292" relation="include">
        </childnode>
        <childnode refid="39293" relation="include">
        </childnode>
        <childnode refid="39304" relation="include">
        </childnode>
      </node>
      <node id="39265">
        <label>limits.h</label>
      </node>
      <node id="39312">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="39307" relation="include">
        </childnode>
        <childnode refid="39260" relation="include">
        </childnode>
        <childnode refid="39281" relation="include">
        </childnode>
        <childnode refid="39313" relation="include">
        </childnode>
      </node>
      <node id="39290">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="39288" relation="include">
        </childnode>
      </node>
      <node id="39291">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="39287" relation="include">
        </childnode>
      </node>
      <node id="39274">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39263" relation="include">
        </childnode>
        <childnode refid="39266" relation="include">
        </childnode>
        <childnode refid="39273" relation="include">
        </childnode>
      </node>
      <node id="39268">
        <label>string.h</label>
      </node>
      <node id="39316">
        <label>textlineprojection.h</label>
        <link refid="textlineprojection_8h"/>
        <childnode refid="39306" relation="include">
        </childnode>
      </node>
      <node id="39292">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="39288" relation="include">
        </childnode>
        <childnode refid="39287" relation="include">
        </childnode>
        <childnode refid="39280" relation="include">
        </childnode>
        <childnode refid="39293" relation="include">
        </childnode>
        <childnode refid="39294" relation="include">
        </childnode>
      </node>
      <node id="39282">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="39263" relation="include">
        </childnode>
      </node>
      <node id="39314">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="39278">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="39263" relation="include">
        </childnode>
      </node>
      <node id="39309">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="39307" relation="include">
        </childnode>
        <childnode refid="39310" relation="include">
        </childnode>
        <childnode refid="39315" relation="include">
        </childnode>
      </node>
      <node id="39285">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="39286" relation="include">
        </childnode>
        <childnode refid="39291" relation="include">
        </childnode>
        <childnode refid="39282" relation="include">
        </childnode>
        <childnode refid="39292" relation="include">
        </childnode>
        <childnode refid="39283" relation="include">
        </childnode>
        <childnode refid="39293" relation="include">
        </childnode>
      </node>
      <node id="39275">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="39276" relation="include">
        </childnode>
        <childnode refid="39282" relation="include">
        </childnode>
        <childnode refid="39274" relation="include">
        </childnode>
        <childnode refid="39281" relation="include">
        </childnode>
        <childnode refid="39283" relation="include">
        </childnode>
        <childnode refid="39284" relation="include">
        </childnode>
        <childnode refid="39295" relation="include">
        </childnode>
      </node>
      <node id="39295">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39296" relation="include">
        </childnode>
        <childnode refid="39275" relation="include">
        </childnode>
      </node>
      <node id="39272">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="39271" relation="include">
        </childnode>
      </node>
      <node id="39311">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="39312" relation="include">
        </childnode>
        <childnode refid="39278" relation="include">
        </childnode>
        <childnode refid="39313" relation="include">
        </childnode>
        <childnode refid="39314" relation="include">
        </childnode>
      </node>
      <node id="39288">
        <label>math.h</label>
      </node>
      <node id="39286">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="39287" relation="include">
        </childnode>
        <childnode refid="39291" relation="include">
        </childnode>
      </node>
      <node id="39273">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="39271" relation="include">
        </childnode>
      </node>
      <node id="39297">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="39287" relation="include">
        </childnode>
      </node>
      <node id="39301">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="39298">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="39299" relation="include">
        </childnode>
        <childnode refid="39300" relation="include">
        </childnode>
        <childnode refid="39295" relation="include">
        </childnode>
        <childnode refid="39302" relation="include">
        </childnode>
      </node>
      <node id="39276">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39277" relation="include">
        </childnode>
        <childnode refid="39281" relation="include">
        </childnode>
      </node>
      <node id="39277">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39267" relation="include">
        </childnode>
        <childnode refid="39278" relation="include">
        </childnode>
        <childnode refid="39271" relation="include">
        </childnode>
        <childnode refid="39279" relation="include">
        </childnode>
        <childnode refid="39280" relation="include">
        </childnode>
      </node>
      <node id="39269">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="39270" relation="include">
        </childnode>
        <childnode refid="39263" relation="include">
        </childnode>
      </node>
      <node id="39306">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="39307" relation="include">
        </childnode>
        <childnode refid="39260" relation="include">
        </childnode>
      </node>
      <node id="39300">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="39301" relation="include">
        </childnode>
        <childnode refid="39289" relation="include">
        </childnode>
        <childnode refid="39281" relation="include">
        </childnode>
      </node>
      <node id="39289">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39263" relation="include">
        </childnode>
        <childnode refid="39266" relation="include">
        </childnode>
        <childnode refid="39273" relation="include">
        </childnode>
      </node>
      <node id="39310">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="39307" relation="include">
        </childnode>
        <childnode refid="39260" relation="include">
        </childnode>
        <childnode refid="39280" relation="include">
        </childnode>
        <childnode refid="39298" relation="include">
        </childnode>
        <childnode refid="39292" relation="include">
        </childnode>
        <childnode refid="39293" relation="include">
        </childnode>
        <childnode refid="39311" relation="include">
        </childnode>
        <childnode refid="39313" relation="include">
        </childnode>
      </node>
      <node id="39287">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39288" relation="include">
        </childnode>
        <childnode refid="39289" relation="include">
        </childnode>
        <childnode refid="39290" relation="include">
        </childnode>
      </node>
      <node id="39299">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="39269" relation="include">
        </childnode>
      </node>
      <node id="39294">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="39276" relation="include">
        </childnode>
      </node>
      <node id="39304">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="39263">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="39264" relation="include">
        </childnode>
      </node>
      <node id="39302">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="39261" relation="include">
        </childnode>
        <childnode refid="39299" relation="include">
        </childnode>
        <childnode refid="39281" relation="include">
        </childnode>
        <childnode refid="39303" relation="include">
        </childnode>
        <childnode refid="39304" relation="include">
        </childnode>
      </node>
      <node id="39315">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="39310" relation="include">
        </childnode>
        <childnode refid="39277" relation="include">
        </childnode>
        <childnode refid="39292" relation="include">
        </childnode>
        <childnode refid="39313" relation="include">
        </childnode>
      </node>
      <node id="39262">
        <label>stdio.h</label>
      </node>
      <node id="39281">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39268" relation="include">
        </childnode>
        <childnode refid="39264" relation="include">
        </childnode>
        <childnode refid="39269" relation="include">
        </childnode>
      </node>
      <node id="39279">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="39262" relation="include">
        </childnode>
        <childnode refid="39268" relation="include">
        </childnode>
      </node>
      <node id="39296">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="39297" relation="include">
        </childnode>
        <childnode refid="39266" relation="include">
        </childnode>
        <childnode refid="39269" relation="include">
        </childnode>
        <childnode refid="39292" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="39318">
        <label>textord/ccnontextdetect.cpp</label>
        <link refid="ccnontextdetect_8cpp"/>
      </node>
      <node id="39317">
        <label>textord/strokewidth.h</label>
        <link refid="strokewidth.h"/>
        <childnode refid="39318" relation="include">
        </childnode>
        <childnode refid="39319" relation="include">
        </childnode>
        <childnode refid="39320" relation="include">
        </childnode>
      </node>
      <node id="39319">
        <label>textord/colfind.cpp</label>
        <link refid="colfind_8cpp"/>
      </node>
      <node id="39320">
        <label>textord/strokewidth.cpp</label>
        <link refid="strokewidth_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesseract_1_1_stroke_width" prot="public">tesseract::StrokeWidth</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strokewidth.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Subclass<sp/>of<sp/>BBGrid<sp/>to<sp/>find<sp/>uniformity<sp/>of<sp/>strokewidth.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Mar<sp/>31<sp/>16:17:01<sp/>PST<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_TEXTORD_STROKEWIDTH_H__</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_TEXTORD_STROKEWIDTH_H__</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobbox_8h" kindref="compound">blobbox.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BlobNeighourDir.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobgrid_8h" kindref="compound">blobgrid.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Base<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitiongrid_8h" kindref="compound">colpartitiongrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="textlineprojection_8h" kindref="compound">textlineprojection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ColPartition_LIST;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TabFind;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TextlineProjection;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Misc<sp/>enums<sp/>to<sp/>clarify<sp/>bool<sp/>arguments<sp/>for<sp/>direction-controlling<sp/>args.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="namespacetesseract_1acd121b57d321ca8511db069f603d071f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071f" kindref="member">LeftOrRight</ref><sp/>{</highlight></codeline>
<codeline lineno="40" refid="namespacetesseract_1acd121b57d321ca8511db069f603d071fa83d27ea7b63eb91b9feed005a2f46ec9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071fa83d27ea7b63eb91b9feed005a2f46ec9" kindref="member">LR_LEFT</ref>,</highlight></codeline>
<codeline lineno="41" refid="namespacetesseract_1acd121b57d321ca8511db069f603d071facb1914d58c6a7acb6ddb9563a46a1046" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071facb1914d58c6a7acb6ddb9563a46a1046" kindref="member">LR_RIGHT</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classtesseract_1_1_stroke_width" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_stroke_width" kindref="compound">StrokeWidth</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_blob_grid" kindref="compound">BlobGrid</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_stroke_width_1a4551a10f256b1df74832b53b8f0e33b2" kindref="member">StrokeWidth</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/><ref refid="classtesseract_1_1_grid_base_1ad20b2cb8eb2bf52871d5260c04949cce" kindref="member">bleft</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/><ref refid="classtesseract_1_1_grid_base_1aa94e147841b6a4fae0b28e7e872685a5" kindref="member">tright</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_stroke_width_1a86277000549e608335b9fcbb042d165b" kindref="member">~StrokeWidth</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>neighbours<sp/>member<sp/>of<sp/>the<sp/>medium-sized<sp/>blobs<sp/>in<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Searches<sp/>on<sp/>4<sp/>sides<sp/>of<sp/>each<sp/>blob<sp/>for<sp/>similar-sized,<sp/>similar-strokewidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blobs<sp/>and<sp/>sets<sp/>pointers<sp/>to<sp/>the<sp/>good<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_stroke_width_1a8273b43eb6170be582f30d5049aec523" kindref="member">SetNeighboursOnMediumBlobs</ref>(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>neighbour/textline<sp/>writing<sp/>direction<sp/>members<sp/>of<sp/>the<sp/>medium</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>large<sp/>blobs<sp/>with<sp/>optional<sp/>repair<sp/>of<sp/>broken<sp/>CJK<sp/>characters<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Repair<sp/>of<sp/>broken<sp/>CJK<sp/>is<sp/>needed<sp/>here<sp/>because<sp/>broken<sp/>CJK<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>fool<sp/>the<sp/>textline<sp/>direction<sp/>detection<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_stroke_width_1aadfc985b5ed12df5ac545b344a304326" kindref="member">FindTextlineDirectionAndFixBrokenCJK</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cjk_merge,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>input_block);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>save<sp/>computation,<sp/>the<sp/>process<sp/>of<sp/>generating<sp/>partitions<sp/>is<sp/>broken</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>the<sp/>following<sp/>4<sp/>steps:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TestVerticalTextDirection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CorrectForRotation<sp/>(used<sp/>only<sp/>if<sp/>a<sp/>rotation<sp/>is<sp/>to<sp/>be<sp/>applied)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FindLeaderPartitions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GradeBlobsIntoPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>are<sp/>all<sp/>required,<sp/>in<sp/>sequence,<sp/>except<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CorrectForRotation,<sp/>which<sp/>is<sp/>not<sp/>needed<sp/>if<sp/>no<sp/>rotation<sp/>is<sp/>applied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Types<sp/>all<sp/>the<sp/>blobs<sp/>as<sp/>vertical<sp/>or<sp/>horizontal<sp/>text<sp/>or<sp/>unknown<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>true<sp/>if<sp/>the<sp/>majority<sp/>are<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>blobs<sp/>are<sp/>rotated,<sp/>it<sp/>is<sp/>necessary<sp/>to<sp/>call<sp/>CorrectForRotation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>rotating<sp/>everything,<sp/>otherwise<sp/>the<sp/>work<sp/>done<sp/>here<sp/>will<sp/>be<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>osd_blobs<sp/>is<sp/>not<sp/>null,<sp/>a<sp/>list<sp/>of<sp/>blobs<sp/>from<sp/>the<sp/>dominant<sp/>textline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>are<sp/>returned<sp/>for<sp/>use<sp/>in<sp/>orientation<sp/>and<sp/>script<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_stroke_width_1a2db693b25f867e5ac21177353f6abcac" kindref="member">TestVerticalTextDirection</ref>(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>osd_blobs);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Corrects<sp/>the<sp/>data<sp/>structures<sp/>for<sp/>the<sp/>given<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_stroke_width_1a35f8ebba3622b6777da414ce6679158d" kindref="member">CorrectForRotation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>leader<sp/>partitions<sp/>and<sp/>inserts<sp/>them<sp/>into<sp/>the<sp/>give<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_stroke_width_1a8418b53298a0a6b71b8d4c804d48980e" kindref="member">FindLeaderPartitions</ref>(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>and<sp/>marks<sp/>noise<sp/>those<sp/>blobs<sp/>that<sp/>look<sp/>like<sp/>bits<sp/>of<sp/>vertical<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>would<sp/>otherwise<sp/>screw<sp/>up<sp/>layout<sp/>analysis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_stroke_width_1a726e68e695eceafbf22602ba8c563c4a" kindref="member">RemoveLineResidue</ref>(ColPartition_LIST*<sp/>big_part_list);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Types<sp/>all<sp/>the<sp/>blobs<sp/>as<sp/>vertical<sp/>text<sp/>or<sp/>horizontal<sp/>text<sp/>or<sp/>unknown<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>puts<sp/>them<sp/>into<sp/>initial<sp/>ColPartitions<sp/>in<sp/>the<sp/>supplied<sp/>part_grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rerotation<sp/>determines<sp/>how<sp/>to<sp/>get<sp/>back<sp/>to<sp/>the<sp/>image<sp/>coordinates<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blob<sp/>coordinates<sp/>(since<sp/>they<sp/>may<sp/>have<sp/>been<sp/>rotated<sp/>for<sp/>vertical<sp/>text).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>is<sp/>the<sp/>single<sp/>block<sp/>for<sp/>the<sp/>whole<sp/>page<sp/>or<sp/>rectangle<sp/>to<sp/>be<sp/>OCRed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>nontext_pix<sp/>(full-size),<sp/>is<sp/>a<sp/>binary<sp/>mask<sp/>used<sp/>to<sp/>prevent<sp/>merges<sp/>across</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>photo/text<sp/>boundaries.<sp/>It<sp/>is<sp/>not<sp/>kept<sp/>beyond<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>denorm<sp/>provides<sp/>a<sp/>mapping<sp/>back<sp/>to<sp/>the<sp/>image<sp/>from<sp/>the<sp/>current<sp/>blob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>coordinate<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>projection<sp/>provides<sp/>a<sp/>measure<sp/>of<sp/>textline<sp/>density<sp/>over<sp/>the<sp/>image<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>provides<sp/>functions<sp/>to<sp/>assist<sp/>with<sp/>diacritic<sp/>detection.<sp/>It<sp/>should<sp/>be<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>a<sp/>new<sp/>TextlineProjection,<sp/>and<sp/>will<sp/>be<sp/>setup<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>part_grid<sp/>is<sp/>the<sp/>output<sp/>grid<sp/>of<sp/>textline<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Large<sp/>blobs<sp/>that<sp/>cause<sp/>overlap<sp/>are<sp/>put<sp/>in<sp/>separate<sp/>partitions<sp/>and<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>big_parts<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_stroke_width_1a64cc6e7ab7c16c2181dd1fa09d6c765e" kindref="member">GradeBlobsIntoPartitions</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>nontext_pix,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_textline_projection" kindref="compound">TextlineProjection</ref>*<sp/>projection,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_parts);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Handles<sp/>a<sp/>click<sp/>event<sp/>in<sp/>a<sp/>display<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_stroke_width_1a90b53628c521c80302467b8059fc0a5c" kindref="member">HandleClick</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>noise_density_<sp/>by<sp/>summing<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>neighbourhood<sp/>of<sp/>each<sp/>grid<sp/>cell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ComputeNoiseDensity(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,<sp/><ref refid="classtesseract_1_1_tab_find" kindref="compound">TabFind</ref>*<sp/>line_grid);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detects<sp/>and<sp/>marks<sp/>leader<sp/>dots/dashes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Leaders<sp/>are<sp/>horizontal<sp/>chains<sp/>of<sp/>small<sp/>or<sp/>noise<sp/>blobs<sp/>that<sp/>look</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>monospace<sp/>according<sp/>to<sp/>ColPartition::MarkAsLeaderIfMonospaced().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Detected<sp/>leaders<sp/>become<sp/>the<sp/>only<sp/>occupants<sp/>of<sp/>the<sp/>block-&gt;small_blobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-leader<sp/>small<sp/>blobs<sp/>get<sp/>moved<sp/>to<sp/>the<sp/>blobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-leader<sp/>noise<sp/>blobs<sp/>remain<sp/>singletons<sp/>in<sp/>the<sp/>noise<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>small<sp/>and<sp/>noise<sp/>blobs<sp/>in<sp/>high<sp/>density<sp/>regions<sp/>are<sp/>marked<sp/>BTFT_NONTEXT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>block<sp/>is<sp/>the<sp/>single<sp/>block<sp/>for<sp/>the<sp/>whole<sp/>page<sp/>or<sp/>rectangle<sp/>to<sp/>be<sp/>OCRed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>leader_parts<sp/>is<sp/>the<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindLeadersAndMarkNoise(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>leader_parts);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertBlobs(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fix<sp/>broken<sp/>CJK<sp/>characters,<sp/>using<sp/>the<sp/>fake<sp/>joined<sp/>blobs<sp/>mechanism.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Blobs<sp/>are<sp/>really<sp/>merged,<sp/>ie<sp/>the<sp/>master<sp/>takes<sp/>all<sp/>the<sp/>outlines<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>others<sp/>are<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>sufficient<sp/>blobs<sp/>are<sp/>merged<sp/>that<sp/>it<sp/>may<sp/>be<sp/>worth<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>again,<sp/>due<sp/>to<sp/>a<sp/>better<sp/>estimate<sp/>of<sp/>character<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FixBrokenCJK(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Collect<sp/>blobs<sp/>that<sp/>overlap<sp/>or<sp/>are<sp/>within<sp/>max_dist<sp/>of<sp/>the<sp/>input<sp/>bbox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>them<sp/>in<sp/>the<sp/>list<sp/>of<sp/>blobs<sp/>and<sp/>expand<sp/>the<sp/>bbox<sp/>to<sp/>be<sp/>the<sp/>union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>all<sp/>the<sp/>boxes.<sp/>not_this<sp/>is<sp/>excluded<sp/>from<sp/>the<sp/>search,<sp/>as<sp/>are<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>cause<sp/>the<sp/>merged<sp/>box<sp/>to<sp/>exceed<sp/>max_size<sp/>in<sp/>either<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AccumulateOverlaps(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>not_this,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_dist,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bbox,<sp/>BLOBNBOX_CLIST*<sp/>blobs);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>blob<sp/>in<sp/>this<sp/>grid,<sp/>Finds<sp/>the<sp/>textline<sp/>direction<sp/>to<sp/>be<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>vertical<sp/>according<sp/>to<sp/>distance<sp/>to<sp/>neighbours<sp/>and<sp/>1st<sp/>and<sp/>2nd<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>neighbours.<sp/>Non-text<sp/>tends<sp/>to<sp/>end<sp/>up<sp/>without<sp/>a<sp/>definite<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Result<sp/>is<sp/>setting<sp/>of<sp/>the<sp/>neighbours<sp/>and<sp/>vert_possible/horz_possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>flags<sp/>in<sp/>the<sp/>BLOBNBOXes<sp/>currently<sp/>in<sp/>this<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>is<sp/>called<sp/>more<sp/>than<sp/>once<sp/>if<sp/>page<sp/>orientation<sp/>is<sp/>uncertain,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>display_if_debugging<sp/>is<sp/>true<sp/>on<sp/>the<sp/>final<sp/>call<sp/>to<sp/>display<sp/>the<sp/>results.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindTextlineFlowDirection(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>display_if_debugging);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>neighbours<sp/>and<sp/>good_stroke_neighbours<sp/>members<sp/>of<sp/>the<sp/>blob<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>searching<sp/>close<sp/>on<sp/>all<sp/>4<sp/>sides.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>finding<sp/>leader<sp/>dots/dashes,<sp/>there<sp/>is<sp/>a<sp/>slightly<sp/>different<sp/>rule<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>makes<sp/>a<sp/>good<sp/>neighbour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>activate_line_trap,<sp/>then<sp/>line-like<sp/>objects<sp/>are<sp/>found<sp/>and<sp/>isolated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNeighbours(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leaders,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>activate_line_trap,<sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>good_stroke_neighbours<sp/>member<sp/>of<sp/>the<sp/>blob<sp/>if<sp/>it<sp/>has<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>GoodNeighbour<sp/>on<sp/>the<sp/>given<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>sets<sp/>the<sp/>neighbour<sp/>in<sp/>the<sp/>blob,<sp/>whether<sp/>or<sp/>not<sp/>a<sp/>good<sp/>one<sp/>is<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>value<sp/>is<sp/>the<sp/>number<sp/>of<sp/>neighbours<sp/>in<sp/>the<sp/>line<sp/>trap<sp/>size<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Leaders<sp/>get<sp/>extra<sp/>special<sp/>lenient<sp/>treatment.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FindGoodNeighbour(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref><sp/>dir,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leaders,<sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Makes<sp/>the<sp/>blob<sp/>to<sp/>be<sp/>only<sp/>horizontal<sp/>or<sp/>vertical<sp/>where<sp/>evidence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>clear<sp/>based<sp/>on<sp/>gaps<sp/>of<sp/>2nd<sp/>order<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNeighbourFlows(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Nullify<sp/>the<sp/>neighbours<sp/>in<sp/>the<sp/>wrong<sp/>directions<sp/>where<sp/>the<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>clear-cut<sp/>based<sp/>on<sp/>a<sp/>distance<sp/>margin.<sp/>Good<sp/>for<sp/>isolating<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>text<sp/>from<sp/>neighbouring<sp/>horizontal<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SimplifyObviousNeighbours(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Smoothes<sp/>the<sp/>vertical/horizontal<sp/>type<sp/>of<sp/>the<sp/>blob<sp/>based<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2nd-order<sp/>neighbours.<sp/>If<sp/>reset_all<sp/>is<sp/>true,<sp/>then<sp/>all<sp/>blobs<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>changed.<sp/>Otherwise,<sp/>only<sp/>ambiguous<sp/>blobs<sp/>are<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SmoothNeighbourTypes(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>desperate);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Checks<sp/>the<sp/>left<sp/>or<sp/>right<sp/>side<sp/>of<sp/>the<sp/>given<sp/>leader<sp/>partition<sp/>and<sp/>sets<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(opposite)<sp/>leader_on_right<sp/>or<sp/>leader_on_left<sp/>flags<sp/>for<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>are<sp/>next<sp/>to<sp/>the<sp/>given<sp/>side<sp/>of<sp/>the<sp/>given<sp/>leader<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MarkLeaderNeighbours(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref>*<sp/>part,<sp/><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071f" kindref="member">LeftOrRight</ref><sp/>side);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Partition<sp/>creation.<sp/>Accumulates<sp/>vertical<sp/>and<sp/>horizontal<sp/>text<sp/>chains,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>puts<sp/>the<sp/>remaining<sp/>blobs<sp/>in<sp/>as<sp/>unknowns,<sp/>and<sp/>then<sp/>merges/splits<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>minimize<sp/>overlap<sp/>and<sp/>smoothes<sp/>the<sp/>types<sp/>with<sp/>neighbours<sp/>and<sp/>the<sp/>color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>image<sp/>if<sp/>provided.<sp/>rerotation<sp/>is<sp/>used<sp/>to<sp/>rotate<sp/>the<sp/>coordinate<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>the<sp/>nontext_map_<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindInitialPartitions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rerotation,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_parts);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>vertical<sp/>chains<sp/>of<sp/>text-like<sp/>blobs<sp/>and<sp/>puts<sp/>them<sp/>in<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindVerticalTextChains(<ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>horizontal<sp/>chains<sp/>of<sp/>text-like<sp/>blobs<sp/>and<sp/>puts<sp/>them<sp/>in<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindHorizontalTextChains(<ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>diacritics<sp/>and<sp/>saves<sp/>their<sp/>base<sp/>character<sp/>in<sp/>the<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TestDiacritics(<ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid,<sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Searches<sp/>this<sp/>grid<sp/>for<sp/>an<sp/>appropriately<sp/>close<sp/>and<sp/>sized<sp/>neighbour<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>[small]<sp/>blob.<sp/>If<sp/>such<sp/>a<sp/>blob<sp/>is<sp/>found,<sp/>the<sp/>diacritic<sp/>base<sp/>is<sp/>saved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>blob<sp/>and<sp/>true<sp/>is<sp/>returned.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>small_grid<sp/>is<sp/>a<sp/>secondary<sp/>grid<sp/>that<sp/>contains<sp/>the<sp/>small/noise<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>are<sp/>not<sp/>in<sp/>this<sp/>grid,<sp/>but<sp/>may<sp/>be<sp/>useful<sp/>for<sp/>determining<sp/>a<sp/>connection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>between<sp/>blob<sp/>and<sp/>its<sp/>potential<sp/>base<sp/>character.<sp/>(See<sp/>DiacriticXGapFilled.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DiacriticBlob(<ref refid="classtesseract_1_1_blob_grid" kindref="compound">BlobGrid</ref>*<sp/>small_grid,<sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>no<sp/>gap<sp/>between<sp/>the<sp/>base<sp/>char<sp/>and<sp/>the<sp/>diacritic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bigger<sp/>than<sp/>a<sp/>fraction<sp/>of<sp/>the<sp/>height<sp/>of<sp/>the<sp/>base<sp/>char:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Eg:<sp/>line<sp/>end.....&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>quote<sp/>is<sp/>a<sp/>long<sp/>way<sp/>from<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line,<sp/>yet<sp/>it<sp/>needs<sp/>to<sp/>be<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>diacritic.<sp/>To<sp/>determine<sp/>that<sp/>the<sp/>quote<sp/>is<sp/>not<sp/>part<sp/>of<sp/>an<sp/>image,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>different<sp/>text<sp/>block,<sp/>we<sp/>check<sp/>for<sp/>other<sp/>marks<sp/>in<sp/>the<sp/>gap<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>base<sp/>char<sp/>and<sp/>the<sp/>diacritic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;&lt;--Diacritic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>|---------|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|&lt;-toobig-gap-&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>|<sp/>Base<sp/><sp/><sp/><sp/>|&lt;ok<sp/>gap&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>|---------|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x&lt;-----Dot<sp/>occupying<sp/>gap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>grid<sp/>is<sp/>const<sp/>really.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DiacriticXGapFilled(<ref refid="classtesseract_1_1_blob_grid" kindref="compound">BlobGrid</ref>*<sp/>grid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>diacritic_box,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>base_box);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merges<sp/>diacritics<sp/>with<sp/>the<sp/>ColPartition<sp/>of<sp/>the<sp/>base<sp/>character<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MergeDiacritics(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,<sp/><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>blobs<sp/>on<sp/>the<sp/>large_blobs<sp/>list<sp/>of<sp/>block<sp/>that<sp/>are<sp/>still<sp/>unowned<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ColPartition,<sp/>are<sp/>probably<sp/>drop-cap<sp/>or<sp/>vertically<sp/>touching<sp/>so<sp/>the<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>removed<sp/>to<sp/>the<sp/>big_parts<sp/>list<sp/>and<sp/>treated<sp/>separately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemoveLargeUnusedBlobs(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>big_parts);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>remaining<sp/>unused<sp/>blobs<sp/>are<sp/>put<sp/>in<sp/>individual<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PartitionRemainingBlobs(<ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>combine,<sp/>put<sp/>all<sp/>blobs<sp/>in<sp/>the<sp/>cell_list<sp/>into<sp/>a<sp/>single<sp/>partition,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>put<sp/>each<sp/>one<sp/>into<sp/>its<sp/>own<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakePartitionsFromCellList(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>combine,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>cell_list);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>finish<sp/>setting<sp/>up<sp/>a<sp/>ColPartition<sp/>and<sp/>insert<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>part_grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CompletePartition(<ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref>*<sp/>part,<sp/><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>partitions<sp/>where<sp/>the<sp/>merge<sp/>appears<sp/>harmless.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EasyMerges(<ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref>*<sp/>part_grid);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>a<sp/>search<sp/>box<sp/>based<sp/>on<sp/>the<sp/>orientation<sp/>of<sp/>the<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>a<sp/>suitable<sp/>box<sp/>can<sp/>be<sp/>calculated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Callback<sp/>for<sp/>EasyMerges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>OrientationSearchBox(<ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref>*<sp/>part,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>box);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>confirmation<sp/>callback<sp/>for<sp/>EasyMerges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ConfirmEasyMerge(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref>*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref>*<sp/>p2);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>there<sp/>is<sp/>no<sp/>significant<sp/>noise<sp/>in<sp/>between<sp/>the<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>NoNoiseInBetween(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box2)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Displays<sp/>the<sp/>blobs<sp/>colored<sp/>according<sp/>to<sp/>the<sp/>number<sp/>of<sp/>good<sp/>neighbours</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>vertical/horizontal<sp/>flow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>DisplayGoodBlobs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>window_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Displays<sp/>blobs<sp/>colored<sp/>according<sp/>to<sp/>whether<sp/>or<sp/>not<sp/>they<sp/>are<sp/>diacritics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>DisplayDiacritics(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>window_name,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Image<sp/>map<sp/>of<sp/>photo/noise<sp/>areas<sp/>on<sp/>the<sp/>page.<sp/>Borrowed<sp/>pointer<sp/>(not<sp/>owned.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>Pix*<sp/>nontext_map_;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Textline<sp/>projection<sp/>map.<sp/>Borrowed<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_textline_projection" kindref="compound">TextlineProjection</ref>*<sp/>projection_;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DENORM<sp/>used<sp/>by<sp/>projection_<sp/>to<sp/>get<sp/>back<sp/>to<sp/>image<sp/>coords.<sp/>Borrowed<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm_;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bounding<sp/>box<sp/>of<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>grid_box_;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rerotation<sp/>to<sp/>get<sp/>back<sp/>to<sp/>the<sp/>original<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>rerotation_;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Windows<sp/>for<sp/>debug<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>leaders_win_;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>initial_widths_win_;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>widths_win_;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>chains_win_;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>diacritics_win_;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>textlines_win_;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>smoothed_win_;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_TEXTORD_STROKEWIDTH_H__</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h"/>
  </compounddef>
</doxygen>
