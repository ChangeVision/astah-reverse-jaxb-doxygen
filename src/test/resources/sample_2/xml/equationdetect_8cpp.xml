<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="equationdetect_8cpp" kind="file">
    <compoundname>equationdetect.cpp</compoundname>
    <includes local="no">float.h</includes>
    <includes refid="equationdetect_8h" local="yes">equationdetect.h</includes>
    <includes refid="bbgrid_8h" local="yes">bbgrid.h</includes>
    <includes refid="classify_8h" local="yes">classify.h</includes>
    <includes refid="colpartition_8h" local="yes">colpartition.h</includes>
    <includes refid="colpartitiongrid_8h" local="yes">colpartitiongrid.h</includes>
    <includes refid="colpartitionset_8h" local="yes">colpartitionset.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="ratngs_8h" local="yes">ratngs.h</includes>
    <includes refid="tesseractclass_8h" local="yes">tesseractclass.h</includes>
    <incdepgraph>
      <node id="1674">
        <label>matchtab.h</label>
        <link refid="matchtab_8h"/>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1623" relation="include">
        </childnode>
      </node>
      <node id="1609">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="1610" relation="include">
        </childnode>
        <childnode refid="1617" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
      </node>
      <node id="1663">
        <label>docqual.h</label>
        <link refid="docqual_8h"/>
        <childnode refid="1655" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
      </node>
      <node id="1629">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="1669">
        <label>wordrec.h</label>
        <link refid="wordrec_8h"/>
        <childnode refid="1670" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1630" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1674" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1675" relation="include">
        </childnode>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1636" relation="include">
        </childnode>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1554">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1568" relation="include">
        </childnode>
        <childnode refid="1569" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
      </node>
      <node id="1636">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
      </node>
      <node id="1649">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="1650" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1568" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
      </node>
      <node id="1633">
        <label>assert.h</label>
      </node>
      <node id="1552">
        <label>float.h</label>
      </node>
      <node id="1654">
        <label>tesseractclass.h</label>
        <link refid="tesseractclass_8h"/>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1655" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
        <childnode refid="1664" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1667" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
      </node>
      <node id="1605">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="1606" relation="include">
        </childnode>
        <childnode refid="1628" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1630" relation="include">
        </childnode>
        <childnode refid="1639" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1642" relation="include">
        </childnode>
        <childnode refid="1644" relation="include">
        </childnode>
        <childnode refid="1643" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1640" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
      </node>
      <node id="1574">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="1659">
        <label>rejctmap.h</label>
        <link refid="rejctmap_8h"/>
        <childnode refid="1563" relation="include">
        </childnode>
        <childnode refid="1576" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
      </node>
      <node id="1603">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1579" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
      </node>
      <node id="1599">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
      </node>
      <node id="1617">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="1664">
        <label>devanagari_processing.h</label>
        <link refid="devanagari__processing_8h"/>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
      </node>
      <node id="1561">
        <label>stdlib.h</label>
      </node>
      <node id="1558">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="1559" relation="include">
        </childnode>
      </node>
      <node id="1626">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
      </node>
      <node id="1675">
        <label>gradechop.h</label>
        <link refid="gradechop_8h"/>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1574" relation="include">
        </childnode>
      </node>
      <node id="1665">
        <label>ocrclass.h</label>
        <link refid="ocrclass_8h"/>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
      </node>
      <node id="1577">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="1565" relation="include">
        </childnode>
      </node>
      <node id="1610">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1565" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
        <childnode refid="1614" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
        <childnode refid="1615" relation="include">
        </childnode>
        <childnode refid="1616" relation="include">
        </childnode>
      </node>
      <node id="1604">
        <label>allheaders.h</label>
      </node>
      <node id="1587">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
      </node>
      <node id="1560">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="1561" relation="include">
        </childnode>
        <childnode refid="1562" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1563" relation="include">
        </childnode>
        <childnode refid="1565" relation="include">
        </childnode>
        <childnode refid="1566" relation="include">
        </childnode>
      </node>
      <node id="1662">
        <label>tessarray.h</label>
        <link refid="tessarray_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
      </node>
      <node id="1555">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1560" relation="include">
        </childnode>
        <childnode refid="1567" relation="include">
        </childnode>
      </node>
      <node id="1622">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
      </node>
      <node id="1628">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1629" relation="include">
        </childnode>
      </node>
      <node id="1578">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="1579" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
      </node>
      <node id="1637">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="1631" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
      </node>
      <node id="1600">
        <label>equationdetectbase.h</label>
        <link refid="equationdetectbase_8h"/>
      </node>
      <node id="1632">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="1633" relation="include">
        </childnode>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
        <childnode refid="1569" relation="include">
        </childnode>
      </node>
      <node id="1564">
        <label>stddef.h</label>
      </node>
      <node id="1602">
        <label>memory.h</label>
      </node>
      <node id="1645">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="1619" relation="include">
        </childnode>
      </node>
      <node id="1621">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1582" relation="include">
        </childnode>
      </node>
      <node id="1678">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="1633" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
      </node>
      <node id="1565">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
      </node>
      <node id="1619">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
      </node>
      <node id="1597">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
        <childnode refid="1598" relation="include">
        </childnode>
      </node>
      <node id="1559">
        <label>limits.h</label>
      </node>
      <node id="1677">
        <label>chop.h</label>
        <link refid="chop_8h"/>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1660" relation="include">
        </childnode>
      </node>
      <node id="1670">
        <label>associate.h</label>
        <link refid="associate_8h"/>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1661" relation="include">
        </childnode>
        <childnode refid="1636" relation="include">
        </childnode>
      </node>
      <node id="1642">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1618" relation="include">
        </childnode>
        <childnode refid="1643" relation="include">
        </childnode>
        <childnode refid="1582" relation="include">
        </childnode>
      </node>
      <node id="1658">
        <label>params_training_featdef.h</label>
        <link refid="params__training__featdef_8h"/>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
      </node>
      <node id="1630">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1631" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1629" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1635" relation="include">
        </childnode>
        <childnode refid="1637" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
        <childnode refid="1638" relation="include">
        </childnode>
      </node>
      <node id="1553">
        <label>equationdetect.h</label>
        <link refid="equationdetect_8h"/>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
      </node>
      <node id="1648">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
        <childnode refid="1649" relation="include">
        </childnode>
      </node>
      <node id="1584">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="1582" relation="include">
        </childnode>
      </node>
      <node id="1585">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="1581" relation="include">
        </childnode>
      </node>
      <node id="1568">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1560" relation="include">
        </childnode>
        <childnode refid="1567" relation="include">
        </childnode>
      </node>
      <node id="1615">
        <label>pthread.h</label>
      </node>
      <node id="1562">
        <label>string.h</label>
      </node>
      <node id="1613">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="1601" relation="include">
        </childnode>
      </node>
      <node id="1657">
        <label>boxword.h</label>
        <link refid="boxword_8h"/>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
      </node>
      <node id="1601">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1562" relation="include">
        </childnode>
      </node>
      <node id="1608">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1562" relation="include">
        </childnode>
        <childnode refid="1561" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1588" relation="include">
        </childnode>
        <childnode refid="1609" relation="include">
        </childnode>
      </node>
      <node id="1676">
        <label>findseam.h</label>
        <link refid="findseam_8h"/>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
      </node>
      <node id="1586">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="1582" relation="include">
        </childnode>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1574" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
        <childnode refid="1588" relation="include">
        </childnode>
      </node>
      <node id="1576">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
      </node>
      <node id="1651">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="1572">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
      </node>
      <node id="1616">
        <label>semaphore.h</label>
      </node>
      <node id="1652">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1646" relation="include">
        </childnode>
        <childnode refid="1653" relation="include">
        </childnode>
      </node>
      <node id="1579">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="1580" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
        <childnode refid="1576" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1577" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
      </node>
      <node id="1569">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1576" relation="include">
        </childnode>
        <childnode refid="1568" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
        <childnode refid="1577" relation="include">
        </childnode>
        <childnode refid="1578" relation="include">
        </childnode>
        <childnode refid="1589" relation="include">
        </childnode>
      </node>
      <node id="1589">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
        <childnode refid="1569" relation="include">
        </childnode>
      </node>
      <node id="1566">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="1565" relation="include">
        </childnode>
      </node>
      <node id="1620">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1621" relation="include">
        </childnode>
        <childnode refid="1622" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
      </node>
      <node id="1611">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1588" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
      </node>
      <node id="1627">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="1572" relation="include">
        </childnode>
        <childnode refid="1565" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
      </node>
      <node id="1647">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="1648" relation="include">
        </childnode>
        <childnode refid="1572" relation="include">
        </childnode>
        <childnode refid="1649" relation="include">
        </childnode>
        <childnode refid="1651" relation="include">
        </childnode>
      </node>
      <node id="1666">
        <label>time.h</label>
      </node>
      <node id="1582">
        <label>math.h</label>
      </node>
      <node id="1580">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="1581" relation="include">
        </childnode>
        <childnode refid="1585" relation="include">
        </childnode>
      </node>
      <node id="1661">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
      </node>
      <node id="1567">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="1565" relation="include">
        </childnode>
      </node>
      <node id="1591">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="1581" relation="include">
        </childnode>
      </node>
      <node id="1551">
        <label>ccmain/equationdetect.cpp</label>
        <link refid="equationdetect.cpp"/>
        <childnode refid="1552" relation="include">
        </childnode>
        <childnode refid="1553" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1646" relation="include">
        </childnode>
        <childnode refid="1652" relation="include">
        </childnode>
        <childnode refid="1653" relation="include">
        </childnode>
        <childnode refid="1573" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1654" relation="include">
        </childnode>
      </node>
      <node id="1624">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="1582" relation="include">
        </childnode>
        <childnode refid="1623" relation="include">
        </childnode>
      </node>
      <node id="1595">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="1607">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1572" relation="include">
        </childnode>
      </node>
      <node id="1640">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
      </node>
      <node id="1668">
        <label>gap_map.h</label>
        <link refid="gap__map_8h"/>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
      </node>
      <node id="1592">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1589" relation="include">
        </childnode>
        <childnode refid="1596" relation="include">
        </childnode>
      </node>
      <node id="1570">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
      </node>
      <node id="1571">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1561" relation="include">
        </childnode>
        <childnode refid="1572" relation="include">
        </childnode>
        <childnode refid="1565" relation="include">
        </childnode>
        <childnode refid="1573" relation="include">
        </childnode>
        <childnode refid="1574" relation="include">
        </childnode>
      </node>
      <node id="1635">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1636" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
      </node>
      <node id="1563">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="1564" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
      </node>
      <node id="1667">
        <label>textord.h</label>
        <link refid="textord_8h"/>
        <childnode refid="1628" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
      </node>
      <node id="1625">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="1626" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
      </node>
      <node id="1656">
        <label>pageres.h</label>
        <link refid="pageres_8h"/>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1657" relation="include">
        </childnode>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1643" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1589" relation="include">
        </childnode>
        <childnode refid="1658" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1659" relation="include">
        </childnode>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1569" relation="include">
        </childnode>
      </node>
      <node id="1672">
        <label>language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="1670" relation="include">
        </childnode>
        <childnode refid="1631" relation="include">
        </childnode>
        <childnode refid="1630" relation="include">
        </childnode>
        <childnode refid="1641" relation="include">
        </childnode>
        <childnode refid="1618" relation="include">
        </childnode>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1673" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
      </node>
      <node id="1639">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="1640" relation="include">
        </childnode>
      </node>
      <node id="1650">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
      </node>
      <node id="1594">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="1595" relation="include">
        </childnode>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
      </node>
      <node id="1583">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1560" relation="include">
        </childnode>
        <childnode refid="1567" relation="include">
        </childnode>
      </node>
      <node id="1612">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="1565" relation="include">
        </childnode>
        <childnode refid="1573" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
        <childnode refid="1572" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1613" relation="include">
        </childnode>
      </node>
      <node id="1660">
        <label>seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1661" relation="include">
        </childnode>
        <childnode refid="1662" relation="include">
        </childnode>
      </node>
      <node id="1655">
        <label>control.h</label>
        <link refid="control_8h"/>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1656" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
      </node>
      <node id="1646">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1554" relation="include">
        </childnode>
        <childnode refid="1574" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
        <childnode refid="1647" relation="include">
        </childnode>
        <childnode refid="1649" relation="include">
        </childnode>
      </node>
      <node id="1673">
        <label>oldheap.h</label>
        <link refid="oldheap_8h"/>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
      </node>
      <node id="1631">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1572" relation="include">
        </childnode>
      </node>
      <node id="1641">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
      </node>
      <node id="1581">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1582" relation="include">
        </childnode>
        <childnode refid="1583" relation="include">
        </childnode>
        <childnode refid="1584" relation="include">
        </childnode>
      </node>
      <node id="1606">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1618" relation="include">
        </childnode>
        <childnode refid="1556" relation="include">
        </childnode>
      </node>
      <node id="1634">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="1593">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="1563" relation="include">
        </childnode>
      </node>
      <node id="1588">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="1570" relation="include">
        </childnode>
      </node>
      <node id="1644">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1618" relation="include">
        </childnode>
        <childnode refid="1645" relation="include">
        </childnode>
      </node>
      <node id="1598">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="1557">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="1558" relation="include">
        </childnode>
      </node>
      <node id="1596">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1593" relation="include">
        </childnode>
        <childnode refid="1575" relation="include">
        </childnode>
        <childnode refid="1597" relation="include">
        </childnode>
        <childnode refid="1598" relation="include">
        </childnode>
      </node>
      <node id="1653">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="1646" relation="include">
        </childnode>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1649" relation="include">
        </childnode>
      </node>
      <node id="1556">
        <label>stdio.h</label>
      </node>
      <node id="1671">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
      </node>
      <node id="1618">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="1571" relation="include">
        </childnode>
        <childnode refid="1619" relation="include">
        </childnode>
        <childnode refid="1620" relation="include">
        </childnode>
        <childnode refid="1625" relation="include">
        </childnode>
        <childnode refid="1587" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
      </node>
      <node id="1614">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
        <childnode refid="1588" relation="include">
        </childnode>
      </node>
      <node id="1643">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1557" relation="include">
        </childnode>
      </node>
      <node id="1575">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1562" relation="include">
        </childnode>
        <childnode refid="1558" relation="include">
        </childnode>
        <childnode refid="1563" relation="include">
        </childnode>
      </node>
      <node id="1623">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="1555" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
        <childnode refid="1624" relation="include">
        </childnode>
      </node>
      <node id="1573">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="1556" relation="include">
        </childnode>
        <childnode refid="1562" relation="include">
        </childnode>
      </node>
      <node id="1638">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1570" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
      </node>
      <node id="1590">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="1591" relation="include">
        </childnode>
        <childnode refid="1560" relation="include">
        </childnode>
        <childnode refid="1563" relation="include">
        </childnode>
        <childnode refid="1586" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="equationdetect_8cpp_1afb7f932a108f767481aee2906d8c54fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOL_VAR</definition>
        <argsstring>(equationdetect_save_bi_image, false,&quot;Save input bi image&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>equationdetect_save_bi_image</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Save input bi image&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="equationdetect_8cpp_1ad1fc10427429b728f221cffb85a1e076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOL_VAR</definition>
        <argsstring>(equationdetect_save_spt_image, false,&quot;Save special character image&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>equationdetect_save_spt_image</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Save special <ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref> image&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="equationdetect_8cpp_1aeb1c40a96459add014e8d4d12cb7bba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOL_VAR</definition>
        <argsstring>(equationdetect_save_seed_image, false,&quot;Save the seed image&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>equationdetect_save_seed_image</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Save the seed image&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="equationdetect_8cpp_1a887fc2c38c17a805a750819e97f34e10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOL_VAR</definition>
        <argsstring>(equationdetect_save_merged_image, false,&quot;Save the merged image&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>equationdetect_save_merged_image</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Save the merged image&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp" line="51" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equationdetect.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Helper<sp/>classes<sp/>to<sp/>detect<sp/>equations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Zongyi<sp/>(Joe)<sp/>Liu<sp/>(joeliu@google.com)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Aug<sp/>31<sp/>11:13:01<sp/>PST<sp/>2011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2011,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mathfix_8h" kindref="compound">mathfix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__MINGW32__</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="equationdetect_8h" kindref="compound">equationdetect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bbgrid_8h" kindref="compound">bbgrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classify_8h" kindref="compound">classify.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartition_8h" kindref="compound">colpartition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitiongrid_8h" kindref="compound">colpartitiongrid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitionset_8h" kindref="compound">colpartitionset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ratngs_8h" kindref="compound">ratngs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tesseractclass_8h" kindref="compound">tesseractclass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Config<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="params_8h_1a442e7f541a050acf5ebda026db177877" kindref="member">BOOL_VAR</ref>(equationdetect_save_bi_image,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>input<sp/>bi<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="params_8h_1a442e7f541a050acf5ebda026db177877" kindref="member">BOOL_VAR</ref>(equationdetect_save_spt_image,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>special<sp/>character<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="params_8h_1a442e7f541a050acf5ebda026db177877" kindref="member">BOOL_VAR</ref>(equationdetect_save_seed_image,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>the<sp/>seed<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="params_8h_1a442e7f541a050acf5ebda026db177877" kindref="member">BOOL_VAR</ref>(equationdetect_save_merged_image,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Save<sp/>the<sp/>merged<sp/>image&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="comment">//<sp/>Utility<sp/>ColParition<sp/>sort<sp/>functions.</highlight></codeline>
<codeline lineno="58"><highlight class="comment"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SortCPByTopReverse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p2)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>cp1<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">ColPartition*<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>cp2<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">ColPartition*<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p2);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(cp1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>cp2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>&amp;box1(cp1-&gt;bounding_box()),<sp/>&amp;box2(cp2-&gt;bounding_box());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>box2.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>-<sp/>box1.top();</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SortCPByBottom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p2)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>cp1<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">ColPartition*<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p1);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>cp2<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">ColPartition*<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p2);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(cp1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>cp2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>&amp;box1(cp1-&gt;bounding_box()),<sp/>&amp;box2(cp2-&gt;bounding_box());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>box1.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>-<sp/>box2.bottom();</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SortCPByHeight(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p2)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>cp1<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">ColPartition*<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p1);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>cp2<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">ColPartition*<sp/>const*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p2);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(cp1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>cp2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>&amp;box1(cp1-&gt;bounding_box()),<sp/>&amp;box2(cp2-&gt;bounding_box());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>box1.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>-<sp/>box2.height();</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(joeliu):<sp/>we<sp/>may<sp/>want<sp/>to<sp/>parameterize<sp/>these<sp/>constants.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ad996502770c51cc260e4d66db9543bcc" kindref="member">kMathDigitDensityTh1</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a2a82022958d051af0fb624095c3ada00" kindref="member">kMathDigitDensityTh2</ref><sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ad64e658be002902d7a5b0dd98ab0fe35" kindref="member">kMathItalicDensityTh</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a07a51423879204a025d373c6ae40fba5" kindref="member">kUnclearDensityTh</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a113f000461790e1cd1c397f382814da5" kindref="member">kSeedBlobsCountTh</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1a5ac6fad51e61e88df309fb704d8ebc" kindref="member">kLeftIndentAlignmentCountTh</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>PolyBlockType<sp/>is<sp/>of<sp/>text<sp/>type<sp/>or<sp/>equation<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(<ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="publictypes_8h_1a49b7c03fb4e55b82a8fd22b7c6094082" kindref="member">PTIsTextType</ref>(type)<sp/>||<sp/>type<sp/>==<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1afe260b66ccf11a3f3346ba282f315c49" kindref="member">IsLeftIndented</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223" kindref="member">EquationDetect::IndentType</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>==<sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223aab75a5b0799710a14abdda1687c1ae0e" kindref="member">EquationDetect::LEFT_INDENT</ref><sp/>||</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223a4c2d65f544868a206cf72cd4928c8d06" kindref="member">EquationDetect::BOTH_INDENT</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a8a161b61eb46383ddad93473fb3d8749" kindref="member">IsRightIndented</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223" kindref="member">EquationDetect::IndentType</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>type<sp/>==<sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223a8b060953ddfce6e934e4346ba630606b" kindref="member">EquationDetect::RIGHT_INDENT</ref><sp/>||</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>type<sp/>==<sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223a4c2d65f544868a206cf72cd4928c8d06" kindref="member">EquationDetect::BOTH_INDENT</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="classtesseract_1_1_equation_detect_1a0867ba3cb66855f3c625537b6b570447" kindref="member">EquationDetect::EquationDetect</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>equ_datapath,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>equ_name)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>default_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;equ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equ_name<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>equ_name<sp/>=<sp/>default_name;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref><sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1aec76c4ef860f40ec042c65ea1340fc31" kindref="member">page_count_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>equ_tesseract_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Tesseract();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_tesseract_1ae4558a3c1f64abeec1e1829056d8d1f3" kindref="member">init_tesseract</ref>(equ_datapath,<sp/>equ_name,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a04550a0ed1279562027bf2fc92c421aeaea8028f61e76a0f4def7cbe7905206cf" kindref="member">OEM_TESSERACT_ONLY</ref>))<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>equation<sp/>region<sp/>detection<sp/>requested,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>but<sp/>%s<sp/>failed<sp/>to<sp/>load<sp/>from<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>equ_name,<sp/>equ_datapath);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="classtesseract_1_1_equation_detect_1a09236e0cf2e96fd341927a9dbb822f95" kindref="member">EquationDetect::~EquationDetect</ref>()<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(<ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1aded5530c6cdae80194a4ec70104d9889" kindref="member">EquationDetect::SetLangTesseract</ref>(Tesseract*<sp/>lang_tesseract)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref><sp/>=<sp/>lang_tesseract;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a1e62860539cd17573c8f8d8aaf4a07e2" kindref="member">EquationDetect::SetResolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref><sp/>=<sp/>resolution;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1af6d40cc16252ebeba9458c3d5946b5f9" kindref="member">EquationDetect::LabelSpecialText</ref>(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>to_block)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(to_block<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>input<sp/>to_block<sp/>is<sp/>NULL!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;BLOBNBOX_LIST*&gt;</ref><sp/>blob_lists;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>blob_lists.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(&amp;(to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>blob_lists.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(&amp;(to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blob_lists.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_IT<sp/>bbox_it(blob_lists[i]);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bbox_it.mark_cycle_pt<sp/>();<sp/>!bbox_it.cycled_list();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bbox_it.data()-&gt;set_special_text_type(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca1e2ca6a59ce1487c101d4605eab44b7a" kindref="member">BSTT_NONE</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1ae00172a9d9483ef7a204f2316e4d7f96" kindref="member">EquationDetect::IdentifySpecialText</ref>(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref><sp/>*blobnbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_th)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(blobnbox<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobnbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&lt;<sp/>height_th<sp/>&amp;&amp;<sp/>height_th<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>small<sp/>blob,<sp/>we<sp/>simply<sp/>set<sp/>to<sp/>BSTT_NONE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>blobnbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a1650427df7e6b935dd737ad9eb70c36b" kindref="member">set_special_text_type</ref>(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca1e2ca6a59ce1487c101d4605eab44b7a" kindref="member">BSTT_NONE</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_LIST<sp/>ratings_equ,<sp/>ratings_lang;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>blob<sp/>=<sp/>blobnbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>tblob<sp/>=<sp/><ref refid="struct_t_b_l_o_b_1a49b1279a5ff4e05d6dd0beacd2d99395" kindref="member">TBLOB::PolygonalCopy</ref>(blob);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>tblob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>the<sp/>blob.<sp/>Set<sp/>the<sp/>origin<sp/>to<sp/>the<sp/>place<sp/>we<sp/>want<sp/>to<sp/>be<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bottom-middle,<sp/>and<sp/>scaling<sp/>is<sp/>to<sp/>make<sp/>the<sp/>height<sp/>the<sp/>x-height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scaling<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="normalis_8h_1af974e6755e636c8bc7cbe57e3bcbdd73" kindref="member">kBlnXHeight</ref>)<sp/>/<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref><sp/>denorm;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_orig<sp/>=<sp/>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>y_orig<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>denorm.<ref refid="class_d_e_n_o_r_m_1ac667a208c574b073db800890e4e31255" kindref="member">SetupNormalization</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_orig,<sp/>y_orig,<sp/>scaling,<sp/>scaling,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>static_cast&lt;float&gt;(<ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref>));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>normed_blob<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>(*tblob);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>normed_blob-&gt;<ref refid="struct_t_b_l_o_b_1a6c4c913279ff695055baf11bedd4158d" kindref="member">Normalize</ref>(denorm);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_classify_1a1f058451e32538b4dc2c853b82bc6600" kindref="member">AdaptiveClassifier</ref>(normed_blob,<sp/>denorm,<sp/>&amp;ratings_equ,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_classify_1a1f058451e32538b4dc2c853b82bc6600" kindref="member">AdaptiveClassifier</ref>(normed_blob,<sp/>denorm,<sp/>&amp;ratings_lang,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>normed_blob;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tblob;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>best<sp/>choice<sp/>from<sp/>ratings_lang<sp/>and<sp/>rating_equ.<sp/>As<sp/>the<sp/>choice<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>has<sp/>already<sp/>been<sp/>sorted<sp/>by<sp/>the<sp/>certainty,<sp/>we<sp/>simply<sp/>use<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*lang_choice<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>*equ_choice<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ratings_lang.length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOB_CHOICE_IT<sp/>choice_it(&amp;ratings_lang);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>lang_choice<sp/>=<sp/>choice_it.data();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ratings_equ.length()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOB_CHOICE_IT<sp/>choice_it(&amp;ratings_equ);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>equ_choice<sp/>=<sp/>choice_it.data();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lang_score<sp/>=<sp/>lang_choice<sp/>?<sp/>lang_choice-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1af53d45b718c562ea7209b583c77ac14e" kindref="member">certainty</ref>()<sp/>:<sp/>-FLT_MAX;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>equ_score<sp/>=<sp/>equ_choice<sp/>?<sp/>equ_choice-&gt;certainty()<sp/>:<sp/>-FLT_MAX;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kConfScoreTh<sp/>=<sp/>-5.0f,<sp/>kConfDiffTh<sp/>=<sp/>1.8;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>scores<sp/>here<sp/>are<sp/>negative,<sp/>so<sp/>the<sp/>max/min<sp/>==<sp/>fabs(min/max).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>float<sp/>ratio<sp/>=<sp/>fmax(lang_score,<sp/>equ_score)<sp/>/<sp/>fmin(lang_score,<sp/>equ_score);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>fabs(lang_score<sp/>-<sp/>equ_score);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref><sp/>type<sp/>=<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca1e2ca6a59ce1487c101d4605eab44b7a" kindref="member">BSTT_NONE</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Classification.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mathfix_8h_1ac705d35734004d67c12286b1ab39f420" kindref="member">fmax</ref>(lang_score,<sp/>equ_score)<sp/>&lt;<sp/>kConfScoreTh)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>both<sp/>score<sp/>are<sp/>very<sp/>small,<sp/>then<sp/>mark<sp/>it<sp/>as<sp/>unclear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca604529fa299b8dcc81b0ac07ebb2c9b7" kindref="member">BSTT_UNCLEAR</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&gt;<sp/>kConfDiffTh<sp/>&amp;&amp;<sp/>equ_score<sp/>&gt;<sp/>lang_score)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>equ_score<sp/>is<sp/>significantly<sp/>higher,<sp/>then<sp/>we<sp/>classify<sp/>this<sp/>character<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>math<sp/>symbol.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca356056d522254adc40c8acdf14f19c4d" kindref="member">BSTT_MATH</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lang_choice)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>other<sp/>cases:<sp/>lang_score<sp/>is<sp/>similar<sp/>or<sp/>significantly<sp/>higher.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>type<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1a51f3ad45ba13e180c87afd7af86846de" kindref="member">EstimateTypeForUnichar</ref>(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>,<sp/>lang_choice-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca1e2ca6a59ce1487c101d4605eab44b7a" kindref="member">BSTT_NONE</ref><sp/>&amp;&amp;<sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_classify_1a62597f182a5e23c3b8a030c06e699e99" kindref="member">get_fontinfo_table</ref>().get(</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lang_choice-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>()).is_italic())<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>text<sp/>symbol,<sp/>we<sp/>still<sp/>check<sp/>if<sp/>it<sp/>is<sp/>italic.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>blobnbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a1650427df7e6b935dd737ad9eb70c36b" kindref="member">set_special_text_type</ref>(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca9f7c059031ba5f95a4e0f43bac16a33a" kindref="member">BSTT_ITALIC</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>blobnbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a1650427df7e6b935dd737ad9eb70c36b" kindref="member">set_special_text_type</ref>(type);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref><sp/><ref refid="classtesseract_1_1_equation_detect_1a51f3ad45ba13e180c87afd7af86846de" kindref="member">EquationDetect::EstimateTypeForUnichar</ref>(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>s<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca1e2ca6a59ce1487c101d4605eab44b7a" kindref="member">BSTT_NONE</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a57f82c4777d39c923cb9ec27cac9bcb6" kindref="member">get_ispunctuation</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exclude<sp/>some<sp/>special<sp/>texts<sp/>that<sp/>are<sp/>likely<sp/>to<sp/>be<sp/>confused<sp/>as<sp/>math<sp/>symbol.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;UNICHAR_ID&gt;</ref><sp/>ids_to_exclude;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ids_to_exclude.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>kCharsToEx[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;`&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;〈&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;〉&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;《&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;》&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;」&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;「&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(kCharsToEx[i]<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ids_to_exclude.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(kCharsToEx[i++].<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>()));</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ids_to_exclude.<ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">sort</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ids_to_exclude.<ref refid="class_generic_vector_1a56b47b53976101ce26410fea5be3cdd2" kindref="member">bool_binary_search</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>?<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca1e2ca6a59ce1487c101d4605eab44b7a" kindref="member">BSTT_NONE</ref><sp/>:<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca356056d522254adc40c8acdf14f19c4d" kindref="member">BSTT_MATH</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it<sp/>is<sp/>digit.<sp/>In<sp/>addition<sp/>to<sp/>the<sp/>isdigit<sp/>attribute,<sp/>we<sp/>also<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>character<sp/>belongs<sp/>to<sp/>those<sp/>likely<sp/>to<sp/>be<sp/>confused<sp/>with<sp/>a<sp/>digit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>kDigitsChars<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(s.<ref refid="class_s_t_r_i_n_g_1a168505a533eda60219c93e25adf4cdc5" kindref="member">length</ref>()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>kDigitsChars.<ref refid="class_s_t_r_i_n_g_1ad4c1a804168d9442f125944e7eb5159d" kindref="member">contains</ref>(s[0])))<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caaf28e2df284d1c1c8caf262b5fcdb3f4" kindref="member">BSTT_DIGIT</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca356056d522254adc40c8acdf14f19c4d" kindref="member">BSTT_MATH</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1ae00172a9d9483ef7a204f2316e4d7f96" kindref="member">EquationDetect::IdentifySpecialText</ref>()<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>configuration<sp/>for<sp/>Tesseract::AdaptiveClassifier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref>-&gt;tess_cn_matching.set_value(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>turn<sp/>it<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref>-&gt;tess_bn_matching.set_value(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>multiplier<sp/>to<sp/>zero<sp/>for<sp/>lang_tesseract_<sp/>to<sp/>improve<sp/>the<sp/>accuracy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>classify_class_pruner<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;classify_class_pruner_multiplier;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>classify_integer_matcher<sp/>=</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;classify_integer_matcher_multiplier;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;classify_class_pruner_multiplier.set_value(0);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;classify_integer_matcher_multiplier.set_value(0);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(part-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ab4f5bf2daf3f1ab5332c879ef98e5008" kindref="member">IdentifyBlobsToSkip</ref>(part);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>bbox_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>height<sp/>threshold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>blob_heights;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bbox_it.mark_cycle_pt<sp/>();<sp/>!bbox_it.cycled_list();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox_it.data()-&gt;special_text_type()<sp/>!=<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca6fac1a2510eab4553549833d5d1afdc0" kindref="member">BSTT_SKIP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_heights.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(bbox_it.data()-&gt;bounding_box().height());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_heights.sort();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_th<sp/>=<sp/><sp/>blob_heights[blob_heights.size()<sp/>/<sp/>2]<sp/>/<sp/>3<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bbox_it.mark_cycle_pt<sp/>();<sp/>!bbox_it.cycled_list();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox_it.data()-&gt;special_text_type()<sp/>!=<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca6fac1a2510eab4553549833d5d1afdc0" kindref="member">BSTT_SKIP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ae00172a9d9483ef7a204f2316e4d7f96" kindref="member">IdentifySpecialText</ref>(bbox_it.data(),<sp/>height_th);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>multiplier<sp/>values<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;classify_class_pruner_multiplier.set_value(</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>classify_class_pruner);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;classify_integer_matcher_multiplier.set_value(</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>classify_integer_matcher);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equationdetect_save_spt_image)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>debug.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>outfile;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1b16b753a8304af5b0b4e85f5a02aa41" kindref="member">GetOutputTiffName</ref>(</highlight><highlight class="stringliteral">&quot;_spt&quot;</highlight><highlight class="normal">,<sp/>&amp;outfile);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a471e17b6ef69559f50db59e5c92bba50" kindref="member">PaintSpecialTexts</ref>(outfile);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1ab4f5bf2daf3f1ab5332c879ef98e5008" kindref="member">EquationDetect::IdentifyBlobsToSkip</ref>(ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>moment,<sp/>no<sp/>blob<sp/>should<sp/>have<sp/>been<sp/>joined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!blob_it.data()-&gt;joined_to_prev());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1af37f373c72851534101f4caf296a3cf7" kindref="member">joined_to_prev</ref>()<sp/>||<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa33e4d1cf720df979dc50d2b39abb4e9" kindref="member">special_text_type</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca6fac1a2510eab4553549833d5d1afdc0" kindref="member">BSTT_SKIP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>if<sp/>any<sp/>blob<sp/>can<sp/>be<sp/>merged<sp/>into<sp/>blob.<sp/>If<sp/>found,<sp/>then<sp/>we<sp/>mark<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>blobs<sp/>as<sp/>BSTT_SKIP.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it2<sp/>=<sp/>blob_it;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!blob_it2.at_last())<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>nextblob<sp/>=<sp/>blob_it2.forward();</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>nextblob_box<sp/>=<sp/>nextblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextblob_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;=<sp/>blob_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kWidthR<sp/>=<sp/>0.4,<sp/>kHeightR<sp/>=<sp/>0.3;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xoverlap<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a9f7e4e20bdfeee0d82db2f8d24aa72dc" kindref="member">major_x_overlap</ref>(nextblob_box),</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yoverlap<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a7ae8e4b8b3af5b23db3d6c959249064c" kindref="member">y_overlap</ref>(nextblob_box);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>widthR<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(nextblob_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>blob_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()))<sp/>/</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(nextblob_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>blob_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>heightR<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(nextblob_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>blob_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()))<sp/>/</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(nextblob_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>blob_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xoverlap<sp/>&amp;&amp;<sp/>yoverlap<sp/>&amp;&amp;<sp/>widthR<sp/>&gt;<sp/>kWidthR<sp/>&amp;&amp;<sp/>heightR<sp/>&gt;<sp/>kHeightR)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>one,<sp/>set<sp/>nextblob<sp/>type<sp/>and<sp/>recompute<sp/>blob_box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nextblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a1650427df7e6b935dd737ad9eb70c36b" kindref="member">set_special_text_type</ref>(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca6fac1a2510eab4553549833d5d1afdc0" kindref="member">BSTT_SKIP</ref>);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_box<sp/>+=<sp/>nextblob_box;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a1650427df7e6b935dd737ad9eb70c36b" kindref="member">set_special_text_type</ref>(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca6fac1a2510eab4553549833d5d1afdc0" kindref="member">BSTT_SKIP</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a800a94628a99a8f3e054619e170d7fbb" kindref="member">EquationDetect::FindEquationParts</ref>(</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartitionGrid*<sp/>part_grid,<sp/>ColPartitionSet**<sp/>best_columns)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_equation_detect_1a1eeb1ca073ec04a8f4d182b85812bcc9" kindref="member">equ_tesseract_</ref><sp/>||<sp/>!<ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>equ_tesseract_/lang_tesseract_<sp/>is<sp/>NULL!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_grid<sp/>||<sp/>!best_columns)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;part_grid/best_columns<sp/>is<sp/>NULL!!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.clear();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref><sp/>=<sp/>part_grid;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a56fe80b060d60fd1d833b3054f44abdf" kindref="member">best_columns_</ref><sp/>=<sp/>best_columns;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref><sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_tesseract_1ac33885af49e309d9fe16c9febfe19ae1" kindref="member">source_resolution</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>outfile;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1aec76c4ef860f40ec042c65ea1340fc31" kindref="member">page_count_</ref>++;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equationdetect_save_bi_image)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1b16b753a8304af5b0b4e85f5a02aa41" kindref="member">GetOutputTiffName</ref>(</highlight><highlight class="stringliteral">&quot;_bi&quot;</highlight><highlight class="normal">,<sp/>&amp;outfile);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>pixWrite(outfile.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_tesseract_1a97fde2a457aa76137737b247a2418cb7" kindref="member">pix_binary</ref>(),<sp/>IFF_TIFF_G4);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>0:<sp/>Compute<sp/>special<sp/>text<sp/>type<sp/>for<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ae00172a9d9483ef7a204f2316e4d7f96" kindref="member">IdentifySpecialText</ref>();</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>1:<sp/>Merge<sp/>parts<sp/>by<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad26e2adac7587d71b2a9394a4b8897a6" kindref="member">MergePartsByLocation</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>2:<sp/>compute<sp/>the<sp/>math<sp/>blob<sp/>density<sp/>and<sp/>find<sp/>the<sp/>seed<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a39c1397a958168add27d1a4bbc3ff916" kindref="member">IdentifySeedParts</ref>();</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>still<sp/>need<sp/>separate<sp/>seed<sp/>into<sp/>block<sp/>seed<sp/>and<sp/>inline<sp/>seed<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a89b2d841680f6f6207fc4f10b8d7839f" kindref="member">IdentifyInlineParts</ref>();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equationdetect_save_seed_image)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1b16b753a8304af5b0b4e85f5a02aa41" kindref="member">GetOutputTiffName</ref>(</highlight><highlight class="stringliteral">&quot;_seed&quot;</highlight><highlight class="normal">,<sp/>&amp;outfile);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ae10f647d8ed221a3e2faf4520b293281" kindref="member">PaintColParts</ref>(outfile);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>3:<sp/>expand<sp/>block<sp/>equation<sp/>seeds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>seeds_expanded;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a76bc8a18a94fc5f89f6d4d073ba0c9bf" kindref="member">ExpandSeed</ref>(<ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>[i]))<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>seed<sp/>is<sp/>expanded,<sp/>then<sp/>we<sp/>add<sp/>it<sp/>into<sp/>seeds_expanded.<sp/>Note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>seed<sp/>has<sp/>been<sp/>removed<sp/>from<sp/>part_grid_<sp/>if<sp/>it<sp/>is<sp/>expanded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seeds_expanded.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>[i]);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>seeds_expanded<sp/>back<sp/>into<sp/>part_grid_<sp/>and<sp/>reset<sp/>cp_seeds_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>seeds_expanded.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a5f75b1dad656abfdb1a10eddeb8e65de" kindref="member">InsertPartAfterAbsorb</ref>(seeds_expanded[i]);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref><sp/>=<sp/>seeds_expanded;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>4:<sp/>find<sp/>math<sp/>block<sp/>satellite<sp/>text<sp/>partitions<sp/>and<sp/>merge<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a0bb5b44fbab44c93cb338eed35b4ef4a" kindref="member">ProcessMathBlockSatelliteParts</ref>();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equationdetect_save_merged_image)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>debug.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1b16b753a8304af5b0b4e85f5a02aa41" kindref="member">GetOutputTiffName</ref>(</highlight><highlight class="stringliteral">&quot;_merged&quot;</highlight><highlight class="normal">,<sp/>&amp;outfile);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ae10f647d8ed221a3e2faf4520b293281" kindref="member">PaintColParts</ref>(outfile);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1ad26e2adac7587d71b2a9394a4b8897a6" kindref="member">EquationDetect::MergePartsByLocation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>partitions<sp/>that<sp/>have<sp/>been<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>parts_updated;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(part-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>parts_to_merge;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad11061cfdb9eb9cbdb8c9206b96b2c54" kindref="member">SearchByOverlap</ref>(part,<sp/>&amp;parts_to_merge);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parts_to_merge.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>parts_to_merge<sp/>with<sp/>part,<sp/>and<sp/>remove<sp/>them<sp/>from<sp/>part_grid_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>-&gt;<ref refid="classtesseract_1_1_b_b_grid_1adc713153c1282d8727f85ee6d38d7d31" kindref="member">RemoveBBox</ref>(part);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parts_to_merge.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(parts_to_merge[i]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>parts_to_merge[i]<sp/>!=<sp/>part);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Absorb(parts_to_merge[i],<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts_updated.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parts_updated.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>())<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Exit<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-insert<sp/>parts_updated<sp/>into<sp/>part_grid_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parts_updated.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a5f75b1dad656abfdb1a10eddeb8e65de" kindref="member">InsertPartAfterAbsorb</ref>(parts_updated[i]);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1ad11061cfdb9eb9cbdb8c9206b96b2c54" kindref="member">EquationDetect::SearchByOverlap</ref>(</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>seed,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref>*<sp/>parts_overlap)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(seed<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>parts_overlap<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(seed-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>seed_box(seed-&gt;bounding_box());</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kRadNeighborCells<sp/>=<sp/>30;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartRadSearch((seed_box.left()<sp/>+<sp/>seed_box.right())<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(seed_box.top()<sp/>+<sp/>seed_box.bottom())<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kRadNeighborCells);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>iteratively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*part;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>parts;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kLargeOverlapTh<sp/>=<sp/>0.95;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kEquXOverlap<sp/>=<sp/>0.4,<sp/>kEquYOverlap<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextRadSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/>seed<sp/>||<sp/>!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(part-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>merge<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_overlap_fraction<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a9f1aa7e1a714e01ae826600df63eccb3" kindref="member">x_overlap_fraction</ref>(seed_box),</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_overlap_fraction<sp/>=<sp/>part_box.y_overlap_fraction(seed_box);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>part<sp/>is<sp/>large<sp/>overlapped<sp/>with<sp/>seed,<sp/>then<sp/>set<sp/>merge<sp/>to<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_overlap_fraction<sp/>&gt;=<sp/>kLargeOverlapTh<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y_overlap_fraction<sp/>&gt;=<sp/>kLargeOverlapTh)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>merge<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed-&gt;type()<sp/>==<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(part-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x_overlap_fraction<sp/>&gt;<sp/>kEquXOverlap<sp/>&amp;&amp;<sp/>y_overlap_fraction<sp/>&gt;<sp/>0.0)<sp/>||</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x_overlap_fraction<sp/>&gt;<sp/>0.0<sp/>&amp;&amp;<sp/>y_overlap_fraction<sp/>&gt;<sp/>kEquYOverlap))<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merge<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(merge)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>part<sp/>from<sp/>search<sp/>and<sp/>put<sp/>it<sp/>into<sp/>parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.RemoveBBox();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts_overlap-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a5f75b1dad656abfdb1a10eddeb8e65de" kindref="member">EquationDetect::InsertPartAfterAbsorb</ref>(ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>insert<sp/>part<sp/>back<sp/>into<sp/>part_grid_,<sp/>we<sp/>will<sp/>need<sp/>re-compute<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>its<sp/>attributes<sp/>such<sp/>as<sp/>first_column_,<sp/>last_column_.<sp/>However,<sp/>we<sp/>still</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>want<sp/>to<sp/>preserve<sp/>its<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1" kindref="member">BlobTextFlowType</ref><sp/>flow_type<sp/>=<sp/>part-&gt;flow();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60" kindref="member">PolyBlockType</ref><sp/>part_type<sp/>=<sp/>part-&gt;type();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575" kindref="member">BlobRegionType</ref><sp/>blob_type<sp/>=<sp/>part-&gt;blob_type();</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>SetPartitionType<sp/>to<sp/>re-compute<sp/>the<sp/>attributes<sp/>of<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grid_x,<sp/>grid_y;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>-&gt;<ref refid="classtesseract_1_1_grid_base_1a9cb158bba184d657c51257b98eea9f8f" kindref="member">GridCoords</ref>(</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_box.left(),<sp/>part_box.bottom(),<sp/>&amp;grid_x,<sp/>&amp;grid_y);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>part-&gt;SetPartitionType(<ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>,<sp/><ref refid="classtesseract_1_1_equation_detect_1a56fe80b060d60fd1d833b3054f44abdf" kindref="member">best_columns_</ref>[grid_y]);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>types<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>part-&gt;set_type(part_type);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>part-&gt;set_blob_type(blob_type);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>part-&gt;set_flow(flow_type);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>part-&gt;SetBlobTypes();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>into<sp/>part_grid_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>-&gt;<ref refid="classtesseract_1_1_b_b_grid_1a7b379525e3d60c68e583352ae4b8a750" kindref="member">InsertBBox</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a39c1397a958168add27d1a4bbc3ff916" kindref="member">EquationDetect::IdentifySeedParts</ref>()<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>seeds1,<sp/>seeds2;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>left<sp/>coordinates<sp/>of<sp/>indented<sp/>text<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>indented_texts_left;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>foreground<sp/>density<sp/>of<sp/>text<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;float&gt;</ref><sp/>texts_foreground_density;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(part-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;ComputeSpecialBlobsDensity();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>blobs_check<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1a14f4d2d35ed292b40ce57b028d7e124a" kindref="member">CheckSeedBlobsCount</ref>(part);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kTextBlobsTh<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a8c054862ed6512cb8c935c53d179ffb2" kindref="member">CheckSeedDensity</ref>(<ref refid="namespacetesseract_1ad996502770c51cc260e4d66db9543bcc" kindref="member">kMathDigitDensityTh1</ref>,<sp/><ref refid="namespacetesseract_1a2a82022958d051af0fb624095c3ada00" kindref="member">kMathDigitDensityTh2</ref>,<sp/>part)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blobs_check)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Passed<sp/>high<sp/>density<sp/>threshold<sp/>test,<sp/>save<sp/>into<sp/>seeds1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seeds1.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223" kindref="member">IndentType</ref><sp/>indent<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1a35912b69ed5ffa28d88ed53ba9f060d3" kindref="member">IsIndented</ref>(part);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetesseract_1afe260b66ccf11a3f3346ba282f315c49" kindref="member">IsLeftIndented</ref>(indent)<sp/>&amp;&amp;<sp/>blobs_check<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a8c054862ed6512cb8c935c53d179ffb2" kindref="member">CheckSeedDensity</ref>(<ref refid="namespacetesseract_1a2a82022958d051af0fb624095c3ada00" kindref="member">kMathDigitDensityTh2</ref>,<sp/><ref refid="namespacetesseract_1a2a82022958d051af0fb624095c3ada00" kindref="member">kMathDigitDensityTh2</ref>,<sp/>part))<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Passed<sp/>low<sp/>density<sp/>threshold<sp/>test<sp/>and<sp/>is<sp/>indented,<sp/>save<sp/>into<sp/>seeds2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seeds2.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetesseract_1a8a161b61eb46383ddad93473fb3d8749" kindref="member">IsRightIndented</ref>(indent)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;boxes_count()<sp/>&gt;<sp/>kTextBlobsTh)<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>likely<sp/>to<sp/>be<sp/>a<sp/>text<sp/>part,<sp/>save<sp/>the<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacetesseract_1afe260b66ccf11a3f3346ba282f315c49" kindref="member">IsLeftIndented</ref>(indent))<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indented_texts_left.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texts_foreground_density.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(<ref refid="classtesseract_1_1_equation_detect_1a4aa9c0126e15827ea9c66319558d2fb9" kindref="member">ComputeForegroundDensity</ref>(box));</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>the<sp/>features<sp/>collected<sp/>from<sp/>text<sp/>regions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/>indented_texts_left.<ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">sort</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>texts_foreground_density.<ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">sort</ref>();</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>foreground_density_th<sp/>=<sp/>0.15;<sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!texts_foreground_density.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>median<sp/>of<sp/>the<sp/>texts_foreground_density.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>foreground_density_th<sp/>=<sp/>0.8<sp/>*<sp/>texts_foreground_density[</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texts_foreground_density.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>/<sp/>2];</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>seeds1.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>seeds1[i]-&gt;bounding_box();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1aac03fc4552265dd3e79fae673fa63b88" kindref="member">CheckSeedFgDensity</ref>(foreground_density_th,<sp/>seeds1[i])<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(<ref refid="namespacetesseract_1afe260b66ccf11a3f3346ba282f315c49" kindref="member">IsLeftIndented</ref>(<ref refid="classtesseract_1_1_equation_detect_1a35912b69ed5ffa28d88ed53ba9f060d3" kindref="member">IsIndented</ref>(seeds1[i]))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ab6e37bfef27092f6205b13bf8b221ffd" kindref="member">CountAlignment</ref>(indented_texts_left,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>())<sp/>&gt;=</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a1a5ac6fad51e61e88df309fb704d8ebc" kindref="member">kLeftIndentAlignmentCountTh</ref>))<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>as<sp/>PT_EQUATION<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seeds1[i]-&gt;set_type(<ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.push_back(seeds1[i]);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>as<sp/>PT_INLINE_EQUATION<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seeds1[i]-&gt;set_type(<ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60aa52ce81f771512916e01215965910fc6" kindref="member">PT_INLINE_EQUATION</ref>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>seeds2.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a2a1d7cd57ac4ed59a38ffd3b476dd2bf" kindref="member">CheckForSeed2</ref>(indented_texts_left,<sp/>foreground_density_th,<sp/>seeds2[i]))<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seeds2[i]-&gt;set_type(<ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.push_back(seeds2[i]);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a4aa9c0126e15827ea9c66319558d2fb9" kindref="member">EquationDetect::ComputeForegroundDensity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>tbox)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LIBLEPT_MINOR_VERSION<sp/>&lt;<sp/>69<sp/>&amp;&amp;<sp/>LIBLEPT_MAJOR_VERSION<sp/>&lt;=<sp/>1</highlight></codeline>
<codeline lineno="628"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>disable<sp/>the<sp/>detector<sp/>because<sp/>no<sp/>seed<sp/>will<sp/>be<sp/>identified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0f;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="631"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>Pix<sp/>*pix_bi<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_tesseract_1a97fde2a457aa76137737b247a2418cb7" kindref="member">pix_binary</ref>();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix_height<sp/>=<sp/>pixGetHeight(pix_bi);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>Box*<sp/>box<sp/>=<sp/>boxCreate(tbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>pix_height<sp/>-<sp/>tbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>tbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>Pix<sp/>*pix_sub<sp/>=<sp/>pixClipRectangle(pix_bi,<sp/>box,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>l_float32<sp/>fract;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>pixForegroundFraction(pix_sub,<sp/>&amp;fract);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pix_sub);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>boxDestroy(&amp;box);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fract;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="643"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1aac03fc4552265dd3e79fae673fa63b88" kindref="member">EquationDetect::CheckSeedFgDensity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>density_th,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>part<sp/>horizontall,<sp/>and<sp/>check<sp/>for<sp/>each<sp/>sub<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;TBOX&gt;</ref><sp/>sub_boxes;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a1ec8cc3dc57f53854d2190f112c00c85" kindref="member">SplitCPHorLite</ref>(part,<sp/>&amp;sub_boxes);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>parts_passed<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sub_boxes.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>density<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1a4aa9c0126e15827ea9c66319558d2fb9" kindref="member">ComputeForegroundDensity</ref>(sub_boxes[i]);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(density<sp/>&lt;<sp/>density_th)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts_passed++;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>most<sp/>sub<sp/>parts<sp/>passed,<sp/>then<sp/>we<sp/>return<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kSeedPartRatioTh<sp/>=<sp/>0.3;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>(parts_passed<sp/>/<sp/>sub_boxes.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>&gt;=<sp/>kSeedPartRatioTh);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a69db9e31f41bd14650cf850234eceb66" kindref="member">EquationDetect::SplitCPHor</ref>(ColPartition*<sp/>part,</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref>*<sp/>parts_splitted)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part<sp/>&amp;&amp;<sp/>parts_splitted);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;median_width()<sp/>==<sp/>0<sp/>||<sp/>part-&gt;boxes_count()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>copy<sp/>of<sp/>part,<sp/>and<sp/>reset<sp/>parts_splitted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>right_part<sp/>=<sp/>part-&gt;CopyButDontOwnBlobs();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>parts_splitted-&gt;<ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>parts_splitted-&gt;<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kThreshold<sp/>=<sp/>part-&gt;median_width()<sp/>*<sp/>3.0;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found_split<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(found_split)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>found_split<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>box_it(right_part-&gt;boxes());</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Blobs<sp/>are<sp/>sorted<sp/>left<sp/>side<sp/>first.<sp/>If<sp/>blobs<sp/>overlap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>previous<sp/>blob<sp/>may<sp/>have<sp/>a<sp/>&quot;more<sp/>right&quot;<sp/>right<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Account<sp/>for<sp/>this<sp/>by<sp/>always<sp/>keeping<sp/>the<sp/>largest<sp/>&quot;right&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>far.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>previous_right<sp/>=<sp/><ref refid="host_8h_1ae6f88d5bb15e97510f484289f2fc89fd" kindref="member">MIN_INT32</ref>;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>the<sp/>next<sp/>split<sp/>in<sp/>the<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(box_it.mark_cycle_pt();<sp/>!box_it.cycled_list();<sp/>box_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>box_it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_right<sp/>!=<sp/><ref refid="host_8h_1ae6f88d5bb15e97510f484289f2fc89fd" kindref="member">MIN_INT32</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>previous_right<sp/>&gt;<sp/>kThreshold)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>split<sp/>position.<sp/>Split<sp/>the<sp/>partition<sp/>in<sp/>two<sp/>pieces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>left<sp/>piece<sp/>in<sp/>the<sp/>grid<sp/>and<sp/>keep<sp/>processing<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_x<sp/>=<sp/>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>previous_right)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>left_part<sp/>=<sp/>right_part;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_part<sp/>=<sp/>left_part-&gt;SplitAt(mid_x);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parts_splitted-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(left_part);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_part-&gt;ComputeSpecialBlobsDensity();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found_split<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>right<sp/>side<sp/>of<sp/>the<sp/>previous<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>previous_right<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(previous_right,<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>last<sp/>piece.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>right_part-&gt;ComputeSpecialBlobsDensity();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>parts_splitted-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(right_part);</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a1ec8cc3dc57f53854d2190f112c00c85" kindref="member">EquationDetect::SplitCPHorLite</ref>(ColPartition*<sp/>part,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;TBOX&gt;</ref>*<sp/>splitted_boxes)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part<sp/>&amp;&amp;<sp/>splitted_boxes);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/>splitted_boxes-&gt;<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;median_width()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kThreshold<sp/>=<sp/>part-&gt;median_width()<sp/>*<sp/>3.0;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Blobs<sp/>are<sp/>sorted<sp/>left<sp/>side<sp/>first.<sp/>If<sp/>blobs<sp/>overlap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>previous<sp/>blob<sp/>may<sp/>have<sp/>a<sp/>&quot;more<sp/>right&quot;<sp/>right<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Account<sp/>for<sp/>this<sp/>by<sp/>always<sp/>keeping<sp/>the<sp/>largest<sp/>&quot;right&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>far.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>union_box;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>previous_right<sp/>=<sp/><ref refid="host_8h_1ae6f88d5bb15e97510f484289f2fc89fd" kindref="member">MIN_INT32</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>box_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(box_it.mark_cycle_pt();<sp/>!box_it.cycled_list();<sp/>box_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>box_it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_right<sp/>!=<sp/><ref refid="host_8h_1ae6f88d5bb15e97510f484289f2fc89fd" kindref="member">MIN_INT32</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>previous_right<sp/>&gt;<sp/>kThreshold)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>split<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>splitted_boxes-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(union_box);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>previous_right<sp/>=<sp/><ref refid="host_8h_1ae6f88d5bb15e97510f484289f2fc89fd" kindref="member">MIN_INT32</ref>;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_right<sp/>==<sp/><ref refid="host_8h_1ae6f88d5bb15e97510f484289f2fc89fd" kindref="member">MIN_INT32</ref>)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>union_box<sp/>=<sp/>box;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>union_box<sp/>+=<sp/>box;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>right<sp/>side<sp/>of<sp/>the<sp/>previous<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>previous_right<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(previous_right,<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>last<sp/>piece.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(previous_right<sp/>!=<sp/><ref refid="host_8h_1ae6f88d5bb15e97510f484289f2fc89fd" kindref="member">MIN_INT32</ref>)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>splitted_boxes-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(union_box);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a2a1d7cd57ac4ed59a38ffd3b476dd2bf" kindref="member">EquationDetect::CheckForSeed2</ref>(</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/>indented_texts_left,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>foreground_density_th,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it<sp/>is<sp/>aligned<sp/>with<sp/>any<sp/>indented_texts_left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!indented_texts_left.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ab6e37bfef27092f6205b13bf8b221ffd" kindref="member">CountAlignment</ref>(indented_texts_left,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>())<sp/>&gt;=</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a1a5ac6fad51e61e88df309fb704d8ebc" kindref="member">kLeftIndentAlignmentCountTh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>foreground<sp/>density.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a4aa9c0126e15827ea9c66319558d2fb9" kindref="member">ComputeForegroundDensity</ref>(box)<sp/>&gt;<sp/>foreground_density_th)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1ab6e37bfef27092f6205b13bf8b221ffd" kindref="member">EquationDetect::CountAlignment</ref>(</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/>sorted_vec,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sorted_vec.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kDistTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(0.03<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>));</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>sorted_vec.<ref refid="class_generic_vector_1a2eaa0df35abb2c00571bb1d6e5d73377" kindref="member">binary_search</ref>(val),<sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>left<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>abs(val<sp/>-<sp/>sorted_vec[index--])<sp/>&lt;<sp/>kDistTh)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>right<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>index<sp/>=<sp/>pos<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>sorted_vec.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>&amp;&amp;<sp/>sorted_vec[index++]<sp/>-<sp/>val<sp/>&lt;<sp/>kDistTh)<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a89b2d841680f6f6207fc4f10b8d7839f" kindref="member">EquationDetect::IdentifyInlineParts</ref>()<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a8de69a1f250877609333539286e6914a" kindref="member">ComputeCPsSuperBBox</ref>();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ae246fb4897d7e5181ff727874a9eb140" kindref="member">IdentifyInlinePartsHorizontal</ref>();</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textparts_linespacing<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1a096b2bb7f8f59484ec2043d92c3f1eec" kindref="member">EstimateTextPartLineSpacing</ref>();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a657f367e87724bfab6359c42f10fad66" kindref="member">IdentifyInlinePartsVertical</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>textparts_linespacing);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a657f367e87724bfab6359c42f10fad66" kindref="member">IdentifyInlinePartsVertical</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>textparts_linespacing);</highlight></codeline>
<codeline lineno="808"><highlight class="normal">}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a8de69a1f250877609333539286e6914a" kindref="member">EquationDetect::ComputeCPsSuperBBox</ref>()<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>();</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>(*cps_super_bbox_)<sp/>+=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1ae246fb4897d7e5181ff727874a9eb140" kindref="member">EquationDetect::IdentifyInlinePartsHorizontal</ref>()<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(<ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>new_seeds;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kMarginDiffTh<sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.5<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_tesseract_1ac33885af49e309d9fe16c9febfe19ae1" kindref="member">source_resolution</ref>());</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kGapTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>1.0<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_tesseract_1ac33885af49e309d9fe16c9febfe19ae1" kindref="member">source_resolution</ref>()));</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>center<sp/>x<sp/>coordinate<sp/>of<sp/>the<sp/>cp_super_bbox_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cps_cx<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>-&gt;<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>-&gt;<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>[i];</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_margin<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>-&gt;<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_margin<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>-&gt;<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>-<sp/>part_box.right();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>right_to_left;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_margin<sp/>+<sp/>kMarginDiffTh<sp/>&lt;<sp/>right_margin<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_margin<sp/>&lt;<sp/>kMarginDiffTh)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>is<sp/>left<sp/>aligned,<sp/>so<sp/>we<sp/>search<sp/>if<sp/>it<sp/>has<sp/>any<sp/>right<sp/>neighbor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartSideSearch(</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.right(),<sp/>part_box.top(),<sp/>part_box.bottom());</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right_to_left<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_margin<sp/>&gt;<sp/>cps_cx)<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>locates<sp/>on<sp/>the<sp/>right<sp/>half<sp/>on<sp/>image,<sp/>so<sp/>search<sp/>if<sp/>it<sp/>has<sp/>any<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>neighbor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartSideSearch(</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.left(),<sp/>part_box.top(),<sp/>part_box.bottom());</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right_to_left<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>is<sp/>not<sp/>an<sp/>inline<sp/>equation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_seeds.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>neighbor<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>side_neighbor_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbor<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextSideSearch(right_to_left))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>neighbor_box(neighbor-&gt;bounding_box());</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(neighbor-&gt;type())<sp/>||</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.x_gap(neighbor_box)<sp/>&gt;<sp/>kGapTh<sp/>||</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!part_box.major_y_overlap(neighbor_box)<sp/>||</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.major_x_overlap(neighbor_box))<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>found<sp/>one.<sp/>Set<sp/>the<sp/>side_neighbor_found<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>side_neighbor_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!side_neighbor_found)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>part<sp/>as<sp/>PT_INLINE_EQUATION.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_type(<ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60aa52ce81f771512916e01215965910fc6" kindref="member">PT_INLINE_EQUATION</ref>);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>geometric<sp/>feature<sp/>of<sp/>neighbor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>neighbor_box(neighbor-&gt;bounding_box());</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbor_box.width()<sp/>&gt;<sp/>part_box.width()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbor-&gt;type()<sp/>!=<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>as<sp/>PT_INLINE_EQUATION.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_type(<ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60aa52ce81f771512916e01215965910fc6" kindref="member">PT_INLINE_EQUATION</ref>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>is<sp/>not<sp/>an<sp/>inline<sp/>equation<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_seeds.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>cp_seeds_<sp/>using<sp/>the<sp/>new_seeds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref><sp/>=<sp/>new_seeds;</highlight></codeline>
<codeline lineno="886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a096b2bb7f8f59484ec2043d92c3f1eec" kindref="member">EquationDetect::EstimateTextPartLineSpacing</ref>()<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>y<sp/>gap<sp/>between<sp/>text<sp/>partitions;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*current<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>*prev<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>ygaps;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((current<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="publictypes_8h_1a49b7c03fb4e55b82a8fd22b7c6094082" kindref="member">PTIsTextType</ref>(current-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>&amp;current_box<sp/>=<sp/>current-&gt;bounding_box();</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>&amp;prev_box<sp/>=<sp/>prev-&gt;bounding_box();</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prev<sp/>and<sp/>current<sp/>should<sp/>be<sp/>x<sp/>major<sp/>overlap<sp/>and<sp/>non<sp/>y<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_box.<ref refid="class_t_b_o_x_1a9f7e4e20bdfeee0d82db2f8d24aa72dc" kindref="member">major_x_overlap</ref>(prev_box)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!current_box.<ref refid="class_t_b_o_x_1a7ae8e4b8b3af5b23db3d6c959249064c" kindref="member">y_overlap</ref>(prev_box))<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap<sp/>=<sp/>current_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(prev_box);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap<sp/>&lt;<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(current_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>prev_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>gap<sp/>should<sp/>be<sp/>smaller<sp/>than<sp/>the<sp/>height<sp/>of<sp/>the<sp/>bounding<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ygaps.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(gap);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ygaps.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>&lt;<sp/>8)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>not<sp/>have<sp/>enough<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>line<sp/>spacing<sp/>from<sp/>ygaps:<sp/>use<sp/>the<sp/>mean<sp/>of<sp/>the<sp/>first<sp/>half.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/>ygaps.<ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">sort</ref>();</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacing<sp/>=<sp/>0,<sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>=<sp/>0;<sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>&lt;<sp/>ygaps.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>/<sp/>2;<sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>spacing<sp/>+=<sp/>ygaps[<ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>];</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spacing<sp/>/<sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="926"><highlight class="normal">}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a657f367e87724bfab6359c42f10fad66" kindref="member">EquationDetect::IdentifyInlinePartsVertical</ref>(</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>top_to_bottom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textparts_linespacing)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>cp_seeds_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_to_bottom)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>top<sp/>to<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.sort(&amp;SortCPByTopReverse);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>From<sp/>bottom<sp/>to<sp/>top.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.sort(&amp;SortCPByBottom);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>new_seeds;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>[i];</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>sort<sp/>cp_seeds_<sp/>from<sp/>top<sp/>to<sp/>bottom,<sp/>then<sp/>for<sp/>each<sp/>cp_seeds_,<sp/>we<sp/>look</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>its<sp/>top<sp/>neighbors,<sp/>so<sp/>that<sp/>if<sp/>two/more<sp/>inline<sp/>regions<sp/>are<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>each<sp/>other,<sp/>then<sp/>we<sp/>will<sp/>identify<sp/>the<sp/>top<sp/>one,<sp/>and<sp/>then<sp/>use<sp/>it<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>identify<sp/>the<sp/>bottom<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a9f0be32790e5915d579cd1898530fb6b" kindref="member">IsInline</ref>(!top_to_bottom,<sp/>textparts_linespacing,<sp/>part))<sp/>{</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;set_type(<ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60aa52ce81f771512916e01215965910fc6" kindref="member">PT_INLINE_EQUATION</ref>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_seeds.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref><sp/>=<sp/>new_seeds;</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a9f0be32790e5915d579cd1898530fb6b" kindref="member">EquationDetect::IsInline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>search_bottom,</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>textparts_linespacing,</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>its<sp/>nearest<sp/>vertical<sp/>neighbor<sp/>that<sp/>hardly<sp/>overlaps<sp/>in<sp/>y<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>largely<sp/>overlaps<sp/>in<sp/>x.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*neighbor<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kYGapRatioTh<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search_bottom)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartVerticalSearch(part_box.left(),<sp/>part_box.right(),</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.bottom());</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartVerticalSearch(part_box.left(),<sp/>part_box.right(),</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.top());</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbor<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextVerticalSearch(search_bottom))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>neighbor_box(neighbor-&gt;bounding_box());</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.y_gap(neighbor_box)<sp/>&gt;<sp/>kYGapRatioTh<sp/>*</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(part_box.height(),<sp/>neighbor_box.height()))<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finished<sp/>searching.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="publictypes_8h_1a49b7c03fb4e55b82a8fd22b7c6094082" kindref="member">PTIsTextType</ref>(neighbor-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>neighbor<sp/>and<sp/>part<sp/>is<sp/>inline<sp/>similar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kHeightRatioTh<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kYGapTh<sp/>=<sp/>textparts_linespacing<sp/>&gt;<sp/>0<sp/>?</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textparts_linespacing<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(0.02<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>)):</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;int&gt;(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(0.05<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>));<sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.x_overlap(neighbor_box)<sp/>&amp;&amp;<sp/><sp/></highlight><highlight class="comment">//<sp/>Location<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.y_gap(neighbor_box)<sp/>&lt;=<sp/>kYGapTh<sp/>&amp;&amp;<sp/><sp/></highlight><highlight class="comment">//<sp/>Line<sp/>spacing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Geo<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(part_box.height(),<sp/>neighbor_box.height()))<sp/>/</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(part_box.height(),<sp/>neighbor_box.height())<sp/>&gt;<sp/>kHeightRatioTh)<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a14f4d2d35ed292b40ce57b028d7e124a" kindref="member">EquationDetect::CheckSeedBlobsCount</ref>(ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kSeedMathBlobsCount<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kSeedMathDigitBlobsCount<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blobs<sp/>=<sp/>part-&gt;boxes_count(),</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>math_blobs<sp/>=<sp/>part-&gt;SpecialBlobsCount(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca356056d522254adc40c8acdf14f19c4d" kindref="member">BSTT_MATH</ref>),</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digit_blobs<sp/>=<sp/>part-&gt;SpecialBlobsCount(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caaf28e2df284d1c1c8caf262b5fcdb3f4" kindref="member">BSTT_DIGIT</ref>);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blobs<sp/>&lt;<sp/><ref refid="namespacetesseract_1a113f000461790e1cd1c397f382814da5" kindref="member">kSeedBlobsCountTh</ref><sp/>||<sp/>math_blobs<sp/>&lt;=<sp/>kSeedMathBlobsCount<sp/>||</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>math_blobs<sp/>+<sp/>digit_blobs<sp/>&lt;=<sp/>kSeedMathDigitBlobsCount)<sp/>{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a8c054862ed6512cb8c935c53d179ffb2" kindref="member">EquationDetect::CheckSeedDensity</ref>(</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>math_density_high,</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>math_density_low,</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>part)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>math_digit_density<sp/>=<sp/>part-&gt;SpecialBlobsDensity(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca356056d522254adc40c8acdf14f19c4d" kindref="member">BSTT_MATH</ref>)</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>part-&gt;SpecialBlobsDensity(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caaf28e2df284d1c1c8caf262b5fcdb3f4" kindref="member">BSTT_DIGIT</ref>);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>italic_density<sp/>=<sp/>part-&gt;SpecialBlobsDensity(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca9f7c059031ba5f95a4e0f43bac16a33a" kindref="member">BSTT_ITALIC</ref>);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(math_digit_density<sp/>&gt;<sp/>math_density_high)<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(math_digit_density<sp/>+<sp/>italic_density<sp/>&gt;<sp/><ref refid="namespacetesseract_1ad64e658be002902d7a5b0dd98ab0fe35" kindref="member">kMathItalicDensityTh</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>math_digit_density<sp/>&gt;<sp/>math_density_low)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223" kindref="member">EquationDetect::IndentType</ref><sp/><ref refid="classtesseract_1_1_equation_detect_1a35912b69ed5ffa28d88ed53ba9f060d3" kindref="member">EquationDetect::IsIndented</ref>(ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*neighbor<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kXGapTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(0.5<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>));</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kRadiusTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(3.0<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>));</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kYGapTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(0.5<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>));</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>use<sp/>a<sp/>simple<sp/>approximation<sp/>algorithm:<sp/>from<sp/>the<sp/>center<sp/>of<sp/>part,<sp/>We</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>perform<sp/>the<sp/>radius<sp/>search,<sp/>and<sp/>check<sp/>if<sp/>we<sp/>can<sp/>find<sp/>a<sp/>neighboring<sp/>parition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>locates<sp/>on<sp/>the<sp/>top/bottom<sp/>left<sp/>of<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartRadSearch((part_box.left()<sp/>+<sp/>part_box.right())<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(part_box.top()<sp/>+<sp/>part_box.bottom())<sp/>/<sp/>2,<sp/>kRadiusTh);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>left_indented<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>right_indented<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbor<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextRadSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!left_indented<sp/>||<sp/>!right_indented))<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbor<sp/>==<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>neighbor_box(neighbor-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.major_y_overlap(neighbor_box)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.x_gap(neighbor_box)<sp/>&lt;<sp/>kXGapTh)<sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>this<sp/>happens,<sp/>it<sp/>is<sp/>likely<sp/>part<sp/>is<sp/>a<sp/>fragment<sp/>of<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>over-segmented<sp/>colpartition.<sp/>So<sp/>we<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223a0b833974e34cfce11e7bb182afd5c43c" kindref="member">NO_INDENT</ref>;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(neighbor-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>neighbor<sp/>should<sp/>be<sp/>above/below<sp/>part,<sp/>and<sp/>overlap<sp/>in<sp/>x<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_box.x_overlap(neighbor_box)<sp/>||<sp/>part_box.y_overlap(neighbor_box))<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.y_gap(neighbor_box)<sp/>&lt;<sp/>kYGapTh)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_gap<sp/>=<sp/>part_box.left()<sp/>-<sp/>neighbor_box.left();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_gap<sp/>=<sp/>neighbor_box.right()<sp/>-<sp/>part_box.right();</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_gap<sp/>&gt;<sp/>kXGapTh)<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_indented<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_gap<sp/>&gt;<sp/>kXGapTh)<sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_indented<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_indented<sp/>&amp;&amp;<sp/>right_indented)<sp/>{</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223a4c2d65f544868a206cf72cd4928c8d06" kindref="member">BOTH_INDENT</ref>;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_indented)<sp/>{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223aab75a5b0799710a14abdda1687c1ae0e" kindref="member">LEFT_INDENT</ref>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_indented)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223a8b060953ddfce6e934e4346ba630606b" kindref="member">RIGHT_INDENT</ref>;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a8af35d2174dc3814a0e895115b4b4223a0b833974e34cfce11e7bb182afd5c43c" kindref="member">NO_INDENT</ref>;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a76bc8a18a94fc5f89f6d4d073ba0c9bf" kindref="member">EquationDetect::ExpandSeed</ref>(ColPartition*<sp/>seed)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>seed<sp/>has<sp/>been<sp/>absorbed<sp/>by<sp/>other<sp/>seeds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>seed-&gt;IsVerticalType())<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>skip<sp/>vertical<sp/>type<sp/>right<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Expand<sp/>in<sp/>four<sp/>directions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>parts_to_merge;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a627301cfc796de6a012ddec128e60b9d" kindref="member">ExpandSeedHorizontal</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>seed,<sp/>&amp;parts_to_merge);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a627301cfc796de6a012ddec128e60b9d" kindref="member">ExpandSeedHorizontal</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>seed,<sp/>&amp;parts_to_merge);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a3d11902fde644823ee7c56e56ca804bb" kindref="member">ExpandSeedVertical</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>seed,<sp/>&amp;parts_to_merge);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a3d11902fde644823ee7c56e56ca804bb" kindref="member">ExpandSeedVertical</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>seed,<sp/>&amp;parts_to_merge);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad11061cfdb9eb9cbdb8c9206b96b2c54" kindref="member">SearchByOverlap</ref>(seed,<sp/>&amp;parts_to_merge);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parts_to_merge.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>())<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>find<sp/>any<sp/>partition<sp/>to<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>all<sp/>partitions<sp/>in<sp/>parts_to_merge<sp/>with<sp/>seed.<sp/>We<sp/>first<sp/>remove<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>part_grid_<sp/>as<sp/>its<sp/>bounding<sp/>box<sp/>is<sp/>going<sp/>to<sp/>expand.<sp/>Then<sp/>we<sp/>add<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>back<sp/>after<sp/>it<sp/>aborbs<sp/>all<sp/>parts_to_merge<sp/>parititions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>-&gt;<ref refid="classtesseract_1_1_b_b_grid_1adc713153c1282d8727f85ee6d38d7d31" kindref="member">RemoveBBox</ref>(seed);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parts_to_merge.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>parts_to_merge[i];</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>part<sp/>is<sp/>in<sp/>cp_seeds_,<sp/>then<sp/>we<sp/>mark<sp/>it<sp/>as<sp/>NULL<sp/>so<sp/>that<sp/>we<sp/>won&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>it<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>.size();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>[j])<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1ad41af69ecd3e0227bbe5b4714c429666" kindref="member">cp_seeds_</ref>[j]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>has<sp/>already<sp/>been<sp/>removed<sp/>from<sp/>part_grid_<sp/>in<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ExpandSeedHorizontal/ExpandSeedVertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/>seed-&gt;Absorb(part,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a627301cfc796de6a012ddec128e60b9d" kindref="member">EquationDetect::ExpandSeedHorizontal</ref>(</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>search_left,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>seed,</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref>*<sp/>parts_to_merge)<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(seed<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>parts_to_merge<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kYOverlapTh<sp/>=<sp/>0.6;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kXGapTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(0.2<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>));</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>seed_box(seed-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>search_left<sp/>?<sp/>seed_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>:<sp/>seed_box.right();</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartSideSearch(x,<sp/>seed_box.bottom(),<sp/>seed_box.top());</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>iteratively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextSideSearch(search_left))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/>seed)<sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.x_gap(seed_box)<sp/>&gt;<sp/>kXGapTh)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Out<sp/>of<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>part<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((part_box.left()<sp/>&gt;=<sp/>seed_box.left()<sp/>&amp;&amp;<sp/>search_left)<sp/>||</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(part_box.right()<sp/>&lt;=<sp/>seed_box.right()<sp/>&amp;&amp;<sp/>!search_left))<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>!=<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Non-equation<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>PT_LINLINE_EQUATION<sp/>and<sp/>non<sp/>text<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60aa52ce81f771512916e01215965910fc6" kindref="member">PT_INLINE_EQUATION</ref><sp/>||</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(part-&gt;type())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;blob_type()<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a56cc149e97b34634dd39babda79ea17d" kindref="member">BRT_HLINE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>other<sp/>types,<sp/>it<sp/>should<sp/>be<sp/>the<sp/>near<sp/>small<sp/>neighbor<sp/>of<sp/>seed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_equation_detect_1a76f41d3142ca8575d3a574ff995ed207" kindref="member">IsNearSmallNeighbor</ref>(seed_box,<sp/>part_box)<sp/>||</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_equation_detect_1ab8a8a444009d7a5846bafa4bdceb58f1" kindref="member">CheckSeedNeighborDensity</ref>(part))<sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Equation<sp/>type,<sp/>check<sp/>the<sp/>y<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.y_overlap_fraction(seed_box)<sp/>&lt;<sp/>kYOverlapTh<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seed_box.y_overlap_fraction(part_box)<sp/>&lt;<sp/>kYOverlapTh)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Passed<sp/>the<sp/>check,<sp/>delete<sp/>it<sp/>from<sp/>search<sp/>and<sp/>add<sp/>into<sp/>parts_to_merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.RemoveBBox();</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>parts_to_merge-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a3d11902fde644823ee7c56e56ca804bb" kindref="member">EquationDetect::ExpandSeedVertical</ref>(</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>search_bottom,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>seed,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref>*<sp/>parts_to_merge)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(seed<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>parts_to_merge<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kXOverlapTh<sp/>=<sp/>0.4;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kYGapTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(0.2<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>));</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>seed_box(seed-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>search_bottom<sp/>?<sp/>seed_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>:<sp/>seed_box.top();</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartVerticalSearch(</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>-&gt;<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/><ref refid="classtesseract_1_1_equation_detect_1aa6dfc694549236e0be87efd3d2c8d17f" kindref="member">cps_super_bbox_</ref>-&gt;<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>y);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>iteratively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>parts;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>skipped_min_top<sp/>=<sp/>INT_MAX,<sp/>skipped_max_bottom<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextVerticalSearch(search_bottom))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part<sp/>==<sp/>seed)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.y_gap(seed_box)<sp/>&gt;<sp/>kYGapTh)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Out<sp/>of<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>part<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((part_box.bottom()<sp/>&gt;=<sp/>seed_box.bottom()<sp/>&amp;&amp;<sp/>search_bottom)<sp/>||</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(part_box.top()<sp/>&lt;=<sp/>seed_box.top()<sp/>&amp;&amp;<sp/>!search_bottom))<sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skip_part<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>!=<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Non-equation<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>PT_LINLINE_EQUATION<sp/>and<sp/>non<sp/>text<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60aa52ce81f771512916e01215965910fc6" kindref="member">PT_INLINE_EQUATION</ref><sp/>||</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(part-&gt;type())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;blob_type()<sp/>!=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a56cc149e97b34634dd39babda79ea17d" kindref="member">BRT_HLINE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_part<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_equation_detect_1a76f41d3142ca8575d3a574ff995ed207" kindref="member">IsNearSmallNeighbor</ref>(seed_box,<sp/>part_box)<sp/>||</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classtesseract_1_1_equation_detect_1ab8a8a444009d7a5846bafa4bdceb58f1" kindref="member">CheckSeedNeighborDensity</ref>(part))<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>other<sp/>types,<sp/>it<sp/>should<sp/>be<sp/>the<sp/>near<sp/>small<sp/>neighbor<sp/>of<sp/>seed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_part<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Equation<sp/>type,<sp/>check<sp/>the<sp/>x<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.x_overlap_fraction(seed_box)<sp/>&lt;<sp/>kXOverlapTh<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seed_box.x_overlap_fraction(part_box)<sp/>&lt;<sp/>kXOverlapTh)<sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skip_part<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skip_part)<sp/>{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>!=<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skipped_min_top<sp/>&gt;<sp/>part_box.top())<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipped_min_top<sp/>=<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skipped_max_bottom<sp/>&lt;<sp/>part_box.bottom())<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>skipped_max_bottom<sp/>=<sp/>part_box.bottom();</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>part<sp/>in<sp/>parts,<sp/>we<sp/>need<sp/>verify<sp/>it<sp/>is<sp/>not<sp/>above<sp/>skipped_min_top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>search<sp/>top,<sp/>or<sp/>not<sp/>below<sp/>skipped_max_bottom<sp/>when<sp/>search<sp/>bottom.<sp/>I.e.,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>will<sp/>skip<sp/>a<sp/>part<sp/>if<sp/>it<sp/>looks<sp/>like:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search<sp/>bottom<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>seed:<sp/><sp/><sp/><sp/><sp/>******************<sp/><sp/><sp/>|<sp/>part:<sp/><sp/><sp/><sp/>**********</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>skipped:<sp/>xxx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>skipped:<sp/><sp/>xxx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>part:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>**********<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>seed:<sp/><sp/><sp/><sp/>***********</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parts.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(parts[i]-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((search_bottom<sp/>&amp;&amp;<sp/>part_box.top()<sp/>&lt;=<sp/>skipped_max_bottom)<sp/>||</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!search_bottom<sp/>&amp;&amp;<sp/>part_box.bottom()<sp/>&gt;=<sp/>skipped_min_top))<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>parts[i]<sp/>into<sp/>parts_to_merge,<sp/>and<sp/>delete<sp/>it<sp/>from<sp/>part_grid_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>parts_to_merge-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(parts[i]);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>-&gt;<ref refid="classtesseract_1_1_b_b_grid_1adc713153c1282d8727f85ee6d38d7d31" kindref="member">RemoveBBox</ref>(parts[i]);</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a76f41d3142ca8575d3a574ff995ed207" kindref="member">EquationDetect::IsNearSmallNeighbor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>seed_box,</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kXGapTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(0.25<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>));</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kYGapTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(0.05<sp/>*<sp/><ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref>));</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>geometric<sp/>feature.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;<sp/>seed_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>||</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&gt;<sp/>seed_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>overlap<sp/>and<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((!part_box.<ref refid="class_t_b_o_x_1a9f7e4e20bdfeee0d82db2f8d24aa72dc" kindref="member">major_x_overlap</ref>(seed_box)<sp/>||</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(seed_box)<sp/>&gt;<sp/>kYGapTh)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(!part_box.<ref refid="class_t_b_o_x_1a6b8b3bf99ea363303e11c26866335f23" kindref="member">major_y_overlap</ref>(seed_box)<sp/>||</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(seed_box)<sp/>&gt;<sp/>kXGapTh))<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1ab8a8a444009d7a5846bafa4bdceb58f1" kindref="member">EquationDetect::CheckSeedNeighborDensity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>part)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;boxes_count()<sp/>&lt;<sp/><ref refid="namespacetesseract_1a113f000461790e1cd1c397f382814da5" kindref="member">kSeedBlobsCountTh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Too<sp/>few<sp/>blobs,<sp/>skip<sp/>the<sp/>check.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>check<sp/>the<sp/>math<sp/>blobs<sp/>density<sp/>and<sp/>the<sp/>unclear<sp/>blobs<sp/>density.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;SpecialBlobsDensity(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca356056d522254adc40c8acdf14f19c4d" kindref="member">BSTT_MATH</ref>)<sp/>+</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SpecialBlobsDensity(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caaf28e2df284d1c1c8caf262b5fcdb3f4" kindref="member">BSTT_DIGIT</ref>)<sp/>&gt;<sp/><ref refid="namespacetesseract_1ad996502770c51cc260e4d66db9543bcc" kindref="member">kMathDigitDensityTh1</ref><sp/>||</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SpecialBlobsDensity(<ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8ca604529fa299b8dcc81b0ac07ebb2c9b7" kindref="member">BSTT_UNCLEAR</ref>)<sp/>&gt;<sp/><ref refid="namespacetesseract_1a07a51423879204a025d373c6ae40fba5" kindref="member">kUnclearDensityTh</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a0bb5b44fbab44c93cb338eed35b4ef4a" kindref="member">EquationDetect::ProcessMathBlockSatelliteParts</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>part_grid_,<sp/>and<sp/>find<sp/>all<sp/>parts<sp/>that<sp/>are<sp/>text<sp/>type<sp/>but<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>equation<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>text_parts;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677faaa63d8d8a99ddc2b3957f8e8787b4eca" kindref="member">PT_FLOWING_TEXT</ref><sp/>||<sp/>part-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa47f25d4065407dd98db92554ca54468b" kindref="member">PT_HEADING_TEXT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>text_parts.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(part);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_parts.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>medium<sp/>height<sp/>of<sp/>the<sp/>text_parts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/>text_parts.<ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">sort</ref>(&amp;SortCPByHeight);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>text_box<sp/>=<sp/>text_parts[text_parts.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>/<sp/>2]-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>med_height<sp/>=<sp/>text_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_parts.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>%<sp/>2<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>text_parts.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>text_box<sp/>=</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_parts[text_parts.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>/<sp/>2<sp/>-<sp/>1]-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/>med_height<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5<sp/>*<sp/>(text_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>+<sp/>med_height)));</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>every<sp/>text_parts<sp/>and<sp/>check<sp/>if<sp/>it<sp/>is<sp/>a<sp/>math<sp/>block<sp/>satellite.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>text_parts.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>text_box(text_parts[i]-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>&gt;<sp/>med_height)<sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref><sp/>math_blocks;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_equation_detect_1acd1af0968e619b1140831ee6fc9ab32d" kindref="member">IsMathBlockSatellite</ref>(text_parts[i],<sp/>&amp;math_blocks))<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found.<sp/>merge<sp/>text_parts[i]<sp/>with<sp/>math_blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>-&gt;<ref refid="classtesseract_1_1_b_b_grid_1adc713153c1282d8727f85ee6d38d7d31" kindref="member">RemoveBBox</ref>(text_parts[i]);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>text_parts[i]-&gt;set_type(<ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>math_blocks.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>-&gt;<ref refid="classtesseract_1_1_b_b_grid_1adc713153c1282d8727f85ee6d38d7d31" kindref="member">RemoveBBox</ref>(math_blocks[j]);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>text_parts[i]-&gt;Absorb(math_blocks[j],<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_1a5f75b1dad656abfdb1a10eddeb8e65de" kindref="member">InsertPartAfterAbsorb</ref>(text_parts[i]);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1acd1af0968e619b1140831ee6fc9ab32d" kindref="member">EquationDetect::IsMathBlockSatellite</ref>(</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part,<sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;ColPartition*&gt;</ref>*<sp/>math_blocks)<sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>math_blocks<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/>math_blocks-&gt;<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>top/bottom<sp/>nearest<sp/>neighbor<sp/>of<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*neighbors[2];</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_gaps[2]<sp/>=<sp/>{INT_MAX,<sp/>INT_MAX};</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>horizontal<sp/>boundary<sp/>of<sp/>the<sp/>neighbors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbors_left<sp/>=<sp/>INT_MAX,<sp/>neighbors_right<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[i]<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1a60bd749e3e2b016058ba4ece1e1dc80c" kindref="member">SearchNNVertical</ref>(i<sp/>!=<sp/>0,<sp/>part);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbors[i])<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>neighbor_box<sp/>=<sp/>neighbors[i]-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y_gaps[i]<sp/>=<sp/>neighbor_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(part_box);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbor_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&lt;<sp/>neighbors_left)<sp/>{</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors_left<sp/>=<sp/>neighbor_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbor_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&gt;<sp/>neighbors_right)<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbors_right<sp/>=<sp/>neighbor_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbors[0]<sp/>==<sp/>neighbors[1])<sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>happens<sp/>when<sp/>part<sp/>is<sp/>inside<sp/>neighbor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>neighbors[1]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>y_gaps[1]<sp/>=<sp/>INT_MAX;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>part<sp/>is<sp/>within<sp/>[neighbors_left,<sp/>neighbors_right].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&lt;<sp/>neighbors_left<sp/>||<sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&gt;<sp/>neighbors_right)<sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>index<sp/>of<sp/>the<sp/>near<sp/>one<sp/>in<sp/>neighbors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>y_gaps[0]<sp/>&lt;<sp/>y_gaps[1]<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>near<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a1f693603157274a6dff98b8d2cb38a89" kindref="member">IsNearMathNeighbor</ref>(y_gaps[index],<sp/>neighbors[index]))<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>math_blocks-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(neighbors[index]);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>near<sp/>one<sp/>failed<sp/>the<sp/>check,<sp/>then<sp/>we<sp/>skip<sp/>checking<sp/>the<sp/>far<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>far<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/>index<sp/>=<sp/>1<sp/>-<sp/>index;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_equation_detect_1a1f693603157274a6dff98b8d2cb38a89" kindref="member">IsNearMathNeighbor</ref>(y_gaps[index],<sp/>neighbors[index]))<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>math_blocks-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(neighbors[index]);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_equation_detect_1a60bd749e3e2b016058ba4ece1e1dc80c" kindref="member">EquationDetect::SearchNNVertical</ref>(</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>search_bottom,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/>ColPartition<sp/>*nearest_neighbor<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>*neighbor<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kYGapTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(<ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref><sp/>*<sp/>0.5));</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>search_bottom<sp/>?<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>:<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.StartVerticalSearch(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>y);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_y_gap<sp/>=<sp/>INT_MAX;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbor<sp/>=<sp/><ref refid="oldlist_8cpp_1a1d8af9328f064a9df6d6f88336dd054e" kindref="member">search</ref>.NextVerticalSearch(search_bottom))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbor<sp/>==<sp/>part<sp/>||<sp/>!<ref refid="namespacetesseract_1a1aff6897e170c358d7672413b3c221de" kindref="member">IsTextOrEquationType</ref>(neighbor-&gt;type()))<sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>neighbor_box(neighbor-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_gap<sp/>=<sp/>neighbor_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(part_box);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_gap<sp/>&gt;<sp/>kYGapTh)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Out<sp/>of<sp/>scope.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!neighbor_box.<ref refid="class_t_b_o_x_1a9f7e4e20bdfeee0d82db2f8d24aa72dc" kindref="member">major_x_overlap</ref>(part_box)<sp/>||</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(search_bottom<sp/>&amp;&amp;<sp/>neighbor_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&gt;<sp/>part_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>||</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!search_bottom<sp/>&amp;&amp;<sp/>neighbor_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&lt;<sp/>part_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y_gap<sp/>&lt;<sp/>min_y_gap)<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min_y_gap<sp/>=<sp/>y_gap;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nearest_neighbor<sp/>=<sp/>neighbor;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nearest_neighbor;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a1f693603157274a6dff98b8d2cb38a89" kindref="member">EquationDetect::IsNearMathNeighbor</ref>(</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_gap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition<sp/>*neighbor)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!neighbor)<sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kYGapTh<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="mathfix_8h_1ab07a4da26d604273a929cc442fadcedc" kindref="member">roundf</ref>(<ref refid="classtesseract_1_1_equation_detect_1ae97d45cf4e1e79c132831151d66fb662" kindref="member">resolution_</ref><sp/>*<sp/>0.1));</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>neighbor-&gt;type()<sp/>==<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref><sp/>&amp;&amp;<sp/>y_gap<sp/>&lt;=<sp/>kYGapTh;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a1b16b753a8304af5b0b4e85f5a02aa41" kindref="member">EquationDetect::GetOutputTiffName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>image_name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(image_name<sp/>&amp;&amp;<sp/>name);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>page[50];</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/>snprintf(page,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(page),<sp/></highlight><highlight class="stringliteral">&quot;%04d&quot;</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_equation_detect_1aec76c4ef860f40ec042c65ea1340fc31" kindref="member">page_count_</ref>);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/>*image_name<sp/>=<sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>(<ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_c_c_util_1a83b53925c7f421533b5f382c9a36ab1d" kindref="member">imagebasename</ref>)<sp/>+<sp/>page<sp/>+<sp/>name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.tif&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a471e17b6ef69559f50db59e5c92bba50" kindref="member">EquationDetect::PaintSpecialTexts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/>outfile)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/>Pix<sp/>*pix<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>*pixBi<sp/>=<sp/><ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_tesseract_1a97fde2a457aa76137737b247a2418cb7" kindref="member">pix_binary</ref>();</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/>pix<sp/>=<sp/>pixConvertTo32(pixBi);</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>blob_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_equation_detect_base_1a135d1cd23d326e3e8f64e7e3255e8e0d" kindref="member">RenderSpecialText</ref>(pix,<sp/>blob_it.data());</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/>pixWrite(outfile.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>pix,<sp/>IFF_TIFF_LZW);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pix);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1ae10f647d8ed221a3e2faf4520b293281" kindref="member">EquationDetect::PaintColParts</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/>outfile)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/>Pix<sp/>*pix<sp/>=<sp/>pixConvertTo32(<ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_tesseract_1a4934a09fb5d68ea047009f419eeafd35" kindref="member">BestPix</ref>());</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>gsearch(<ref refid="classtesseract_1_1_equation_detect_1a4798ba96020b3ce55050b66dd3c72fe0" kindref="member">part_grid_</ref>);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>tbox<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>Box<sp/>*box<sp/>=<sp/>boxCreate(tbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>pixGetHeight(pix)<sp/>-<sp/>tbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>tbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60adfde914b43bcf45b29f149fa4415bf45" kindref="member">PT_EQUATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixRenderBoxArb(pix,<sp/>box,<sp/>5,<sp/>255,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="publictypes_8h_1a03566528a98c079dafeebf00502f2b60aa52ce81f771512916e01215965910fc6" kindref="member">PT_INLINE_EQUATION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixRenderBoxArb(pix,<sp/>box,<sp/>5,<sp/>0,<sp/>255,<sp/>0);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixRenderBoxArb(pix,<sp/>box,<sp/>5,<sp/>0,<sp/>0,<sp/>255);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>boxDestroy(&amp;box);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>pixWrite(outfile.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>pix,<sp/>IFF_TIFF_LZW);</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pix);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_equation_detect_1a90ae1d0f706dad22ca111983ab0734ab" kindref="member">EquationDetect::PrintSpecialBlobsDensity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition*<sp/>part)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h<sp/>=<sp/>pixGetHeight(<ref refid="classtesseract_1_1_equation_detect_1ac9825c046385d42504424a69d3b56177" kindref="member">lang_tesseract_</ref>-&gt;<ref refid="classtesseract_1_1_tesseract_1a4934a09fb5d68ea047009f419eeafd35" kindref="member">BestPix</ref>());</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Printing<sp/>special<sp/>blobs<sp/>density<sp/>values<sp/>for<sp/>ColParition<sp/>(t=%d,b=%d)<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>-<sp/>box.top(),<sp/>h<sp/>-<sp/>box.bottom());</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/>box.print();</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;blobs<sp/>count<sp/>=<sp/>%d,<sp/>density<sp/>=<sp/>&quot;</highlight><highlight class="normal">,<sp/>part-&gt;boxes_count());</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8caceba184627df3dabc8f3e3f2867c4eff" kindref="member">BSTT_COUNT</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="blobbox_8h_1a75b089d27e1df813fed544e0c131df8c" kindref="member">BlobSpecialTextType</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d:%f<sp/>&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>part-&gt;SpecialBlobsDensity(type));</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccmain/equationdetect.cpp"/>
  </compounddef>
</doxygen>
