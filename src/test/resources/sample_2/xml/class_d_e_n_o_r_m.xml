<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_d_e_n_o_r_m" kind="class" prot="public">
    <compoundname>DENORM</compoundname>
    <includes refid="normalis_8h" local="no">normalis.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a4f688815b3603933aaadbecfffb91797" prot="private" static="no" mutable="no">
        <type>Pix *</type>
        <definition>Pix* DENORM::pix_</definition>
        <argsstring></argsstring>
        <name>pix_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="302" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1adc607da62a52a344ad4fdfcb790f53df" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DENORM::inverse_</definition>
        <argsstring></argsstring>
        <name>inverse_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="304" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a5ec614354f705c93364fa97c52b316b7" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref> *</type>
        <definition>const BLOCK* DENORM::block_</definition>
        <argsstring></argsstring>
        <name>block_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="307" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a682d3d868da580cb3f9407df8404fdf5" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
        <definition>const ROW* DENORM::row_</definition>
        <argsstring></argsstring>
        <name>row_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="309" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a0b92efa773bf786a36071f50b897f95c" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> *</type>
        <definition>const FCOORD* DENORM::rotation_</definition>
        <argsstring></argsstring>
        <name>rotation_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="311" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1afb4c26b30b438058e942643529e013d7" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
        <definition>const DENORM* DENORM::predecessor_</definition>
        <argsstring></argsstring>
        <name>predecessor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="313" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1ac619092ba100d6af506a4a07a8dc5a86" prot="private" static="no" mutable="no">
        <type><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref> *</type>
        <definition>DENORM_SEG* DENORM::segs_</definition>
        <argsstring></argsstring>
        <name>segs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="316" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a7c4607541455f47c8a43e66c9ae63892" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DENORM::num_segs_</definition>
        <argsstring></argsstring>
        <name>num_segs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="318" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a321b748614b977f58804d18ccc56ae2b" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DENORM::x_origin_</definition>
        <argsstring></argsstring>
        <name>x_origin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="320" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a191c5fb00616974fb345fccf37a39505" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DENORM::y_origin_</definition>
        <argsstring></argsstring>
        <name>y_origin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="322" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a513af69c5996559e9fa4d848dfc2f927" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DENORM::x_scale_</definition>
        <argsstring></argsstring>
        <name>x_scale_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="324" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a91e1b80e202252e412c1f243554b1b09" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DENORM::y_scale_</definition>
        <argsstring></argsstring>
        <name>y_scale_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="325" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a87ad984e325b2769d952f8f7cace97ad" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DENORM::final_xshift_</definition>
        <argsstring></argsstring>
        <name>final_xshift_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="327" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_e_n_o_r_m_1a4e9f99afd5996c0f54431f8d8e513580" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float DENORM::final_yshift_</definition>
        <argsstring></argsstring>
        <name>final_yshift_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="328" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a5396d327b5b31136353f01092e0600cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DENORM::DENORM</definition>
        <argsstring>()</argsstring>
        <name>DENORM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="61" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a7ee254931037106b797c97bd70c63e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DENORM::DENORM</definition>
        <argsstring>(float x, float scaling, ROW *src)</argsstring>
        <name>DENORM</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scaling</declname>
        </param>
        <param>
          <type><ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="62" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a8d3bcedf1145b23c56a07007da980f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DENORM::DENORM</definition>
        <argsstring>(float x, float scaling, double line_m, double line_c, inT16 seg_count, DENORM_SEG *seg_pts, BOOL8 using_row, ROW *src)</argsstring>
        <name>DENORM</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scaling</declname>
        </param>
        <param>
          <type>double</type>
          <declname>line_m</declname>
        </param>
        <param>
          <type>double</type>
          <declname>line_c</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>seg_count</declname>
        </param>
        <param>
          <type><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref> *</type>
          <declname>seg_pts</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>using_row</declname>
        </param>
        <param>
          <type><ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="63" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="46" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a23528ba524de8de352d85655225fa67c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DENORM::DENORM</definition>
        <argsstring>(const DENORM &amp;)</argsstring>
        <name>DENORM</name>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> &amp;</type>
          <defname>src</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="72" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a61535387765c650f10a00fb6fff66900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> &amp;</type>
        <definition>DENORM &amp; DENORM::operator=</definition>
        <argsstring>(const DENORM &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> &amp;</type>
          <defname>src</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="73" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="71" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a66b6de714209543885007fc716d70dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DENORM::~DENORM</definition>
        <argsstring>()</argsstring>
        <name>~DENORM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="74" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a27f4285da29912f3c42b44ebe46c7185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::SetupBLNormalize</definition>
        <argsstring>(const BLOCK *block, const ROW *row, float x_height, const TBOX &amp;word_box, int num_segs, const DENORM_SEG *segs)</argsstring>
        <name>SetupBLNormalize</name>
        <param>
          <type>const <ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>const <ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x_height</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>word_box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segs</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref> *</type>
          <declname>segs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="79" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="99" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1ac667a208c574b073db800890e4e31255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::SetupNormalization</definition>
        <argsstring>(const BLOCK *block, const ROW *row, const FCOORD *rotation, const DENORM *predecessor, const DENORM_SEG *segs, int num_segs, float x_origin, float y_origin, float x_scale, float y_scale, float final_xshift, float final_yshift)</argsstring>
        <name>SetupNormalization</name>
        <param>
          <type>const <ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>const <ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> *</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>predecessor</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref> *</type>
          <declname>segs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_segs</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x_origin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y_origin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x_scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y_scale</declname>
        </param>
        <param>
          <type>float</type>
          <declname>final_xshift</declname>
        </param>
        <param>
          <type>float</type>
          <declname>final_yshift</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="202" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="143" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a379321502d4634137436539518311b9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::LocalNormTransform</definition>
        <argsstring>(const TPOINT &amp;pt, TPOINT *transformed) const </argsstring>
        <name>LocalNormTransform</name>
        <param>
          <type>const <ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> *</type>
          <declname>transformed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="213" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="170" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a408503b07226eee1fd577509c2cf5624" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::LocalNormTransform</definition>
        <argsstring>(const FCOORD &amp;pt, FCOORD *transformed) const </argsstring>
        <name>LocalNormTransform</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> *</type>
          <declname>transformed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="214" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="177" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a7b1c9741b597f03f1c37cb6ab2e25420" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::NormTransform</definition>
        <argsstring>(const TPOINT &amp;pt, TPOINT *transformed) const </argsstring>
        <name>NormTransform</name>
        <param>
          <type>const <ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> *</type>
          <declname>transformed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="218" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="190" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a7f8a8673722c8b39094f4531b1e3c0f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::NormTransform</definition>
        <argsstring>(const FCOORD &amp;pt, FCOORD *transformed) const </argsstring>
        <name>NormTransform</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> *</type>
          <declname>transformed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="219" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="197" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1aa33b917e4dab0b55c5748b6022ac0c1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::LocalDenormTransform</definition>
        <argsstring>(const TPOINT &amp;pt, TPOINT *original) const </argsstring>
        <name>LocalDenormTransform</name>
        <param>
          <type>const <ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> *</type>
          <declname>original</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="222" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="210" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1ae2ae0e645fd48af14c0bf2eaf2164c00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::LocalDenormTransform</definition>
        <argsstring>(const FCOORD &amp;pt, FCOORD *original) const </argsstring>
        <name>LocalDenormTransform</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> *</type>
          <declname>original</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="223" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="217" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::DenormTransform</definition>
        <argsstring>(const TPOINT &amp;pt, TPOINT *original) const </argsstring>
        <name>DenormTransform</name>
        <param>
          <type>const <ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> *</type>
          <declname>original</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="227" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="233" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a89bebc169684e789bf778b22acc90110" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::DenormTransform</definition>
        <argsstring>(const FCOORD &amp;pt, FCOORD *original) const </argsstring>
        <name>DenormTransform</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> *</type>
          <declname>original</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="228" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="240" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a839db5a7d3cea12c736dcea5e42c16b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::LocalNormBlob</definition>
        <argsstring>(TBLOB *blob) const </argsstring>
        <name>LocalNormBlob</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="232" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="251" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a5b886acd9e1220ff409268e007adffe1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DENORM::XHeightRange</definition>
        <argsstring>(int unichar_id, const UNICHARSET &amp;unicharset, const TBOX &amp;bbox, inT16 *min_xht, inT16 *max_xht) const </argsstring>
        <name>XHeightRange</name>
        <param>
          <type>int</type>
          <declname>unichar_id</declname>
        </param>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref> *</type>
          <declname>min_xht</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref> *</type>
          <declname>max_xht</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="240" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="275" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1ac282830c1541515739db7b94a32efa0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Pix *</type>
        <definition>Pix* DENORM::pix</definition>
        <argsstring>() const </argsstring>
        <name>pix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="243" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a2d1d9627a2a6c8034f4cdf9c2f7f6880" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::set_pix</definition>
        <argsstring>(Pix *pix)</argsstring>
        <name>set_pix</name>
        <param>
          <type>Pix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="246" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1ad3ea08c94adb6e3a0bdf2d43bfe0c08d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DENORM::inverse</definition>
        <argsstring>() const </argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="249" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="249" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a42bd60d852af878cb0e85afda6f64f38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::set_inverse</definition>
        <argsstring>(bool value)</argsstring>
        <name>set_inverse</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="252" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a66d126c02ce733c7570a9e21c7ad7c4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
        <definition>const DENORM* DENORM::RootDenorm</definition>
        <argsstring>() const </argsstring>
        <name>RootDenorm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="255" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="255" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1ae2cd0142f7cba40b8195fa872881ad02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
        <definition>const DENORM* DENORM::predecessor</definition>
        <argsstring>() const </argsstring>
        <name>predecessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="260" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1ab56e941803c5d7ebf34a93cb453d3c8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float DENORM::x_scale</definition>
        <argsstring>() const </argsstring>
        <name>x_scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="264" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a712ca9b7a1041d92e53ee7023b870fc6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float DENORM::y_scale</definition>
        <argsstring>() const </argsstring>
        <name>y_scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="267" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="267" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a116df350550742ddb7a905825e94d411" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
        <definition>const ROW* DENORM::row</definition>
        <argsstring>() const </argsstring>
        <name>row</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="270" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1ac96c4188e034859e9f74fcd79f070c83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::set_row</definition>
        <argsstring>(ROW *row)</argsstring>
        <name>set_row</name>
        <param>
          <type><ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="273" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1aa6fdb529be1b3d0ce4849989e7d8a72f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref> *</type>
        <definition>const BLOCK* DENORM::block</definition>
        <argsstring>() const </argsstring>
        <name>block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="276" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1aa4d256959b96f3208f030c68d7586dd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::set_block</definition>
        <argsstring>(const BLOCK *block)</argsstring>
        <name>set_block</name>
        <param>
          <type>const <ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="279" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="279" bodyend="281"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_d_e_n_o_r_m_1ae1262e9e8e9786c7e0994d9131c3af40" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="285" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="320" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1adfb0e7392d83e37808781431834ec4eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::Init</definition>
        <argsstring>()</argsstring>
        <name>Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="287" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="333" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a17d231fcb38fc6a4c506cb48c8efe92b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float DENORM::YOriginAtOrigX</definition>
        <argsstring>(float orig_x) const </argsstring>
        <name>YOriginAtOrigX</name>
        <param>
          <type>float</type>
          <declname>orig_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="290" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="351" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1ae8e38b1e3cfe58c8671da33036489aa4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float DENORM::YScaleAtOrigX</definition>
        <argsstring>(float orig_x) const </argsstring>
        <name>YScaleAtOrigX</name>
        <param>
          <type>float</type>
          <declname>orig_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="293" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="365" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a3ee2e38b2836c1b9110c053a7d036ce4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DENORM::SetSegments</definition>
        <argsstring>(const DENORM_SEG *new_segs, int seg_count)</argsstring>
        <name>SetSegments</name>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref> *</type>
          <declname>new_segs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seg_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="296" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="385" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_d_e_n_o_r_m_1a980fde2c6a39678df02a2ecbce34d190" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref> *</type>
        <definition>const DENORM_SEG * DENORM::BinarySearchSegment</definition>
        <argsstring>(float orig_x) const </argsstring>
        <name>BinarySearchSegment</name>
        <param>
          <type>float</type>
          <declname>orig_x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="299" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.cpp" bodystart="403" bodyend="416"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/normalis.h" bodystart="59" bodyend="329"/>
    <listofallmembers>
      <member refid="class_d_e_n_o_r_m_1a980fde2c6a39678df02a2ecbce34d190" prot="private" virt="non-virtual"><scope>DENORM</scope><name>BinarySearchSegment</name></member>
      <member refid="class_d_e_n_o_r_m_1aa6fdb529be1b3d0ce4849989e7d8a72f" prot="public" virt="non-virtual"><scope>DENORM</scope><name>block</name></member>
      <member refid="class_d_e_n_o_r_m_1a5ec614354f705c93364fa97c52b316b7" prot="private" virt="non-virtual"><scope>DENORM</scope><name>block_</name></member>
      <member refid="class_d_e_n_o_r_m_1ae1262e9e8e9786c7e0994d9131c3af40" prot="private" virt="non-virtual"><scope>DENORM</scope><name>Clear</name></member>
      <member refid="class_d_e_n_o_r_m_1a5396d327b5b31136353f01092e0600cd" prot="public" virt="non-virtual"><scope>DENORM</scope><name>DENORM</name></member>
      <member refid="class_d_e_n_o_r_m_1a7ee254931037106b797c97bd70c63e9b" prot="public" virt="non-virtual"><scope>DENORM</scope><name>DENORM</name></member>
      <member refid="class_d_e_n_o_r_m_1a8d3bcedf1145b23c56a07007da980f73" prot="public" virt="non-virtual"><scope>DENORM</scope><name>DENORM</name></member>
      <member refid="class_d_e_n_o_r_m_1a23528ba524de8de352d85655225fa67c" prot="public" virt="non-virtual"><scope>DENORM</scope><name>DENORM</name></member>
      <member refid="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" prot="public" virt="non-virtual"><scope>DENORM</scope><name>DenormTransform</name></member>
      <member refid="class_d_e_n_o_r_m_1a89bebc169684e789bf778b22acc90110" prot="public" virt="non-virtual"><scope>DENORM</scope><name>DenormTransform</name></member>
      <member refid="class_d_e_n_o_r_m_1a87ad984e325b2769d952f8f7cace97ad" prot="private" virt="non-virtual"><scope>DENORM</scope><name>final_xshift_</name></member>
      <member refid="class_d_e_n_o_r_m_1a4e9f99afd5996c0f54431f8d8e513580" prot="private" virt="non-virtual"><scope>DENORM</scope><name>final_yshift_</name></member>
      <member refid="class_d_e_n_o_r_m_1adfb0e7392d83e37808781431834ec4eb" prot="private" virt="non-virtual"><scope>DENORM</scope><name>Init</name></member>
      <member refid="class_d_e_n_o_r_m_1ad3ea08c94adb6e3a0bdf2d43bfe0c08d" prot="public" virt="non-virtual"><scope>DENORM</scope><name>inverse</name></member>
      <member refid="class_d_e_n_o_r_m_1adc607da62a52a344ad4fdfcb790f53df" prot="private" virt="non-virtual"><scope>DENORM</scope><name>inverse_</name></member>
      <member refid="class_d_e_n_o_r_m_1aa33b917e4dab0b55c5748b6022ac0c1b" prot="public" virt="non-virtual"><scope>DENORM</scope><name>LocalDenormTransform</name></member>
      <member refid="class_d_e_n_o_r_m_1ae2ae0e645fd48af14c0bf2eaf2164c00" prot="public" virt="non-virtual"><scope>DENORM</scope><name>LocalDenormTransform</name></member>
      <member refid="class_d_e_n_o_r_m_1a839db5a7d3cea12c736dcea5e42c16b0" prot="public" virt="non-virtual"><scope>DENORM</scope><name>LocalNormBlob</name></member>
      <member refid="class_d_e_n_o_r_m_1a379321502d4634137436539518311b9d" prot="public" virt="non-virtual"><scope>DENORM</scope><name>LocalNormTransform</name></member>
      <member refid="class_d_e_n_o_r_m_1a408503b07226eee1fd577509c2cf5624" prot="public" virt="non-virtual"><scope>DENORM</scope><name>LocalNormTransform</name></member>
      <member refid="class_d_e_n_o_r_m_1a7b1c9741b597f03f1c37cb6ab2e25420" prot="public" virt="non-virtual"><scope>DENORM</scope><name>NormTransform</name></member>
      <member refid="class_d_e_n_o_r_m_1a7f8a8673722c8b39094f4531b1e3c0f6" prot="public" virt="non-virtual"><scope>DENORM</scope><name>NormTransform</name></member>
      <member refid="class_d_e_n_o_r_m_1a7c4607541455f47c8a43e66c9ae63892" prot="private" virt="non-virtual"><scope>DENORM</scope><name>num_segs_</name></member>
      <member refid="class_d_e_n_o_r_m_1a61535387765c650f10a00fb6fff66900" prot="public" virt="non-virtual"><scope>DENORM</scope><name>operator=</name></member>
      <member refid="class_d_e_n_o_r_m_1ac282830c1541515739db7b94a32efa0c" prot="public" virt="non-virtual"><scope>DENORM</scope><name>pix</name></member>
      <member refid="class_d_e_n_o_r_m_1a4f688815b3603933aaadbecfffb91797" prot="private" virt="non-virtual"><scope>DENORM</scope><name>pix_</name></member>
      <member refid="class_d_e_n_o_r_m_1ae2cd0142f7cba40b8195fa872881ad02" prot="public" virt="non-virtual"><scope>DENORM</scope><name>predecessor</name></member>
      <member refid="class_d_e_n_o_r_m_1afb4c26b30b438058e942643529e013d7" prot="private" virt="non-virtual"><scope>DENORM</scope><name>predecessor_</name></member>
      <member refid="class_d_e_n_o_r_m_1a66d126c02ce733c7570a9e21c7ad7c4d" prot="public" virt="non-virtual"><scope>DENORM</scope><name>RootDenorm</name></member>
      <member refid="class_d_e_n_o_r_m_1a0b92efa773bf786a36071f50b897f95c" prot="private" virt="non-virtual"><scope>DENORM</scope><name>rotation_</name></member>
      <member refid="class_d_e_n_o_r_m_1a116df350550742ddb7a905825e94d411" prot="public" virt="non-virtual"><scope>DENORM</scope><name>row</name></member>
      <member refid="class_d_e_n_o_r_m_1a682d3d868da580cb3f9407df8404fdf5" prot="private" virt="non-virtual"><scope>DENORM</scope><name>row_</name></member>
      <member refid="class_d_e_n_o_r_m_1ac619092ba100d6af506a4a07a8dc5a86" prot="private" virt="non-virtual"><scope>DENORM</scope><name>segs_</name></member>
      <member refid="class_d_e_n_o_r_m_1aa4d256959b96f3208f030c68d7586dd3" prot="public" virt="non-virtual"><scope>DENORM</scope><name>set_block</name></member>
      <member refid="class_d_e_n_o_r_m_1a42bd60d852af878cb0e85afda6f64f38" prot="public" virt="non-virtual"><scope>DENORM</scope><name>set_inverse</name></member>
      <member refid="class_d_e_n_o_r_m_1a2d1d9627a2a6c8034f4cdf9c2f7f6880" prot="public" virt="non-virtual"><scope>DENORM</scope><name>set_pix</name></member>
      <member refid="class_d_e_n_o_r_m_1ac96c4188e034859e9f74fcd79f070c83" prot="public" virt="non-virtual"><scope>DENORM</scope><name>set_row</name></member>
      <member refid="class_d_e_n_o_r_m_1a3ee2e38b2836c1b9110c053a7d036ce4" prot="private" virt="non-virtual"><scope>DENORM</scope><name>SetSegments</name></member>
      <member refid="class_d_e_n_o_r_m_1a27f4285da29912f3c42b44ebe46c7185" prot="public" virt="non-virtual"><scope>DENORM</scope><name>SetupBLNormalize</name></member>
      <member refid="class_d_e_n_o_r_m_1ac667a208c574b073db800890e4e31255" prot="public" virt="non-virtual"><scope>DENORM</scope><name>SetupNormalization</name></member>
      <member refid="class_d_e_n_o_r_m_1a321b748614b977f58804d18ccc56ae2b" prot="private" virt="non-virtual"><scope>DENORM</scope><name>x_origin_</name></member>
      <member refid="class_d_e_n_o_r_m_1ab56e941803c5d7ebf34a93cb453d3c8d" prot="public" virt="non-virtual"><scope>DENORM</scope><name>x_scale</name></member>
      <member refid="class_d_e_n_o_r_m_1a513af69c5996559e9fa4d848dfc2f927" prot="private" virt="non-virtual"><scope>DENORM</scope><name>x_scale_</name></member>
      <member refid="class_d_e_n_o_r_m_1a5b886acd9e1220ff409268e007adffe1" prot="public" virt="non-virtual"><scope>DENORM</scope><name>XHeightRange</name></member>
      <member refid="class_d_e_n_o_r_m_1a191c5fb00616974fb345fccf37a39505" prot="private" virt="non-virtual"><scope>DENORM</scope><name>y_origin_</name></member>
      <member refid="class_d_e_n_o_r_m_1a712ca9b7a1041d92e53ee7023b870fc6" prot="public" virt="non-virtual"><scope>DENORM</scope><name>y_scale</name></member>
      <member refid="class_d_e_n_o_r_m_1a91e1b80e202252e412c1f243554b1b09" prot="private" virt="non-virtual"><scope>DENORM</scope><name>y_scale_</name></member>
      <member refid="class_d_e_n_o_r_m_1a17d231fcb38fc6a4c506cb48c8efe92b" prot="private" virt="non-virtual"><scope>DENORM</scope><name>YOriginAtOrigX</name></member>
      <member refid="class_d_e_n_o_r_m_1ae8e38b1e3cfe58c8671da33036489aa4" prot="private" virt="non-virtual"><scope>DENORM</scope><name>YScaleAtOrigX</name></member>
      <member refid="class_d_e_n_o_r_m_1a66b6de714209543885007fc716d70dcf" prot="public" virt="non-virtual"><scope>DENORM</scope><name>~DENORM</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
