<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="tess__lang__model_8cpp" kind="file">
    <compoundname>tess_lang_model.cpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="char__samp_8h" local="yes">char_samp.h</includes>
    <includes refid="cube__utils_8h" local="yes">cube_utils.h</includes>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includes refid="tesseractclass_8h" local="yes">tesseractclass.h</includes>
    <includes refid="tess__lang__model_8h" local="yes">tess_lang_model.h</includes>
    <includes refid="tessdatamanager_8h" local="yes">tessdatamanager.h</includes>
    <includes refid="unicharset_8h" local="yes">unicharset.h</includes>
    <incdepgraph>
      <node id="31799">
        <label>matchtab.h</label>
        <link refid="matchtab_8h"/>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31761" relation="include">
        </childnode>
      </node>
      <node id="31743">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="31744" relation="include">
        </childnode>
        <childnode refid="31691" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
      </node>
      <node id="31770">
        <label>docqual.h</label>
        <link refid="docqual_8h"/>
        <childnode refid="31752" relation="include">
        </childnode>
        <childnode refid="31723" relation="include">
        </childnode>
      </node>
      <node id="31740">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="31820">
        <label>tess_lang_mod_edge.h</label>
        <link refid="tess__lang__mod__edge_8h"/>
        <childnode refid="31719" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
        <childnode refid="31812" relation="include">
        </childnode>
        <childnode refid="31807" relation="include">
        </childnode>
        <childnode refid="31689" relation="include">
        </childnode>
      </node>
      <node id="31778">
        <label>wordrec.h</label>
        <link refid="wordrec_8h"/>
        <childnode refid="31779" relation="include">
        </childnode>
        <childnode refid="31781" relation="include">
        </childnode>
        <childnode refid="31713" relation="include">
        </childnode>
        <childnode refid="31797" relation="include">
        </childnode>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31780" relation="include">
        </childnode>
        <childnode refid="31799" relation="include">
        </childnode>
        <childnode refid="31798" relation="include">
        </childnode>
        <childnode refid="31800" relation="include">
        </childnode>
        <childnode refid="31767" relation="include">
        </childnode>
        <childnode refid="31748" relation="include">
        </childnode>
        <childnode refid="31801" relation="include">
        </childnode>
        <childnode refid="31803" relation="include">
        </childnode>
      </node>
      <node id="31807">
        <label>cube_reco_context.h</label>
        <link refid="cube__reco__context_8h"/>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31808" relation="include">
        </childnode>
        <childnode refid="31811" relation="include">
        </childnode>
        <childnode refid="31815" relation="include">
        </childnode>
        <childnode refid="31816" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
        <childnode refid="31817" relation="include">
        </childnode>
        <childnode refid="31818" relation="include">
        </childnode>
        <childnode refid="31819" relation="include">
        </childnode>
      </node>
      <node id="31776">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="31722" relation="include">
        </childnode>
        <childnode refid="31726" relation="include">
        </childnode>
        <childnode refid="31724" relation="include">
        </childnode>
        <childnode refid="31753" relation="include">
        </childnode>
        <childnode refid="31759" relation="include">
        </childnode>
      </node>
      <node id="31748">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
      </node>
      <node id="31721">
        <label>assert.h</label>
      </node>
      <node id="31751">
        <label>tesseractclass.h</label>
        <link refid="tesseractclass_8h"/>
        <childnode refid="31690" relation="include">
        </childnode>
        <childnode refid="31752" relation="include">
        </childnode>
        <childnode refid="31770" relation="include">
        </childnode>
        <childnode refid="31771" relation="include">
        </childnode>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31772" relation="include">
        </childnode>
        <childnode refid="31774" relation="include">
        </childnode>
        <childnode refid="31778" relation="include">
        </childnode>
      </node>
      <node id="31781">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="31782" relation="include">
        </childnode>
        <childnode refid="31775" relation="include">
        </childnode>
        <childnode refid="31781" relation="include">
        </childnode>
        <childnode refid="31713" relation="include">
        </childnode>
        <childnode refid="31791" relation="include">
        </childnode>
        <childnode refid="31793" relation="include">
        </childnode>
        <childnode refid="31794" relation="include">
        </childnode>
        <childnode refid="31795" relation="include">
        </childnode>
        <childnode refid="31764" relation="include">
        </childnode>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31792" relation="include">
        </childnode>
        <childnode refid="31790" relation="include">
        </childnode>
      </node>
      <node id="31703">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="31766">
        <label>rejctmap.h</label>
        <link refid="rejctmap_8h"/>
        <childnode refid="31705" relation="include">
        </childnode>
        <childnode refid="31725" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31723" relation="include">
        </childnode>
      </node>
      <node id="31759">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31736" relation="include">
        </childnode>
      </node>
      <node id="31691">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="31771">
        <label>devanagari_processing.h</label>
        <link refid="devanagari__processing_8h"/>
        <childnode refid="31753" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
      </node>
      <node id="31681">
        <label>stdlib.h</label>
      </node>
      <node id="31811">
        <label>lang_model.h</label>
        <link refid="lang__model_8h"/>
        <childnode refid="31812" relation="include">
        </childnode>
        <childnode refid="31805" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
        <childnode refid="31814" relation="include">
        </childnode>
      </node>
      <node id="31695">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="31696" relation="include">
        </childnode>
      </node>
      <node id="31789">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
      </node>
      <node id="31800">
        <label>gradechop.h</label>
        <link refid="gradechop_8h"/>
        <childnode refid="31767" relation="include">
        </childnode>
        <childnode refid="31703" relation="include">
        </childnode>
      </node>
      <node id="31809">
        <label>neuron.h</label>
        <link refid="neuron_8h"/>
        <childnode refid="31732" relation="include">
        </childnode>
        <childnode refid="31679" relation="include">
        </childnode>
      </node>
      <node id="31772">
        <label>ocrclass.h</label>
        <link refid="ocrclass_8h"/>
        <childnode refid="31773" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
      </node>
      <node id="31727">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="31701" relation="include">
        </childnode>
      </node>
      <node id="31744">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="31714" relation="include">
        </childnode>
        <childnode refid="31701" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
        <childnode refid="31693" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
        <childnode refid="31745" relation="include">
        </childnode>
        <childnode refid="31746" relation="include">
        </childnode>
      </node>
      <node id="31690">
        <label>allheaders.h</label>
      </node>
      <node id="31736">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
      </node>
      <node id="31808">
        <label>neural_net.h</label>
        <link refid="neural__net_8h"/>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31679" relation="include">
        </childnode>
        <childnode refid="31809" relation="include">
        </childnode>
        <childnode refid="31810" relation="include">
        </childnode>
      </node>
      <node id="31716">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="31681" relation="include">
        </childnode>
        <childnode refid="31687" relation="include">
        </childnode>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31705" relation="include">
        </childnode>
        <childnode refid="31701" relation="include">
        </childnode>
        <childnode refid="31717" relation="include">
        </childnode>
      </node>
      <node id="31769">
        <label>tessarray.h</label>
        <link refid="tessarray_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
      </node>
      <node id="31678">
        <label>string</label>
      </node>
      <node id="31722">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31716" relation="include">
        </childnode>
        <childnode refid="31718" relation="include">
        </childnode>
      </node>
      <node id="31787">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31761" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
      </node>
      <node id="31775">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="31742" relation="include">
        </childnode>
        <childnode refid="31740" relation="include">
        </childnode>
      </node>
      <node id="31728">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="31729" relation="include">
        </childnode>
        <childnode refid="31735" relation="include">
        </childnode>
      </node>
      <node id="31749">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="31719" relation="include">
        </childnode>
        <childnode refid="31742" relation="include">
        </childnode>
        <childnode refid="31699" relation="include">
        </childnode>
      </node>
      <node id="31720">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="31721" relation="include">
        </childnode>
        <childnode refid="31722" relation="include">
        </childnode>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31723" relation="include">
        </childnode>
        <childnode refid="31708" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
        <childnode refid="31724" relation="include">
        </childnode>
      </node>
      <node id="31706">
        <label>stddef.h</label>
      </node>
      <node id="31709">
        <label>memory.h</label>
      </node>
      <node id="31816">
        <label>feature_base.h</label>
        <link refid="feature__base_8h"/>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31814" relation="include">
        </childnode>
      </node>
      <node id="31814">
        <label>tuning_params.h</label>
        <link refid="tuning__params_8h"/>
        <childnode refid="31678" relation="include">
        </childnode>
      </node>
      <node id="31796">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="31784" relation="include">
        </childnode>
      </node>
      <node id="31786">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31732" relation="include">
        </childnode>
      </node>
      <node id="31803">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="31721" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31708" relation="include">
        </childnode>
      </node>
      <node id="31701">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
      </node>
      <node id="31784">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31708" relation="include">
        </childnode>
      </node>
      <node id="31757">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="31755" relation="include">
        </childnode>
        <childnode refid="31715" relation="include">
        </childnode>
        <childnode refid="31731" relation="include">
        </childnode>
        <childnode refid="31735" relation="include">
        </childnode>
        <childnode refid="31736" relation="include">
        </childnode>
        <childnode refid="31758" relation="include">
        </childnode>
      </node>
      <node id="31818">
        <label>char_bigrams.h</label>
        <link refid="char__bigrams_8h"/>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
      </node>
      <node id="31815">
        <label>classifier_base.h</label>
        <link refid="classifier__base_8h"/>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31805" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
        <childnode refid="31816" relation="include">
        </childnode>
        <childnode refid="31811" relation="include">
        </childnode>
        <childnode refid="31814" relation="include">
        </childnode>
      </node>
      <node id="31696">
        <label>limits.h</label>
      </node>
      <node id="31802">
        <label>chop.h</label>
        <link refid="chop_8h"/>
        <childnode refid="31798" relation="include">
        </childnode>
        <childnode refid="31767" relation="include">
        </childnode>
      </node>
      <node id="31794">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="31761" relation="include">
        </childnode>
        <childnode refid="31783" relation="include">
        </childnode>
        <childnode refid="31764" relation="include">
        </childnode>
        <childnode refid="31732" relation="include">
        </childnode>
      </node>
      <node id="31779">
        <label>associate.h</label>
        <link refid="associate_8h"/>
        <childnode refid="31761" relation="include">
        </childnode>
        <childnode refid="31715" relation="include">
        </childnode>
        <childnode refid="31780" relation="include">
        </childnode>
        <childnode refid="31767" relation="include">
        </childnode>
        <childnode refid="31768" relation="include">
        </childnode>
        <childnode refid="31748" relation="include">
        </childnode>
      </node>
      <node id="31765">
        <label>params_training_featdef.h</label>
        <link refid="params__training__featdef_8h"/>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
      </node>
      <node id="31713">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="31714" relation="include">
        </childnode>
        <childnode refid="31719" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31740" relation="include">
        </childnode>
        <childnode refid="31741" relation="include">
        </childnode>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31747" relation="include">
        </childnode>
        <childnode refid="31749" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
        <childnode refid="31750" relation="include">
        </childnode>
      </node>
      <node id="31680">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="31681" relation="include">
        </childnode>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31683" relation="include">
        </childnode>
        <childnode refid="31686" relation="include">
        </childnode>
      </node>
      <node id="31733">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="31732" relation="include">
        </childnode>
      </node>
      <node id="31734">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="31731" relation="include">
        </childnode>
      </node>
      <node id="31726">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31716" relation="include">
        </childnode>
        <childnode refid="31718" relation="include">
        </childnode>
      </node>
      <node id="31745">
        <label>pthread.h</label>
      </node>
      <node id="31692">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="31687" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31688" relation="include">
        </childnode>
        <childnode refid="31686" relation="include">
        </childnode>
        <childnode refid="31693" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
        <childnode refid="31711" relation="include">
        </childnode>
      </node>
      <node id="31687">
        <label>string.h</label>
      </node>
      <node id="31710">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="31708" relation="include">
        </childnode>
      </node>
      <node id="31763">
        <label>boxword.h</label>
        <link refid="boxword_8h"/>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31735" relation="include">
        </childnode>
      </node>
      <node id="31708">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="31709" relation="include">
        </childnode>
        <childnode refid="31687" relation="include">
        </childnode>
      </node>
      <node id="31742">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31687" relation="include">
        </childnode>
        <childnode refid="31681" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31697" relation="include">
        </childnode>
        <childnode refid="31743" relation="include">
        </childnode>
      </node>
      <node id="31689">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="31679" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31690" relation="include">
        </childnode>
        <childnode refid="31691" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31712" relation="include">
        </childnode>
      </node>
      <node id="31801">
        <label>findseam.h</label>
        <link refid="findseam_8h"/>
        <childnode refid="31767" relation="include">
        </childnode>
        <childnode refid="31798" relation="include">
        </childnode>
        <childnode refid="31802" relation="include">
        </childnode>
      </node>
      <node id="31735">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="31732" relation="include">
        </childnode>
        <childnode refid="31731" relation="include">
        </childnode>
        <childnode refid="31703" relation="include">
        </childnode>
        <childnode refid="31736" relation="include">
        </childnode>
        <childnode refid="31697" relation="include">
        </childnode>
      </node>
      <node id="31725">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
      </node>
      <node id="31679">
        <label>vector</label>
      </node>
      <node id="31700">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
      </node>
      <node id="31746">
        <label>semaphore.h</label>
      </node>
      <node id="31729">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="31730" relation="include">
        </childnode>
        <childnode refid="31734" relation="include">
        </childnode>
        <childnode refid="31725" relation="include">
        </childnode>
        <childnode refid="31735" relation="include">
        </childnode>
        <childnode refid="31727" relation="include">
        </childnode>
        <childnode refid="31736" relation="include">
        </childnode>
      </node>
      <node id="31724">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31725" relation="include">
        </childnode>
        <childnode refid="31726" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
        <childnode refid="31727" relation="include">
        </childnode>
        <childnode refid="31728" relation="include">
        </childnode>
        <childnode refid="31737" relation="include">
        </childnode>
      </node>
      <node id="31737">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31738" relation="include">
        </childnode>
        <childnode refid="31724" relation="include">
        </childnode>
      </node>
      <node id="31717">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="31701" relation="include">
        </childnode>
      </node>
      <node id="31677">
        <label>cube/tess_lang_model.cpp</label>
        <link refid="tess_lang_model.cpp"/>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31679" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31689" relation="include">
        </childnode>
        <childnode refid="31713" relation="include">
        </childnode>
        <childnode refid="31751" relation="include">
        </childnode>
        <childnode refid="31804" relation="include">
        </childnode>
        <childnode refid="31693" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
      </node>
      <node id="31785">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31741" relation="include">
        </childnode>
        <childnode refid="31786" relation="include">
        </childnode>
        <childnode refid="31787" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
      </node>
      <node id="31714">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="31715" relation="include">
        </childnode>
        <childnode refid="31697" relation="include">
        </childnode>
        <childnode refid="31708" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
        <childnode refid="31699" relation="include">
        </childnode>
      </node>
      <node id="31790">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="31700" relation="include">
        </childnode>
        <childnode refid="31701" relation="include">
        </childnode>
        <childnode refid="31699" relation="include">
        </childnode>
      </node>
      <node id="31773">
        <label>time.h</label>
      </node>
      <node id="31732">
        <label>math.h</label>
      </node>
      <node id="31730">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="31731" relation="include">
        </childnode>
        <childnode refid="31734" relation="include">
        </childnode>
      </node>
      <node id="31768">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="31761" relation="include">
        </childnode>
        <childnode refid="31741" relation="include">
        </childnode>
      </node>
      <node id="31718">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="31701" relation="include">
        </childnode>
      </node>
      <node id="31739">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="31731" relation="include">
        </childnode>
      </node>
      <node id="31762">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="31732" relation="include">
        </childnode>
        <childnode refid="31761" relation="include">
        </childnode>
      </node>
      <node id="31812">
        <label>lang_mod_edge.h</label>
        <link refid="lang__mod__edge_8h"/>
        <childnode refid="31813" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
      </node>
      <node id="31755">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="31741">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="31742" relation="include">
        </childnode>
        <childnode refid="31700" relation="include">
        </childnode>
      </node>
      <node id="31792">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="31761" relation="include">
        </childnode>
        <childnode refid="31682" relation="include">
        </childnode>
      </node>
      <node id="31777">
        <label>gap_map.h</label>
        <link refid="gap__map_8h"/>
        <childnode refid="31776" relation="include">
        </childnode>
        <childnode refid="31723" relation="include">
        </childnode>
      </node>
      <node id="31753">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="31712" relation="include">
        </childnode>
        <childnode refid="31754" relation="include">
        </childnode>
        <childnode refid="31737" relation="include">
        </childnode>
        <childnode refid="31756" relation="include">
        </childnode>
      </node>
      <node id="31698">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
      </node>
      <node id="31699">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31681" relation="include">
        </childnode>
        <childnode refid="31700" relation="include">
        </childnode>
        <childnode refid="31701" relation="include">
        </childnode>
        <childnode refid="31702" relation="include">
        </childnode>
        <childnode refid="31703" relation="include">
        </childnode>
      </node>
      <node id="31747">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31748" relation="include">
        </childnode>
        <childnode refid="31708" relation="include">
        </childnode>
      </node>
      <node id="31705">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="31706" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
      </node>
      <node id="31683">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="31681" relation="include">
        </childnode>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31684" relation="include">
        </childnode>
        <childnode refid="31685" relation="include">
        </childnode>
      </node>
      <node id="31774">
        <label>textord.h</label>
        <link refid="textord_8h"/>
        <childnode refid="31775" relation="include">
        </childnode>
        <childnode refid="31776" relation="include">
        </childnode>
        <childnode refid="31777" relation="include">
        </childnode>
        <childnode refid="31723" relation="include">
        </childnode>
        <childnode refid="31755" relation="include">
        </childnode>
      </node>
      <node id="31788">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="31789" relation="include">
        </childnode>
        <childnode refid="31742" relation="include">
        </childnode>
        <childnode refid="31708" relation="include">
        </childnode>
        <childnode refid="31790" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
      </node>
      <node id="31684">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="31819">
        <label>word_unigrams.h</label>
        <link refid="word__unigrams_8h"/>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
        <childnode refid="31811" relation="include">
        </childnode>
      </node>
      <node id="31760">
        <label>pageres.h</label>
        <link refid="pageres_8h"/>
        <childnode refid="31761" relation="include">
        </childnode>
        <childnode refid="31763" relation="include">
        </childnode>
        <childnode refid="31715" relation="include">
        </childnode>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31764" relation="include">
        </childnode>
        <childnode refid="31753" relation="include">
        </childnode>
        <childnode refid="31737" relation="include">
        </childnode>
        <childnode refid="31765" relation="include">
        </childnode>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31766" relation="include">
        </childnode>
        <childnode refid="31767" relation="include">
        </childnode>
        <childnode refid="31724" relation="include">
        </childnode>
      </node>
      <node id="31797">
        <label>language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="31779" relation="include">
        </childnode>
        <childnode refid="31719" relation="include">
        </childnode>
        <childnode refid="31713" relation="include">
        </childnode>
        <childnode refid="31793" relation="include">
        </childnode>
        <childnode refid="31783" relation="include">
        </childnode>
        <childnode refid="31780" relation="include">
        </childnode>
        <childnode refid="31798" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31760" relation="include">
        </childnode>
      </node>
      <node id="31791">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="31792" relation="include">
        </childnode>
      </node>
      <node id="31813">
        <label>cube_tuning_params.h</label>
        <link refid="cube__tuning__params_8h"/>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31814" relation="include">
        </childnode>
      </node>
      <node id="31754">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="31755" relation="include">
        </childnode>
        <childnode refid="31715" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
      </node>
      <node id="31715">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31716" relation="include">
        </childnode>
        <childnode refid="31718" relation="include">
        </childnode>
      </node>
      <node id="31707">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="31701" relation="include">
        </childnode>
        <childnode refid="31702" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
        <childnode refid="31700" relation="include">
        </childnode>
        <childnode refid="31708" relation="include">
        </childnode>
        <childnode refid="31710" relation="include">
        </childnode>
      </node>
      <node id="31805">
        <label>char_altlist.h</label>
        <link refid="char__altlist_8h"/>
        <childnode refid="31806" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
      </node>
      <node id="31767">
        <label>seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="31761" relation="include">
        </childnode>
        <childnode refid="31768" relation="include">
        </childnode>
        <childnode refid="31769" relation="include">
        </childnode>
      </node>
      <node id="31752">
        <label>control.h</label>
        <link refid="control_8h"/>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31753" relation="include">
        </childnode>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31759" relation="include">
        </childnode>
        <childnode refid="31760" relation="include">
        </childnode>
        <childnode refid="31723" relation="include">
        </childnode>
      </node>
      <node id="31798">
        <label>oldheap.h</label>
        <link refid="oldheap_8h"/>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31742" relation="include">
        </childnode>
      </node>
      <node id="31719">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="31715" relation="include">
        </childnode>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31700" relation="include">
        </childnode>
      </node>
      <node id="31793">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31708" relation="include">
        </childnode>
      </node>
      <node id="31731">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31732" relation="include">
        </childnode>
        <childnode refid="31715" relation="include">
        </childnode>
        <childnode refid="31733" relation="include">
        </childnode>
      </node>
      <node id="31782">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="31741" relation="include">
        </childnode>
        <childnode refid="31783" relation="include">
        </childnode>
        <childnode refid="31682" relation="include">
        </childnode>
      </node>
      <node id="31723">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="31711">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="31712">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="31705" relation="include">
        </childnode>
      </node>
      <node id="31697">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="31698" relation="include">
        </childnode>
      </node>
      <node id="31795">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31783" relation="include">
        </childnode>
        <childnode refid="31796" relation="include">
        </childnode>
      </node>
      <node id="31758">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="31688">
        <label>algorithm</label>
      </node>
      <node id="31694">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="31695" relation="include">
        </childnode>
      </node>
      <node id="31817">
        <label>word_size_model.h</label>
        <link refid="word__size__model_8h"/>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31680" relation="include">
        </childnode>
        <childnode refid="31692" relation="include">
        </childnode>
      </node>
      <node id="31685">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
      </node>
      <node id="31756">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="31722" relation="include">
        </childnode>
        <childnode refid="31712" relation="include">
        </childnode>
        <childnode refid="31704" relation="include">
        </childnode>
        <childnode refid="31757" relation="include">
        </childnode>
        <childnode refid="31758" relation="include">
        </childnode>
      </node>
      <node id="31682">
        <label>stdio.h</label>
      </node>
      <node id="31804">
        <label>tess_lang_model.h</label>
        <link refid="tess__lang__model_8h"/>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31805" relation="include">
        </childnode>
        <childnode refid="31807" relation="include">
        </childnode>
        <childnode refid="31813" relation="include">
        </childnode>
        <childnode refid="31713" relation="include">
        </childnode>
        <childnode refid="31811" relation="include">
        </childnode>
        <childnode refid="31693" relation="include">
        </childnode>
        <childnode refid="31820" relation="include">
        </childnode>
      </node>
      <node id="31810">
        <label>input_file_buffer.h</label>
        <link refid="input__file__buffer_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
      </node>
      <node id="31686">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="31687" relation="include">
        </childnode>
        <childnode refid="31678" relation="include">
        </childnode>
        <childnode refid="31688" relation="include">
        </childnode>
        <childnode refid="31679" relation="include">
        </childnode>
      </node>
      <node id="31780">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
      </node>
      <node id="31783">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="31699" relation="include">
        </childnode>
        <childnode refid="31784" relation="include">
        </childnode>
        <childnode refid="31785" relation="include">
        </childnode>
        <childnode refid="31788" relation="include">
        </childnode>
        <childnode refid="31736" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
      </node>
      <node id="31693">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
        <childnode refid="31697" relation="include">
        </childnode>
      </node>
      <node id="31764">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31694" relation="include">
        </childnode>
      </node>
      <node id="31704">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31687" relation="include">
        </childnode>
        <childnode refid="31695" relation="include">
        </childnode>
        <childnode refid="31705" relation="include">
        </childnode>
      </node>
      <node id="31806">
        <label>altlist.h</label>
        <link refid="altlist_8h"/>
        <childnode refid="31732" relation="include">
        </childnode>
        <childnode refid="31689" relation="include">
        </childnode>
      </node>
      <node id="31761">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="31722" relation="include">
        </childnode>
        <childnode refid="31735" relation="include">
        </childnode>
        <childnode refid="31762" relation="include">
        </childnode>
      </node>
      <node id="31702">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="31682" relation="include">
        </childnode>
        <childnode refid="31687" relation="include">
        </childnode>
      </node>
      <node id="31750">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="31720" relation="include">
        </childnode>
        <childnode refid="31698" relation="include">
        </childnode>
        <childnode refid="31707" relation="include">
        </childnode>
      </node>
      <node id="31738">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="31739" relation="include">
        </childnode>
        <childnode refid="31716" relation="include">
        </childnode>
        <childnode refid="31705" relation="include">
        </childnode>
        <childnode refid="31735" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tess_lang_model.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Implementation<sp/>of<sp/>the<sp/>Tesseract<sp/>Language<sp/>Model<sp/>Class</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2008</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>TessLangModel<sp/>class<sp/>abstracts<sp/>the<sp/>Tesseract<sp/>language<sp/>model.<sp/>It<sp/>inherits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>LangModel<sp/>class.<sp/>The<sp/>Tesseract<sp/>language<sp/>model<sp/>encompasses<sp/>several</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Dawgs<sp/>(words<sp/>from<sp/>training<sp/>data,<sp/>punctuation,<sp/>numbers,<sp/>document<sp/>words).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>top<sp/>of<sp/>this<sp/>Cube<sp/>adds<sp/>an<sp/>OOD<sp/>state<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>class<sp/>provides<sp/>methods<sp/>to<sp/>traverse<sp/>the<sp/>language<sp/>model<sp/>in<sp/>a<sp/>generative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fashion.<sp/>Given<sp/>any<sp/>node<sp/>in<sp/>the<sp/>DAWG,<sp/>the<sp/>language<sp/>model<sp/>can<sp/>generate<sp/>a<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>children<sp/>(or<sp/>fan-out)<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__samp_8h" kindref="compound">char_samp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__utils_8h" kindref="compound">cube_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tesseractclass_8h" kindref="compound">tesseractclass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tess__lang__model_8h" kindref="compound">tess_lang_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tessdatamanager_8h" kindref="compound">tessdatamanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicharset_8h" kindref="compound">unicharset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>max<sp/>fan-out<sp/>(used<sp/>for<sp/>preallocation).<sp/>Initialized<sp/>here,<sp/>but<sp/>modified<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TessLangModel::max_edge_<sp/>=<sp/>4096;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Language<sp/>model<sp/>extra<sp/>State<sp/>machines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*TessLangModel::ood_dawg_<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Dawg<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="tess__lang__mod__edge_8h_1a98e51b44460bd2ee6ff9f6daa36d6e31" kindref="member">DAWG_OOD</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*TessLangModel::number_dawg_<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">Dawg<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="tess__lang__mod__edge_8h_1af631a733de822313c5960a48010bd9b1" kindref="member">DAWG_NUMBER</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>number<sp/>state<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TessLangModel::num_state_machine_[<ref refid="namespacetesseract_1acc744c888b291dd541ba6fb60c76b0a9" kindref="member">kStateCnt</ref>][<ref refid="namespacetesseract_1a6b4a65d34133edfd1e49af29cb711767" kindref="member">kNumLiteralCnt</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>{0,<sp/>1,<sp/>1,<sp/><ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>,<sp/><ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>},</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{<ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>,<sp/>1,<sp/>1,<sp/>3,<sp/>2},</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{<ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>,<sp/><ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>,<sp/>1,<sp/><ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>,<sp/>2},</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>{<ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>,<sp/><ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>,<sp/>3,<sp/><ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>,<sp/>2},</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TessLangModel::num_max_repeat_[<ref refid="namespacetesseract_1acc744c888b291dd541ba6fb60c76b0a9" kindref="member">kStateCnt</ref>]<sp/>=<sp/>{3,<sp/>32,<sp/>8,<sp/>3};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>thresholds<sp/>and<sp/>penalties</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TessLangModel::max_ood_shape_cost_<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1a0983096f5ebcb35879a1e0e6038c32f8" kindref="member">CubeUtils::Prob2Cost</ref>(1e-4);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="classtesseract_1_1_tess_lang_model_1a23d5290b102bb43428957c4c4a96e6d6" kindref="member">TessLangModel::TessLangModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;lm_params,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>load_system_dawg,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TessdataManager<sp/>*tessdata_manager,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CubeRecoContext<sp/>*cntxt)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>cntxt_<sp/>=<sp/>cntxt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>has_case_<sp/>=<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1a935e5758a4674f439814ec57b8c4d42b" kindref="member">HasCase</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>language<sp/>model<sp/>elements<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>LoadLangModelElements(lm_params);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>word_dawgs_<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tessdata_manager-&gt;SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a87310a274403592ee7b1bd07e8b29973" kindref="member">TESSDATA_CUBE_UNICHARSET</ref>))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>word_dawgs_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a8dc259fa09d9302b96f5b3d2aad10c9f" kindref="member">DawgVector</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(load_system_dawg<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tessdata_manager-&gt;SeekToStart(<ref refid="namespacetesseract_1a5f278974ef80900b460194614d4f1899a445f2a31c9940f2027a67ba8f8630f9f" kindref="member">TESSDATA_CUBE_SYSTEM_DAWG</ref>))<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>last<sp/>parameter<sp/>to<sp/>the<sp/>Dawg<sp/>constructor<sp/>(the<sp/>debug<sp/>level)<sp/>is<sp/>set<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>false,<sp/>until<sp/>Cube<sp/>has<sp/>a<sp/>way<sp/>to<sp/>express<sp/>its<sp/>preferred<sp/>debug<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*word_dawgs_<sp/>+=<sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SquishedDawg(tessdata_manager-&gt;GetDataFilePtr(),</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1a5e8e654a7db7d086d7e05d08bb53fa97" kindref="member">Lang</ref>().c_str(),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SYSTEM_DAWG_PERM,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>word_dawgs_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleanup<sp/>an<sp/>edge<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TessLangModel::FreeEdges(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_cnt,<sp/>LangModEdge<sp/>**edge_array)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_array<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_idx<sp/>=<sp/>0;<sp/>edge_idx<sp/>&lt;<sp/>edge_cnt;<sp/>edge_idx++)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_array[edge_idx]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>edge_array[edge_idx];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]edge_array;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>if<sp/>a<sp/>sequence<sp/>of<sp/>32-bit<sp/>chars<sp/>is<sp/>valid<sp/>in<sp/>this<sp/>language<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>starting<sp/>from<sp/>the<sp/>specified<sp/>edge.<sp/>If<sp/>the<sp/>eow_flag<sp/>is<sp/>ON,<sp/>also<sp/>checks<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>valid<sp/>EndOfWord.<sp/>If<sp/>final_edge<sp/>is<sp/>not<sp/>NULL,<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a2c303d6052f7b99c6b65a497592e5e2e" kindref="member">TessLangModel::IsValidSequence</ref>(LangModEdge<sp/>*edge,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*sequence,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>eow_flag,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModEdge<sp/>**final_edge)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>edges<sp/>emerging<sp/>from<sp/>this<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>LangModEdge<sp/>**edge_array<sp/>=<sp/><ref refid="classtesseract_1_1_tess_lang_model_1abd9a2fc77fe18caeb4a8f17020b460a4" kindref="member">GetEdges</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>edge,<sp/>&amp;edge_cnt);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>1st<sp/>char<sp/>in<sp/>the<sp/>sequence<sp/>in<sp/>the<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_idx<sp/>=<sp/>0;<sp/>edge_idx<sp/>&lt;<sp/>edge_cnt;<sp/>edge_idx++)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>a<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sequence[0]<sp/>==<sp/>edge_array[edge_idx]-&gt;EdgeString()[0])<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>is<sp/>the<sp/>last<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sequence[1]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>succeed<sp/>if<sp/>we<sp/>are<sp/>in<sp/>prefix<sp/>mode<sp/>or<sp/>this<sp/>is<sp/>a<sp/>terminal<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eow_flag<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>||<sp/>edge_array[edge_idx]-&gt;IsEOW())<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(final_edge<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*final_edge)<sp/>=<sp/>edge_array[edge_idx];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_array[edge_idx]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeEdges(edge_cnt,<sp/>edge_array);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>the<sp/>last<sp/>char<sp/>continue<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tess_lang_model_1a2c303d6052f7b99c6b65a497592e5e2e" kindref="member">IsValidSequence</ref>(edge_array[edge_idx],<sp/>sequence<sp/>+<sp/>1,<sp/>eow_flag,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_edge)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FreeEdges(edge_cnt,<sp/>edge_array);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>FreeEdges(edge_cnt,<sp/>edge_array);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Determines<sp/>if<sp/>a<sp/>sequence<sp/>of<sp/>32-bit<sp/>chars<sp/>is<sp/>valid<sp/>in<sp/>this<sp/>language<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>starting<sp/>from<sp/>the<sp/>root.<sp/>If<sp/>the<sp/>eow_flag<sp/>is<sp/>ON,<sp/>also<sp/>checks<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>valid<sp/>EndOfWord.<sp/>If<sp/>final_edge<sp/>is<sp/>not<sp/>NULL,<sp/>returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a2c303d6052f7b99c6b65a497592e5e2e" kindref="member">TessLangModel::IsValidSequence</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*sequence,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>eow_flag,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModEdge<sp/>**final_edge)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(final_edge<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>(*final_edge)<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a2c303d6052f7b99c6b65a497592e5e2e" kindref="member">IsValidSequence</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>sequence,<sp/>eow_flag,<sp/>final_edge);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tess_lang_model_1ae012b6f6dec52e66ccc7b78fa8975b10" kindref="member">TessLangModel::IsLeadingPunc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>ch)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lead_punc_.find(ch)<sp/>!=<sp/>string::npos;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tess_lang_model_1aed986e1547e8faf18a522ef074e0413a" kindref="member">TessLangModel::IsTrailingPunc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>ch)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trail_punc_.find(ch)<sp/>!=<sp/>string::npos;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a69d61128a73ddf1e9ce709a3808c6530" kindref="member">TessLangModel::IsDigit</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>ch)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>digits_.find(ch)<sp/>!=<sp/>string::npos;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>general<sp/>fan-out<sp/>generation<sp/>function.<sp/>Returns<sp/>the<sp/>list<sp/>of<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fanning-out<sp/>of<sp/>the<sp/>specified<sp/>edge<sp/>and<sp/>their<sp/>count.<sp/>If<sp/>an<sp/>AltList<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specified,<sp/>only<sp/>the<sp/>class-ids<sp/>with<sp/>a<sp/>minimum<sp/>cost<sp/>are<sp/>considered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">LangModEdge<sp/>**<sp/><ref refid="classtesseract_1_1_tess_lang_model_1abd9a2fc77fe18caeb4a8f17020b460a4" kindref="member">TessLangModel::GetEdges</ref>(CharAltList<sp/>*alt_list,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModEdge<sp/>*lang_mod_edge,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*edge_cnt)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>TessLangModEdge<sp/>*tess_lm_edge<sp/>=</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">TessLangModEdge<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(lang_mod_edge);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>LangModEdge<sp/>**edge_array<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>(*edge_cnt)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>starting<sp/>from<sp/>the<sp/>root,<sp/>we&apos;ll<sp/>instantiate<sp/>every<sp/>DAWG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>get<sp/>the<sp/>all<sp/>the<sp/>edges<sp/>that<sp/>emerge<sp/>from<sp/>the<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tess_lm_edge<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>DAWG<sp/>count<sp/>from<sp/>Tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dawg_cnt<sp/>=<sp/>NumDawgs();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preallocate<sp/>the<sp/>edge<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>(*edge_cnt)<sp/>=<sp/>dawg_cnt<sp/>*<sp/>max_edge_;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>edge_array<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LangModEdge<sp/>*[(*edge_cnt)];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_array<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dawg_idx<sp/>=<sp/>(*edge_cnt)<sp/>=<sp/>0;<sp/>dawg_idx<sp/>&lt;<sp/>dawg_cnt;<sp/>dawg_idx++)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*curr_dawg<sp/>=<sp/>GetDawg(dawg_idx);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>look<sp/>through<sp/>word<sp/>Dawgs<sp/>(since<sp/>there<sp/>is<sp/>a<sp/>special<sp/>way<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handling<sp/>numbers<sp/>and<sp/>punctuation).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_dawg-&gt;type()<sp/>==<sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*edge_cnt)<sp/>+=<sp/>FanOut(alt_list,<sp/>curr_dawg,<sp/>0,<sp/>0,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_array<sp/>+<sp/>(*edge_cnt));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>dawg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>(*edge_cnt)<sp/>+=<sp/>FanOut(alt_list,<sp/>number_dawg_,<sp/>0,<sp/>0,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_array<sp/>+<sp/>(*edge_cnt));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OOD:<sp/>it<sp/>is<sp/>intentionally<sp/>not<sp/>added<sp/>to<sp/>the<sp/>list<sp/>to<sp/>make<sp/>sure<sp/>it<sp/>comes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>(*edge_cnt)<sp/>+=<sp/>FanOut(alt_list,<sp/>ood_dawg_,<sp/>0,<sp/>0,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_array<sp/>+<sp/>(*edge_cnt));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>root<sp/>flag<sp/>for<sp/>all<sp/>root<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_idx<sp/>=<sp/>0;<sp/>edge_idx<sp/>&lt;<sp/>(*edge_cnt);<sp/>edge_idx++)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge_array[edge_idx]-&gt;SetRoot(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>starting<sp/>at<sp/>the<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>preallocate<sp/>the<sp/>edge<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>(*edge_cnt)<sp/>=<sp/>max_edge_;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>memory<sp/>for<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>edge_array<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LangModEdge<sp/>*[(*edge_cnt)];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_array<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>FanOut<sp/>edges<sp/>from<sp/>the<sp/>root<sp/>of<sp/>each<sp/>dawg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>(*edge_cnt)<sp/>=<sp/>FanOut(alt_list,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tess_lm_edge-&gt;GetDawg(),</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tess_lm_edge-&gt;EndEdge(),<sp/>tess_lm_edge-&gt;EdgeMask(),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tess_lm_edge-&gt;EdgeString(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>edge_array);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edge_array;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generate<sp/>edges<sp/>from<sp/>an<sp/>NULL<sp/>terminated<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(used<sp/>for<sp/>punctuation,<sp/>operators<sp/>and<sp/>digits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TessLangModel::Edges(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strng,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*dawg,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref,<sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_mask,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModEdge<sp/>**edge_array)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_idx,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>edge_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(edge_idx<sp/>=<sp/>0;<sp/>strng[edge_idx]<sp/>!=<sp/>0;<sp/>edge_idx++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1ab9c6b5f85ef4baa38ad8ef9c949b8dee" kindref="member">CharacterSet</ref>()-&gt;<ref refid="classtesseract_1_1_char_set_1aea651f4514338d320e195c6780ffcda5" kindref="member">ClassID</ref>((<ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref>)strng[edge_idx]);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_id<sp/>!=<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>an<sp/>edge<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge_array[edge_cnt]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TessLangModEdge(cntxt_,<sp/>dawg,<sp/>edge_ref,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_id);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_array[edge_cnt]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">TessLangModEdge<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge_array[edge_cnt])-&gt;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEdgeMask(edge_mask);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge_cnt++;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edge_cnt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>generate<sp/>OOD<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TessLangModel::OODEdges(CharAltList<sp/>*alt_list,<sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref_mask,<sp/>LangModEdge<sp/>**edge_array)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_cnt<sp/>=<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1ab9c6b5f85ef4baa38ad8ef9c949b8dee" kindref="member">CharacterSet</ref>()-&gt;<ref refid="classtesseract_1_1_char_set_1abfcdf381a241c375ad4c0f77747afb6c" kindref="member">ClassCount</ref>();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>0;<sp/>class_id<sp/>&lt;<sp/>class_cnt;<sp/>class_id++)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>produce<sp/>an<sp/>OOD<sp/>edge<sp/>only<sp/>if<sp/>the<sp/>cost<sp/>of<sp/>the<sp/>char<sp/>is<sp/>low<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((alt_list<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alt_list-&gt;ClassCost(class_id)<sp/>&lt;=<sp/>max_ood_shape_cost_))<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>an<sp/>edge<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge_array[edge_cnt]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TessLangModEdge(cntxt_,<sp/>class_id);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_array[edge_cnt]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edge_cnt++;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edge_cnt;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>computes<sp/>and<sp/>returns<sp/>the<sp/>edges<sp/>that<sp/>fan<sp/>out<sp/>of<sp/>an<sp/>edge<sp/>ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TessLangModel::FanOut(CharAltList<sp/>*alt_list,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*dawg,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref,<sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_mask,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*str,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>root_flag,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModEdge<sp/>**edge_array)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>next_node<sp/>=<sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg<sp/>==<sp/>reinterpret_cast&lt;Dawg<sp/>*&gt;(<ref refid="tess__lang__mod__edge_8h_1a98e51b44460bd2ee6ff9f6daa36d6e31" kindref="member">DAWG_OOD</ref>))<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_lang_model_1aafdf3a806f6fe7ffbe75d257ecbede56" kindref="member">ood_enabled_</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OODEdges(alt_list,<sp/>edge_ref,<sp/>edge_mask,<sp/>edge_array);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg<sp/>==<sp/>reinterpret_cast&lt;Dawg<sp/>*&gt;(<ref refid="tess__lang__mod__edge_8h_1af631a733de822313c5960a48010bd9b1" kindref="member">DAWG_NUMBER</ref>))<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_lang_model_1a877e0ae377a2c2b3b2950b497ff1b772" kindref="member">numeric_enabled_</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NumberEdges(edge_ref,<sp/>edge_array);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tess__lang__mod__edge_8h_1a46f74755a19dec523c5eba795fd9b79d" kindref="member">IsTrailingPuncEdge</ref>(edge_mask))<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>TRAILING<sp/>PUNC<sp/>MASK,<sp/>generate<sp/>more<sp/>trailing<sp/>punctuation<sp/>and<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_lang_model_1a70621f842de37a67dd00e7c5a2d97877" kindref="member">punc_enabled_</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>trail_cnt<sp/>=<sp/><ref refid="tess__lang__mod__edge_8h_1aa93635ba3fe36d94b9774d97ca5dbff4" kindref="member">TrailingPuncCount</ref>(edge_mask);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Edges(trail_punc_.c_str(),<sp/>dawg,<sp/>edge_ref,</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tess__lang__mod__edge_8h_1a04ab1c36e0544a1e7891af2762d2218a" kindref="member">TrailingPuncEdgeMask</ref>(trail_cnt<sp/>+<sp/>1),<sp/>edge_array);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root_flag<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>||<sp/>edge_ref<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Root,<sp/>generate<sp/>leading<sp/>punctuation<sp/>and<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root_flag)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_lang_model_1a70621f842de37a67dd00e7c5a2d97877" kindref="member">punc_enabled_</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_cnt<sp/>+=<sp/>Edges(lead_punc_.c_str(),<sp/>dawg,<sp/>0,<sp/><ref refid="tess__lang__mod__edge_8h_1ac73d67d8c102398c4b6838569dad205a" kindref="member">LEAD_PUNC_EDGE_REF_MASK</ref>,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_array);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>next_node<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>node<sp/>in<sp/>the<sp/>main<sp/>trie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>eow_flag<sp/>=<sp/>(dawg-&gt;end_of_word(edge_ref)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>EOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(eow_flag<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>trailing<sp/>punctuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_lang_model_1a70621f842de37a67dd00e7c5a2d97877" kindref="member">punc_enabled_</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_cnt<sp/>+=<sp/>Edges(trail_punc_.c_str(),<sp/>dawg,<sp/>edge_ref,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tess__lang__mod__edge_8h_1a04ab1c36e0544a1e7891af2762d2218a" kindref="member">TrailingPuncEdgeMask</ref>((<ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref>)1),<sp/>edge_array);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>a<sp/>hyphen<sp/>and<sp/>go<sp/>back<sp/>to<sp/>the<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_cnt<sp/>+=<sp/>Edges(</highlight><highlight class="stringliteral">&quot;-/&quot;</highlight><highlight class="normal">,<sp/>dawg,<sp/>0,<sp/>0,<sp/>edge_array<sp/>+<sp/>edge_cnt);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>next_node<sp/>=<sp/>dawg-&gt;next_node(edge_ref);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_node<sp/>==<sp/>0<sp/>||<sp/>next_node<sp/>==<sp/>NO_EDGE)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edge_cnt;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>get<sp/>all<sp/>the<sp/>emerging<sp/>edges<sp/>if<sp/>word<sp/>list<sp/>is<sp/>enabled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_lang_model_1aa62a12331a5be9099c7744b74eddeff2" kindref="member">word_list_enabled_</ref><sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>next_node<sp/>!=<sp/>NO_EDGE)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>child<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>child_edge_cnt<sp/>=</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tess_lang_mod_edge_1ae25d25a5c98f6d0a040cd6e04f623c56" kindref="member">TessLangModEdge::CreateChildren</ref>(cntxt_,<sp/>dawg,<sp/>next_node,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_array<sp/>+<sp/>edge_cnt);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strt_cnt<sp/>=<sp/>edge_cnt;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>edge<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>child<sp/>=<sp/>0;<sp/>child<sp/>&lt;<sp/>child_edge_cnt;<sp/>child++)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">TessLangModEdge<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge_array[edge_cnt++])-&gt;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEdgeMask(edge_mask);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>at<sp/>the<sp/>root,<sp/>create<sp/>upper<sp/>case<sp/>forms<sp/>of<sp/>these<sp/>edges<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(root_flag<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>child<sp/>=<sp/>0;<sp/>child<sp/>&lt;<sp/>child_edge_cnt;<sp/>child++)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TessLangModEdge<sp/>*child_edge<sp/>=</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">TessLangModEdge<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge_array[strt_cnt<sp/>+<sp/>child]);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_case_<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*edge_str<sp/>=<sp/>child_edge-&gt;EdgeString();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_str<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>islower(edge_str[0])<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_str[1]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1ab9c6b5f85ef4baa38ad8ef9c949b8dee" kindref="member">CharacterSet</ref>()-&gt;<ref refid="classtesseract_1_1_char_set_1aea651f4514338d320e195c6780ffcda5" kindref="member">ClassID</ref>(toupper(edge_str[0]));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_id<sp/>!=<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>an<sp/>upper<sp/>case<sp/>edge<sp/>for<sp/>lower<sp/>case<sp/>chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_array[edge_cnt]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TessLangModEdge(cntxt_,<sp/>dawg,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child_edge-&gt;StartEdge(),<sp/>child_edge-&gt;EndEdge(),<sp/>class_id);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(edge_array[edge_cnt]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">TessLangModEdge<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(edge_array[edge_cnt])-&gt;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetEdgeMask(edge_mask);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edge_cnt++;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edge_cnt;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generate<sp/>the<sp/>edges<sp/>fanning-out<sp/>from<sp/>an<sp/>edge<sp/>in<sp/>the<sp/>number<sp/>state<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TessLangModel::NumberEdges(<ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>edge_ref,<sp/>LangModEdge<sp/>**edge_array)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/><ref refid="states_8cpp_1ac2e9f7b195c3ee2878144de8cae6ec67" kindref="member">new_state</ref>,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>state;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>repeat_cnt,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>new_repeat_cnt;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>state<sp/>=<sp/>((edge_ref<sp/>&amp;<sp/><ref refid="tess__lang__mod__edge_8h_1a02b71964ea4014bb065de345fcbb3470" kindref="member">NUMBER_STATE_MASK</ref>)<sp/>&gt;&gt;<sp/><ref refid="tess__lang__mod__edge_8h_1a235b57fd0f3b37ae6cc810c3bdad94e8" kindref="member">NUMBER_STATE_SHIFT</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>repeat_cnt<sp/>=<sp/>((edge_ref<sp/>&amp;<sp/><ref refid="tess__lang__mod__edge_8h_1ac6567a33271146d5e1b5b668cbd3e788" kindref="member">NUMBER_REPEAT_MASK</ref>)<sp/>&gt;&gt;<sp/><ref refid="tess__lang__mod__edge_8h_1aebeb1620c303106ac7d007eb43341fc3" kindref="member">NUMBER_REPEAT_SHIFT</ref>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>&lt;<sp/>0<sp/>||<sp/>state<sp/>&gt;=<sp/><ref refid="namespacetesseract_1acc744c888b291dd541ba6fb60c76b0a9" kindref="member">kStateCnt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>thru<sp/>all<sp/>valid<sp/>transitions<sp/>from<sp/>the<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref><sp/>new_edge_ref;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lit<sp/>=<sp/>0;<sp/>lit<sp/>&lt;<sp/><ref refid="namespacetesseract_1a6b4a65d34133edfd1e49af29cb711767" kindref="member">kNumLiteralCnt</ref>;<sp/>lit++)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>the<sp/>new<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>new_state<sp/>=<sp/>num_state_machine_[state][lit];</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_state<sp/>==<sp/><ref refid="tess__lang__mod__edge_8h_1a8945869f121e827acf0f80cfc4e57286" kindref="member">NUM_TRM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_state<sp/>==<sp/>state)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_repeat_cnt<sp/>=<sp/>repeat_cnt<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_repeat_cnt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>allowed<sp/>to<sp/>repeat<sp/>beyond<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_repeat_cnt<sp/>&gt;<sp/>num_max_repeat_[state])<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>new_edge_ref<sp/>=<sp/>(new_state<sp/>&lt;&lt;<sp/><ref refid="tess__lang__mod__edge_8h_1a235b57fd0f3b37ae6cc810c3bdad94e8" kindref="member">NUMBER_STATE_SHIFT</ref>)<sp/>|</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(lit<sp/>&lt;&lt;<sp/><ref refid="tess__lang__mod__edge_8h_1ace569a4b2660eec1b3bf4f35b864be28" kindref="member">NUMBER_LITERAL_SHIFT</ref>)<sp/>|</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(new_repeat_cnt<sp/>&lt;&lt;<sp/><ref refid="tess__lang__mod__edge_8h_1aebeb1620c303106ac7d007eb43341fc3" kindref="member">NUMBER_REPEAT_SHIFT</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>edge_cnt<sp/>+=<sp/>Edges(literal_str_[lit]-&gt;c_str(),<sp/>number_dawg_,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_edge_ref,<sp/>0,<sp/>edge_array<sp/>+<sp/>edge_cnt);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>edge_cnt;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Loads<sp/>Language<sp/>model<sp/>elements<sp/>from<sp/>contents<sp/>of<sp/>the<sp/>&lt;lang&gt;.cube.lm<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TessLangModel::LoadLangModelElements(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;lm_params)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>into<sp/>lines,<sp/>each<sp/>corresponding<sp/>to<sp/>a<sp/>token<sp/>type<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>vector&lt;string&gt;<sp/>str_vec;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1af7dea4521db1e7099c93606d0f5bf4a4" kindref="member">CubeUtils::SplitStringUsing</ref>(lm_params,<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">,<sp/>&amp;str_vec);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entry<sp/>=<sp/>0;<sp/>entry<sp/>&lt;<sp/>str_vec.size();<sp/>entry++)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>tokens;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>only<sp/>two<sp/>tokens:<sp/>type<sp/>and<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1af7dea4521db1e7099c93606d0f5bf4a4" kindref="member">CubeUtils::SplitStringUsing</ref>(str_vec[entry],<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">,<sp/>&amp;tokens);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens.size()<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LeadPunc&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lead_punc_<sp/>=<sp/>tokens[1];</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;TrailPunc&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trail_punc_<sp/>=<sp/>tokens[1];</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NumLeadPunc&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_lead_punc_<sp/>=<sp/>tokens[1];</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NumTrailPunc&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_trail_punc_<sp/>=<sp/>tokens[1];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Operators&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>operators_<sp/>=<sp/>tokens[1];</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Digits&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>digits_<sp/>=<sp/>tokens[1];</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens[0]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Alphas&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alphas_<sp/>=<sp/>tokens[1];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a1fc3e4c81803a84dba0ff7dd1e0ec936" kindref="member">RemoveInvalidCharacters</ref>(&amp;num_lead_punc_);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a1fc3e4c81803a84dba0ff7dd1e0ec936" kindref="member">RemoveInvalidCharacters</ref>(&amp;num_trail_punc_);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a1fc3e4c81803a84dba0ff7dd1e0ec936" kindref="member">RemoveInvalidCharacters</ref>(&amp;digits_);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a1fc3e4c81803a84dba0ff7dd1e0ec936" kindref="member">RemoveInvalidCharacters</ref>(&amp;operators_);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a1fc3e4c81803a84dba0ff7dd1e0ec936" kindref="member">RemoveInvalidCharacters</ref>(&amp;alphas_);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>form<sp/>the<sp/>array<sp/>of<sp/>literal<sp/>strings<sp/>needed<sp/>for<sp/>number<sp/>state<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>essential<sp/>that<sp/>the<sp/>literal<sp/>strings<sp/>go<sp/>in<sp/>the<sp/>order<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>literal_str_[0]<sp/>=<sp/>&amp;num_lead_punc_;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>literal_str_[1]<sp/>=<sp/>&amp;num_trail_punc_;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>literal_str_[2]<sp/>=<sp/>&amp;digits_;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>literal_str_[3]<sp/>=<sp/>&amp;operators_;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>literal_str_[4]<sp/>=<sp/>&amp;alphas_;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tess_lang_model_1a1fc3e4c81803a84dba0ff7dd1e0ec936" kindref="member">TessLangModel::RemoveInvalidCharacters</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>*lm_str)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>CharSet<sp/>*char_set<sp/>=<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1ab9c6b5f85ef4baa38ad8ef9c949b8dee" kindref="member">CharacterSet</ref>();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" kindref="member">tesseract::string_32</ref><sp/>lm_str32;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a911ee12931d18c46e7db79c6758a91cc" kindref="member">CubeUtils::UTF8ToUTF32</ref>(lm_str-&gt;c_str(),<sp/>&amp;lm_str32);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1a88fe596e3dcadab7909c0bff64f61f59" kindref="member">CubeUtils::StrLen</ref>(lm_str32.c_str());</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*clean_str32<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref>[len<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clean_str32)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clean_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>char_set-&gt;ClassID((<ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref>)lm_str32[i]);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_id<sp/>!=<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clean_str32[clean_len]<sp/>=<sp/>lm_str32[i];</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++clean_len;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>clean_str32[clean_len]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clean_len<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>lm_str-&gt;clear();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a30c20693fc79e49a67c9694700f1d0b5" kindref="member">CubeUtils::UTF32ToUTF8</ref>(clean_str32,<sp/>lm_str);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>clean_str32;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TessLangModel::NumDawgs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(word_dawgs_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_dawgs_-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>:<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1a9dbf36a8e91bc7f2f9055c34d1ae1604" kindref="member">TesseractObject</ref>()-&gt;<ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().<ref refid="classtesseract_1_1_dict_1a0a380d8e3aa8e0d3827b18ad5355b258" kindref="member" tooltip="Return the number of dawgs in the dawgs_ vector. ">NumDawgs</ref>();</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>dawgs<sp/>with<sp/>the<sp/>given<sp/>index<sp/>from<sp/>either<sp/>the<sp/>dawgs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stored<sp/>by<sp/>the<sp/>Tesseract<sp/>object,<sp/>or<sp/>the<sp/>word_dawgs_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*TessLangModel::GetDawg(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_dawgs_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(index<sp/>&lt;<sp/>word_dawgs_-&gt;size());</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*word_dawgs_)[index];</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(index<sp/>&lt;<sp/>cntxt_-&gt;TesseractObject()-&gt;getDict().NumDawgs());</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1a9dbf36a8e91bc7f2f9055c34d1ae1604" kindref="member">TesseractObject</ref>()-&gt;<ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().<ref refid="classtesseract_1_1_dict_1a774c3a8e23c9e4f47412936b304dae03" kindref="member" tooltip="Return i-th dawg pointer recorded in the dawgs_ vector. ">GetDawg</ref>(index);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/tess_lang_model.cpp"/>
  </compounddef>
</doxygen>
