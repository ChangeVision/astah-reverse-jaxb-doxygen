<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="protos_8cpp" kind="file">
    <compoundname>protos.cpp</compoundname>
    <includes refid="protos_8h" local="yes">protos.h</includes>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="freelist_8h" local="yes">freelist.h</includes>
    <includes refid="callcpp_8h" local="yes">callcpp.h</includes>
    <includes refid="tprintf_8h" local="yes">tprintf.h</includes>
    <includes refid="scanutils_8h" local="yes">scanutils.h</includes>
    <includes refid="globals_8h" local="yes">globals.h</includes>
    <includes refid="classify_8h" local="yes">classify.h</includes>
    <includes refid="params_8h" local="yes">params.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="27256">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="27257" relation="include">
        </childnode>
        <childnode refid="27270" relation="include">
        </childnode>
        <childnode refid="27253" relation="include">
        </childnode>
      </node>
      <node id="27236">
        <label>classify/protos.cpp</label>
        <link refid="protos.cpp"/>
        <childnode refid="27237" relation="include">
        </childnode>
        <childnode refid="27270" relation="include">
        </childnode>
        <childnode refid="27272" relation="include">
        </childnode>
        <childnode refid="27275" relation="include">
        </childnode>
        <childnode refid="27273" relation="include">
        </childnode>
        <childnode refid="27246" relation="include">
        </childnode>
        <childnode refid="27276" relation="include">
        </childnode>
        <childnode refid="27277" relation="include">
        </childnode>
        <childnode refid="27278" relation="include">
        </childnode>
        <childnode refid="27247" relation="include">
        </childnode>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27285" relation="include">
        </childnode>
      </node>
      <node id="27277">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="27270" relation="include">
        </childnode>
        <childnode refid="27265" relation="include">
        </childnode>
        <childnode refid="27253" relation="include">
        </childnode>
        <childnode refid="27243" relation="include">
        </childnode>
      </node>
      <node id="27295">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="27312">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27253" relation="include">
        </childnode>
      </node>
      <node id="27274">
        <label>assert.h</label>
      </node>
      <node id="27278">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="27279" relation="include">
        </childnode>
        <childnode refid="27294" relation="include">
        </childnode>
        <childnode refid="27278" relation="include">
        </childnode>
        <childnode refid="27296" relation="include">
        </childnode>
        <childnode refid="27315" relation="include">
        </childnode>
        <childnode refid="27317" relation="include">
        </childnode>
        <childnode refid="27318" relation="include">
        </childnode>
        <childnode refid="27320" relation="include">
        </childnode>
        <childnode refid="27319" relation="include">
        </childnode>
        <childnode refid="27298" relation="include">
        </childnode>
        <childnode refid="27316" relation="include">
        </childnode>
        <childnode refid="27271" relation="include">
        </childnode>
      </node>
      <node id="27252">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="27270">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="27245">
        <label>stdlib.h</label>
      </node>
      <node id="27240">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="27241" relation="include">
        </childnode>
      </node>
      <node id="27238">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
      </node>
      <node id="27276">
        <label>scanutils.h</label>
        <link refid="scanutils_8h"/>
      </node>
      <node id="27303">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="27250" relation="include">
        </childnode>
      </node>
      <node id="27257">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="27258" relation="include">
        </childnode>
        <childnode refid="27250" relation="include">
        </childnode>
        <childnode refid="27253" relation="include">
        </childnode>
        <childnode refid="27267" relation="include">
        </childnode>
        <childnode refid="27247" relation="include">
        </childnode>
        <childnode refid="27265" relation="include">
        </childnode>
        <childnode refid="27268" relation="include">
        </childnode>
        <childnode refid="27269" relation="include">
        </childnode>
      </node>
      <node id="27292">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
      </node>
      <node id="27260">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="27245" relation="include">
        </childnode>
        <childnode refid="27244" relation="include">
        </childnode>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27254" relation="include">
        </childnode>
        <childnode refid="27250" relation="include">
        </childnode>
        <childnode refid="27261" relation="include">
        </childnode>
      </node>
      <node id="27288">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27260" relation="include">
        </childnode>
        <childnode refid="27262" relation="include">
        </childnode>
      </node>
      <node id="27286">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27287" relation="include">
        </childnode>
        <childnode refid="27247" relation="include">
        </childnode>
      </node>
      <node id="27294">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="27242" relation="include">
        </childnode>
        <childnode refid="27295" relation="include">
        </childnode>
      </node>
      <node id="27304">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="27305" relation="include">
        </childnode>
        <childnode refid="27289" relation="include">
        </childnode>
      </node>
      <node id="27313">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="27297" relation="include">
        </childnode>
        <childnode refid="27242" relation="include">
        </childnode>
        <childnode refid="27248" relation="include">
        </childnode>
      </node>
      <node id="27298">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="27274" relation="include">
        </childnode>
        <childnode refid="27288" relation="include">
        </childnode>
        <childnode refid="27248" relation="include">
        </childnode>
        <childnode refid="27299" relation="include">
        </childnode>
        <childnode refid="27263" relation="include">
        </childnode>
        <childnode refid="27265" relation="include">
        </childnode>
        <childnode refid="27300" relation="include">
        </childnode>
      </node>
      <node id="27255">
        <label>stddef.h</label>
      </node>
      <node id="27264">
        <label>memory.h</label>
      </node>
      <node id="27321">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="27282" relation="include">
        </childnode>
      </node>
      <node id="27284">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27285" relation="include">
        </childnode>
      </node>
      <node id="27273">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="27274" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27247" relation="include">
        </childnode>
        <childnode refid="27263" relation="include">
        </childnode>
      </node>
      <node id="27250">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
      </node>
      <node id="27282">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27263" relation="include">
        </childnode>
      </node>
      <node id="27241">
        <label>limits.h</label>
      </node>
      <node id="27318">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="27287" relation="include">
        </childnode>
        <childnode refid="27281" relation="include">
        </childnode>
        <childnode refid="27319" relation="include">
        </childnode>
        <childnode refid="27285" relation="include">
        </childnode>
      </node>
      <node id="27296">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="27258" relation="include">
        </childnode>
        <childnode refid="27297" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27295" relation="include">
        </childnode>
        <childnode refid="27280" relation="include">
        </childnode>
        <childnode refid="27298" relation="include">
        </childnode>
        <childnode refid="27311" relation="include">
        </childnode>
        <childnode refid="27313" relation="include">
        </childnode>
        <childnode refid="27265" relation="include">
        </childnode>
        <childnode refid="27314" relation="include">
        </childnode>
      </node>
      <node id="27291">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="27285" relation="include">
        </childnode>
      </node>
      <node id="27307">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="27290" relation="include">
        </childnode>
      </node>
      <node id="27302">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27260" relation="include">
        </childnode>
        <childnode refid="27262" relation="include">
        </childnode>
      </node>
      <node id="27268">
        <label>pthread.h</label>
      </node>
      <node id="27244">
        <label>string.h</label>
      </node>
      <node id="27266">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="27263" relation="include">
        </childnode>
      </node>
      <node id="27263">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="27264" relation="include">
        </childnode>
        <childnode refid="27244" relation="include">
        </childnode>
      </node>
      <node id="27242">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27244" relation="include">
        </childnode>
        <childnode refid="27245" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27246" relation="include">
        </childnode>
        <childnode refid="27256" relation="include">
        </childnode>
      </node>
      <node id="27289">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="27285" relation="include">
        </childnode>
        <childnode refid="27290" relation="include">
        </childnode>
        <childnode refid="27252" relation="include">
        </childnode>
        <childnode refid="27292" relation="include">
        </childnode>
        <childnode refid="27246" relation="include">
        </childnode>
      </node>
      <node id="27301">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
      </node>
      <node id="27249">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
      </node>
      <node id="27269">
        <label>semaphore.h</label>
      </node>
      <node id="27305">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="27306" relation="include">
        </childnode>
        <childnode refid="27307" relation="include">
        </childnode>
        <childnode refid="27301" relation="include">
        </childnode>
        <childnode refid="27289" relation="include">
        </childnode>
        <childnode refid="27303" relation="include">
        </childnode>
        <childnode refid="27292" relation="include">
        </childnode>
      </node>
      <node id="27300">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="27247" relation="include">
        </childnode>
        <childnode refid="27301" relation="include">
        </childnode>
        <childnode refid="27302" relation="include">
        </childnode>
        <childnode refid="27253" relation="include">
        </childnode>
        <childnode refid="27303" relation="include">
        </childnode>
        <childnode refid="27304" relation="include">
        </childnode>
        <childnode refid="27308" relation="include">
        </childnode>
      </node>
      <node id="27308">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27309" relation="include">
        </childnode>
        <childnode refid="27300" relation="include">
        </childnode>
      </node>
      <node id="27261">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="27250" relation="include">
        </childnode>
      </node>
      <node id="27283">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27280" relation="include">
        </childnode>
        <childnode refid="27284" relation="include">
        </childnode>
        <childnode refid="27286" relation="include">
        </childnode>
        <childnode refid="27247" relation="include">
        </childnode>
      </node>
      <node id="27258">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="27259" relation="include">
        </childnode>
        <childnode refid="27246" relation="include">
        </childnode>
        <childnode refid="27263" relation="include">
        </childnode>
        <childnode refid="27265" relation="include">
        </childnode>
        <childnode refid="27248" relation="include">
        </childnode>
      </node>
      <node id="27271">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="27249" relation="include">
        </childnode>
        <childnode refid="27250" relation="include">
        </childnode>
        <childnode refid="27248" relation="include">
        </childnode>
      </node>
      <node id="27306">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="27290" relation="include">
        </childnode>
        <childnode refid="27307" relation="include">
        </childnode>
      </node>
      <node id="27285">
        <label>math.h</label>
      </node>
      <node id="27262">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="27250" relation="include">
        </childnode>
      </node>
      <node id="27310">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="27290" relation="include">
        </childnode>
      </node>
      <node id="27272">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27273" relation="include">
        </childnode>
      </node>
      <node id="27293">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="27285" relation="include">
        </childnode>
        <childnode refid="27287" relation="include">
        </childnode>
      </node>
      <node id="27280">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="27242" relation="include">
        </childnode>
        <childnode refid="27249" relation="include">
        </childnode>
      </node>
      <node id="27316">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="27287" relation="include">
        </childnode>
        <childnode refid="27243" relation="include">
        </childnode>
      </node>
      <node id="27247">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27248" relation="include">
        </childnode>
        <childnode refid="27253" relation="include">
        </childnode>
      </node>
      <node id="27248">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27245" relation="include">
        </childnode>
        <childnode refid="27249" relation="include">
        </childnode>
        <childnode refid="27250" relation="include">
        </childnode>
        <childnode refid="27251" relation="include">
        </childnode>
        <childnode refid="27252" relation="include">
        </childnode>
      </node>
      <node id="27311">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="27248" relation="include">
        </childnode>
        <childnode refid="27247" relation="include">
        </childnode>
        <childnode refid="27298" relation="include">
        </childnode>
        <childnode refid="27312" relation="include">
        </childnode>
        <childnode refid="27263" relation="include">
        </childnode>
      </node>
      <node id="27254">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="27255" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
      </node>
      <node id="27237">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="27238" relation="include">
        </childnode>
        <childnode refid="27242" relation="include">
        </childnode>
        <childnode refid="27263" relation="include">
        </childnode>
        <childnode refid="27271" relation="include">
        </childnode>
        <childnode refid="27247" relation="include">
        </childnode>
      </node>
      <node id="27275">
        <label>freelist.h</label>
        <link refid="freelist_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
      </node>
      <node id="27315">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="27316" relation="include">
        </childnode>
      </node>
      <node id="27259">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27260" relation="include">
        </childnode>
        <childnode refid="27262" relation="include">
        </childnode>
      </node>
      <node id="27265">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="27250" relation="include">
        </childnode>
        <childnode refid="27251" relation="include">
        </childnode>
        <childnode refid="27253" relation="include">
        </childnode>
        <childnode refid="27249" relation="include">
        </childnode>
        <childnode refid="27263" relation="include">
        </childnode>
        <childnode refid="27266" relation="include">
        </childnode>
      </node>
      <node id="27297">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="27259" relation="include">
        </childnode>
        <childnode refid="27298" relation="include">
        </childnode>
        <childnode refid="27247" relation="include">
        </childnode>
        <childnode refid="27249" relation="include">
        </childnode>
      </node>
      <node id="27317">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="27248" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27263" relation="include">
        </childnode>
      </node>
      <node id="27290">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27285" relation="include">
        </childnode>
        <childnode refid="27259" relation="include">
        </childnode>
        <childnode refid="27291" relation="include">
        </childnode>
      </node>
      <node id="27279">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="27280" relation="include">
        </childnode>
        <childnode refid="27281" relation="include">
        </childnode>
        <childnode refid="27243" relation="include">
        </childnode>
      </node>
      <node id="27299">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="27246">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="27247" relation="include">
        </childnode>
      </node>
      <node id="27320">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="27247" relation="include">
        </childnode>
        <childnode refid="27281" relation="include">
        </childnode>
        <childnode refid="27321" relation="include">
        </childnode>
      </node>
      <node id="27239">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="27240" relation="include">
        </childnode>
      </node>
      <node id="27243">
        <label>stdio.h</label>
      </node>
      <node id="27281">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="27248" relation="include">
        </childnode>
        <childnode refid="27282" relation="include">
        </childnode>
        <childnode refid="27283" relation="include">
        </childnode>
        <childnode refid="27237" relation="include">
        </childnode>
        <childnode refid="27292" relation="include">
        </childnode>
        <childnode refid="27265" relation="include">
        </childnode>
      </node>
      <node id="27267">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
        <childnode refid="27246" relation="include">
        </childnode>
      </node>
      <node id="27319">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27239" relation="include">
        </childnode>
      </node>
      <node id="27253">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27244" relation="include">
        </childnode>
        <childnode refid="27240" relation="include">
        </childnode>
        <childnode refid="27254" relation="include">
        </childnode>
      </node>
      <node id="27287">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="27288" relation="include">
        </childnode>
        <childnode refid="27289" relation="include">
        </childnode>
        <childnode refid="27293" relation="include">
        </childnode>
      </node>
      <node id="27251">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="27243" relation="include">
        </childnode>
        <childnode refid="27244" relation="include">
        </childnode>
      </node>
      <node id="27314">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="27298" relation="include">
        </childnode>
        <childnode refid="27247" relation="include">
        </childnode>
        <childnode refid="27265" relation="include">
        </childnode>
      </node>
      <node id="27309">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="27310" relation="include">
        </childnode>
        <childnode refid="27260" relation="include">
        </childnode>
        <childnode refid="27254" relation="include">
        </childnode>
        <childnode refid="27289" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="user-defined">
      <header>AddConfigToClass</header>
      <description><para>Add a new config to this class. Malloc new space and copy the old configs if necessary. Return the config id for the new config.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>The class to add to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="protos_8cpp_1a922ce6793eb82e1f8224ed372b75aa24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddConfigToClass</definition>
        <argsstring>(CLASS_TYPE Class)</argsstring>
        <name>AddConfigToClass</name>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="63" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="63" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>AddProtoToClass</header>
      <description><para>Add a new proto to this class. Malloc new space and copy the old protos if necessary. Return the proto id for the new proto.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>The class to add to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="protos_8cpp_1a8a197adbd5718ec39c2b6a4a74694aa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int AddProtoToClass</definition>
        <argsstring>(CLASS_TYPE Class)</argsstring>
        <name>AddProtoToClass</name>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="99" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="99" bodyend="131"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>ClassConfigLength</header>
      <description><para>Return the length of all the protos in this class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>The class to add to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Config</parametername>
</parameternamelist>
<parameterdescription>
<para>FIXME </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="protos_8cpp_1a86edcc690e99519f70be27f330896d0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 ClassConfigLength</definition>
        <argsstring>(CLASS_TYPE Class, BIT_VECTOR Config)</argsstring>
        <name>ClassConfigLength</name>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>Config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="142" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="142" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>ClassProtoLength</header>
      <description><para>Return the length of all the protos in this class.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>The class to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="protos_8cpp_1a94f965f81092518090eed62f5d64973f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 ClassProtoLength</definition>
        <argsstring>(CLASS_TYPE Class)</argsstring>
        <name>ClassProtoLength</name>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="163" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="163" bodyend="171"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>CopyProto</header>
      <description><para>Copy the first proto into the second.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="protos_8cpp_1a070f62ac01ae76642e6793410da68770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CopyProto</definition>
        <argsstring>(PROTO Src, PROTO Dest)</argsstring>
        <name>CopyProto</name>
        <param>
          <type><ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref></type>
          <declname>Src</declname>
        </param>
        <param>
          <type><ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref></type>
          <declname>Dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="182" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="182" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="protos_8cpp_1ac0d58978bbcf0c732ae94fb554bccd3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FillABC</definition>
        <argsstring>(PROTO Proto)</argsstring>
        <name>FillABC</name>
        <param>
          <type><ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref></type>
          <declname>Proto</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="198" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="198" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="protos_8cpp_1a751a34c0eb8b7dcba1439287dd3eb3d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeClass</definition>
        <argsstring>(CLASS_TYPE Class)</argsstring>
        <name>FreeClass</name>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="215" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="215" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="protos_8cpp_1a8c42a896530af773ecb7de6ea5186b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeClassFields</definition>
        <argsstring>(CLASS_TYPE Class)</argsstring>
        <name>FreeClassFields</name>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="228" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="228" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="protos_8cpp_1ae1b779964924a618a307d8d6f0ec6dff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
        <definition>CLASS_TYPE NewClass</definition>
        <argsstring>(int NumProtos, int NumConfigs)</argsstring>
        <name>NewClass</name>
        <param>
          <type>int</type>
          <declname>NumProtos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NumConfigs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="248" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="248" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="protos_8cpp_1a5c0c05c9986fd218a772e9acca9b02f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintProtos</definition>
        <argsstring>(CLASS_TYPE Class)</argsstring>
        <name>PrintProtos</name>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="273" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="273" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="protos_8cpp_1a46b69bc764f35e3e56c3a429cab6a4b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReadClassFromFile</definition>
        <argsstring>(FILE *File, UNICHAR_ID unichar_id)</argsstring>
        <name>ReadClassFromFile</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>unichar_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ReadClassFromFile</para><para>Read in a class description (protos and configs) from a file. Update the class structure record. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="321" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="321" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="protos_8cpp_1aabae696f18e1ac0f5a062849154dbd9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReadConfigs</definition>
        <argsstring>(register FILE *File, CLASS_TYPE Class)</argsstring>
        <name>ReadConfigs</name>
        <param>
          <type>register FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ReadConfigs</para><para>Read the prototype configurations for this class from a file. Read the requested number of lines. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="337" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="337" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="protos_8cpp_1ac4837d0ecf5d8a7d6c292605f5451ddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReadProtos</definition>
        <argsstring>(register FILE *File, CLASS_TYPE Class)</argsstring>
        <name>ReadProtos</name>
        <param>
          <type>register FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ReadProtos</para><para>Read in all the prototype information from a file. Read the number of lines requested. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="367" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="367" bodyend="387"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>SplitProto</header>
      <description><para>Add a new proto to this class. Malloc new space and copy the old protos if necessary. Return the proto id for the new proto. Update all configurations so that each config which contained the specified old proto will also contain the new proto. The caller is responsible for actually filling in the appropriate proto params. </para></description>
      <memberdef kind="function" id="protos_8cpp_1a1131c1c4e71727737b67abf1a154e456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SplitProto</definition>
        <argsstring>(CLASS_TYPE Class, int OldPid)</argsstring>
        <name>SplitProto</name>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <param>
          <type>int</type>
          <declname>OldPid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="399" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="399" bodyend="412"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>WriteOldConfigFile</header>
      <description><para><xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Write the configs in the given class to the specified file in the old config format.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to write to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>The class to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="protos_8cpp_1a8c25f68242f25174eaa1f7f78b28582e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteOldConfigFile</definition>
        <argsstring>(FILE *File, CLASS_TYPE Class)</argsstring>
        <name>WriteOldConfigFile</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="425" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="425" bodyend="444"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>WriteOldProtoFile</header>
      <description><para><xrefsect id="deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Write the protos in the given class to the specified file in the old proto format.</para></xrefdescription></xrefsect></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>File</parametername>
</parameternamelist>
<parameterdescription>
<para>The file to write to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Class</parametername>
</parameternamelist>
<parameterdescription>
<para>The class to write </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="protos_8cpp_1a4c7787282d7df33cf0d2d24b37922f65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WriteOldProtoFile</definition>
        <argsstring>(FILE *File, CLASS_TYPE Class)</argsstring>
        <name>WriteOldProtoFile</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type><ref refid="protos_8h_1ac6dd4312d295c65a9165f4a5401c75f7" kindref="member">CLASS_TYPE</ref></type>
          <declname>Class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="457" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="457" bodyend="480"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="protos_8cpp_1a84b07ab4cf4e8b013de05ee603af79e8" prot="public" static="no">
        <name>PROTO_INCREMENT</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="42" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="protos_8cpp_1aab82a0eabce6034ba0e416fb1cd4757d" prot="public" static="no">
        <name>CONFIG_INCREMENT</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="43" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="protos_8cpp_1af35b41a7c6c170365c9d30744976d6b4" prot="public" static="no" mutable="no">
        <type><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_STRUCT</ref></type>
        <definition>CLASS_STRUCT TrainingData[MAX_NUM_CLASSES]</definition>
        <argsstring>[MAX_NUM_CLASSES]</argsstring>
        <name>TrainingData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="48" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/protos.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="protos_8cpp_1a5ddadf67f552ffa066ad799d55850d3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STRING_VAR</definition>
        <argsstring>(classify_training_file,&quot;MicroFeatures&quot;,&quot;Training file&quot;)</argsstring>
        <name>STRING_VAR</name>
        <param>
          <type>classify_training_file</type>
        </param>
        <param>
          <type>&quot;MicroFeatures&quot;</type>
        </param>
        <param>
          <type>&quot;Training file&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp" line="50" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-C-*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protos.c<sp/><sp/>(Formerly<sp/>protos.c)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Description:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mark<sp/>Seaman,<sp/>OCR<sp/>Technology</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/>Fri<sp/>Oct<sp/>16<sp/>14:37:00<sp/>1987</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Modified:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Mar<sp/><sp/>4<sp/>14:51:24<sp/>1991<sp/>(Dan<sp/>Johnson)<sp/>danj@hpgrlj</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Language:<sp/><sp/><sp/><sp/><sp/>C</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Package:<sp/><sp/><sp/><sp/><sp/><sp/>N/A</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Status:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reusable<sp/>Software<sp/>Component</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Copyright<sp/>1987,<sp/>Hewlett-Packard<sp/>Company.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>n<sp/>c<sp/>l<sp/>u<sp/>d<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="27"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="protos_8h" kindref="compound">protos.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freelist_8h" kindref="compound">freelist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callcpp_8h" kindref="compound">callcpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tprintf_8h" kindref="compound">tprintf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scanutils_8h" kindref="compound">scanutils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classify_8h" kindref="compound">classify.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROTO_INCREMENT<sp/><sp/><sp/>32</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CONFIG_INCREMENT<sp/><sp/>16</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>a<sp/>r<sp/>i<sp/>a<sp/>b<sp/>l<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="47"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_STRUCT</ref><sp/><ref refid="protos_8cpp_1af35b41a7c6c170365c9d30744976d6b4" kindref="member">TrainingData</ref>[<ref refid="protos_8h_1af1406da18bce098cdb14a2988d4ae5db" kindref="member">NUMBER_OF_CLASSES</ref>];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="params_8h_1abaa7778083ba376d8c70a59631d4a6ab" kindref="member">STRING_VAR</ref>(classify_training_file,<sp/></highlight><highlight class="stringliteral">&quot;MicroFeatures&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Training<sp/>file&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>u<sp/>n<sp/>c<sp/>t<sp/>i<sp/>o<sp/>n<sp/>s</highlight></codeline>
<codeline lineno="54"><highlight class="comment">----------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a922ce6793eb82e1f8224ed372b75aa24" kindref="member">AddConfigToClass</ref>(<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NewNumConfigs;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NewConfig;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxNumProtos;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>MaxNumProtos<sp/>=<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ae5646d21fd1609343ad276deac642757" kindref="member">MaxNumProtos</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref><sp/>&gt;=<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a35830ba1f40d31ef5bb3ad9d4e4596dc" kindref="member">MaxNumConfigs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>configs<sp/>in<sp/>CONFIG_INCREMENT<sp/>chunks<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>NewNumConfigs<sp/>=<sp/>(((Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a35830ba1f40d31ef5bb3ad9d4e4596dc" kindref="member">MaxNumConfigs</ref><sp/>+<sp/><ref refid="protos_8cpp_1aab82a0eabce6034ba0e416fb1cd4757d" kindref="member">CONFIG_INCREMENT</ref>)<sp/>/</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="protos_8cpp_1aab82a0eabce6034ba0e416fb1cd4757d" kindref="member">CONFIG_INCREMENT</ref>)<sp/>*<sp/><ref refid="protos_8cpp_1aab82a0eabce6034ba0e416fb1cd4757d" kindref="member">CONFIG_INCREMENT</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref><sp/>=</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="protos_8h_1a01152c0aa1c2675252db86b6790a0b6e" kindref="member">CONFIGS</ref>)<sp/><ref refid="emalloc_8cpp_1a92c09eaf43dcfc23a738fca16eb677b9" kindref="member">Erealloc</ref><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizeof<sp/>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref>)<sp/>*<sp/>NewNumConfigs);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a35830ba1f40d31ef5bb3ad9d4e4596dc" kindref="member">MaxNumConfigs</ref><sp/>=<sp/>NewNumConfigs;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>NewConfig<sp/>=<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref>++;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>Config<sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref><sp/>(MaxNumProtos);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[NewConfig]<sp/>=<sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a33e25946d45a1e004a961dc46cb5226a" kindref="member">zero_all_bits</ref><sp/>(Config,<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref><sp/>(MaxNumProtos));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NewConfig);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a8a197adbd5718ec39c2b6a4a74694aa4" kindref="member">AddProtoToClass</ref>(<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Bit;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NewNumProtos;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NewProto;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref><sp/>&gt;=<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ae5646d21fd1609343ad276deac642757" kindref="member">MaxNumProtos</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>protos<sp/>in<sp/>PROTO_INCREMENT<sp/>chunks<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>NewNumProtos<sp/>=<sp/>(((Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ae5646d21fd1609343ad276deac642757" kindref="member">MaxNumProtos</ref><sp/>+<sp/><ref refid="protos_8cpp_1a84b07ab4cf4e8b013de05ee603af79e8" kindref="member">PROTO_INCREMENT</ref>)<sp/>/</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="protos_8cpp_1a84b07ab4cf4e8b013de05ee603af79e8" kindref="member">PROTO_INCREMENT</ref>)<sp/>*<sp/><ref refid="protos_8cpp_1a84b07ab4cf4e8b013de05ee603af79e8" kindref="member">PROTO_INCREMENT</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1add1a2c4f7b02eb438c377242495013ef" kindref="member">Prototypes</ref><sp/>=<sp/>(<ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref>)<sp/><ref refid="emalloc_8cpp_1a92c09eaf43dcfc23a738fca16eb677b9" kindref="member">Erealloc</ref><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1add1a2c4f7b02eb438c377242495013ef" kindref="member">Prototypes</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizeof<sp/>(<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO_STRUCT</ref>)<sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewNumProtos);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ae5646d21fd1609343ad276deac642757" kindref="member">MaxNumProtos</ref><sp/>=<sp/>NewNumProtos;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Config<sp/>=<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[i];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[i]<sp/>=<sp/><ref refid="bitvec_8cpp_1a74773bfbcc12095f8d32c11b28e2577d" kindref="member">ExpandBitVector</ref><sp/>(Config,<sp/>NewNumProtos);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Bit<sp/>=<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>;<sp/>Bit<sp/>&lt;<sp/>NewNumProtos;<sp/>Bit++)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1a1209b8bb0fa7e6e7323cdb48b4165f0d" kindref="member">reset_bit</ref>(Config,<sp/>Bit);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>NewProto<sp/>=<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>++;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref><sp/>&gt;<sp/><ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Ouch!<sp/>number<sp/>of<sp/>protos<sp/>=<sp/>%d,<sp/>vs<sp/>max<sp/>of<sp/>%d!&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>,<sp/><ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NewProto);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="protos_8cpp_1a86edcc690e99519f70be27f330896d0a" kindref="member">ClassConfigLength</ref>(<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class,<sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>Config)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>Pid;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>TotalLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Pid<sp/>=<sp/>0;<sp/>Pid<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>;<sp/>Pid++)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bitvec_8h_1a76a50c5a99dea7be5315fe76246036ce" kindref="member">test_bit</ref><sp/>(Config,<sp/>Pid))<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TotalLength<sp/>+=<sp/>(<ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref><sp/>(Class,<sp/>Pid))-&gt;Length;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(TotalLength);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="protos_8cpp_1a94f965f81092518090eed62f5d64973f" kindref="member">ClassProtoLength</ref>(<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>Pid;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>TotalLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Pid<sp/>=<sp/>0;<sp/>Pid<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>;<sp/>Pid++)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>TotalLength<sp/>+=<sp/>(<ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref><sp/>(Class,<sp/>Pid))-&gt;Length;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(TotalLength);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a070f62ac01ae76642e6793410da68770" kindref="member">CopyProto</ref>(<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Src,<sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Dest)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>Dest-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref><sp/>=<sp/>Src-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>Dest-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref><sp/>=<sp/>Src-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>Dest-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref><sp/>=<sp/>Src-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>Dest-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref><sp/>=<sp/>Src-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>Dest-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1ae3211a725f109fbd40efc6cd154330f7" kindref="member">A</ref><sp/>=<sp/>Src-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1ae3211a725f109fbd40efc6cd154330f7" kindref="member">A</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>Dest-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a884630c87acb7606ac02516d1ea4ea9e" kindref="member">B</ref><sp/>=<sp/>Src-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a884630c87acb7606ac02516d1ea4ea9e" kindref="member">B</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>Dest-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a09d1e20c0a8362582127fa3554bb83ae" kindref="member">C</ref><sp/>=<sp/>Src-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a09d1e20c0a8362582127fa3554bb83ae" kindref="member">C</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>FillABC</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>Fill<sp/>in<sp/>Protos<sp/>A,<sp/>B,<sp/>C<sp/>fields<sp/>based<sp/>on<sp/>the<sp/>X,<sp/>Y,<sp/>Angle<sp/>fields.</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1ac0d58978bbcf0c732ae94fb554bccd3b" kindref="member">FillABC</ref>(<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Slope,<sp/>Intercept,<sp/>Normalizer;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>Slope<sp/>=<sp/>tan<sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref><sp/>*<sp/>2.0<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>Intercept<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref><sp/>-<sp/>Slope<sp/>*<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>Normalizer<sp/>=<sp/>1.0<sp/>/<sp/>sqrt<sp/>(Slope<sp/>*<sp/>Slope<sp/>+<sp/>1.0);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1ae3211a725f109fbd40efc6cd154330f7" kindref="member">A</ref><sp/>=<sp/>Slope<sp/>*<sp/>Normalizer;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a884630c87acb7606ac02516d1ea4ea9e" kindref="member">B</ref><sp/>=<sp/>-Normalizer;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a09d1e20c0a8362582127fa3554bb83ae" kindref="member">C</ref><sp/>=<sp/>Intercept<sp/>*<sp/>Normalizer;</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>FreeClass</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>Deallocate<sp/>the<sp/>memory<sp/>consumed<sp/>by<sp/>the<sp/>specified<sp/>class.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a751a34c0eb8b7dcba1439287dd3eb3d5" kindref="member">FreeClass</ref>(<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8cpp_1a8c42a896530af773ecb7de6ea5186b40" kindref="member">FreeClassFields</ref>(Class);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>Class;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>FreeClassFields</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>Deallocate<sp/>the<sp/>memory<sp/>consumed<sp/>by<sp/>subfields<sp/>of<sp/>the<sp/>specified<sp/>class.</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a8c42a896530af773ecb7de6ea5186b40" kindref="member">FreeClassFields</ref>(<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ae5646d21fd1609343ad276deac642757" kindref="member">MaxNumProtos</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="freelist_8cpp_1ab462a857e5edf360ae4881bcc92a0bcf" kindref="member">memfree</ref><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1add1a2c4f7b02eb438c377242495013ef" kindref="member">Prototypes</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a35830ba1f40d31ef5bb3ad9d4e4596dc" kindref="member">MaxNumConfigs</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8cpp_1adc1a7f52bb1fce0746e1e5725ad679f6" kindref="member">FreeBitVector</ref><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[i]);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="freelist_8cpp_1ab462a857e5edf360ae4881bcc92a0bcf" kindref="member">memfree</ref><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>NewClass</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/>Allocate<sp/>a<sp/>new<sp/>class<sp/>with<sp/>enough<sp/>memory<sp/>to<sp/>hold<sp/>the<sp/>specified<sp/>number</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>of<sp/>prototypes<sp/>and<sp/>configurations.</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/><ref refid="protos_8cpp_1ae1b779964924a618a307d8d6f0ec6dff" kindref="member">NewClass</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumProtos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumConfigs)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>Class<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_STRUCT</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumProtos<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1add1a2c4f7b02eb438c377242495013ef" kindref="member">Prototypes</ref><sp/>=<sp/>(<ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(NumProtos<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO_STRUCT</ref>));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumConfigs<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref><sp/>=<sp/>(<ref refid="protos_8h_1a01152c0aa1c2675252db86b6790a0b6e" kindref="member">CONFIGS</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(NumConfigs<sp/>*</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref>));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ae5646d21fd1609343ad276deac642757" kindref="member">MaxNumProtos</ref><sp/>=<sp/>NumProtos;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a35830ba1f40d31ef5bb3ad9d4e4596dc" kindref="member">MaxNumConfigs</ref><sp/>=<sp/>NumConfigs;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Class);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>PrintProtos</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>Print<sp/>the<sp/>list<sp/>of<sp/>prototypes<sp/>in<sp/>this<sp/>class<sp/>type.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a5c0c05c9986fd218a772e9acca9b02f6" kindref="member">PrintProtos</ref>(<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>Pid;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Pid<sp/>=<sp/>0;<sp/>Pid<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>;<sp/>Pid++)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Proto<sp/>%d:\t&quot;</highlight><highlight class="normal">,<sp/>Pid);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1aa80649ea9aed0280b09677f2f6868b5c" kindref="member">PrintProto</ref><sp/>(<ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref><sp/>(Class,<sp/>Pid));</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8h_1a2414185be2fdb0d265e6a37c223a4b7d" kindref="member">PrintProtoLine</ref><sp/>(<ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref><sp/>(Class,<sp/>Pid));</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cutil_8h_1a1185f064cc7bdd3f2a433da85a834c37" kindref="member">new_line</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a3cc9d5fe19f6d641fdfb133179ea70a4" kindref="member">Classify::ReadClassFile</ref>()<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/>FILE<sp/>*File;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>TextLine[<ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>unichar[<ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>training<sp/>data<sp/>from<sp/>&apos;%s&apos;<sp/>...&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;STRING&gt;(classify_training_file).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/>File<sp/>=<sp/><ref refid="cutil_8cpp_1ae3226f9d05617de0b7174bc7b7fce5b6" kindref="member">open_file</ref>(static_cast&lt;STRING&gt;(classify_training_file).</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets<sp/>(TextLine,<sp/><ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>,<sp/>File)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/>sscanf(TextLine,<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>unichar);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><ref refid="protos_8cpp_1a46b69bc764f35e3e56c3a429cab6a4b6" kindref="member">ReadClassFromFile</ref><sp/>(File,<sp/><ref refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" kindref="member">unicharset</ref>.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(unichar));</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>fgets(TextLine,<sp/><ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>,<sp/>File);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>fgets(TextLine,<sp/><ref refid="cutil_8h_1accaf8215779c8836f3f25f722e77550e" kindref="member">CHARS_PER_LINE</ref>,<sp/>File);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/>fclose(File);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><ref refid="cutil_8h_1a1185f064cc7bdd3f2a433da85a834c37" kindref="member">new_line</ref>();</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a46b69bc764f35e3e56c3a429cab6a4b6" kindref="member">ReadClassFromFile</ref>(FILE<sp/>*File,<sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>Class<sp/>=<sp/>&amp;TrainingData[unichar_id];</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><ref refid="protos_8cpp_1ac4837d0ecf5d8a7d6c292605f5451ddc" kindref="member">ReadProtos</ref>(File,<sp/>Class);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="protos_8cpp_1aabae696f18e1ac0f5a062849154dbd9f" kindref="member">ReadConfigs</ref>(File,<sp/>Class);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1aabae696f18e1ac0f5a062849154dbd9f" kindref="member">ReadConfigs</ref>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>FILE<sp/>*File,<sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>Cid;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>Wid;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/>ThisConfig;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumWords;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumConfigs;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>&amp;NumConfigs,<sp/>&amp;NumWords);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref><sp/>=<sp/>NumConfigs;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a35830ba1f40d31ef5bb3ad9d4e4596dc" kindref="member">MaxNumConfigs</ref><sp/>=<sp/>NumConfigs;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref><sp/>=</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="protos_8h_1a01152c0aa1c2675252db86b6790a0b6e" kindref="member">CONFIGS</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref>)<sp/>*<sp/>NumConfigs);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>NumWords<sp/>=<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Cid<sp/>=<sp/>0;<sp/>Cid<sp/>&lt;<sp/>NumConfigs;<sp/>Cid++)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>ThisConfig<sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref><sp/>(Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Wid<sp/>=<sp/>0;<sp/>Wid<sp/>&lt;<sp/>NumWords;<sp/>Wid++)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%x&quot;</highlight><highlight class="normal">,<sp/>&amp;ThisConfig[Wid]);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[Cid]<sp/>=<sp/>ThisConfig;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1ac4837d0ecf5d8a7d6c292605f5451ddc" kindref="member">ReadProtos</ref>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>FILE<sp/>*File,<sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>Pid;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NumProtos;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>&amp;NumProtos);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref><sp/>=<sp/>NumProtos;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ae5646d21fd1609343ad276deac642757" kindref="member">MaxNumProtos</ref><sp/>=<sp/>NumProtos;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1add1a2c4f7b02eb438c377242495013ef" kindref="member">Prototypes</ref><sp/>=<sp/>(<ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO_STRUCT</ref>)<sp/>*<sp/>NumProtos);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Pid<sp/>=<sp/>0;<sp/>Pid<sp/>&lt;<sp/>NumProtos;<sp/>Pid++)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/><ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref><sp/>(Class,<sp/>Pid);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>fscanf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%f<sp/>%f<sp/>%f<sp/>%f<sp/>%f<sp/>%f<sp/>%f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref>,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref>,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref>,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref>,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1ae3211a725f109fbd40efc6cd154330f7" kindref="member">A</ref>,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&amp;Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a884630c87acb7606ac02516d1ea4ea9e" kindref="member">B</ref>,<sp/>&amp;Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a09d1e20c0a8362582127fa3554bb83ae" kindref="member">C</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a1131c1c4e71727737b67abf1a154e456" kindref="member">SplitProto</ref>(<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OldPid)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NewPid;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>NewPid<sp/>=<sp/><ref refid="protos_8cpp_1a8a197adbd5718ec39c2b6a4a74694aa4" kindref="member">AddProtoToClass</ref><sp/>(Class);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>Config<sp/>=<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[i];</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bitvec_8h_1a76a50c5a99dea7be5315fe76246036ce" kindref="member">test_bit</ref><sp/>(Config,<sp/>OldPid))</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bitvec_8h_1ab02d606cf8dca49ccadb00248bdbafe9" kindref="member">SET_BIT</ref>(Config,<sp/>NewPid);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NewPid);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a8c25f68242f25174eaa1f7f78b28582e" kindref="member">WriteOldConfigFile</ref>(FILE<sp/>*File,<sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Cid,<sp/>Pid;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref>,<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Cid<sp/>=<sp/>0;<sp/>Cid<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref>;<sp/>Cid++)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;1<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>Config<sp/>=<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[Cid];</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Pid<sp/>=<sp/>0;<sp/>Pid<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>;<sp/>Pid++)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bitvec_8h_1a76a50c5a99dea7be5315fe76246036ce" kindref="member">test_bit</ref><sp/>(Config,<sp/>Pid))</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="protos_8cpp_1a4c7787282d7df33cf0d2d24b37922f65" kindref="member">WriteOldProtoFile</ref>(FILE<sp/>*File,<sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/>Class)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Pid;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/>Proto;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>old<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;6\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;linear<sp/><sp/><sp/>essential<sp/><sp/><sp/><sp/><sp/><sp/>-0.500000<sp/><sp/><sp/>0.500000\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;linear<sp/><sp/><sp/>essential<sp/><sp/><sp/><sp/><sp/><sp/>-0.250000<sp/><sp/><sp/>0.750000\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;linear<sp/><sp/><sp/>essential<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.000000<sp/><sp/><sp/>1.000000\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;circular<sp/>essential<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.000000<sp/><sp/><sp/>1.000000\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;linear<sp/><sp/><sp/>non-essential<sp/><sp/>-0.500000<sp/><sp/><sp/>0.500000\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;linear<sp/><sp/><sp/>non-essential<sp/><sp/>-0.500000<sp/><sp/><sp/>0.500000\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Pid<sp/>=<sp/>0;<sp/>Pid<sp/>&lt;<sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>;<sp/>Pid++)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/><ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref><sp/>(Class,<sp/>Pid);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;significant<sp/><sp/><sp/>elliptical<sp/><sp/><sp/>1\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>%9.6f<sp/>%9.6f<sp/>%9.6f<sp/>%9.6f<sp/>%9.6f<sp/>%9.6f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref>,<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref>,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref>,<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref>,<sp/>0.0,<sp/>0.0);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf<sp/>(File,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>%9.6f<sp/>%9.6f<sp/>%9.6f<sp/>%9.6f<sp/>%9.6f<sp/>%9.6f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0.0001,<sp/>0.0001,<sp/>0.0001,<sp/>0.0001,<sp/>0.0001,<sp/>0.0001);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/protos.cpp"/>
  </compounddef>
</doxygen>
