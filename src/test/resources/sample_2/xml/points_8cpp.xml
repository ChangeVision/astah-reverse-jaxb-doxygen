<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="points_8cpp" kind="file">
    <compoundname>points.cpp</compoundname>
    <includes refid="mfcpch_8h" local="yes">mfcpch.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includes refid="serialis_8h" local="yes">serialis.h</includes>
    <includes refid="points_8h" local="yes">points.h</includes>
    <incdepgraph>
      <node id="9944">
        <label>mfcpch.h</label>
        <link refid="mfcpch_8h"/>
      </node>
      <node id="9949">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="9945">
        <label>stdlib.h</label>
      </node>
      <node id="9954">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="9955" relation="include">
        </childnode>
      </node>
      <node id="9950">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="9945" relation="include">
        </childnode>
        <childnode refid="9948" relation="include">
        </childnode>
        <childnode refid="9947" relation="include">
        </childnode>
        <childnode refid="9951" relation="include">
        </childnode>
        <childnode refid="9956" relation="include">
        </childnode>
        <childnode refid="9957" relation="include">
        </childnode>
      </node>
      <node id="9943">
        <label>ccstruct/points.cpp</label>
        <link refid="points.cpp"/>
        <childnode refid="9944" relation="include">
        </childnode>
        <childnode refid="9945" relation="include">
        </childnode>
        <childnode refid="9946" relation="include">
        </childnode>
        <childnode refid="9949" relation="include">
        </childnode>
        <childnode refid="9950" relation="include">
        </childnode>
        <childnode refid="9958" relation="include">
        </childnode>
      </node>
      <node id="9952">
        <label>stddef.h</label>
      </node>
      <node id="9956">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="9953" relation="include">
        </childnode>
      </node>
      <node id="9955">
        <label>limits.h</label>
      </node>
      <node id="9962">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="9959" relation="include">
        </childnode>
      </node>
      <node id="9948">
        <label>string.h</label>
      </node>
      <node id="9957">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="9956" relation="include">
        </childnode>
      </node>
      <node id="9959">
        <label>math.h</label>
      </node>
      <node id="9961">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="9956" relation="include">
        </childnode>
      </node>
      <node id="9951">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="9952" relation="include">
        </childnode>
        <childnode refid="9953" relation="include">
        </childnode>
      </node>
      <node id="9960">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="9947" relation="include">
        </childnode>
        <childnode refid="9953" relation="include">
        </childnode>
        <childnode refid="9950" relation="include">
        </childnode>
        <childnode refid="9961" relation="include">
        </childnode>
      </node>
      <node id="9958">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="9947" relation="include">
        </childnode>
        <childnode refid="9959" relation="include">
        </childnode>
        <childnode refid="9960" relation="include">
        </childnode>
        <childnode refid="9962" relation="include">
        </childnode>
      </node>
      <node id="9953">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="9954" relation="include">
        </childnode>
      </node>
      <node id="9947">
        <label>stdio.h</label>
      </node>
      <node id="9946">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="9947" relation="include">
        </childnode>
        <childnode refid="9948" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="points_8cpp_1a53f643f86d802fc4b65b8cbb73f21622" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ELISTIZE</definition>
        <argsstring>(ICOORDELT) bool FCOORD</argsstring>
        <name>ELISTIZE</name>
        <param>
          <type><ref refid="class_i_c_o_o_r_d_e_l_t" kindref="compound">ICOORDELT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.cpp" line="27" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.cpp" bodystart="27" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="points_8cpp_1af02860f2d20840e2125c105b4d887de2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int sign</definition>
        <argsstring>(int x)</argsstring>
        <name>sign</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.cpp" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.c<sp/><sp/>(Formerly<sp/>coords.c)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Member<sp/>functions<sp/>for<sp/>coordinate<sp/>classes.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fri<sp/>Mar<sp/>15<sp/>08:58:17<sp/>GMT<sp/>1991</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>1991,<sp/>Hewlett-Packard<sp/>Ltd.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<ref refid="mfcpch_8h" kindref="compound">mfcpch.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//precompiled<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<ref refid="serialis_8h" kindref="compound">serialis.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<ref refid="points_8h" kindref="compound">points.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="elst_8h_1ab54325a3cfcd9bee58697d77e1902240" kindref="member">ELISTIZE</ref><sp/>(<ref refid="class_i_c_o_o_r_d_e_l_t" kindref="compound">ICOORDELT</ref>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//turn<sp/>to<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">bool<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>::normalise()<sp/>{<sp/><sp/></highlight><highlight class="comment">//Convert<sp/>to<sp/>unit<sp/>vec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>length<sp/>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0.0000000001)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>xcoord<sp/>/=<sp/>len;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>ycoord<sp/>/=<sp/>len;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>from<sp/>the<sp/>given<sp/>x,y,<sp/>shrinking<sp/>the<sp/>vector<sp/>to<sp/>fit<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d_1a202dcd2920b28d85c2338d28dac8c5fe" kindref="member" tooltip="Set from the given x,y, shrinking the vector to fit if needed. ">ICOORD::set_with_shrink</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fit<sp/>the<sp/>vector<sp/>into<sp/>an<sp/>ICOORD,<sp/>which<sp/>is<sp/>16<sp/>bit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_extent<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(abs(x),<sp/>abs(y));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_extent<sp/>&gt;<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>max_extent<sp/>/<sp/><ref refid="host_8h_1a3905e54374e49708219791e7d59c60fb" kindref="member">MAX_INT16</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref><sp/>=<sp/>x<sp/>/<sp/>factor;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref><sp/>=<sp/>y<sp/>/<sp/>factor;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>fortran/basic<sp/>sgn<sp/>function<sp/>returns<sp/>-1,<sp/>0,<sp/>1<sp/>if<sp/>x<sp/>&lt;<sp/>0,<sp/>x<sp/>==<sp/>0,<sp/>x<sp/>&gt;<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>respectively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sign(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d_1a3159371d913e1b05860ae0c274fda0f6" kindref="member">ICOORD::Serialize</ref>(FILE*<sp/>fp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref>),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref>),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d_1ae73dd714e26ceef74c3d1b552693c5a4" kindref="member">ICOORD::DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref>),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref>),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1ae7eeeca49954d4b13d269729f2fecd5a" kindref="member">ReverseN</ref>(&amp;<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref>));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1ae7eeeca49954d4b13d269729f2fecd5a" kindref="member">ReverseN</ref>(&amp;<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref>));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>for<sp/>iterating<sp/>over<sp/>the<sp/>pixels<sp/>in<sp/>a<sp/>vector<sp/>by<sp/>the<sp/>well-known</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bresenham<sp/>rendering<sp/>algorithm.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Starting<sp/>with<sp/>major/2<sp/>in<sp/>the<sp/>accumulator,<sp/>on<sp/>each<sp/>step<sp/>add<sp/>major_step,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>add<sp/>minor<sp/>to<sp/>the<sp/>accumulator.<sp/>When<sp/>the<sp/>accumulator<sp/>&gt;=<sp/>major</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>subtract<sp/>major<sp/>and<sp/>step<sp/>a<sp/>minor<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d_1a5e71450225ed82a910bdec74a95a2c6d" kindref="member">ICOORD::setup_render</ref>(<ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>*<sp/>major_step,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>*<sp/>minor_step,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>major,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>minor)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>abs_x<sp/>=<sp/>abs(<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>abs_y<sp/>=<sp/>abs(<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs_x<sp/>&gt;=<sp/>abs_y)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>X-direction<sp/>is<sp/>major.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>major_step-&gt;<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref><sp/>=<sp/>sign(<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>major_step-&gt;<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>minor_step-&gt;<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>minor_step-&gt;<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref><sp/>=<sp/>sign(<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>*major<sp/>=<sp/>abs_x;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>*minor<sp/>=<sp/>abs_y;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Y-direction<sp/>is<sp/>major.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>major_step-&gt;<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>major_step-&gt;<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref><sp/>=<sp/>sign(<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>minor_step-&gt;<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref><sp/>=<sp/>sign(<ref refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" kindref="member">xcoord</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>minor_step-&gt;<ref refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" kindref="member">ycoord</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>*major<sp/>=<sp/>abs_y;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>*minor<sp/>=<sp/>abs_x;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/points.cpp"/>
  </compounddef>
</doxygen>
