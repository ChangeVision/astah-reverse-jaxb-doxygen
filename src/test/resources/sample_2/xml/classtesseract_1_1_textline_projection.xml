<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classtesseract_1_1_textline_projection" kind="class" prot="public">
    <compoundname>tesseract::TextlineProjection</compoundname>
    <includes refid="textlineprojection_8h" local="no">textlineprojection.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesseract_1_1_textline_projection_1aa7b60f3bc776143fd65bfa9353a0862b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::scale_factor_</definition>
        <argsstring></argsstring>
        <name>scale_factor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="192" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_textline_projection_1a8e7a897c28c419ca2ba7c3effc1479a9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::x_origin_</definition>
        <argsstring></argsstring>
        <name>x_origin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="196" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_textline_projection_1ac98c44eba16d1cb2a081fecb65769b13" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::y_origin_</definition>
        <argsstring></argsstring>
        <name>y_origin_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="197" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_textline_projection_1a715b3d3c32da30fc1487512f7a244b97" prot="private" static="no" mutable="no">
        <type>Pix *</type>
        <definition>Pix* tesseract::TextlineProjection::pix_</definition>
        <argsstring></argsstring>
        <name>pix_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="201" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a5f31df35a173c0549f13ee7d5654912e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::TextlineProjection::TextlineProjection</definition>
        <argsstring>(int resolution)</argsstring>
        <name>TextlineProjection</name>
        <param>
          <type>int</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a4c272e561b9be50e091493c532396284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::TextlineProjection::~TextlineProjection</definition>
        <argsstring>()</argsstring>
        <name>~TextlineProjection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="38" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a813c0b50d88ccb86b6457fdd6bbe66e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TextlineProjection::ConstructProjection</definition>
        <argsstring>(TO_BLOCK *input_block, const FCOORD &amp;rotation, Pix *nontext_map)</argsstring>
        <name>ConstructProjection</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>input_block</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>nontext_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="47" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="58" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1aac6c563b3b6bc5f903f7c4b0061daf32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TextlineProjection::PlotGradedBlobs</definition>
        <argsstring>(BLOBNBOX_LIST *blobs, ScrollView *win)</argsstring>
        <name>PlotGradedBlobs</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>blobs</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>win</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="78" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1af2d55a393da9c25220a8a3ec6ca861d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TextlineProjection::MoveNonTextlineBlobs</definition>
        <argsstring>(BLOBNBOX_LIST *blobs, BLOBNBOX_LIST *small_blobs) const </argsstring>
        <name>MoveNonTextlineBlobs</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>blobs</declname>
        </param>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>small_blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="100" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a1e581a8489ec184b8ba5fbee9aa9f8c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TextlineProjection::DisplayProjection</definition>
        <argsstring>() const </argsstring>
        <name>DisplayProjection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="61" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="117" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1aa72325e896b00272a6486ab4c57c54d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::DistanceOfBoxFromPartition</definition>
        <argsstring>(const TBOX &amp;box, const ColPartition &amp;part, const DENORM *denorm, bool debug) const </argsstring>
        <name>DistanceOfBoxFromPartition</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> &amp;</type>
          <declname>part</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="67" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="154" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a6093b6f965fd63e9688b8719d556a68d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::DistanceOfBoxFromBox</definition>
        <argsstring>(const TBOX &amp;from_box, const TBOX &amp;to_box, bool horizontal_textline, const DENORM *denorm, bool debug) const </argsstring>
        <name>DistanceOfBoxFromBox</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>from_box</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>to_box</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>horizontal_textline</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="78" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="194" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a8a1de7e99cec9c448b63d3627892429b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::VerticalDistance</definition>
        <argsstring>(bool debug, int x, int y1, int y2) const </argsstring>
        <name>VerticalDistance</name>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="88" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="273" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1ac1e6deb3faabc127c87d7d9a0be59ed2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::HorizontalDistance</definition>
        <argsstring>(bool debug, int x1, int x2, int y) const </argsstring>
        <name>HorizontalDistance</name>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="306" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1ad73a87b2d4bccbc8f5f6113481b9c0e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TextlineProjection::BoxOutOfHTextline</definition>
        <argsstring>(const TBOX &amp;box, const DENORM *denorm, bool debug) const </argsstring>
        <name>BoxOutOfHTextline</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="97" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="338" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1adf0a59d6215cb6cb5fd906c323dc9c3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::EvaluateColPartition</definition>
        <argsstring>(const ColPartition &amp;part, const DENORM *denorm, bool debug) const </argsstring>
        <name>EvaluateColPartition</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> &amp;</type>
          <declname>part</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="105" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="359" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a43ff05bad93c8d1cbf600ed442315ce5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::EvaluateBox</definition>
        <argsstring>(const TBOX &amp;box, const DENORM *denorm, bool debug) const </argsstring>
        <name>EvaluateBox</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="124" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="410" bodyend="413"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a97563e2136324e24b4fc32248a28fbc4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::EvaluateBoxInternal</definition>
        <argsstring>(const TBOX &amp;box, const DENORM *denorm, bool debug, int *hgrad1, int *hgrad2, int *vgrad1, int *vgrad2) const </argsstring>
        <name>EvaluateBoxInternal</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>hgrad1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>hgrad2</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>vgrad1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>vgrad2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="130" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="418" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a9db0fb01d54e9b3e751335ff3018e687" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::BestMeanGradientInRow</definition>
        <argsstring>(const DENORM *denorm, inT16 min_x, inT16 max_x, inT16 y, bool best_is_max) const </argsstring>
        <name>BestMeanGradientInRow</name>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>min_x</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>max_x</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>best_is_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="139" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="458" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a96278931c566376dbd98ccaf07f9acb0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::BestMeanGradientInColumn</definition>
        <argsstring>(const DENORM *denorm, inT16 x, inT16 min_y, inT16 max_y, bool best_is_max) const </argsstring>
        <name>BestMeanGradientInColumn</name>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>min_y</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>max_y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>best_is_max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="148" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="485" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a4b8206f03338638e9237c110201818fa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::MeanPixelsInLineSegment</definition>
        <argsstring>(const DENORM *denorm, int offset, TPOINT start_pt, TPOINT end_pt) const </argsstring>
        <name>MeanPixelsInLineSegment</name>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref></type>
          <declname>start_pt</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref></type>
          <declname>end_pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="161" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="516" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a5faeab9be218d7eeb627641ec742b283" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TextlineProjection::IncrementRectangle8Bit</definition>
        <argsstring>(const TBOX &amp;box)</argsstring>
        <name>IncrementRectangle8Bit</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="166" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="626" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a9bfe0a51e808171391e708fd8775d250" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TextlineProjection::ProjectBlobs</definition>
        <argsstring>(BLOBNBOX_LIST *blobs, const FCOORD &amp;rotation, const TBOX &amp;image_box, Pix *nontext_map)</argsstring>
        <name>ProjectBlobs</name>
        <param>
          <type>BLOBNBOX_LIST *</type>
          <declname>blobs</declname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>image_box</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>nontext_map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="173" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="649" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a9fb55f44a37eb0d7321e63bb763ef0fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TextlineProjection::PadBlobBox</definition>
        <argsstring>(BLOBNBOX *blob, TBOX *bbox)</argsstring>
        <name>PadBlobBox</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="178" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="679" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1aba45bea8f9f071670ef44578e95aba92" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TextlineProjection::TransformToPixCoords</definition>
        <argsstring>(const DENORM *denorm, TPOINT *pt) const </argsstring>
        <name>TransformToPixCoords</name>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="182" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="740" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a04c4892df56b6109dd99eb6c493acb2c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TextlineProjection::TruncateToImageBounds</definition>
        <argsstring>(TPOINT *pt) const </argsstring>
        <name>TruncateToImageBounds</name>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> *</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="185" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="751" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1a5dc03ea4f77a68c16bff0a7d2e7a9620" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::ImageXToProjectionX</definition>
        <argsstring>(int x) const </argsstring>
        <name>ImageXToProjectionX</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="188" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="757" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_textline_projection_1ac56970209ddbfba704fc920da39ceb85" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TextlineProjection::ImageYToProjectionY</definition>
        <argsstring>(int y) const </argsstring>
        <name>ImageYToProjectionY</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="189" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="761" bodyend="764"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.h" bodystart="33" bodyend="202"/>
    <listofallmembers>
      <member refid="classtesseract_1_1_textline_projection_1a96278931c566376dbd98ccaf07f9acb0" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>BestMeanGradientInColumn</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a9db0fb01d54e9b3e751335ff3018e687" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>BestMeanGradientInRow</name></member>
      <member refid="classtesseract_1_1_textline_projection_1ad73a87b2d4bccbc8f5f6113481b9c0e2" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>BoxOutOfHTextline</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a813c0b50d88ccb86b6457fdd6bbe66e5" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>ConstructProjection</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a1e581a8489ec184b8ba5fbee9aa9f8c9" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>DisplayProjection</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a6093b6f965fd63e9688b8719d556a68d" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>DistanceOfBoxFromBox</name></member>
      <member refid="classtesseract_1_1_textline_projection_1aa72325e896b00272a6486ab4c57c54d3" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>DistanceOfBoxFromPartition</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a43ff05bad93c8d1cbf600ed442315ce5" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>EvaluateBox</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a97563e2136324e24b4fc32248a28fbc4" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>EvaluateBoxInternal</name></member>
      <member refid="classtesseract_1_1_textline_projection_1adf0a59d6215cb6cb5fd906c323dc9c3d" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>EvaluateColPartition</name></member>
      <member refid="classtesseract_1_1_textline_projection_1ac1e6deb3faabc127c87d7d9a0be59ed2" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>HorizontalDistance</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a5dc03ea4f77a68c16bff0a7d2e7a9620" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>ImageXToProjectionX</name></member>
      <member refid="classtesseract_1_1_textline_projection_1ac56970209ddbfba704fc920da39ceb85" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>ImageYToProjectionY</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a5faeab9be218d7eeb627641ec742b283" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>IncrementRectangle8Bit</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a4b8206f03338638e9237c110201818fa" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>MeanPixelsInLineSegment</name></member>
      <member refid="classtesseract_1_1_textline_projection_1af2d55a393da9c25220a8a3ec6ca861d4" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>MoveNonTextlineBlobs</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a9fb55f44a37eb0d7321e63bb763ef0fb" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>PadBlobBox</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a715b3d3c32da30fc1487512f7a244b97" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>pix_</name></member>
      <member refid="classtesseract_1_1_textline_projection_1aac6c563b3b6bc5f903f7c4b0061daf32" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>PlotGradedBlobs</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a9bfe0a51e808171391e708fd8775d250" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>ProjectBlobs</name></member>
      <member refid="classtesseract_1_1_textline_projection_1aa7b60f3bc776143fd65bfa9353a0862b" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>scale_factor_</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a5f31df35a173c0549f13ee7d5654912e" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>TextlineProjection</name></member>
      <member refid="classtesseract_1_1_textline_projection_1aba45bea8f9f071670ef44578e95aba92" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>TransformToPixCoords</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a04c4892df56b6109dd99eb6c493acb2c" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>TruncateToImageBounds</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a8a1de7e99cec9c448b63d3627892429b" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>VerticalDistance</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a8e7a897c28c419ca2ba7c3effc1479a9" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>x_origin_</name></member>
      <member refid="classtesseract_1_1_textline_projection_1ac98c44eba16d1cb2a081fecb65769b13" prot="private" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>y_origin_</name></member>
      <member refid="classtesseract_1_1_textline_projection_1a4c272e561b9be50e091493c532396284" prot="public" virt="non-virtual"><scope>tesseract::TextlineProjection</scope><name>~TextlineProjection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
