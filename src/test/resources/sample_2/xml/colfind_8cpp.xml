<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="colfind_8cpp" kind="file">
    <compoundname>colfind.cpp</compoundname>
    <includes refid="colfind_8h" local="yes">colfind.h</includes>
    <includes refid="ccnontextdetect_8h" local="yes">ccnontextdetect.h</includes>
    <includes refid="colpartition_8h" local="yes">colpartition.h</includes>
    <includes refid="colpartitionset_8h" local="yes">colpartitionset.h</includes>
    <includes refid="equationdetectbase_8h" local="yes">equationdetectbase.h</includes>
    <includes refid="linefind_8h" local="yes">linefind.h</includes>
    <includes refid="normalis_8h" local="yes">normalis.h</includes>
    <includes refid="strokewidth_8h" local="yes">strokewidth.h</includes>
    <includes refid="blobbox_8h" local="yes">blobbox.h</includes>
    <includes refid="scrollview_8h" local="yes">scrollview.h</includes>
    <includes refid="tablefind_8h" local="yes">tablefind.h</includes>
    <includes refid="params_8h" local="yes">params.h</includes>
    <includes refid="workingpartset_8h" local="yes">workingpartset.h</includes>
    <incdepgraph>
      <node id="37136">
        <label>strokewidth.h</label>
        <link refid="strokewidth_8h"/>
        <childnode refid="37110" relation="include">
        </childnode>
        <childnode refid="37126" relation="include">
        </childnode>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37132" relation="include">
        </childnode>
      </node>
      <node id="37074">
        <label>colfind.h</label>
        <link refid="colfind_8h"/>
        <childnode refid="37075" relation="include">
        </childnode>
        <childnode refid="37128" relation="include">
        </childnode>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37117" relation="include">
        </childnode>
        <childnode refid="37132" relation="include">
        </childnode>
      </node>
      <node id="37110">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="37078" relation="include">
        </childnode>
        <childnode refid="37111" relation="include">
        </childnode>
        <childnode refid="37112" relation="include">
        </childnode>
        <childnode refid="37117" relation="include">
        </childnode>
        <childnode refid="37124" relation="include">
        </childnode>
      </node>
      <node id="37125">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="37126" relation="include">
        </childnode>
        <childnode refid="37078" relation="include">
        </childnode>
        <childnode refid="37095" relation="include">
        </childnode>
        <childnode refid="37111" relation="include">
        </childnode>
        <childnode refid="37099" relation="include">
        </childnode>
        <childnode refid="37077" relation="include">
        </childnode>
      </node>
      <node id="37100">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="37077">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="37078" relation="include">
        </childnode>
        <childnode refid="37091" relation="include">
        </childnode>
        <childnode refid="37099" relation="include">
        </childnode>
        <childnode refid="37101" relation="include">
        </childnode>
        <childnode refid="37109" relation="include">
        </childnode>
      </node>
      <node id="37124">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37080" relation="include">
        </childnode>
        <childnode refid="37101" relation="include">
        </childnode>
      </node>
      <node id="37084">
        <label>stdlib.h</label>
      </node>
      <node id="37081">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="37082" relation="include">
        </childnode>
      </node>
      <node id="37137">
        <label>tablefind.h</label>
        <link refid="tablefind_8h"/>
        <childnode refid="37129" relation="include">
        </childnode>
        <childnode refid="37095" relation="include">
        </childnode>
        <childnode refid="37099" relation="include">
        </childnode>
      </node>
      <node id="37108">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="37088" relation="include">
        </childnode>
      </node>
      <node id="37109">
        <label>allheaders.h</label>
      </node>
      <node id="37101">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
      </node>
      <node id="37083">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="37084" relation="include">
        </childnode>
        <childnode refid="37085" relation="include">
        </childnode>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37086" relation="include">
        </childnode>
        <childnode refid="37088" relation="include">
        </childnode>
        <childnode refid="37089" relation="include">
        </childnode>
      </node>
      <node id="37078">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37080" relation="include">
        </childnode>
        <childnode refid="37083" relation="include">
        </childnode>
        <childnode refid="37090" relation="include">
        </childnode>
      </node>
      <node id="37113">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="37091" relation="include">
        </childnode>
        <childnode refid="37099" relation="include">
        </childnode>
      </node>
      <node id="37134">
        <label>equationdetectbase.h</label>
        <link refid="equationdetectbase_8h"/>
      </node>
      <node id="37087">
        <label>stddef.h</label>
      </node>
      <node id="37088">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="37080" relation="include">
        </childnode>
      </node>
      <node id="37122">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="37120" relation="include">
        </childnode>
        <childnode refid="37095" relation="include">
        </childnode>
        <childnode refid="37093" relation="include">
        </childnode>
        <childnode refid="37099" relation="include">
        </childnode>
        <childnode refid="37101" relation="include">
        </childnode>
        <childnode refid="37123" relation="include">
        </childnode>
      </node>
      <node id="37082">
        <label>limits.h</label>
      </node>
      <node id="37076">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="37077" relation="include">
        </childnode>
        <childnode refid="37110" relation="include">
        </childnode>
        <childnode refid="37107" relation="include">
        </childnode>
        <childnode refid="37125" relation="include">
        </childnode>
      </node>
      <node id="37096">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="37094" relation="include">
        </childnode>
      </node>
      <node id="37097">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="37093" relation="include">
        </childnode>
      </node>
      <node id="37073">
        <label>textord/colfind.cpp</label>
        <link refid="colfind.cpp"/>
        <childnode refid="37074" relation="include">
        </childnode>
        <childnode refid="37133" relation="include">
        </childnode>
        <childnode refid="37130" relation="include">
        </childnode>
        <childnode refid="37131" relation="include">
        </childnode>
        <childnode refid="37134" relation="include">
        </childnode>
        <childnode refid="37127" relation="include">
        </childnode>
        <childnode refid="37135" relation="include">
        </childnode>
        <childnode refid="37136" relation="include">
        </childnode>
        <childnode refid="37110" relation="include">
        </childnode>
        <childnode refid="37101" relation="include">
        </childnode>
        <childnode refid="37137" relation="include">
        </childnode>
        <childnode refid="37103" relation="include">
        </childnode>
        <childnode refid="37138" relation="include">
        </childnode>
      </node>
      <node id="37111">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37080" relation="include">
        </childnode>
        <childnode refid="37083" relation="include">
        </childnode>
        <childnode refid="37090" relation="include">
        </childnode>
      </node>
      <node id="37133">
        <label>ccnontextdetect.h</label>
        <link refid="ccnontextdetect_8h"/>
        <childnode refid="37126" relation="include">
        </childnode>
        <childnode refid="37101" relation="include">
        </childnode>
      </node>
      <node id="37085">
        <label>string.h</label>
      </node>
      <node id="37132">
        <label>textlineprojection.h</label>
        <link refid="textlineprojection_8h"/>
        <childnode refid="37126" relation="include">
        </childnode>
      </node>
      <node id="37099">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="37094" relation="include">
        </childnode>
        <childnode refid="37093" relation="include">
        </childnode>
        <childnode refid="37100" relation="include">
        </childnode>
        <childnode refid="37101" relation="include">
        </childnode>
        <childnode refid="37102" relation="include">
        </childnode>
      </node>
      <node id="37098">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="37080" relation="include">
        </childnode>
      </node>
      <node id="37127">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="37105">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="37080" relation="include">
        </childnode>
      </node>
      <node id="37129">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="37077" relation="include">
        </childnode>
        <childnode refid="37130" relation="include">
        </childnode>
        <childnode refid="37131" relation="include">
        </childnode>
      </node>
      <node id="37138">
        <label>workingpartset.h</label>
        <link refid="workingpartset_8h"/>
        <childnode refid="37110" relation="include">
        </childnode>
        <childnode refid="37130" relation="include">
        </childnode>
      </node>
      <node id="37091">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="37092" relation="include">
        </childnode>
        <childnode refid="37097" relation="include">
        </childnode>
        <childnode refid="37098" relation="include">
        </childnode>
        <childnode refid="37099" relation="include">
        </childnode>
        <childnode refid="37108" relation="include">
        </childnode>
        <childnode refid="37101" relation="include">
        </childnode>
      </node>
      <node id="37112">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="37103" relation="include">
        </childnode>
        <childnode refid="37098" relation="include">
        </childnode>
        <childnode refid="37111" relation="include">
        </childnode>
        <childnode refid="37107" relation="include">
        </childnode>
        <childnode refid="37108" relation="include">
        </childnode>
        <childnode refid="37113" relation="include">
        </childnode>
        <childnode refid="37114" relation="include">
        </childnode>
      </node>
      <node id="37114">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37115" relation="include">
        </childnode>
        <childnode refid="37112" relation="include">
        </childnode>
      </node>
      <node id="37089">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="37088" relation="include">
        </childnode>
      </node>
      <node id="37075">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="37076" relation="include">
        </childnode>
        <childnode refid="37105" relation="include">
        </childnode>
        <childnode refid="37125" relation="include">
        </childnode>
        <childnode refid="37127" relation="include">
        </childnode>
      </node>
      <node id="37094">
        <label>math.h</label>
      </node>
      <node id="37092">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="37093" relation="include">
        </childnode>
        <childnode refid="37097" relation="include">
        </childnode>
      </node>
      <node id="37090">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="37088" relation="include">
        </childnode>
      </node>
      <node id="37116">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="37093" relation="include">
        </childnode>
      </node>
      <node id="37120">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="37117">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="37118" relation="include">
        </childnode>
        <childnode refid="37119" relation="include">
        </childnode>
        <childnode refid="37114" relation="include">
        </childnode>
        <childnode refid="37121" relation="include">
        </childnode>
      </node>
      <node id="37103">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37104" relation="include">
        </childnode>
        <childnode refid="37107" relation="include">
        </childnode>
      </node>
      <node id="37104">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37084" relation="include">
        </childnode>
        <childnode refid="37105" relation="include">
        </childnode>
        <childnode refid="37088" relation="include">
        </childnode>
        <childnode refid="37106" relation="include">
        </childnode>
        <childnode refid="37100" relation="include">
        </childnode>
      </node>
      <node id="37086">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="37087" relation="include">
        </childnode>
        <childnode refid="37080" relation="include">
        </childnode>
      </node>
      <node id="37126">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="37077" relation="include">
        </childnode>
        <childnode refid="37110" relation="include">
        </childnode>
      </node>
      <node id="37119">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="37120" relation="include">
        </childnode>
        <childnode refid="37095" relation="include">
        </childnode>
        <childnode refid="37107" relation="include">
        </childnode>
      </node>
      <node id="37095">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37080" relation="include">
        </childnode>
        <childnode refid="37083" relation="include">
        </childnode>
        <childnode refid="37090" relation="include">
        </childnode>
      </node>
      <node id="37130">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="37077" relation="include">
        </childnode>
        <childnode refid="37110" relation="include">
        </childnode>
        <childnode refid="37100" relation="include">
        </childnode>
        <childnode refid="37117" relation="include">
        </childnode>
        <childnode refid="37099" relation="include">
        </childnode>
        <childnode refid="37101" relation="include">
        </childnode>
        <childnode refid="37075" relation="include">
        </childnode>
        <childnode refid="37125" relation="include">
        </childnode>
      </node>
      <node id="37128">
        <label>imagefind.h</label>
        <link refid="imagefind_8h"/>
        <childnode refid="37080" relation="include">
        </childnode>
      </node>
      <node id="37093">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37094" relation="include">
        </childnode>
        <childnode refid="37095" relation="include">
        </childnode>
        <childnode refid="37096" relation="include">
        </childnode>
      </node>
      <node id="37118">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="37086" relation="include">
        </childnode>
      </node>
      <node id="37102">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="37103" relation="include">
        </childnode>
      </node>
      <node id="37123">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="37080">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="37081" relation="include">
        </childnode>
      </node>
      <node id="37121">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="37078" relation="include">
        </childnode>
        <childnode refid="37118" relation="include">
        </childnode>
        <childnode refid="37107" relation="include">
        </childnode>
        <childnode refid="37122" relation="include">
        </childnode>
        <childnode refid="37123" relation="include">
        </childnode>
      </node>
      <node id="37131">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="37130" relation="include">
        </childnode>
        <childnode refid="37104" relation="include">
        </childnode>
        <childnode refid="37099" relation="include">
        </childnode>
        <childnode refid="37125" relation="include">
        </childnode>
      </node>
      <node id="37079">
        <label>stdio.h</label>
      </node>
      <node id="37135">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37080" relation="include">
        </childnode>
      </node>
      <node id="37107">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37085" relation="include">
        </childnode>
        <childnode refid="37081" relation="include">
        </childnode>
        <childnode refid="37086" relation="include">
        </childnode>
      </node>
      <node id="37106">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="37079" relation="include">
        </childnode>
        <childnode refid="37085" relation="include">
        </childnode>
      </node>
      <node id="37115">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="37116" relation="include">
        </childnode>
        <childnode refid="37083" relation="include">
        </childnode>
        <childnode refid="37086" relation="include">
        </childnode>
        <childnode refid="37099" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colfind.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Class<sp/>to<sp/>hold<sp/>BLOBNBOXs<sp/>in<sp/>a<sp/>grid<sp/>for<sp/>fast<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Wed<sp/>Jun<sp/>06<sp/>17:22:01<sp/>PDT<sp/>2007</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colfind_8h" kindref="compound">colfind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ccnontextdetect_8h" kindref="compound">ccnontextdetect.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartition_8h" kindref="compound">colpartition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitionset_8h" kindref="compound">colpartitionset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="equationdetectbase_8h" kindref="compound">equationdetectbase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linefind_8h" kindref="compound">linefind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="normalis_8h" kindref="compound">normalis.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strokewidth_8h" kindref="compound">strokewidth.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobbox_8h" kindref="compound">blobbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scrollview_8h" kindref="compound">scrollview.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tablefind_8h" kindref="compound">tablefind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workingpartset_8h" kindref="compound">workingpartset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>width<sp/>(in<sp/>pixels)<sp/>to<sp/>be<sp/>considered<sp/>when<sp/>making<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>convert<sp/>to<sp/>inches,<sp/>dependent<sp/>on<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa5d3fda875a0c1990a5e99213d6dc942" kindref="member">kMinColumnWidth</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>assigning<sp/>columns,<sp/>the<sp/>max<sp/>number<sp/>of<sp/>misfit<sp/>grid<sp/>rows/ColPartitionSets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>can<sp/>be<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a525b2fedb87de1261b0df536104ba145" kindref="member">kMaxIncompatibleColumnCount</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>fraction<sp/>of<sp/>ColPartition<sp/>height<sp/>to<sp/>be<sp/>overlapping<sp/>for<sp/>margin<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1acea5cf3f3fc7999a57079cc1bb4104f7" kindref="member">kMarginOverlapFraction</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>fraction<sp/>of<sp/>mean_column_gap_<sp/>for<sp/>the<sp/>gap<sp/>between<sp/>two<sp/>partitions<sp/>within<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>column<sp/>to<sp/>allow<sp/>them<sp/>to<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a9c9da421469028d22d7a2a4dbd3e3cbd" kindref="member">kHorizontalGapMergeFraction</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>fraction<sp/>of<sp/>grid<sp/>size<sp/>to<sp/>not<sp/>be<sp/>considered<sp/>likely<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1afeb3a1b870eeeb9e810fcb85744bb234" kindref="member">kMinNonNoiseFraction</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>gutter<sp/>width<sp/>as<sp/>a<sp/>fraction<sp/>of<sp/>gridsize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1af587ca3f993f7a3b54bdb0fac568d620" kindref="member">kMinGutterWidthGrid</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>multiple<sp/>of<sp/>a<sp/>partition&apos;s<sp/>median<sp/>size<sp/>as<sp/>a<sp/>distance<sp/>threshold<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>adding<sp/>noise<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ae4010112e32e0a18dfda3cc0efec9a1f" kindref="member">kMaxDistToPartSizeRatio</ref><sp/>=<sp/>1.5;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_show_initial_partitions,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>partition<sp/>bounds&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_show_reject_blobs,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>blobs<sp/>rejected<sp/>as<sp/>noise&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="namespacetesseract_1a203119da6300ca7502a76b8eb15ea27e" kindref="member">INT_VAR</ref>(textord_tabfind_show_partitions,<sp/>0,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>partition<sp/>bounds,<sp/>waiting<sp/>if<sp/>&gt;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_show_columns,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>column<sp/>bounds&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_show_blocks,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Show<sp/>final<sp/>block<sp/>bounds&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="namespacetesseract_1a4209fb24514046ff3fdf7b9b3f06f69a" kindref="member">BOOL_VAR</ref>(textord_tabfind_find_tables,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;run<sp/>table<sp/>detection&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>ColumnFinder::blocks_win_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gridsize<sp/>is<sp/>an<sp/>estimate<sp/>of<sp/>the<sp/>text<sp/>size<sp/>in<sp/>the<sp/>image.<sp/>A<sp/>suitable<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>in<sp/>TO_BLOCK::line_size<sp/>after<sp/>find_components<sp/>has<sp/>been<sp/>used<sp/>to<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bleft<sp/>and<sp/>tright<sp/>are<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>image<sp/>(or<sp/>rectangle)<sp/>being<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vlines<sp/>is<sp/>a<sp/>(possibly<sp/>empty)<sp/>list<sp/>of<sp/>TabVector<sp/>and<sp/>vertical_x<sp/>and<sp/>y<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>sum<sp/>logical<sp/>vertical<sp/>vector<sp/>produced<sp/>by<sp/>LineFinder::FindVerticalLines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="classtesseract_1_1_column_finder_1af05a5353cc31c37323d2715e646f2fec" kindref="member">ColumnFinder::ColumnFinder</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gridsize,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabVector_LIST*<sp/>vlines,<sp/>TabVector_LIST*<sp/>hlines,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_y)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>:<sp/>TabFind(gridsize,<sp/>bleft,<sp/>tright,<sp/>vlines,<sp/>vertical_x,<sp/>vertical_y,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resolution),</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>min_gutter_width_(static_cast&lt;int&gt;(<ref refid="namespacetesseract_1af587ca3f993f7a3b54bdb0fac568d620" kindref="member">kMinGutterWidthGrid</ref><sp/>*<sp/>gridsize)),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_column_gap_(tright.x()<sp/>-<sp/>bleft.x()),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>reskew_(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>),<sp/>rotation_(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>),<sp/>rerotate_(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>best_columns_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>stroke_width_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_(gridsize,<sp/>bleft,<sp/>tright),<sp/>nontext_map_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>projection_(resolution),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>denorm_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>input_blobs_win_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>equation_detect_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>h_it(&amp;horizontal_lines_);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>h_it.add_list_after(hlines);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="classtesseract_1_1_column_finder_1ae74b3226f76683ca0cd1dff60c508a69" kindref="member">ColumnFinder::~ColumnFinder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>column_sets_.<ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_columns_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>best_columns_;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stroke_width_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>stroke_width_;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>input_blobs_win_;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;nontext_map_);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(denorm_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>dead_denorm<sp/>=<sp/>denorm_;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>denorm_<sp/>=<sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(denorm_-&gt;<ref refid="class_d_e_n_o_r_m_1ae2cd0142f7cba40b8195fa872881ad02" kindref="member">predecessor</ref>());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dead_denorm;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ColPartitions<sp/>are<sp/>destroyed<sp/>automatically,<sp/>but<sp/>any<sp/>boxes<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>noise_parts_<sp/>list<sp/>are<sp/>owned<sp/>and<sp/>need<sp/>to<sp/>be<sp/>deleted<sp/>explicitly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>part_it(&amp;noise_parts_);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.mark_cycle_pt();<sp/>!part_it.cycled_list();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>part_it.data();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;DeleteBoxes();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Likewise<sp/>any<sp/>boxes<sp/>in<sp/>the<sp/>good_parts_<sp/>list<sp/>need<sp/>to<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>just<sp/>the<sp/>image<sp/>parts.<sp/>Text<sp/>parts<sp/>have<sp/>already<sp/>given<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>boxes<sp/>on<sp/>to<sp/>the<sp/>TO_BLOCK,<sp/>and<sp/>have<sp/>empty<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>part_it.set_to_list(&amp;good_parts_);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(part_it.mark_cycle_pt();<sp/>!part_it.cycled_list();<sp/>part_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>part_it.data();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;DeleteBoxes();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>any<sp/>blobs<sp/>on<sp/>the<sp/>image_bblobs_<sp/>list<sp/>need<sp/>to<sp/>have<sp/>their<sp/>cblobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>deleted.<sp/>This<sp/>only<sp/>happens<sp/>if<sp/>there<sp/>has<sp/>been<sp/>an<sp/>early<sp/>return<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>FindColumns,<sp/>as<sp/>in<sp/>a<sp/>normal<sp/>return,<sp/>the<sp/>blobs<sp/>go<sp/>into<sp/>the<sp/>grid<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>up<sp/>in<sp/>noise_parts_,<sp/>good_parts_<sp/>or<sp/>the<sp/>output<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>bb_it(&amp;image_bblobs_);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bb_it.mark_cycle_pt();<sp/>!bb_it.cycled_list();<sp/>bb_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bblob<sp/>=<sp/>bb_it.data();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>bblob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Performs<sp/>initial<sp/>processing<sp/>on<sp/>the<sp/>blobs<sp/>in<sp/>the<sp/>input_block:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>part_grid,<sp/>stroke_width_,<sp/>nontext_map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Obvious<sp/>noise<sp/>blobs<sp/>are<sp/>filtered<sp/>out<sp/>and<sp/>used<sp/>to<sp/>mark<sp/>the<sp/>nontext_map_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initial<sp/>stroke-width<sp/>analysis<sp/>is<sp/>used<sp/>to<sp/>get<sp/>local<sp/>text<sp/>alignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>direction,<sp/>so<sp/>the<sp/>textline<sp/>projection_<sp/>map<sp/>can<sp/>be<sp/>setup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>return,<sp/>IsVerticallyAlignedText<sp/>may<sp/>be<sp/>called<sp/>(now<sp/>optionally)<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>gross<sp/>textline<sp/>alignment<sp/>of<sp/>the<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_column_finder_1a6070b7972e60881ce2149b8640fa10fd" kindref="member">ColumnFinder::SetupAndFilterNoise</ref>(Pix*<sp/>photo_mask_pix,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>input_block)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a1d2990adf323d7910fbf87b6fc3a7415" kindref="member">Init</ref>(<ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1ad20b2cb8eb2bf52871d5260c04949cce" kindref="member">bleft</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1aa94e147841b6a4fae0b28e7e872685a5" kindref="member">tright</ref>());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stroke_width_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>stroke_width_;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>stroke_width_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StrokeWidth(<ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1ad20b2cb8eb2bf52871d5260c04949cce" kindref="member">bleft</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1aa94e147841b6a4fae0b28e7e872685a5" kindref="member">tright</ref>());</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>min_gutter_width_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacetesseract_1af587ca3f993f7a3b54bdb0fac568d620" kindref="member">kMinGutterWidthGrid</ref><sp/>*<sp/><ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a9b17e51cab6a0a8b6d8220443a2e9aa7" kindref="member">ReSetAndReFilterBlobs</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_blocks)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>input_blobs_win_<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(0,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Filtered<sp/>Input<sp/>Blobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1afd0504ca5c8fa605fbea3dbca2d8ee2e" kindref="member">plot_graded_blobs</ref>(input_blobs_win_);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a933d26eedcaa45e623f33559cbe69aa6" kindref="member">SetBlockRuleEdges</ref>(input_block);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;nontext_map_);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>a<sp/>preliminary<sp/>strokewidth<sp/>neighbour<sp/>detection<sp/>on<sp/>the<sp/>medium<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>stroke_width_-&gt;<ref refid="classtesseract_1_1_stroke_width_1a8273b43eb6170be582f30d5049aec523" kindref="member">SetNeighboursOnMediumBlobs</ref>(input_block);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>CCNonTextDetect<sp/>nontext_detect(<ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1ad20b2cb8eb2bf52871d5260c04949cce" kindref="member">bleft</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1aa94e147841b6a4fae0b28e7e872685a5" kindref="member">tright</ref>());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>obvious<sp/>noise<sp/>and<sp/>make<sp/>the<sp/>initial<sp/>non-text<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>nontext_map_<sp/>=<sp/>nontext_detect.ComputeNonTextMask(textord_debug_tabfind,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>photo_mask_pix,<sp/>input_block);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>experiment<sp/>with<sp/>making<sp/>broken<sp/>CJK<sp/>fixing<sp/>dependent<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>language,<sp/>and<sp/>keeping<sp/>the<sp/>merged<sp/>blobs<sp/>on<sp/>output<sp/>instead<sp/>of<sp/>exploding<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ColPartition::MakeBlock.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>stroke_width_-&gt;<ref refid="classtesseract_1_1_stroke_width_1aadfc985b5ed12df5ac545b344a304326" kindref="member">FindTextlineDirectionAndFixBrokenCJK</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>input_block);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>strokewidth<sp/>grid<sp/>ready<sp/>for<sp/>rotation<sp/>or<sp/>leader<sp/>finding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>stroke_width_-&gt;<ref refid="classtesseract_1_1_b_b_grid_1a0b373075bdfda41719d6fb9a64bcfee0" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>for<sp/>vertical<sp/>alignment<sp/>of<sp/>text<sp/>(returning<sp/>true<sp/>if<sp/>so),<sp/>and<sp/>generates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>list<sp/>of<sp/>blobs<sp/>of<sp/>moderate<sp/>aspect<sp/>ratio,<sp/>in<sp/>the<sp/>most<sp/>frequent<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>direction<sp/>(in<sp/>osd_blobs)<sp/>for<sp/>orientation<sp/>and<sp/>script<sp/>detection<sp/>to<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>character<sp/>orientation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/>block<sp/>is<sp/>the<sp/>single<sp/>block<sp/>for<sp/>the<sp/>whole<sp/>page<sp/>or<sp/>rectangle<sp/>to<sp/>be<sp/>OCRed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>vertical<sp/>alignment<sp/>may<sp/>be<sp/>due<sp/>to<sp/>text<sp/>whose<sp/>writing<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>vertical,<sp/>like<sp/>say<sp/>Japanese,<sp/>or<sp/>due<sp/>to<sp/>text<sp/>whose<sp/>writing<sp/>direction<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>horizontal<sp/>but<sp/>whose<sp/>text<sp/>appears<sp/>vertically<sp/>aligned<sp/>because<sp/>the<sp/>image<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>the<sp/>right<sp/>way<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_column_finder_1a139ed554e16d81676dd789b325320e4c" kindref="member">ColumnFinder::IsVerticallyAlignedText</ref>(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>osd_blobs)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stroke_width_-&gt;<ref refid="classtesseract_1_1_stroke_width_1a2db693b25f867e5ac21177353f6abcac" kindref="member">TestVerticalTextDirection</ref>(block,<sp/>osd_blobs);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotates<sp/>the<sp/>blobs<sp/>and<sp/>the<sp/>TabVectors<sp/>so<sp/>that<sp/>the<sp/>gross<sp/>writing<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(text<sp/>lines)<sp/>are<sp/>horizontal<sp/>and<sp/>lines<sp/>are<sp/>read<sp/>down<sp/>the<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Applied<sp/>rotation<sp/>stored<sp/>in<sp/>rotation_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>second<sp/>rotation<sp/>is<sp/>calculated<sp/>for<sp/>application<sp/>during<sp/>recognition<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>make<sp/>the<sp/>rotated<sp/>blobs<sp/>upright<sp/>for<sp/>recognition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Subsequent<sp/>rotation<sp/>stored<sp/>in<sp/>text_rotation_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Arguments:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>vertical_text_lines<sp/>true<sp/>if<sp/>the<sp/>text<sp/>lines<sp/>are<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>recognition_rotation<sp/>[0..3]<sp/>is<sp/>the<sp/>number<sp/>of<sp/>anti-clockwise<sp/>90<sp/>degree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>rotations<sp/>from<sp/>osd<sp/>required<sp/>for<sp/>the<sp/>text<sp/>to<sp/>be<sp/>upright<sp/>and<sp/>readable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_column_finder_1af2296f0a81a6a9b8cfe12e3b704258e7" kindref="member">ColumnFinder::CorrectOrientation</ref>(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vertical_text_lines,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recognition_rotation)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>anticlockwise90(0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>clockwise90(0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>-1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>rotation180(-1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>norotation(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>text_rotation_<sp/>=<sp/>norotation;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>page<sp/>to<sp/>make<sp/>the<sp/>text<sp/>upright,<sp/>as<sp/>implied<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>recognition_rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>rotation_<sp/>=<sp/>norotation;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recognition_rotation<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation_<sp/>=<sp/>anticlockwise90;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recognition_rotation<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation_<sp/>=<sp/>rotation180;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recognition_rotation<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation_<sp/>=<sp/>clockwise90;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>infer<sp/>text<sp/>writing<sp/>direction<sp/>to<sp/>be<sp/>vertical<sp/>if<sp/>there<sp/>are<sp/>several</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>vertical<sp/>text<sp/>lines<sp/>detected,<sp/>and<sp/>horizontal<sp/>if<sp/>not.<sp/>But<sp/>if<sp/>the<sp/>page</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>orientation<sp/>was<sp/>determined<sp/>to<sp/>be<sp/>90<sp/>or<sp/>270<sp/>degrees,<sp/>the<sp/>true<sp/>writing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>is<sp/>the<sp/>opposite<sp/>of<sp/>what<sp/>we<sp/>inferred.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recognition_rotation<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>vertical_text_lines<sp/>=<sp/>!vertical_text_lines;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>still<sp/>believe<sp/>the<sp/>writing<sp/>direction<sp/>is<sp/>vertical,<sp/>we<sp/>use<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>convention<sp/>of<sp/>rotating<sp/>the<sp/>page<sp/>ccw<sp/>90<sp/>degrees<sp/>to<sp/>make<sp/>the<sp/>text<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>horizontal,<sp/>and<sp/>mark<sp/>the<sp/>blobs<sp/>for<sp/>rotation<sp/>cw<sp/>90<sp/>degrees<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>classification<sp/>so<sp/>that<sp/>the<sp/>text<sp/>order<sp/>is<sp/>correct<sp/>after<sp/>recognition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertical_text_lines)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>rotation_.<ref refid="class_f_c_o_o_r_d_1a81ca9ea0cac4cd8c1bca0314e29bb28d" kindref="member">rotate</ref>(anticlockwise90);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>text_rotation_.<ref refid="class_f_c_o_o_r_d_1a81ca9ea0cac4cd8c1bca0314e29bb28d" kindref="member">rotate</ref>(clockwise90);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>rerotate_<sp/>to<sp/>the<sp/>inverse<sp/>of<sp/>rotation_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>rerotate_<sp/>=<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>(rotation_.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>(),<sp/>-rotation_.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotation_.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>!=<sp/>1.0f<sp/>||<sp/>rotation_.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>()<sp/>!=<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>all<sp/>the<sp/>blobs<sp/>and<sp/>tab<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a284f867e74a35ec3513f29a03bf46157" kindref="member">RotateBlobList</ref>(rotation_,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a284f867e74a35ec3513f29a03bf46157" kindref="member">RotateBlobList</ref>(rotation_,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a284f867e74a35ec3513f29a03bf46157" kindref="member">RotateBlobList</ref>(rotation_,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ad16b1c18225b44c50674ca46841b0f5f" kindref="member">small_blobs</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a284f867e74a35ec3513f29a03bf46157" kindref="member">RotateBlobList</ref>(rotation_,<sp/>&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a4dd9c8e6a4a4b669b143a8b209ab4e3d" kindref="member">TabFind::ResetForVerticalText</ref>(rotation_,<sp/>rerotate_,<sp/>&amp;horizontal_lines_,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_gutter_width_);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a1d2990adf323d7910fbf87b6fc3a7415" kindref="member">Init</ref>(<ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1ad20b2cb8eb2bf52871d5260c04949cce" kindref="member">bleft</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1aa94e147841b6a4fae0b28e7e872685a5" kindref="member">tright</ref>());</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>all<sp/>blobs<sp/>to<sp/>initial<sp/>state<sp/>and<sp/>filter<sp/>by<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>they<sp/>have<sp/>rotated,<sp/>the<sp/>list<sp/>they<sp/>belong<sp/>on<sp/>could<sp/>have<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a9b17e51cab6a0a8b6d8220443a2e9aa7" kindref="member">ReSetAndReFilterBlobs</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a933d26eedcaa45e623f33559cbe69aa6" kindref="member">SetBlockRuleEdges</ref>(block);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>stroke_width_-&gt;<ref refid="classtesseract_1_1_stroke_width_1a35f8ebba3622b6777da414ce6679158d" kindref="member">CorrectForRotation</ref>(rerotate_,<sp/>&amp;part_grid_);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Vertical=%d,<sp/>orientation=%d,<sp/>final<sp/>rotation=(%f,<sp/>%f)+(%f,%f)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertical_text_lines,<sp/>recognition_rotation,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rotation_.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>(),<sp/>rotation_.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>(),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_rotation_.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>(),<sp/>text_rotation_.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>denormalization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(denorm_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>denorm_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>denorm_-&gt;<ref refid="class_d_e_n_o_r_m_1ac667a208c574b073db800890e4e31255" kindref="member">SetupNormalization</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;rotation_,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>blocks<sp/>of<sp/>text,<sp/>image,<sp/>rule<sp/>line,<sp/>table<sp/>etc,<sp/>returning<sp/>them<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blocks<sp/>and<sp/>to_blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Each<sp/>TO_BLOCK<sp/>points<sp/>to<sp/>the<sp/>basic<sp/>BLOCK<sp/>and<sp/>adds<sp/>more<sp/>information.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Image<sp/>blocks<sp/>are<sp/>generated<sp/>by<sp/>a<sp/>combination<sp/>of<sp/>photo_mask_pix<sp/>(which<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOT<sp/>be<sp/>NULL)<sp/>and<sp/>the<sp/>rejected<sp/>text<sp/>found<sp/>during<sp/>preliminary<sp/>textline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>finding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>input_block<sp/>is<sp/>the<sp/>result<sp/>of<sp/>a<sp/>call<sp/>to<sp/>find_components,<sp/>and<sp/>contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>blobs<sp/>found<sp/>in<sp/>the<sp/>image<sp/>or<sp/>rectangle<sp/>to<sp/>be<sp/>OCRed.<sp/>These<sp/>blobs<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>removed<sp/>and<sp/>placed<sp/>in<sp/>the<sp/>output<sp/>blocks,<sp/>while<sp/>unused<sp/>ones<sp/>will<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>single_column<sp/>is<sp/>true,<sp/>the<sp/>input<sp/>is<sp/>treated<sp/>as<sp/>single<sp/>column,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>is<sp/>still<sp/>divided<sp/>into<sp/>blocks<sp/>of<sp/>equal<sp/>line<sp/>spacing/text<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scaled_color<sp/>is<sp/>scaled<sp/>down<sp/>by<sp/>scaled_factor<sp/>from<sp/>the<sp/>input<sp/>color<sp/>image,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>may<sp/>be<sp/>NULL<sp/>if<sp/>the<sp/>input<sp/>was<sp/>not<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>-1<sp/>if<sp/>the<sp/>user<sp/>hits<sp/>the<sp/>&apos;d&apos;<sp/>key<sp/>in<sp/>the<sp/>blocks<sp/>window<sp/>while<sp/>running</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>debug<sp/>mode,<sp/>which<sp/>requests<sp/>a<sp/>retry<sp/>with<sp/>more<sp/>debug<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_column_finder_1ae4e56db53ca637143483725d995f1867" kindref="member">ColumnFinder::FindBlocks</ref>(<ref refid="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66a" kindref="member">PageSegMode</ref><sp/>pageseg_mode,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>scaled_color,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaled_factor,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>input_block,<sp/>Pix*<sp/>photo_mask_pix,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOCK_LIST*<sp/>blocks,<sp/>TO_BLOCK_LIST*<sp/>to_blocks)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>pixOr(photo_mask_pix,<sp/>photo_mask_pix,<sp/>nontext_map_);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>stroke_width_-&gt;<ref refid="classtesseract_1_1_stroke_width_1a8418b53298a0a6b71b8d4c804d48980e" kindref="member">FindLeaderPartitions</ref>(input_block,<sp/>&amp;part_grid_);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>stroke_width_-&gt;<ref refid="classtesseract_1_1_stroke_width_1a726e68e695eceafbf22602ba8c563c4a" kindref="member">RemoveLineResidue</ref>(&amp;big_parts_);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a0e13b8acb7aefd346628fd4c88f82d47" kindref="member">FindInitialTabVectors</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>min_gutter_width_,<sp/>input_block);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a933d26eedcaa45e623f33559cbe69aa6" kindref="member">SetBlockRuleEdges</ref>(input_block);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>stroke_width_-&gt;<ref refid="classtesseract_1_1_stroke_width_1a64cc6e7ab7c16c2181dd1fa09d6c765e" kindref="member">GradeBlobsIntoPartitions</ref>(rerotate_,<sp/>input_block,<sp/>nontext_map_,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denorm_,<sp/>&amp;projection_,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;part_grid_,<sp/>&amp;big_parts_);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="publictypes_8h_1a3040b5473ea4c79ff3feab8e9588b21f" kindref="member">PSM_SPARSE</ref>(pageseg_mode))<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_image_find_1aa45bf8c2f6ca0dc31e8f1ef08ffea700" kindref="member">ImageFind::FindImagePartitions</ref>(photo_mask_pix,<sp/>rotation_,<sp/>rerotate_,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_block,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;part_grid_,<sp/>&amp;big_parts_);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_image_find_1af98436ea599236937f5c013853f437df" kindref="member">ImageFind::TransferImagePartsToImageMask</ref>(rerotate_,<sp/>&amp;part_grid_,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>photo_mask_pix);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_image_find_1aa45bf8c2f6ca0dc31e8f1ef08ffea700" kindref="member">ImageFind::FindImagePartitions</ref>(photo_mask_pix,<sp/>rotation_,<sp/>rerotate_,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_block,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;part_grid_,<sp/>&amp;big_parts_);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1aecd8e56c6111338a9f7a42ce00d3636f" kindref="member">ReTypeBlobs</ref>(&amp;image_bblobs_);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a7e49edde7f5fdadc93ee731676e9f860" kindref="member">TidyBlobs</ref>(input_block);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1af6d774ed654a3708b6941707eaa357e7" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>need<sp/>to<sp/>properly<sp/>handle<sp/>big_parts_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>p_it(&amp;big_parts_);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p_it.mark_cycle_pt();<sp/>!p_it.cycled_list();<sp/>p_it.forward())</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>p_it.data()-&gt;DisownBoxesNoAssert();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>big_parts_.clear();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>stroke_width_;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>stroke_width_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>note<sp/>about<sp/>handling<sp/>right-to-left<sp/>scripts<sp/>(Hebrew/Arabic):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>columns<sp/>must<sp/>be<sp/>reversed<sp/>and<sp/>come<sp/>out<sp/>in<sp/>right-to-left<sp/>instead<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>normal<sp/>left-to-right<sp/>order.<sp/>Because<sp/>the<sp/>left-to-right<sp/>ordering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>implicit<sp/>in<sp/>many<sp/>data<sp/>structures,<sp/>it<sp/>is<sp/>simpler<sp/>to<sp/>fool<sp/>the<sp/>algorithms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>thinking<sp/>they<sp/>are<sp/>dealing<sp/>with<sp/>left-to-right<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>do<sp/>this,<sp/>we<sp/>reflect<sp/>the<sp/>needed<sp/>data<sp/>in<sp/>the<sp/>y-axis<sp/>and<sp/>then<sp/>reflect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>blocks<sp/>back<sp/>after<sp/>they<sp/>have<sp/>been<sp/>created.<sp/>This<sp/>is<sp/>a<sp/>temporary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>arrangment<sp/>that<sp/>is<sp/>confined<sp/>to<sp/>this<sp/>function<sp/>only,<sp/>so<sp/>the<sp/>reflection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>completely<sp/>invisible<sp/>in<sp/>the<sp/>output<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>only<sp/>objects<sp/>reflected<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>vertical<sp/>separator<sp/>lines<sp/>that<sp/>have<sp/>already<sp/>been<sp/>found;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>bounding<sp/>boxes<sp/>of<sp/>all<sp/>BLOBNBOXES<sp/>on<sp/>all<sp/>lists<sp/>on<sp/>the<sp/>input_block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>plus<sp/>the<sp/>image_bblobs.<sp/>The<sp/>outlines<sp/>are<sp/>not<sp/>touched,<sp/>since<sp/>they<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>looked<sp/>at.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_is_rtl<sp/>=<sp/>input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a16e698664028b0d6d2193db64560c16b" kindref="member">block</ref>-&gt;<ref refid="class_b_l_o_c_k_1a63887af77bac6353507e4ee2d87a1237" kindref="member">right_to_left</ref>();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_is_rtl)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reflect<sp/>the<sp/>vertical<sp/>separator<sp/>lines<sp/>(member<sp/>of<sp/>TabFind).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a7796b29f26b5411d648a546567251352" kindref="member">ReflectInYAxis</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reflect<sp/>the<sp/>blob<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>ReflectForRtl(input_block,<sp/>&amp;image_bblobs_);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a423a93040be0e2075dce35597ab30d3a" kindref="member">ReflectInYAxis</ref>();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="publictypes_8h_1a3040b5473ea4c79ff3feab8e9588b21f" kindref="member">PSM_SPARSE</ref>(pageseg_mode))<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="publictypes_8h_1acdfaf983e9b264a248ba758043508b88" kindref="member">PSM_COL_FIND_ENABLED</ref>(pageseg_mode))<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>tab<sp/>stops<sp/>needed.<sp/>Just<sp/>the<sp/>grid<sp/>that<sp/>FindTabVectors<sp/>makes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a55483b344fcfd80beece6b81772fdbd2" kindref="member">DontFindTabVectors</ref>(&amp;image_bblobs_,<sp/>input_block,<sp/>&amp;deskew_,<sp/>&amp;reskew_);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a933d26eedcaa45e623f33559cbe69aa6" kindref="member">SetBlockRuleEdges</ref>(input_block);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>tab<sp/>stops,<sp/>estimate<sp/>skew,<sp/>and<sp/>deskew<sp/>the<sp/>tabs,<sp/>blobs<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>part_grid_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a558d35cc39d58e0a30138438c2af2fab" kindref="member">FindTabVectors</ref>(&amp;horizontal_lines_,<sp/>&amp;image_bblobs_,<sp/>input_block,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_gutter_width_,<sp/>&amp;part_grid_,<sp/>&amp;deskew_,<sp/>&amp;reskew_);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>deskew<sp/>to<sp/>the<sp/>denorm_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>new_denorm<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_denorm-&gt;<ref refid="class_d_e_n_o_r_m_1ac667a208c574b073db800890e4e31255" kindref="member">SetupNormalization</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;deskew_,<sp/>denorm_,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>denorm_<sp/>=<sp/>new_denorm;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a933d26eedcaa45e623f33559cbe69aa6" kindref="member">SetBlockRuleEdges</ref>(input_block);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a40b0e4db617400d53951521ab11b5b8a" kindref="member">SetTabStops</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>column_sets_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!MakeColumns(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Empty<sp/>page!!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>empty<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refill<sp/>the<sp/>grid<sp/>using<sp/>rectangular<sp/>spreading,<sp/>and<sp/>get<sp/>the<sp/>benefit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>completed<sp/>tab<sp/>vectors<sp/>marking<sp/>the<sp/>rule<sp/>edges<sp/>of<sp/>each<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_b_b_grid_1a0b373075bdfda41719d6fb9a64bcfee0" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="367"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_reject_blobs)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>rej_win<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(500,<sp/>300,<sp/></highlight><highlight class="stringliteral">&quot;Rejected<sp/>blobs&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1afd0504ca5c8fa605fbea3dbca2d8ee2e" kindref="member">plot_graded_blobs</ref>(rej_win);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a3e55aec0e623b421d2d309cafc1ccfd4" kindref="member">InsertBlobsToGrid</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;image_bblobs_,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a3e55aec0e623b421d2d309cafc1ccfd4" kindref="member">InsertBlobsToGrid</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>&amp;input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a6840942249ec02a7c24c051a6f51f14c" kindref="member">GridFindMargins</ref>(best_columns_);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>and<sp/>merge<sp/>the<sp/>partitions<sp/>by<sp/>looking<sp/>at<sp/>local<sp/>neighbours.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>GridSplitPartitions();</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resolve<sp/>unknown<sp/>partitions<sp/>by<sp/>adding<sp/>to<sp/>an<sp/>existing<sp/>partition,<sp/>fixing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>type,<sp/>or<sp/>declaring<sp/>them<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a6840942249ec02a7c24c051a6f51f14c" kindref="member">GridFindMargins</ref>(best_columns_);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>GridMergePartitions();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>any<sp/>unused<sp/>noise<sp/>blobs<sp/>that<sp/>are<sp/>close<sp/>enough<sp/>to<sp/>an<sp/>appropriate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>InsertRemainingNoise(input_block);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>horizontal<sp/>line<sp/>separators<sp/>as<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>GridInsertHLinePartitions();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>GridInsertVLinePartitions();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recompute<sp/>margins<sp/>based<sp/>on<sp/>a<sp/>local<sp/>neighbourhood<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a6840942249ec02a7c24c051a6f51f14c" kindref="member">GridFindMargins</ref>(best_columns_);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>SetPartitionTypes();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_initial_partitions)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>part_win<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(100,<sp/>300,<sp/></highlight><highlight class="stringliteral">&quot;InitialPartitions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a01e56b692125ef3220a23695e2c4821f" kindref="member">DisplayBoxes</ref>(part_win);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1afae5bc37f0ba24f67e7b75bc44039cd4" kindref="member">DisplayTabVectors</ref>(part_win);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="publictypes_8h_1a3040b5473ea4c79ff3feab8e9588b21f" kindref="member">PSM_SPARSE</ref>(pageseg_mode))<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equation_detect_)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>equation_detect_-&gt;<ref refid="classtesseract_1_1_equation_detect_base_1a4f11f002edacf57f9e8b10103e0288a7" kindref="member">FindEquationParts</ref>(&amp;part_grid_,<sp/>best_columns_);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_find_tables)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TableFinder<sp/>table_finder;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table_finder.Init(<ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1ad20b2cb8eb2bf52871d5260c04949cce" kindref="member">bleft</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1aa94e147841b6a4fae0b28e7e872685a5" kindref="member">tright</ref>());</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table_finder.set_resolution(<ref refid="classtesseract_1_1_tab_find_1a6faf609de59b4e4fd6baf0c3f19efbaf" kindref="member">resolution_</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table_finder.set_left_to_right_language(</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a16e698664028b0d6d2193db64560c16b" kindref="member">block</ref>-&gt;<ref refid="class_b_l_o_c_k_1a63887af77bac6353507e4ee2d87a1237" kindref="member">right_to_left</ref>());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>cleaned<sp/>partitions<sp/>from<sp/>part_grid_<sp/>to<sp/>clean_part_grid_<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>dot-like<sp/>noise<sp/>into<sp/>period_grid_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table_finder.InsertCleanPartitions(&amp;part_grid_,<sp/>input_block);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>Table<sp/>Regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table_finder.LocateTables(&amp;part_grid_,<sp/>best_columns_,<sp/><ref refid="classtesseract_1_1_tab_find_1a580534816073eb4327fbe24611499a5c" kindref="member">WidthCB</ref>(),<sp/>reskew_);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>GridRemoveUnderlinePartitions();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1ab4756f20467daf31de174d0da440a279" kindref="member">DeleteUnknownParts</ref>(input_block);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>partitions<sp/>into<sp/>chains<sp/>that<sp/>belong<sp/>in<sp/>the<sp/>same<sp/>block<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refine<sp/>into<sp/>one-to-one<sp/>links,<sp/>then<sp/>smooth<sp/>the<sp/>types<sp/>within<sp/>each<sp/>chain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a7ed32c7b4717fc000dd55796f6bf86d7" kindref="member">FindPartitionPartners</ref>();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1ae99dfe01a80478cc1ef370aa74b79773" kindref="member">FindFigureCaptions</ref>();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a4781167f958ee8cc47549d8b39b9f1b5" kindref="member">RefinePartitionPartners</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>SmoothPartnerRuns();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="425"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_partitions)<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(400,<sp/>300,<sp/></highlight><highlight class="stringliteral">&quot;Partitions&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_images)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a45881e629322d82c9fc0c5f926a76f16" kindref="member">Image</ref>(<ref refid="classtesseract_1_1_aligned_blob_1a03ba43124d00badef61e1da6b06ffc2a" kindref="member">AlignedBlob::textord_debug_pix</ref>().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1abd2f6921aa546135c38150769d90b1c2" kindref="member">image_origin</ref>().x(),<sp/><ref refid="classtesseract_1_1_tab_find_1abd2f6921aa546135c38150769d90b1c2" kindref="member">image_origin</ref>().y());</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a01e56b692125ef3220a23695e2c4821f" kindref="member">DisplayBoxes</ref>(window);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!textord_debug_printable)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1afae5bc37f0ba24f67e7b75bc44039cd4" kindref="member">DisplayTabVectors</ref>(window);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>textord_tabfind_show_partitions<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>window-&gt;<ref refid="class_scroll_view_1a0b820b3fe7a2ce083da0784e9339a1ad" kindref="member">AwaitEvent</ref>(<ref refid="scrollview_8h_1a3688a0cf2f95d10a57e095222ccfe9a0adbe9fb2ca110dbf1b838d845d32a89e7" kindref="member">SVET_DESTROY</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="438"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a19df7a0ef4d8204b5d6fa36765011114" kindref="member">AssertNoDuplicates</ref>();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ownership<sp/>of<sp/>the<sp/>ColPartitions<sp/>moves<sp/>from<sp/>part_sets_<sp/>to<sp/>part_grid_<sp/>here,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>ownership<sp/>of<sp/>the<sp/>BLOBNBOXes<sp/>moves<sp/>to<sp/>the<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(They<sp/>were<sp/>previously<sp/>owned<sp/>by<sp/>the<sp/>block<sp/>or<sp/>the<sp/>image_bblobs<sp/>list.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>ReleaseBlobsAndCleanupUnused(input_block);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ownership<sp/>of<sp/>the<sp/>ColPartitions<sp/>moves<sp/>from<sp/>part_grid_<sp/>to<sp/>good_parts_<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>noise_parts_<sp/>here.<sp/>In<sp/>text<sp/>blocks,<sp/>ownership<sp/>of<sp/>the<sp/>BLOBNBOXes<sp/>moves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>ColPartitions<sp/>to<sp/>the<sp/>output<sp/>TO_BLOCK.<sp/>In<sp/>non-text,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>BLOBNBOXes<sp/>stay<sp/>with<sp/>the<sp/>ColPartitions<sp/>and<sp/>get<sp/>deleted<sp/>in<sp/>the<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="publictypes_8h_1a3040b5473ea4c79ff3feab8e9588b21f" kindref="member">PSM_SPARSE</ref>(pageseg_mode))</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a340a41a02be925abaed397a99ce58bde" kindref="member">ExtractPartitionsAsBlocks</ref>(blocks,<sp/>to_blocks);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>TransformToBlocks(blocks,<sp/>to_blocks);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>%d<sp/>blocks,<sp/>%d<sp/>to_blocks\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks-&gt;length(),<sp/>to_blocks-&gt;length());</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>DisplayBlocks(blocks);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>RotateAndReskewBlocks(input_is_rtl,<sp/>to_blocks);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="461"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blocks_win_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>waiting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>waiting<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_v_event" kindref="compound">SVEvent</ref>*<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>blocks_win_-&gt;<ref refid="class_scroll_view_1a0b820b3fe7a2ce083da0784e9339a1ad" kindref="member">AwaitEvent</ref>(<ref refid="scrollview_8h_1a3688a0cf2f95d10a57e095222ccfe9a0a6eec81ed585bda7ff47ec38918cb2a0e" kindref="member">SVET_ANY</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;type<sp/>==<sp/><ref refid="scrollview_8h_1a3688a0cf2f95d10a57e095222ccfe9a0aee5f6202613f111d11fc310ccba2fa25" kindref="member">SVET_INPUT</ref><sp/>&amp;&amp;<sp/>event-&gt;parameter<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*event-&gt;parameter<sp/>==<sp/></highlight><highlight class="charliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks-&gt;clear();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;type<sp/>==<sp/><ref refid="scrollview_8h_1a3688a0cf2f95d10a57e095222ccfe9a0adbe9fb2ca110dbf1b838d845d32a89e7" kindref="member">SVET_DESTROY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks_win_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waiting<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>event;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(waiting);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="480"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>rotation<sp/>required<sp/>to<sp/>deskew,<sp/>and<sp/>its<sp/>inverse<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_column_finder_1a555d9d09320031910b79fb14b584f64e" kindref="member">ColumnFinder::GetDeskewVectors</ref>(<ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>deskew,<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>*<sp/>reskew)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>*reskew<sp/>=<sp/>reskew_;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>*deskew<sp/>=<sp/>reskew_;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>deskew-&gt;<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(-deskew-&gt;<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_column_finder_1aa89aa6d591e18cf2e1ab136b06ae6ef7" kindref="member">ColumnFinder::SetEquationDetect</ref>(EquationDetectBase*<sp/>detect)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>equation_detect_<sp/>=<sp/>detect;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Displays<sp/>the<sp/>blob<sp/>and<sp/>block<sp/>bounding<sp/>boxes<sp/>in<sp/>a<sp/>window<sp/>called<sp/>Blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::DisplayBlocks(BLOCK_LIST*<sp/>blocks)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="499"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_blocks)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blocks_win_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blocks_win_<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(700,<sp/>300,<sp/></highlight><highlight class="stringliteral">&quot;Blocks&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blocks_win_-&gt;<ref refid="class_scroll_view_1a5386b0da16d7cbdd33044e53b95313ac" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_images)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blocks_win_-&gt;<ref refid="class_scroll_view_1a45881e629322d82c9fc0c5f926a76f16" kindref="member">Image</ref>(<ref refid="classtesseract_1_1_aligned_blob_1a03ba43124d00badef61e1da6b06ffc2a" kindref="member">AlignedBlob::textord_debug_pix</ref>().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1abd2f6921aa546135c38150769d90b1c2" kindref="member">image_origin</ref>().x(),<sp/><ref refid="classtesseract_1_1_tab_find_1abd2f6921aa546135c38150769d90b1c2" kindref="member">image_origin</ref>().y());</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_b_b_grid_1a01e56b692125ef3220a23695e2c4821f" kindref="member">DisplayBoxes</ref>(blocks_win_);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOCK_IT<sp/>block_it(blocks);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>serial<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(block_it.mark_cycle_pt();<sp/>!block_it.cycled_list();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block<sp/>=<sp/>block_it.data();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a38da8bc50b2c4cf687ffbde6cf901a0e" kindref="member">plot</ref>(blocks_win_,<sp/>serial++,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textord_debug_printable<sp/>?<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a66e5117e4930fdd9a43bdb674d57a719" kindref="member">ScrollView::BLUE</ref></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a9d8c87be486dead41d198d6b97a22174" kindref="member">ScrollView::GREEN</ref>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks_win_-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="521"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Displays<sp/>the<sp/>column<sp/>edges<sp/>at<sp/>each<sp/>grid<sp/>y<sp/>coordinate<sp/>defined<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/>best_columns_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::DisplayColumnBounds(<ref refid="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" kindref="member">PartSetVector</ref>*<sp/>sets)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="527"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>col_win<sp/>=<sp/><ref refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" kindref="member">MakeWindow</ref>(50,<sp/>300,<sp/></highlight><highlight class="stringliteral">&quot;Columns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_images)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>col_win-&gt;<ref refid="class_scroll_view_1a45881e629322d82c9fc0c5f926a76f16" kindref="member">Image</ref>(<ref refid="classtesseract_1_1_aligned_blob_1a03ba43124d00badef61e1da6b06ffc2a" kindref="member">AlignedBlob::textord_debug_pix</ref>().</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1abd2f6921aa546135c38150769d90b1c2" kindref="member">image_origin</ref>().x(),<sp/><ref refid="classtesseract_1_1_tab_find_1abd2f6921aa546135c38150769d90b1c2" kindref="member">image_origin</ref>().y());</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_b_b_grid_1a01e56b692125ef3220a23695e2c4821f" kindref="member">DisplayBoxes</ref>(col_win);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>col_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(textord_debug_printable<sp/>?<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a66e5117e4930fdd9a43bdb674d57a719" kindref="member">ScrollView::BLUE</ref><sp/>:<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a9d8c87be486dead41d198d6b97a22174" kindref="member">ScrollView::GREEN</ref>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_grid_base_1ae70ca33c0676a296720fea5ddc0aa5cc" kindref="member">gridheight_</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>columns<sp/>=<sp/>best_columns_[i];</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(columns<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>columns-&gt;<ref refid="classtesseract_1_1_col_partition_set_1a36859fa1a9497c3b0e52834a90d0acd5" kindref="member">DisplayColumnEdges</ref>(i<sp/>*<sp/><ref refid="classtesseract_1_1_grid_base_1a0758dd90d5ce47e504a4148f4cda33f3" kindref="member">gridsize_</ref>,<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/>gridsize_,<sp/>col_win);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>up<sp/>column_sets_<sp/>(the<sp/>determined<sp/>column<sp/>layout<sp/>at<sp/>each<sp/>horizontal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">//<sp/>slice).<sp/>Returns<sp/>false<sp/>if<sp/>the<sp/>page<sp/>is<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColumnFinder::MakeColumns(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>single_column)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>part_sets_<sp/>are<sp/>a<sp/>temporary<sp/>structure<sp/>used<sp/>during<sp/>column<sp/>creation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>is<sp/>a<sp/>vector<sp/>of<sp/>ColPartitionSets,<sp/>representing<sp/>ColPartitions<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>horizontal<sp/>slices<sp/>through<sp/>the<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" kindref="member">PartSetVector</ref><sp/>part_sets;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!single_column)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a6dbb1d12ebe468f00e2b63265fdda569" kindref="member">MakeColPartSets</ref>(&amp;part_sets))</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(part_grid_.<ref refid="classtesseract_1_1_grid_base_1a07e6b230c150180d009ef1f317e642f2" kindref="member">gridheight</ref>()<sp/>==<sp/><ref refid="classtesseract_1_1_grid_base_1ae70ca33c0676a296720fea5ddc0aa5cc" kindref="member">gridheight_</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>using<sp/>only<sp/>the<sp/>good<sp/>parts<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>good_only<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_grid_base_1ae70ca33c0676a296720fea5ddc0aa5cc" kindref="member">gridheight_</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>line_set<sp/>=<sp/>part_sets.get(i);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_set<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>line_set-&gt;LegalColumnCandidate())<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>column_candidate<sp/>=<sp/>line_set-&gt;Copy(good_only);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_candidate<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_candidate-&gt;AddToColumnSetsIfUnique(&amp;column_sets_,<sp/><ref refid="classtesseract_1_1_tab_find_1a580534816073eb4327fbe24611499a5c" kindref="member">WidthCB</ref>());</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>good_only<sp/>=<sp/>!good_only;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(column_sets_.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>()<sp/>&amp;&amp;<sp/>!good_only);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PrintColumnCandidates(</highlight><highlight class="stringliteral">&quot;Column<sp/>candidates&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Improve<sp/>the<sp/>column<sp/>candidates<sp/>against<sp/>themselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>ImproveColumnCandidates(&amp;column_sets_,<sp/>&amp;column_sets_);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PrintColumnCandidates(</highlight><highlight class="stringliteral">&quot;Improved<sp/>columns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Improve<sp/>the<sp/>column<sp/>candidates<sp/>using<sp/>the<sp/>part_sets_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>ImproveColumnCandidates(&amp;part_sets,<sp/>&amp;column_sets_);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>ColPartitionSet*<sp/>single_column_set<sp/>=</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_col_partition_grid_1a804a04162511d6952635ba8713a751a8" kindref="member">MakeSingleColumnSet</ref>(<ref refid="classtesseract_1_1_tab_find_1a580534816073eb4327fbe24611499a5c" kindref="member">WidthCB</ref>());</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(single_column_set<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>add<sp/>the<sp/>single<sp/>column<sp/>set<sp/>as<sp/>a<sp/>backup<sp/>even<sp/>if<sp/>not<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>column<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>single_column_set-&gt;<ref refid="classtesseract_1_1_col_partition_set_1a2bc71914f948cda279ea34f6d34a5cbe" kindref="member">AddToColumnSetsIfUnique</ref>(&amp;column_sets_,<sp/><ref refid="classtesseract_1_1_tab_find_1a580534816073eb4327fbe24611499a5c" kindref="member">WidthCB</ref>());</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintColumnCandidates(</highlight><highlight class="stringliteral">&quot;Final<sp/>Columns&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!column_sets_.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Divide<sp/>the<sp/>page<sp/>into<sp/>sections<sp/>of<sp/>uniform<sp/>column<sp/>layout.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>AssignColumns(part_sets);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_tabfind_show_columns)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DisplayColumnBounds(&amp;part_sets);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>ComputeMeanColumnGap();</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_LIST<sp/>parts;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>part_sets.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>line_set<sp/>=<sp/>part_sets.get(i);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_set<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_set-&gt;RelinquishParts();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>line_set;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>improve<sp/>the<sp/>column_candidates<sp/>by<sp/>expanding<sp/>the<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>adding<sp/>new<sp/>partitions<sp/>from<sp/>the<sp/>partition<sp/>sets<sp/>in<sp/>src_sets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Src_sets<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>column_candidates,<sp/>in<sp/>which<sp/>case<sp/>it<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>them<sp/>as<sp/>a<sp/>source<sp/>to<sp/>improve<sp/>themselves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::ImproveColumnCandidates(<ref refid="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" kindref="member">PartSetVector</ref>*<sp/>src_sets,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" kindref="member">PartSetVector</ref>*<sp/>column_sets)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" kindref="member">PartSetVector</ref><sp/>temp_cols;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>temp_cols.<ref refid="class_generic_vector_1abae057ce589be25aae9b80958f84e34c" kindref="member">move</ref>(column_sets);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src_sets<sp/>==<sp/>column_sets)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>src_sets<sp/>=<sp/>&amp;temp_cols;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_size<sp/>=<sp/>temp_cols.size();</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>using<sp/>only<sp/>the<sp/>good<sp/>parts<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>good_only<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>column_candidate<sp/>=<sp/>temp_cols.get(i);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(column_candidate<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>improved<sp/>=<sp/>column_candidate-&gt;Copy(good_only);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(improved<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>improved-&gt;ImproveColumnCandidate(<ref refid="classtesseract_1_1_tab_find_1a580534816073eb4327fbe24611499a5c" kindref="member">WidthCB</ref>(),<sp/>src_sets);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>improved-&gt;AddToColumnSetsIfUnique(column_sets,<sp/><ref refid="classtesseract_1_1_tab_find_1a580534816073eb4327fbe24611499a5c" kindref="member">WidthCB</ref>());</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>good_only<sp/>=<sp/>!good_only;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(column_sets-&gt;empty()<sp/>&amp;&amp;<sp/>!good_only);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_sets-&gt;empty())</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>column_sets-&gt;move(&amp;temp_cols);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_cols.delete_data_pointers();</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Prints<sp/>debug<sp/>information<sp/>on<sp/>the<sp/>column<sp/>candidates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::PrintColumnCandidates(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_size<sp/>=<sp/><sp/>column_sets_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>%d<sp/>%s:\n&quot;</highlight><highlight class="normal">,<sp/>set_size,<sp/>title);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>column_set<sp/>=<sp/>column_sets_.<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(i);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>column_set-&gt;Print();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>optimal<sp/>set<sp/>of<sp/>columns<sp/>that<sp/>cover<sp/>the<sp/>entire<sp/>image<sp/>with<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/>few<sp/>changes<sp/>in<sp/>column<sp/>partition<sp/>as<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>this<sp/>could<sp/>be<sp/>thought<sp/>of<sp/>as<sp/>an<sp/>optimization<sp/>problem,<sp/>but<sp/>a<sp/>simple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">//<sp/>greedy<sp/>algorithm<sp/>is<sp/>used<sp/>instead.<sp/>The<sp/>algorithm<sp/>repeatedly<sp/>finds<sp/>the<sp/>modal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compatible<sp/>column<sp/>in<sp/>an<sp/>unassigned<sp/>region<sp/>and<sp/>uses<sp/>that<sp/>with<sp/>the<sp/>extra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tweak<sp/>of<sp/>extending<sp/>the<sp/>modal<sp/>region<sp/>over<sp/>small<sp/>breaks<sp/>in<sp/>compatibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Where<sp/>modal<sp/>regions<sp/>overlap,<sp/>the<sp/>boundary<sp/>is<sp/>chosen<sp/>so<sp/>as<sp/>to<sp/>minimize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>cost<sp/>in<sp/>terms<sp/>of<sp/>ColPartitions<sp/>not<sp/>fitting<sp/>an<sp/>approved<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::AssignColumns(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" kindref="member">PartSetVector</ref>&amp;<sp/>part_sets)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_count<sp/>=<sp/>part_sets.size();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(set_count<sp/>==<sp/><ref refid="classtesseract_1_1_grid_base_1a07e6b230c150180d009ef1f317e642f2" kindref="member">gridheight</ref>());</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>init<sp/>the<sp/>best_columns_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>best_columns_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColPartitionSet*[set_count];</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>set_count;<sp/>++y)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>best_columns_[y]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_count<sp/>=<sp/>column_sets_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>column_set_costs[part_sets_<sp/>index][column_sets_<sp/>index]<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;<sp/>MAX_INT32<sp/>if<sp/>the<sp/>partition<sp/>set<sp/>is<sp/>compatible<sp/>with<sp/>the<sp/>column<sp/>set,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>which<sp/>case<sp/>its<sp/>value<sp/>is<sp/>the<sp/>cost<sp/>for<sp/>that<sp/>set<sp/>used<sp/>in<sp/>deciding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>competing<sp/>set<sp/>to<sp/>assign.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>any_columns_possible[part_sets_<sp/>index]<sp/>is<sp/>true<sp/>if<sp/>any<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>possible_column_sets[part_sets_<sp/>index][*]<sp/>is<sp/>&lt;<sp/>MAX_INT32.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>assigned_costs[part_sets_<sp/>index]<sp/>is<sp/>set<sp/>to<sp/>the<sp/>column_set_costs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>assigned<sp/>column_sets_<sp/>index<sp/>or<sp/>MAX_INT32<sp/>if<sp/>none<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>return<sp/>the<sp/>best_columns_<sp/>member<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>any_columns_possible<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[set_count];</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>assigned_costs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[set_count];</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>column_set_costs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*[set_count];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>possible<sp/>column_sets<sp/>to<sp/>indicate<sp/>whether<sp/>each<sp/>set<sp/>is<sp/>compatible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>each<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part_i<sp/>=<sp/>0;<sp/>part_i<sp/>&lt;<sp/>set_count;<sp/>++part_i)<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>line_set<sp/>=<sp/>part_sets.get(part_i);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>line_set<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(2,<sp/>line_set-&gt;bounding_box().left(),</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_set-&gt;bounding_box().bottom());</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>column_set_costs[part_i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[column_count];</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>any_columns_possible[part_i]<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>assigned_costs[part_i]<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_i<sp/>=<sp/>0;<sp/>col_i<sp/>&lt;<sp/>column_count;<sp/>++col_i)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_set<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_sets_.<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(col_i)-&gt;CompatibleColumns(debug,<sp/>line_set,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_find_1a580534816073eb4327fbe24611499a5c" kindref="member">WidthCB</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_set_costs[part_i][col_i]<sp/>=</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_sets_.<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(col_i)-&gt;UnmatchedWidth(line_set);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_columns_possible[part_i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_set_costs[part_i][col_i]<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>id<sp/>%d<sp/>did<sp/>not<sp/>match<sp/>at<sp/>y=%d,<sp/>lineset<sp/>=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_i,<sp/>part_i,<sp/>line_set);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>a<sp/>column<sp/>set<sp/>to<sp/>each<sp/>vertical<sp/>grid<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>While<sp/>there<sp/>is<sp/>an<sp/>unassigned<sp/>range,<sp/>find<sp/>its<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(BiggestUnassignedRange(set_count,<sp/>any_columns_possible,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;start,<sp/>&amp;end))<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Biggest<sp/>unassigned<sp/>range<sp/>=<sp/>%d-<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>start,<sp/>end);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>modal<sp/>column_set_id<sp/>in<sp/>the<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_set_id<sp/>=<sp/>RangeModalColumnSet(column_set_costs,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assigned_costs,<sp/>start,<sp/>end);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Range<sp/>modal<sp/>column<sp/>id<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>column_set_id);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>column_sets_.<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(column_set_id)-&gt;Print();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>find<sp/>the<sp/>longest<sp/>run<sp/>of<sp/>the<sp/>column_set_id<sp/>in<sp/>the<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>ShrinkRangeToLongestRun(column_set_costs,<sp/>assigned_costs,</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_columns_possible,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_set_id,<sp/>&amp;start,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Shrunk<sp/>range<sp/>=<sp/>%d-<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>start,<sp/>end);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extend<sp/>the<sp/>start<sp/>and<sp/>end<sp/>past<sp/>the<sp/>longest<sp/>run,<sp/>while<sp/>there<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>small<sp/>gaps<sp/>in<sp/>compatibility<sp/>that<sp/>can<sp/>be<sp/>overcome<sp/>by<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regions<sp/>of<sp/>compatibility<sp/>beyond.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>ExtendRangePastSmallGaps(column_set_costs,<sp/>assigned_costs,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_columns_possible,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_set_id,<sp/>-1,<sp/>-1,<sp/>&amp;start);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>--end;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>ExtendRangePastSmallGaps(column_set_costs,<sp/>assigned_costs,</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_columns_possible,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_set_id,<sp/>1,<sp/>set_count,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>++end;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Column<sp/>id<sp/>%d<sp/>applies<sp/>to<sp/>range<sp/>=<sp/>%d<sp/>-<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_set_id,<sp/>start,<sp/>end);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assign<sp/>the<sp/>column<sp/>to<sp/>the<sp/>range,<sp/>which<sp/>now<sp/>may<sp/>overlap<sp/>with<sp/>other<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>AssignColumnToRange(column_set_id,<sp/>start,<sp/>end,<sp/>column_set_costs,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assigned_costs);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>anything<sp/>remains<sp/>unassigned,<sp/>the<sp/>whole<sp/>lot<sp/>is<sp/>unassigned,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>arbitrarily<sp/>assign<sp/>id<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_columns_[0]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>AssignColumnToRange(0,<sp/>0,<sp/>gridheight_,<sp/>column_set_costs,<sp/>assigned_costs);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set_count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>column_set_costs[i];</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>assigned_costs;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>any_columns_possible;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>column_set_costs;</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>biggest<sp/>range<sp/>in<sp/>part_sets_<sp/>that<sp/>has<sp/>no<sp/>assigned<sp/>column,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment">//<sp/>column<sp/>assignment<sp/>is<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ColumnFinder::BiggestUnassignedRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_count,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>any_columns_possible,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>best_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>best_end)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_range_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>*best_start<sp/>=<sp/>set_count;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/>*best_end<sp/>=<sp/>set_count;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>set_count;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>0;<sp/>start<sp/>&lt;<sp/><ref refid="classtesseract_1_1_grid_base_1ae70ca33c0676a296720fea5ddc0aa5cc" kindref="member">gridheight_</ref>;<sp/>start<sp/>=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>unassigned<sp/>index<sp/>in<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(start<sp/>&lt;<sp/>set_count)<sp/>{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_columns_[start]<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>any_columns_possible[start])</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++start;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>past<sp/>the<sp/>end<sp/>and<sp/>count<sp/>the<sp/>good<sp/>ones<sp/>in<sp/>between.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>range_size<sp/>=<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>non-null,<sp/>but<sp/>unassigned<sp/>line<sp/>sets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>start<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(end<sp/>&lt;<sp/>set_count)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_columns_[end]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(any_columns_possible[end])</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++range_size;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++end;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&lt;<sp/>set_count<sp/>&amp;&amp;<sp/>range_size<sp/>&gt;<sp/>best_range_size)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_range_size<sp/>=<sp/>range_size;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*best_start<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*best_end<sp/>=<sp/>end;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*best_start<sp/>&lt;<sp/>*best_end;</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>modal<sp/>compatible<sp/>column_set_<sp/>index<sp/>within<sp/>the<sp/>given<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ColumnFinder::RangeModalColumnSet(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>column_set_costs,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>assigned_costs,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_count<sp/>=<sp/>column_sets_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>column_stats(0,<sp/>column_count);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part_i<sp/>=<sp/>start;<sp/>part_i<sp/>&lt;<sp/>end;<sp/>++part_i)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_j<sp/>=<sp/>0;<sp/>col_j<sp/>&lt;<sp/>column_count;<sp/>++col_j)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_set_costs[part_i][col_j]<sp/>&lt;<sp/>assigned_costs[part_i])</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column_stats.add(col_j,<sp/>1);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(column_stats.get_total()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>column_stats.mode();</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>that<sp/>there<sp/>are<sp/>many<sp/>column_set_id<sp/>compatible<sp/>columns<sp/>in<sp/>the<sp/>range,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shrinks<sp/>the<sp/>range<sp/>to<sp/>the<sp/>longest<sp/>contiguous<sp/>run<sp/>of<sp/>compatibility,<sp/>allowing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gaps<sp/>where<sp/>no<sp/>columns<sp/>are<sp/>possible,<sp/>but<sp/>not<sp/>where<sp/>competing<sp/>columns<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="comment">//<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::ShrinkRangeToLongestRun(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>column_set_costs,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>assigned_costs,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>any_columns_possible,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_set_id,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>best_start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>best_end)<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>orig_start<sp/>and<sp/>orig_end<sp/>are<sp/>the<sp/>maximum<sp/>range<sp/>we<sp/>will<sp/>look<sp/>at.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_start<sp/>=<sp/>*best_start;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orig_end<sp/>=<sp/>*best_end;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_range_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>*best_start<sp/>=<sp/>orig_end;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/>*best_end<sp/>=<sp/>orig_end;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>orig_end;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>orig_start;<sp/>start<sp/>&lt;<sp/>orig_end;<sp/>start<sp/>=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(start<sp/>&lt;<sp/>orig_end)<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_set_costs[start][column_set_id]<sp/>&lt;<sp/>assigned_costs[start]<sp/>||</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!any_columns_possible[start])</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++start;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>past<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>start<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(end<sp/>&lt;<sp/>orig_end)<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_set_costs[end][column_set_id]<sp/>&gt;=<sp/>assigned_costs[start]<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_columns_possible[end])</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++end;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&lt;<sp/>orig_end<sp/>&amp;&amp;<sp/>end<sp/>-<sp/>start<sp/>&gt;<sp/>best_range_size)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_range_size<sp/>=<sp/>end<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*best_start<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*best_end<sp/>=<sp/>end;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Moves<sp/>start<sp/>in<sp/>the<sp/>direction<sp/>of<sp/>step,<sp/>upto,<sp/>but<sp/>not<sp/>including<sp/>end<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>only<sp/>incompatible<sp/>regions<sp/>are<sp/>no<sp/>more<sp/>than<sp/>kMaxIncompatibleColumnCount</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>size,<sp/>and<sp/>the<sp/>compatible<sp/>regions<sp/>beyond<sp/>are<sp/>bigger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::ExtendRangePastSmallGaps(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>column_set_costs,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>assigned_costs,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>any_columns_possible,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_set_id,</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>start)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Starting<sp/>expansion<sp/>at<sp/>%d,<sp/>step=%d,<sp/>limit=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*start,<sp/>step,<sp/>end);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*start<sp/>==<sp/>end)</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Cannot<sp/>be<sp/>expanded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>barrier_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>good_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>size<sp/>of<sp/>the<sp/>incompatible<sp/>barrier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>*start<sp/>+<sp/>step;<sp/>i<sp/>!=<sp/>end;<sp/>i<sp/>+=<sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_set_costs[i][column_set_id]<sp/>&lt;<sp/>assigned_costs[i])</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>back<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Locations<sp/>where<sp/>none<sp/>are<sp/>possible<sp/>don&apos;t<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(any_columns_possible[i])</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++barrier_size;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;At<sp/>%d,<sp/>Barrier<sp/>size=%d\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>barrier_size);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(barrier_size<sp/>&gt;<sp/><ref refid="namespacetesseract_1a525b2fedb87de1261b0df536104ba145" kindref="member">kMaxIncompatibleColumnCount</ref>)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Barrier<sp/>too<sp/>big.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can&apos;t<sp/>go<sp/>any<sp/>further,<sp/>but<sp/>the<sp/>barrier<sp/>was<sp/>small,<sp/>so<sp/>go<sp/>to<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*start<sp/>=<sp/>i<sp/>-<sp/>step;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>find<sp/>the<sp/>size<sp/>of<sp/>the<sp/>good<sp/>region<sp/>on<sp/>the<sp/>other<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>good_size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>+=<sp/>step;<sp/>i<sp/>!=<sp/>end;<sp/>i<sp/>+=<sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_set_costs[i][column_set_id]<sp/>&lt;<sp/>assigned_costs[i])</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++good_size;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(any_columns_possible[i])</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;At<sp/>%d,<sp/>good<sp/>size<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>good_size);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>had<sp/>enough<sp/>good<sp/>ones<sp/>we<sp/>can<sp/>extend<sp/>the<sp/>start<sp/>and<sp/>keep<sp/>looking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(good_size<sp/>&gt;=<sp/>barrier_size)</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*start<sp/>=<sp/>i<sp/>-<sp/>step;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(good_size<sp/>&gt;=<sp/>barrier_size);</highlight></codeline>
<codeline lineno="893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assigns<sp/>the<sp/>given<sp/>column_set_id<sp/>to<sp/>the<sp/>given<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::AssignColumnToRange(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_set_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/>column_set_costs,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>assigned_costs)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>ColPartitionSet*<sp/>column_set<sp/>=<sp/>column_sets_.<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">get</ref>(column_set_id);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>start;<sp/>i<sp/>&lt;<sp/>end;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>assigned_costs[i]<sp/>=<sp/>column_set_costs[i][column_set_id];</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>best_columns_[i]<sp/>=<sp/>column_set;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>mean_column_gap_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::ComputeMeanColumnGap()<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_gap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap_samples<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width_samples<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classtesseract_1_1_grid_base_1ae70ca33c0676a296720fea5ddc0aa5cc" kindref="member">gridheight_</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(best_columns_[i]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>best_columns_[i]-&gt;<ref refid="classtesseract_1_1_col_partition_set_1a2269c86ba6ee44b5be119493e7b2246e" kindref="member">AccumulateColumnWidthsAndGaps</ref>(&amp;total_width,</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;width_samples,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;total_gap,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;gap_samples);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/>mean_column_gap_<sp/>=<sp/>gap_samples<sp/>&gt;<sp/>0<sp/>?<sp/>total_gap<sp/>/<sp/>gap_samples</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>total_width<sp/>/<sp/>width_samples;</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>delete<sp/>all<sp/>the<sp/>deletable<sp/>blobs<sp/>on<sp/>the<sp/>list.<sp/>Owned<sp/>blobs<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extracted<sp/>from<sp/>the<sp/>list,<sp/>but<sp/>not<sp/>deleted,<sp/>leaving<sp/>them<sp/>owned<sp/>by<sp/>the<sp/>owner().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReleaseAllBlobsAndDeleteUnused(BLOBNBOX_LIST*<sp/>blobs)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(BLOBNBOX_IT<sp/>blob_it(blobs);<sp/>!blob_it.empty();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.extract();</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>();</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>blob;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Hoovers<sp/>up<sp/>all<sp/>un-owned<sp/>blobs<sp/>and<sp/>deletes<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>rest<sp/>get<sp/>released<sp/>from<sp/>the<sp/>block<sp/>so<sp/>the<sp/>ColPartitions<sp/>can<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ownership<sp/>to<sp/>the<sp/>output<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::ReleaseBlobsAndCleanupUnused(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>ReleaseAllBlobsAndDeleteUnused(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>ReleaseAllBlobsAndDeleteUnused(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ad16b1c18225b44c50674ca46841b0f5f" kindref="member">small_blobs</ref>);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/>ReleaseAllBlobsAndDeleteUnused(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>ReleaseAllBlobsAndDeleteUnused(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>ReleaseAllBlobsAndDeleteUnused(&amp;image_bblobs_);</highlight></codeline>
<codeline lineno="947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Splits<sp/>partitions<sp/>that<sp/>cross<sp/>columns<sp/>where<sp/>they<sp/>have<sp/>nothing<sp/>in<sp/>the<sp/>gap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::GridSplitPartitions()<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>GridSearch&lt;ColPartition,<sp/>ColPartition_CLIST,<sp/>ColPartition_C_IT&gt;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch(&amp;part_grid_);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>dont_repeat<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;blob_type()<sp/>&lt;<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref><sp/>||<sp/>part<sp/>==<sp/>dont_repeat)</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>applies<sp/>to<sp/>text<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>column_set<sp/>=<sp/>best_columns_[gsearch.GridY()];</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_col<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_col<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>which<sp/>columns<sp/>the<sp/>partition<sp/>spans.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;ColumnRange(<ref refid="classtesseract_1_1_tab_find_1a6faf609de59b4e4fd6baf0c3f19efbaf" kindref="member">resolution_</ref>,<sp/>column_set,<sp/>&amp;first_col,<sp/>&amp;last_col);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_col<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--first_col;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>output<sp/>column<sp/>indices<sp/>to<sp/>physical<sp/>column<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>first_col<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>last_col<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>will<sp/>only<sp/>consider<sp/>cases<sp/>where<sp/>a<sp/>partition<sp/>spans<sp/>two<sp/>columns,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>a<sp/>heading<sp/>that<sp/>spans<sp/>more<sp/>columns<sp/>than<sp/>that<sp/>is<sp/>most<sp/>likely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>genuine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_col<sp/>!=<sp/>first_col<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>a<sp/>rectangle<sp/>search<sp/>x-bounded<sp/>by<sp/>the<sp/>column<sp/>gap<sp/>and<sp/>y<sp/>by<sp/>the<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>part-&gt;MidY();</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>margin_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">AlignedBlob::WithinTestRegion</ref>(2,<sp/>margin_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margin_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Considering<sp/>partition<sp/>for<sp/>GridSplit:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>column<sp/>=<sp/>column_set-&gt;GetColumnByIndex(first_col);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>margin_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(column-&gt;RightAtY(y)<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>column<sp/>=<sp/>column_set-&gt;GetColumnByIndex(last_col);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>margin_box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(column-&gt;LeftAtY(y)<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Decide<sp/>whether<sp/>to<sp/>keep<sp/>rectangular<sp/>filling<sp/>or<sp/>not<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>main<sp/>grid<sp/>and<sp/>therefore<sp/>whether<sp/>we<sp/>need<sp/>a<sp/>fancier<sp/>search<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>run<sp/>the<sp/>rect<sp/>search<sp/>on<sp/>the<sp/>main<sp/>blob<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>GridSearch&lt;BLOBNBOX,<sp/>BLOBNBOX_CLIST,<sp/>BLOBNBOX_C_IT&gt;<sp/>rectsearch(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Searching<sp/>box<sp/>(%d,%d)-&gt;(%d,%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margin_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>margin_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margin_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>margin_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>rectsearch.StartRectSearch(margin_box);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((bbox<sp/>=<sp/>rectsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1adcc7d2858ccb61cd715dbcff32bd5582" kindref="member">overlap</ref>(margin_box))</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>seems<sp/>to<sp/>be<sp/>nothing<sp/>in<sp/>the<sp/>hole,<sp/>so<sp/>split<sp/>the<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_middle<sp/>=<sp/>(margin_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>margin_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Splitting<sp/>part<sp/>at<sp/>%d:&quot;</highlight><highlight class="normal">,<sp/>x_middle);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>split_part<sp/>=<sp/>part-&gt;SplitAt(x_middle);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split_part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Split<sp/>result:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split_part-&gt;Print();</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a7b379525e3d60c68e583352ae4b8a750" kindref="member">InsertBBox</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>split_part);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Split<sp/>had<sp/>no<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Split<sp/>had<sp/>no<sp/>effect\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dont_repeat<sp/>=<sp/>part;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a7b379525e3d60c68e583352ae4b8a750" kindref="member">InsertBBox</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Part<sp/>cannot<sp/>be<sp/>split:<sp/>blob<sp/>(%d,%d)-&gt;(%d,%d)<sp/>in<sp/>column<sp/>gap\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merges<sp/>partitions<sp/>where<sp/>there<sp/>is<sp/>vertical<sp/>overlap,<sp/>within<sp/>a<sp/>single<sp/>column,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>horizontal<sp/>gap<sp/>is<sp/>small<sp/>enough.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::GridMergePartitions()<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>GridSearch&lt;ColPartition,<sp/>ColPartition_CLIST,<sp/>ColPartition_C_IT&gt;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch(&amp;part_grid_);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;IsUnMergeableType())</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>a<sp/>rectangle<sp/>search<sp/>x-bounded<sp/>by<sp/>the<sp/>column<sp/>and<sp/>y<sp/>by<sp/>the<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>columns<sp/>=<sp/>best_columns_[gsearch.GridY()];</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">AlignedBlob::WithinTestRegion</ref>(1,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Considering<sp/>part<sp/>for<sp/>merge<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>part-&gt;MidY();</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>left_column<sp/>=<sp/>columns-&gt;ColumnContaining(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>y);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>right_column<sp/>=<sp/>columns-&gt;ColumnContaining(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>y);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_column<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>right_column<sp/>!=<sp/>left_column)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;In<sp/>different<sp/>columns\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(left_column-&gt;LeftAtY(y));</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(right_column-&gt;RightAtY(y));</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>run<sp/>the<sp/>rect<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>modified_box<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>GridSearch&lt;ColPartition,<sp/>ColPartition_CLIST,<sp/>ColPartition_C_IT&gt;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rsearch(&amp;part_grid_);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>rsearch.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>rsearch.StartRectSearch(box);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>neighbour;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((neighbour<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour<sp/>==<sp/>part<sp/>||<sp/>neighbour-&gt;IsUnMergeableType())</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>neighbour_box<sp/>=<sp/>neighbour-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Considering<sp/>merge<sp/>with<sp/>neighbour<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;Print();</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&lt;<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>||</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>within<sp/>the<sp/>same<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;VSignificantCoreOverlap(*neighbour)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;TypesMatch(*neighbour))<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>vertical<sp/>overlap<sp/>and<sp/>the<sp/>gross<sp/>types<sp/>match,<sp/>but<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>merge<sp/>if<sp/>the<sp/>horizontal<sp/>gap<sp/>is<sp/>small<sp/>enough,<sp/>as<sp/>one<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>partitions<sp/>may<sp/>be<sp/>a<sp/>figure<sp/>caption<sp/>within<sp/>a<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>only<sp/>one<sp/>column,<sp/>then<sp/>the<sp/>mean_column_gap_<sp/>is<sp/>large</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enough<sp/>to<sp/>allow<sp/>almost<sp/>any<sp/>merge,<sp/>by<sp/>being<sp/>the<sp/>mean<sp/>column<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>part_box<sp/>=<sp/>part-&gt;bounding_box();</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>merge<sp/>if<sp/>there<sp/>is<sp/>something<sp/>else<sp/>in<sp/>the<sp/>way.<sp/>Use<sp/>the<sp/>margin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>decide,<sp/>and<sp/>check<sp/>both<sp/>to<sp/>allow<sp/>a<sp/>bit<sp/>of<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>part-&gt;right_margin()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&lt;<sp/>neighbour-&gt;left_margin())</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Neighbour<sp/>is<sp/>too<sp/>far<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&lt;<sp/>part-&gt;left_margin()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&gt;<sp/>neighbour-&gt;right_margin())</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Neighbour<sp/>is<sp/>too<sp/>far<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h_gap<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(part_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>neighbour_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>())<sp/>-</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(part_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>neighbour_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_gap<sp/>&lt;<sp/>mean_column_gap_<sp/>*<sp/><ref refid="namespacetesseract_1a9c9da421469028d22d7a2a4dbd3e3cbd" kindref="member">kHorizontalGapMergeFraction</ref><sp/>||</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&lt;<sp/>mean_column_gap_<sp/>||</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>&lt;<sp/>mean_column_gap_)<sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Running<sp/>grid-based<sp/>merge<sp/>between:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neighbour-&gt;Print();</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Absorb(neighbour,<sp/><ref refid="classtesseract_1_1_tab_find_1a580534816073eb4327fbe24611499a5c" kindref="member">WidthCB</ref>());</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified_box<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Neighbour<sp/>failed<sp/>hgap<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Neighbour<sp/>failed<sp/>overlap<sp/>or<sp/>typesmatch<sp/>test\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modified_box)<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>modified<sp/>the<sp/>box<sp/>of<sp/>part,<sp/>so<sp/>re-insert<sp/>it<sp/>into<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>does<sp/>no<sp/>harm<sp/>in<sp/>the<sp/>current<sp/>cell,<sp/>as<sp/>it<sp/>already<sp/>exists<sp/>there,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>it<sp/>needs<sp/>to<sp/>exist<sp/>in<sp/>all<sp/>the<sp/>cells<sp/>covered<sp/>by<sp/>its<sp/>bounding<sp/>box,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>it<sp/>will<sp/>never<sp/>be<sp/>found<sp/>by<sp/>a<sp/>full<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>the<sp/>box<sp/>has<sp/>changed,<sp/>it<sp/>has<sp/>to<sp/>be<sp/>removed<sp/>first,<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add_sorted<sp/>may<sp/>fail<sp/>to<sp/>keep<sp/>a<sp/>single<sp/>copy<sp/>of<sp/>the<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RemoveBBox();</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a7b379525e3d60c68e583352ae4b8a750" kindref="member">InsertBBox</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.RepositionIterator();</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inserts<sp/>remaining<sp/>noise<sp/>blobs<sp/>into<sp/>the<sp/>most<sp/>applicable<sp/>partition<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>no<sp/>applicable<sp/>partition,<sp/>then<sp/>the<sp/>blobs<sp/>are<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::InsertRemainingNoise(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(&amp;block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a3fc9ba48fe9dd66461305697568f867a" kindref="member">owner</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">WithinTestRegion</ref>(2,<sp/>search_box.left(),<sp/>search_box.bottom());</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.pad(<ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>(),<sp/><ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>());</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>rectangle<sp/>search<sp/>to<sp/>find<sp/>the<sp/>best<sp/>partition<sp/>to<sp/>merge<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>rsearch(&amp;part_grid_);</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>rsearch.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>rsearch.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>best_part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_distance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>rsearch.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;IsUnMergeableType())</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>projection_.<ref refid="classtesseract_1_1_textline_projection_1aa72325e896b00272a6486ab4c57c54d3" kindref="member">DistanceOfBoxFromPartition</ref>(</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>(),<sp/>*part,<sp/>denorm_,<sp/>debug);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_part<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>distance<sp/>&lt;<sp/>best_distance)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_part<sp/>=<sp/>part;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_distance<sp/>=<sp/>distance;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_distance<sp/>&lt;<sp/>kMaxDistToPartSizeRatio<sp/>*<sp/>best_part-&gt;median_size())<sp/>{</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>enough<sp/>to<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Adding<sp/>noise<sp/>blob<sp/>with<sp/>distance<sp/>%d,<sp/>thr=%g:box:&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_distance,</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1ae4010112e32e0a18dfda3cc0efec9a1f" kindref="member">kMaxDistToPartSizeRatio</ref><sp/>*<sp/>best_part-&gt;median_size());</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;To<sp/>partition:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_part-&gt;Print();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1adc713153c1282d8727f85ee6d38d7d31" kindref="member">RemoveBBox</ref>(best_part);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_part-&gt;AddBox(blob);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a7b379525e3d60c68e583352ae4b8a750" kindref="member">InsertBBox</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>best_part);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ad573c3bea7351dd2cbdaaffa2ff11c58" kindref="member">set_owner</ref>(best_part);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a75340334988feba52ce36ba596750a35" kindref="member">set_flow</ref>(best_part-&gt;flow());</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" kindref="member">set_region_type</ref>(best_part-&gt;blob_type());</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>the<sp/>blob<sp/>for<sp/>deletion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b58644d9ad4f0d01193f47f55dd884f" kindref="member">set_region_type</ref>(<ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575ae09c6f7e99c3a3885c3469d52d0292d2" kindref="member">BRT_NOISE</ref>);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>marked<sp/>blobs,<sp/>clearing<sp/>neighbour<sp/>references.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/>block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a9ce3c22594b44b4faad5c331ad0265ea" kindref="member">DeleteUnownedNoise</ref>();</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>makes<sp/>a<sp/>box<sp/>from<sp/>a<sp/>horizontal<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>BoxFromHLine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TabVector*<sp/>hline)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(hline-&gt;startpt().y(),<sp/>hline-&gt;endpt().y());</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(hline-&gt;startpt().y(),<sp/>hline-&gt;endpt().y());</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>top<sp/>+=<sp/>hline-&gt;mean_width();</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top<sp/>==<sp/>bottom)<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottom<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--bottom;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++top;</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>(hline-&gt;startpt().x(),<sp/>bottom,<sp/>hline-&gt;endpt().x(),<sp/>top);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remove<sp/>partitions<sp/>that<sp/>come<sp/>from<sp/>horizontal<sp/>lines<sp/>that<sp/>look<sp/>like</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>underlines,<sp/>but<sp/>are<sp/>not<sp/>part<sp/>of<sp/>a<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::GridRemoveUnderlinePartitions()<sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>hline_it(&amp;horizontal_lines_);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hline_it.mark_cycle_pt();<sp/>!hline_it.cycled_list();<sp/>hline_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>hline<sp/>=<sp/>hline_it.data();</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hline-&gt;intersects_other_lines())</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>line_box<sp/>=<sp/>BoxFromHLine(hline);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>search_box<sp/>=<sp/>line_box;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>search_box.<ref refid="class_t_b_o_x_1ad78f4f7e9746def02b0d2e8e8a2b3ceb" kindref="member">pad</ref>(0,<sp/>line_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>part_search(&amp;part_grid_);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>part_search.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>part_search.StartRectSearch(search_box);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>covered;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touched_table<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>touched_text<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>line_part<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((covered<sp/>=<sp/>part_search.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(covered-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa5f41d3730899e22bf30c977bef2bcfa3" kindref="member">PT_TABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touched_table<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(covered-&gt;IsTextType())<sp/>{</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>Add<sp/>a<sp/>list<sp/>of<sp/>underline<sp/>sections<sp/>to<sp/>ColPartition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>text_bottom<sp/>=<sp/>covered-&gt;median_bottom();</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&lt;=<sp/>text_bottom<sp/>&amp;&amp;<sp/>text_bottom<sp/>&lt;=<sp/>search_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>touched_text<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(covered-&gt;blob_type()<sp/>==<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a56cc149e97b34634dd39babda79ea17d" kindref="member">BRT_HLINE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(covered-&gt;bounding_box()))<sp/>{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_part<sp/>=<sp/>covered;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_part<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!touched_table<sp/>&amp;&amp;<sp/>touched_text)<sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1adc713153c1282d8727f85ee6d38d7d31" kindref="member">RemoveBBox</ref>(line_part);</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>line_part;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>horizontal<sp/>line<sp/>separators<sp/>as<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::GridInsertHLinePartitions()<sp/>{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>hline_it(&amp;horizontal_lines_);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(hline_it.mark_cycle_pt();<sp/>!hline_it.cycled_list();<sp/>hline_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>hline<sp/>=<sp/>hline_it.data();</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>line_box<sp/>=<sp/>BoxFromHLine(hline);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a446ed1c0731f3fb8d7199b45750c6c5c" kindref="member">ColPartition::MakeLinePartition</ref>(</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a56cc149e97b34634dd39babda79ea17d" kindref="member">BRT_HLINE</ref>,<sp/><ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>line_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>line_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>line_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;<ref refid="classtesseract_1_1_col_partition_1a9fcf07be83840289187d6358ee752a46" kindref="member">set_type</ref>(<ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fad3f3a03631d09be1ba300cdd2af9a0d5" kindref="member">PT_HORZ_LINE</ref>);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_image<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>part_search(&amp;part_grid_);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>part_search.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/>part_search.StartRectSearch(line_box);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>covered;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((covered<sp/>=<sp/>part_search.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(covered-&gt;IsImageType())<sp/>{</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_image<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!any_image)</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a7b379525e3d60c68e583352ae4b8a750" kindref="member">InsertBBox</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>horizontal<sp/>line<sp/>separators<sp/>as<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::GridInsertVLinePartitions()<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>vline_it(<ref refid="classtesseract_1_1_tab_find_1a581a15f13fe384bf67f8d403531566fe" kindref="member">dead_vectors</ref>());</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vline_it.mark_cycle_pt();<sp/>!vline_it.cycled_list();<sp/>vline_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>vline<sp/>=<sp/>vline_it.data();</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vline-&gt;IsSeparator())</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(vline-&gt;startpt().x(),<sp/>vline-&gt;endpt().x());</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(vline-&gt;startpt().x(),<sp/>vline-&gt;endpt().x());</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/>right<sp/>+=<sp/>vline-&gt;mean_width();</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>==<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--left;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++right;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_1a446ed1c0731f3fb8d7199b45750c6c5c" kindref="member">ColPartition::MakeLinePartition</ref>(</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a5d6cbdd0674e727feda3085026646f6a" kindref="member">BRT_VLINE</ref>,<sp/><ref refid="classtesseract_1_1_tab_find_1aaf22419909b2bf63cb0401285696860a" kindref="member">vertical_skew_</ref>,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left,<sp/>vline-&gt;startpt().<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>(),<sp/>right,<sp/>vline-&gt;endpt().y());</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;<ref refid="classtesseract_1_1_col_partition_1a9fcf07be83840289187d6358ee752a46" kindref="member">set_type</ref>(<ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa0cc815637c8f3f7967719c6abd956f0f" kindref="member">PT_VERT_LINE</ref>);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_image<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a990e3f25988f7d70c40a13225e645492" kindref="member">ColPartitionGridSearch</ref><sp/>part_search(&amp;part_grid_);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>part_search.SetUniqueMode(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>part_search.StartRectSearch(part-&gt;bounding_box());</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>covered;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((covered<sp/>=<sp/>part_search.NextRectSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(covered-&gt;IsImageType())<sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>any_image<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!any_image)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part_grid_.<ref refid="classtesseract_1_1_b_b_grid_1a7b379525e3d60c68e583352ae4b8a750" kindref="member">InsertBBox</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>part);</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>every<sp/>ColPartition<sp/>in<sp/>the<sp/>grid,<sp/>sets<sp/>its<sp/>type<sp/>based<sp/>on<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::SetPartitionTypes()<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/>GridSearch&lt;ColPartition,<sp/>ColPartition_CLIST,<sp/>ColPartition_C_IT&gt;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch(&amp;part_grid_);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;SetPartitionType(<ref refid="classtesseract_1_1_tab_find_1a6faf609de59b4e4fd6baf0c3f19efbaf" kindref="member">resolution_</ref>,<sp/>best_columns_[gsearch.GridY()]);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Only<sp/>images<sp/>remain<sp/>with<sp/>multiple<sp/>types<sp/>in<sp/>a<sp/>run<sp/>of<sp/>partners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>the<sp/>type<sp/>of<sp/>all<sp/>in<sp/>the<sp/>group<sp/>to<sp/>the<sp/>maximum<sp/>of<sp/>the<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::SmoothPartnerRuns()<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/>GridSearch&lt;ColPartition,<sp/>ColPartition_CLIST,<sp/>ColPartition_C_IT&gt;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch(&amp;part_grid_);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>partner<sp/>=<sp/>part-&gt;SingletonPartner(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner-&gt;SingletonPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>!=<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Ooops!<sp/>Partition:(%d<sp/>partners)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;upper_partners()-&gt;length());</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;has<sp/>singleton<sp/>partner:(%d<sp/>partners&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;lower_partners()-&gt;length());</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;Print();</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;but<sp/>its<sp/>singleton<sp/>partner<sp/>is:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner-&gt;SingletonPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;NULL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;SingletonPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)-&gt;Print();</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(partner-&gt;SingletonPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>==<sp/>part);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;SingletonPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartitionSet*<sp/>column_set<sp/>=<sp/>best_columns_[gsearch.GridY()];</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column_count<sp/>=<sp/>column_set-&gt;<ref refid="classtesseract_1_1_col_partition_set_1a6f40d8cf38c386948d471c427decbc7d" kindref="member">ColumnCount</ref>();</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SmoothPartnerRun(column_count<sp/>*<sp/>2<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>functions<sp/>for<sp/>TransformToBlocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>part<sp/>to<sp/>the<sp/>temp<sp/>list<sp/>in<sp/>the<sp/>correct<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::AddToTempPartList(ColPartition*<sp/>part,</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_CLIST*<sp/>temp_list)<sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_y<sp/>=<sp/>part-&gt;MidY();</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(temp_list);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>test_part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref><sp/>||<sp/>test_part-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref>)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Noise<sp/>stays<sp/>in<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_part<sp/>==<sp/>part-&gt;SingletonPartner(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>before<sp/>its<sp/>lower<sp/>partner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_bottom<sp/>=<sp/>test_part-&gt;median_bottom();</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_top<sp/>=<sp/>test_part-&gt;median_top();</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_y<sp/>=<sp/>(neighbour_bottom<sp/>+<sp/>neighbour_top)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour_y<sp/>&lt;<sp/>mid_y)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>is<sp/>above<sp/>test_part<sp/>so<sp/>insert<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part-&gt;HOverlaps(*test_part)<sp/>&amp;&amp;<sp/>!part-&gt;WithinSameMargins(*test_part))</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Incompatibles<sp/>stay<sp/>in<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.cycled_list())<sp/>{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>it.add_to_end(part);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>it.add_before_stay_put(part);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>everything<sp/>from<sp/>the<sp/>temp<sp/>list<sp/>to<sp/>the<sp/>work_set<sp/>assuming<sp/>correct<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::EmptyTempPartList(ColPartition_CLIST*<sp/>temp_list,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WorkingPartSet_LIST*<sp/>work_set)<sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/>ColPartition_C_IT<sp/>it(temp_list);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!it.empty())<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/>it.extract()-&gt;AddToWorkingSet(<ref refid="classtesseract_1_1_grid_base_1a5f09e93ec22c3f7a245eb6611309d8d6" kindref="member">bleft_</ref>,<sp/><ref refid="classtesseract_1_1_grid_base_1ac348165d112922b3d956f924405012cd" kindref="member">tright_</ref>,<sp/><ref refid="classtesseract_1_1_tab_find_1a6faf609de59b4e4fd6baf0c3f19efbaf" kindref="member">resolution_</ref>,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;good_parts_,<sp/>work_set);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/>it.forward();</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>grid<sp/>of<sp/>partitions<sp/>to<sp/>the<sp/>output<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::TransformToBlocks(BLOCK_LIST*<sp/>blocks,</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TO_BLOCK_LIST*<sp/>to_blocks)<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/>WorkingPartSet_LIST<sp/>work_set;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/>ColPartitionSet*<sp/>column_set<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>noise_it(&amp;noise_parts_);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>temp_part_list<sp/>holds<sp/>a<sp/>list<sp/>of<sp/>parts<sp/>at<sp/>the<sp/>same<sp/>grid<sp/>y<sp/>coord</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>they<sp/>can<sp/>be<sp/>added<sp/>in<sp/>the<sp/>correct<sp/>order.<sp/>This<sp/>prevents<sp/>thin<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>like<sp/>horizontal<sp/>lines<sp/>going<sp/>before<sp/>the<sp/>text<sp/>lines<sp/>above<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/>ColPartition_CLIST<sp/>temp_part_list;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>ColPartitions<sp/>in<sp/>the<sp/>grid.<sp/>It<sp/>starts<sp/>at<sp/>the<sp/>top</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/>GridSearch&lt;ColPartition,<sp/>ColPartition_CLIST,<sp/>ColPartition_C_IT&gt;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>gsearch(&amp;part_grid_);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/>gsearch.StartFullSearch();</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_grid_y<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/>ColPartition*<sp/>part;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((part<sp/>=<sp/>gsearch.NextFullSearch())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grid_y<sp/>=<sp/>gsearch.GridY();</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grid_y<sp/>!=<sp/>prev_grid_y)<sp/>{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EmptyTempPartList(&amp;temp_part_list,<sp/>&amp;work_set);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_grid_y<sp/>=<sp/>grid_y;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_columns_[grid_y]<sp/>!=<sp/>column_set)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>column_set<sp/>=<sp/>best_columns_[grid_y];</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Every<sp/>line<sp/>should<sp/>have<sp/>a<sp/>non-null<sp/>best<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(column_set<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>column_set-&gt;ChangeWorkColumns(<ref refid="classtesseract_1_1_grid_base_1a5f09e93ec22c3f7a245eb6611309d8d6" kindref="member">bleft_</ref>,<sp/><ref refid="classtesseract_1_1_grid_base_1ac348165d112922b3d956f924405012cd" kindref="member">tright_</ref>,<sp/><ref refid="classtesseract_1_1_tab_find_1a6faf609de59b4e4fd6baf0c3f19efbaf" kindref="member">resolution_</ref>,</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;good_parts_,<sp/>&amp;work_set);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Changed<sp/>column<sp/>groups<sp/>at<sp/>grid<sp/>index<sp/>%d,<sp/>y=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gsearch.GridY(),<sp/>gsearch.GridY()<sp/>*<sp/><ref refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" kindref="member">gridsize</ref>());</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;type()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fa639c79458d7bb60c9d6f26f661dee484" kindref="member">PT_NOISE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>noise_it.add_to_end(part);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AddToTempPartList(part,<sp/>&amp;temp_part_list);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/>EmptyTempPartList(&amp;temp_part_list,<sp/>&amp;work_set);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>finish<sp/>all<sp/>working<sp/>sets<sp/>and<sp/>transfer<sp/>ColPartitionSets<sp/>to<sp/>block_sets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/>WorkingPartSet_IT<sp/>work_it(&amp;work_set);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!work_it.empty())<sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>WorkingPartSet*<sp/>working_set<sp/>=<sp/>work_it.extract();</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>working_set-&gt;ExtractCompletedBlocks(<ref refid="classtesseract_1_1_grid_base_1a5f09e93ec22c3f7a245eb6611309d8d6" kindref="member">bleft_</ref>,<sp/><ref refid="classtesseract_1_1_grid_base_1ac348165d112922b3d956f924405012cd" kindref="member">tright_</ref>,<sp/><ref refid="classtesseract_1_1_tab_find_1a6faf609de59b4e4fd6baf0c3f19efbaf" kindref="member">resolution_</ref>,</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;good_parts_,<sp/>blocks,<sp/>to_blocks);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>working_set;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>work_it.forward();</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>reflects<sp/>a<sp/>list<sp/>of<sp/>blobs<sp/>in<sp/>the<sp/>y-axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Only<sp/>reflects<sp/>the<sp/>BLOBNBOX<sp/>bounding<sp/>box.<sp/>Not<sp/>the<sp/>blobs<sp/>or<sp/>outlines<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReflectBlobList(BLOBNBOX_LIST*<sp/>bblobs)<sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>it(bblobs);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>it.data()-&gt;reflect_box_in_y_axis();</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reflect<sp/>the<sp/>blob<sp/>boxes<sp/>(but<sp/>not<sp/>the<sp/>outlines)<sp/>in<sp/>the<sp/>y-axis<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>blocks<sp/>get<sp/>created<sp/>in<sp/>the<sp/>correct<sp/>RTL<sp/>order.<sp/>Reflects<sp/>the<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>input_block<sp/>and<sp/>the<sp/>bblobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>reflection<sp/>is<sp/>undone<sp/>in<sp/>RotateAndReskewBlocks<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reflecting<sp/>the<sp/>blocks<sp/>themselves,<sp/>and<sp/>then<sp/>recomputing<sp/>the<sp/>blob<sp/>bounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::ReflectForRtl(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>input_block,<sp/>BLOBNBOX_LIST*<sp/>bblobs)<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/>ReflectBlobList(bblobs);</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/>ReflectBlobList(&amp;input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>ReflectBlobList(&amp;input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1ad16b1c18225b44c50674ca46841b0f5f" kindref="member">small_blobs</ref>);</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/>ReflectBlobList(&amp;input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aa6a3757d385e79ab76f34afb6e8fc684" kindref="member">noise_blobs</ref>);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/>ReflectBlobList(&amp;input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>denorm<sp/>with<sp/>the<sp/>reflection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>new_denorm<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/>new_denorm-&gt;<ref refid="class_d_e_n_o_r_m_1ac667a208c574b073db800890e4e31255" kindref="member">SetupNormalization</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>denorm_,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>-1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/>denorm_<sp/>=<sp/>new_denorm;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>fixes<sp/>up<sp/>blobs<sp/>and<sp/>cblobs<sp/>to<sp/>match<sp/>the<sp/>desired<sp/>rotation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight><highlight class="comment">//<sp/>exploding<sp/>multi-outline<sp/>blobs<sp/>back<sp/>to<sp/>single<sp/>blobs<sp/>and<sp/>accumulating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>bounding<sp/>box<sp/>widths<sp/>and<sp/>heights.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RotateAndExplodeBlobList(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>blob_rotation,</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_LIST*<sp/>bblobs,</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref>*<sp/>widths,</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref>*<sp/>heights)<sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>it(bblobs);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>cblob<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a483f44541a4dd818f02225c92f030e07" kindref="member">cblob</ref>();</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>C_OUTLINE_LIST*<sp/>outlines<sp/>=<sp/>cblob-&gt;<ref refid="class_c___b_l_o_b_1ae510f3d0e7398fbb46608082429eac89" kindref="member">out_list</ref>();</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>C_OUTLINE_IT<sp/>ol_it(outlines);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outlines-&gt;singleton())<sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>blob<sp/>has<sp/>multiple<sp/>outlines<sp/>from<sp/>CJK<sp/>repair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explode<sp/>the<sp/>blob<sp/>back<sp/>into<sp/>individual<sp/>outlines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;!ol_it.empty();<sp/>ol_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c___o_u_t_l_i_n_e" kindref="compound">C_OUTLINE</ref>*<sp/>outline<sp/>=<sp/>ol_it.extract();</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>new_blob<sp/>=<sp/><ref refid="class_b_l_o_b_n_b_o_x_1aa750241e977f7dd90452cfbe317fa468" kindref="member">BLOBNBOX::RealBlob</ref>(outline);</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>blob<sp/>will<sp/>be<sp/>revisited<sp/>later<sp/>since<sp/>we<sp/>add_after_stay_put<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>means<sp/>it<sp/>will<sp/>get<sp/>rotated<sp/>and<sp/>have<sp/>its<sp/>width/height<sp/>added<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>stats<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.add_after_stay_put(new_blob);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cblob;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>blob;</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_rotation.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>!=<sp/>1.0f<sp/>||<sp/>blob_rotation.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>()<sp/>!=<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cblob-&gt;<ref refid="class_c___b_l_o_b_1ab539eb777a99ccc8cb5181ce843abe4b" kindref="member">rotate</ref>(blob_rotation);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a32d07b97c559e7f7f7c58323491aedec" kindref="member">compute_bounding_box</ref>();</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>widths-&gt;<ref refid="class_s_t_a_t_s_1ab8cacba14df28eed1bffc4cea0b2f87f" kindref="member">add</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>heights-&gt;<ref refid="class_s_t_a_t_s_1ab8cacba14df28eed1bffc4cea0b2f87f" kindref="member">add</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Undo<sp/>the<sp/>deskew<sp/>that<sp/>was<sp/>done<sp/>in<sp/>FindTabVectors,<sp/>as<sp/>recognition<sp/>is<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>without<sp/>correcting<sp/>blobs<sp/>or<sp/>blob<sp/>outlines<sp/>for<sp/>skew.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reskew<sp/>the<sp/>completed<sp/>blocks<sp/>to<sp/>put<sp/>them<sp/>back<sp/>to<sp/>the<sp/>original<sp/>rotated<sp/>coords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>were<sp/>created<sp/>by<sp/>CorrectOrientation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>input_is_rtl,<sp/>then<sp/>reflect<sp/>the<sp/>blocks<sp/>in<sp/>the<sp/>y-axis<sp/>to<sp/>undo<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reflection<sp/>that<sp/>was<sp/>done<sp/>before<sp/>FindTabVectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Blocks<sp/>that<sp/>were<sp/>identified<sp/>as<sp/>vertical<sp/>text<sp/>(relative<sp/>to<sp/>the<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight><highlight class="comment">//<sp/>coordinates)<sp/>are<sp/>further<sp/>rotated<sp/>so<sp/>the<sp/>text<sp/>lines<sp/>are<sp/>horizontal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blob<sp/>polygonal<sp/>outlines<sp/>are<sp/>rotated<sp/>to<sp/>match<sp/>the<sp/>position<sp/>of<sp/>the<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>they<sp/>are<sp/>in,<sp/>and<sp/>their<sp/>bounding<sp/>boxes<sp/>are<sp/>recalculated<sp/>to<sp/>be<sp/>accurate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Record<sp/>appropriate<sp/>inverse<sp/>transformations<sp/>and<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>classifier<sp/>transformation<sp/>in<sp/>the<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColumnFinder::RotateAndReskewBlocks(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>input_is_rtl,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TO_BLOCK_LIST*<sp/>blocks)<sp/>{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_is_rtl)<sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>skew<sp/>is<sp/>backwards<sp/>because<sp/>of<sp/>the<sp/>reflection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>tmp<sp/>=<sp/>deskew_;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/>deskew_<sp/>=<sp/>reskew_;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>reskew_<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/>TO_BLOCK_IT<sp/>it(blocks);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_index<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>to_block<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block<sp/>=<sp/>to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a16e698664028b0d6d2193db64560c16b" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Blocks<sp/>are<sp/>created<sp/>on<sp/>the<sp/>deskewed<sp/>blob<sp/>outlines<sp/>in<sp/>TransformToBlocks()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>reskew<sp/>them<sp/>back<sp/>to<sp/>page<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_is_rtl)<sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a2059ad777d16fd501cb61c8fb2a9d032" kindref="member">reflect_polygon_in_y_axis</ref>();</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a70bff81f89d9bf771cfd09952f043b03" kindref="member">rotate</ref>(reskew_);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>right_to_left<sp/>flag<sp/>to<sp/>the<sp/>created<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1ac7c7e1c504a24275c04b27366f94618e" kindref="member">set_right_to_left</ref>(input_is_rtl);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>skew<sp/>angle<sp/>in<sp/>the<sp/>block<sp/>for<sp/>baseline<sp/>computations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1afa8f7d48accd89dccce227cecbc0c962" kindref="member">set_skew</ref>(reskew_);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a788cc0cf8ac2ccc71748904c8788e82d" kindref="member">set_index</ref>(block_index++);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>blob_rotation<sp/>=<sp/>ComputeBlockAndClassifyRotation(block);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>all<sp/>the<sp/>blobs<sp/>if<sp/>needed<sp/>and<sp/>recompute<sp/>the<sp/>bounding<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>block<sp/>median<sp/>blob<sp/>width<sp/>and<sp/>height<sp/>as<sp/>we<sp/>go.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>widths(0,<sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a91950a96127b4a0bb9b237e1f5f889a4" kindref="member" tooltip="get box ">bounding_box</ref>().width());</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>heights(0,<sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a91950a96127b4a0bb9b237e1f5f889a4" kindref="member" tooltip="get box ">bounding_box</ref>().height());</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/>RotateAndExplodeBlobList(blob_rotation,<sp/>&amp;to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>,</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;widths,<sp/>&amp;heights);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>TO_ROW_IT<sp/>row_it(to_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a4846ebdcc832b4b0a762d87c0d83a056" kindref="member">get_rows</ref>());</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row_it.mark_cycle_pt();<sp/>!row_it.cycled_list();<sp/>row_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_o___r_o_w" kindref="compound">TO_ROW</ref>*<sp/>row<sp/>=<sp/>row_it.data();</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RotateAndExplodeBlobList(blob_rotation,<sp/>row-&gt;<ref refid="class_t_o___r_o_w_1a39cee94572e70d35179c27cdf21a3022" kindref="member">blob_list</ref>(),</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;widths,<sp/>&amp;heights);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a9ebbb6f7072ddf986d32a93b19fe5d44" kindref="member">set_median_size</ref>(static_cast&lt;int&gt;(widths.<ref refid="class_s_t_a_t_s_1a3ce7095c6a55592a610085b0fad7d955" kindref="member">median</ref>()<sp/>+<sp/>0.5),</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(heights.<ref refid="class_s_t_a_t_s_1a3ce7095c6a55592a610085b0fad7d955" kindref="member">median</ref>()<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;=<sp/>2)</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Block<sp/>median<sp/>size<sp/>=<sp/>(%d,<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a77cad3caccc9226ba3333638a87ec26f" kindref="member">median_size</ref>().<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a77cad3caccc9226ba3333638a87ec26f" kindref="member">median_size</ref>().<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>());</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>rotations<sp/>for<sp/>the<sp/>block<sp/>(to<sp/>make<sp/>textlines<sp/>horizontal)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>blobs<sp/>(for<sp/>classification)<sp/>and<sp/>sets<sp/>the<sp/>appropriate<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>given<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>rotation<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>applied<sp/>to<sp/>the<sp/>blobs<sp/>to<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight><highlight class="comment">//<sp/>them<sp/>sit<sp/>in<sp/>the<sp/>rotated<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>ColumnFinder::ComputeBlockAndClassifyRotation(<ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>text_rotation_<sp/>tells<sp/>us<sp/>the<sp/>gross<sp/>page<sp/>text<sp/>rotation<sp/>that<sp/>needs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>applied<sp/>for<sp/>classification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>find<sp/>block-level<sp/>classify<sp/>rotation<sp/>by<sp/>orientation<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>mean<sp/>time,<sp/>assume<sp/>that<sp/>&quot;up&quot;<sp/>for<sp/>text<sp/>printed<sp/>in<sp/>the<sp/>minority</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>direction<sp/>(PT_VERTICAL_TEXT)<sp/>is<sp/>perpendicular<sp/>to<sp/>the<sp/>line<sp/>of<sp/>reading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accomplish<sp/>this<sp/>by<sp/>zero-ing<sp/>out<sp/>the<sp/>text<sp/>rotation.<sp/><sp/>This<sp/>covers<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>common<sp/>cases<sp/>of<sp/>image<sp/>credits<sp/>in<sp/>documents<sp/>written<sp/>in<sp/>Latin<sp/>scripts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>page<sp/>headings<sp/>for<sp/>predominantly<sp/>vertically<sp/>written<sp/>CJK<sp/>books.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>classify_rotation(text_rotation_);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>block_rotation(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block-&gt;<ref refid="class_p_d_b_l_k_1a6670779c69aca2d574e4a0590d9b3939" kindref="member">poly_block</ref>()-&gt;<ref refid="class_p_o_l_y___b_l_o_c_k_1af13d2e593a49e7818d800d14633eccd0" kindref="member">isA</ref>()<sp/>==<sp/><ref refid="capi_8h_1a02cfd8369d5ad8c70a8b90c0f40d677fadf6b7dd3b8ca94923c3b94dfe53f230e" kindref="member">PT_VERTICAL_TEXT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>text<sp/>needs<sp/>to<sp/>be<sp/>90<sp/>degrees<sp/>rotated<sp/>relative<sp/>to<sp/>the<sp/>rest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>rest<sp/>has<sp/>a<sp/>90<sp/>degree<sp/>rotation<sp/>already,<sp/>use<sp/>the<sp/>inverse,<sp/>making</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>vertical<sp/>text<sp/>the<sp/>original<sp/>way<sp/>up.<sp/>Otherwise<sp/>use<sp/>90<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clockwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rerotate_.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_rotation<sp/>=<sp/>rerotate_;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>block_rotation<sp/>=<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>(0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>-1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a70bff81f89d9bf771cfd09952f043b03" kindref="member">rotate</ref>(block_rotation);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/>classify_rotation<sp/>=<sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>(1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/>block_rotation.rotate(rotation_);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>block_rotation<sp/>is<sp/>now<sp/>what<sp/>we<sp/>have<sp/>done<sp/>to<sp/>the<sp/>blocks.<sp/>Now<sp/>do<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>thing<sp/>to<sp/>the<sp/>blobs,<sp/>but<sp/>save<sp/>the<sp/>inverse<sp/>rotation<sp/>in<sp/>the<sp/>block,<sp/>as<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>what<sp/>we<sp/>need<sp/>to<sp/>DENORM<sp/>back<sp/>to<sp/>the<sp/>image<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>blob_rotation(block_rotation);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/>block_rotation.set_y(-block_rotation.y());</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a006129cb98cd6e780049f157066bc03e" kindref="member">set_re_rotation</ref>(block_rotation);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a43c63eaacdd0c10688846a03bfe31ef2" kindref="member">set_classify_rotation</ref>(classify_rotation);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Blk<sp/>%d,<sp/>type<sp/>%d<sp/>rerotation(%.2f,<sp/>%.2f),<sp/>char(%.2f,%.2f),<sp/>box:&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_p_d_b_l_k_1acc3cf97b51fa93a659312c966df4a756" kindref="member">index</ref>(),<sp/>block-&gt;<ref refid="class_p_d_b_l_k_1a6670779c69aca2d574e4a0590d9b3939" kindref="member">poly_block</ref>()-&gt;<ref refid="class_p_o_l_y___b_l_o_c_k_1af13d2e593a49e7818d800d14633eccd0" kindref="member">isA</ref>(),</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a820d5ff979ad26219ad3914551d70881" kindref="member">re_rotation</ref>().<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>(),<sp/>block-&gt;<ref refid="class_b_l_o_c_k_1a820d5ff979ad26219ad3914551d70881" kindref="member">re_rotation</ref>().<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>(),</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classify_rotation.x(),<sp/>classify_rotation.y());</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blob_rotation;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/colfind.cpp"/>
  </compounddef>
</doxygen>
