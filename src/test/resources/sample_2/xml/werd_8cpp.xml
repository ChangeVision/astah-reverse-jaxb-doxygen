<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="werd_8cpp" kind="file">
    <compoundname>werd.cpp</compoundname>
    <includes refid="mfcpch_8h" local="yes">mfcpch.h</includes>
    <includes refid="blckerr_8h" local="yes">blckerr.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="linlsq_8h" local="yes">linlsq.h</includes>
    <includes refid="werd_8h" local="yes">werd.h</includes>
    <incdepgraph>
      <node id="12989">
        <label>mfcpch.h</label>
        <link refid="mfcpch_8h"/>
      </node>
      <node id="13012">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="13003">
        <label>stdlib.h</label>
      </node>
      <node id="12993">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="12994" relation="include">
        </childnode>
      </node>
      <node id="12990">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="12991" relation="include">
        </childnode>
      </node>
      <node id="13022">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="12996" relation="include">
        </childnode>
      </node>
      <node id="13002">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="13003" relation="include">
        </childnode>
        <childnode refid="12997" relation="include">
        </childnode>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="13004" relation="include">
        </childnode>
        <childnode refid="12991" relation="include">
        </childnode>
        <childnode refid="13006" relation="include">
        </childnode>
      </node>
      <node id="13017">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="13018" relation="include">
        </childnode>
        <childnode refid="13021" relation="include">
        </childnode>
      </node>
      <node id="13005">
        <label>stddef.h</label>
      </node>
      <node id="12991">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="12992" relation="include">
        </childnode>
      </node>
      <node id="12994">
        <label>limits.h</label>
      </node>
      <node id="12988">
        <label>ccstruct/werd.cpp</label>
        <link refid="werd.cpp"/>
        <childnode refid="12989" relation="include">
        </childnode>
        <childnode refid="12990" relation="include">
        </childnode>
        <childnode refid="12995" relation="include">
        </childnode>
        <childnode refid="12998" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13008">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="13000" relation="include">
        </childnode>
      </node>
      <node id="13020">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="12999" relation="include">
        </childnode>
      </node>
      <node id="13016">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="12992" relation="include">
        </childnode>
        <childnode refid="13002" relation="include">
        </childnode>
        <childnode refid="13007" relation="include">
        </childnode>
      </node>
      <node id="12997">
        <label>string.h</label>
      </node>
      <node id="13021">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="13000" relation="include">
        </childnode>
        <childnode refid="12999" relation="include">
        </childnode>
        <childnode refid="13012" relation="include">
        </childnode>
        <childnode refid="13022" relation="include">
        </childnode>
        <childnode refid="13023" relation="include">
        </childnode>
      </node>
      <node id="13015">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="12992" relation="include">
        </childnode>
      </node>
      <node id="13011">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="12992" relation="include">
        </childnode>
      </node>
      <node id="13018">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="13019" relation="include">
        </childnode>
        <childnode refid="13020" relation="include">
        </childnode>
        <childnode refid="13015" relation="include">
        </childnode>
        <childnode refid="13021" relation="include">
        </childnode>
        <childnode refid="12990" relation="include">
        </childnode>
        <childnode refid="13022" relation="include">
        </childnode>
      </node>
      <node id="13014">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="13009" relation="include">
        </childnode>
        <childnode refid="13015" relation="include">
        </childnode>
        <childnode refid="13016" relation="include">
        </childnode>
        <childnode refid="13013" relation="include">
        </childnode>
        <childnode refid="12990" relation="include">
        </childnode>
        <childnode refid="13017" relation="include">
        </childnode>
        <childnode refid="13024" relation="include">
        </childnode>
      </node>
      <node id="13024">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="13025" relation="include">
        </childnode>
        <childnode refid="13014" relation="include">
        </childnode>
      </node>
      <node id="13006">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="12991" relation="include">
        </childnode>
      </node>
      <node id="12998">
        <label>linlsq.h</label>
        <link refid="linlsq_8h"/>
        <childnode refid="12999" relation="include">
        </childnode>
        <childnode refid="13009" relation="include">
        </childnode>
      </node>
      <node id="13019">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="12999" relation="include">
        </childnode>
        <childnode refid="13020" relation="include">
        </childnode>
      </node>
      <node id="13000">
        <label>math.h</label>
      </node>
      <node id="13007">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="12991" relation="include">
        </childnode>
      </node>
      <node id="13026">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="12999" relation="include">
        </childnode>
      </node>
      <node id="13009">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="13010" relation="include">
        </childnode>
        <childnode refid="13013" relation="include">
        </childnode>
      </node>
      <node id="13010">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="13003" relation="include">
        </childnode>
        <childnode refid="13011" relation="include">
        </childnode>
        <childnode refid="12991" relation="include">
        </childnode>
        <childnode refid="12995" relation="include">
        </childnode>
        <childnode refid="13012" relation="include">
        </childnode>
      </node>
      <node id="13004">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="13005" relation="include">
        </childnode>
        <childnode refid="12992" relation="include">
        </childnode>
      </node>
      <node id="13001">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="12992" relation="include">
        </childnode>
        <childnode refid="13002" relation="include">
        </childnode>
        <childnode refid="13007" relation="include">
        </childnode>
      </node>
      <node id="12999">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="13000" relation="include">
        </childnode>
        <childnode refid="13001" relation="include">
        </childnode>
        <childnode refid="13008" relation="include">
        </childnode>
      </node>
      <node id="13023">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="13009" relation="include">
        </childnode>
      </node>
      <node id="12992">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="12993" relation="include">
        </childnode>
      </node>
      <node id="12996">
        <label>stdio.h</label>
      </node>
      <node id="13013">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="12997" relation="include">
        </childnode>
        <childnode refid="12993" relation="include">
        </childnode>
        <childnode refid="13004" relation="include">
        </childnode>
      </node>
      <node id="12995">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="12996" relation="include">
        </childnode>
        <childnode refid="12997" relation="include">
        </childnode>
      </node>
      <node id="13025">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="13026" relation="include">
        </childnode>
        <childnode refid="13002" relation="include">
        </childnode>
        <childnode refid="13004" relation="include">
        </childnode>
        <childnode refid="13021" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="werd_8cpp_1a70083999d911cb1aa3ed0580bc66fd22" prot="public" static="no">
        <name>FIRST_COLOUR</name>
        <initializer><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a0959f7470b08ae1a38aa7e38fba29402" kindref="member">ScrollView::RED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" line="31" column="9" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="werd_8cpp_1aaa8f711f73dfdf579c53b00dbc721966" prot="public" static="no">
        <name>LAST_COLOUR</name>
        <initializer><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a0ae903faf0b9c434a6cff979e51620f8" kindref="member">ScrollView::AQUAMARINE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" line="32" column="9" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="werd_8cpp_1a7c40159b1166c369b1307ac9257f1405" prot="public" static="no">
        <name>CHILD_COLOUR</name>
        <initializer><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a3147083bcb68eb690858099c736e6857" kindref="member">ScrollView::BROWN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" line="33" column="9" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="werd_8cpp_1ad8da5b5584b304c496fe8cf4b4a1b65f" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_e_r_r_c_o_d_e" kindref="compound">ERRCODE</ref></type>
        <definition>const ERRCODE CANT_SCALE_EDGESTEPS</definition>
        <argsstring></argsstring>
        <name>CANT_SCALE_EDGESTEPS</name>
        <initializer>=
    &quot;Attempted to scale an edgestep format word&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="werd_8cpp_1a8a8c04307eb98f244554d5b2eb97ec56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int word_comparator</definition>
        <argsstring>(const void *word1p, const void *word2p)</argsstring>
        <name>word_comparator</name>
        <param>
          <type>const void *</type>
          <declname>word1p</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>word2p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="werd_8cpp_1a8a8c04307eb98f244554d5b2eb97ec56" kindref="member">word_comparator()</ref></para><para>word comparator used to sort a word list so that words are in increasing order of left edge. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" line="384" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="384" bodyend="388"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>werd.cpp<sp/><sp/>(Formerly<sp/>word.c)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Code<sp/>for<sp/>the<sp/>WERD<sp/>class.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Tue<sp/>Oct<sp/>08<sp/>14:32:12<sp/>BST<sp/>1991</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>1991,<sp/>Hewlett-Packard<sp/>Ltd.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfcpch_8h" kindref="compound">mfcpch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blckerr_8h" kindref="compound">blckerr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="linlsq_8h" kindref="compound">linlsq.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="werd_8h" kindref="compound">werd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIRST_COLOUR<sp/><sp/><sp/><sp/>ScrollView::RED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//&lt;<sp/>first<sp/>rainbow<sp/>colour</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LAST_COLOUR<sp/><sp/><sp/><sp/><sp/>ScrollView::AQUAMARINE<sp/><sp/>//&lt;<sp/>last<sp/>rainbow<sp/>colour</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CHILD_COLOUR<sp/><sp/><sp/><sp/>ScrollView::BROWN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//&lt;<sp/>colour<sp/>of<sp/>children</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_e_r_r_c_o_d_e" kindref="compound">ERRCODE</ref><sp/><ref refid="werd_8cpp_1ad8da5b5584b304c496fe8cf4b4a1b65f" kindref="member">CANT_SCALE_EDGESTEPS</ref><sp/>=</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>scale<sp/>an<sp/>edgestep<sp/>format<sp/>word&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="elst2_8h_1a574b9d080e6a413d915407cea6ac0243" kindref="member">ELIST2IZE</ref>(<ref refid="class_w_e_r_d" kindref="compound">WERD</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>::<ref refid="class_w_e_r_d" kindref="compound">WERD</ref>(C_BLOB_LIST<sp/>*blob_list,<sp/><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref><sp/>blank_count,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>:<sp/>blanks(blank_count),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_e_d_g_e_p_t_1ab8b8cb59aa1db9d58bd4b5c66c2a6755" kindref="member">flags</ref>(0),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>script_id_(0),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>correct(text)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>start_it<sp/>=<sp/>blob_list;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>end_it<sp/>=<sp/>blob_list;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>rej_cblob_it<sp/>=<sp/>&amp;rej_cblobs;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>C_OUTLINE_IT<sp/>c_outline_it;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>inverted_vote<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>non_inverted_vote<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>blob_list&apos;s<sp/>elements<sp/>into<sp/>cblobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!end_it.at_last())</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>end_it.forward();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>cblobs.assign_to_sublist(&amp;start_it,<sp/>&amp;end_it);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/>Set<sp/>white<sp/>on<sp/>black<sp/>flag<sp/>for<sp/>the<sp/>WERD,<sp/>moving<sp/>any<sp/>duff<sp/>blobs<sp/>onto<sp/>the</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/>rej_cblobs<sp/>list.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/>First,<sp/>walk<sp/>the<sp/>cblobs<sp/>checking<sp/>the<sp/>inverse<sp/>flag<sp/>for<sp/>each<sp/>outline<sp/>of<sp/>each</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/>cblob.<sp/>If<sp/>a<sp/>cblob<sp/>has<sp/>inconsistent<sp/>flag<sp/>settings<sp/>for<sp/>its<sp/>different</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>outlines,<sp/>move<sp/>the<sp/>blob<sp/>to<sp/>the<sp/>reject<sp/>list.<sp/>Otherwise,<sp/>increment<sp/>the</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>appropriate<sp/>w-on-b<sp/>or<sp/>b-on-w<sp/>vote<sp/>for<sp/>the<sp/>word.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>Now<sp/>set<sp/>the<sp/>inversion<sp/>flag<sp/>for<sp/>the<sp/>WERD<sp/>by<sp/>maximum<sp/>vote.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>Walk<sp/>the<sp/>blobs<sp/>again,<sp/>moving<sp/>any<sp/>blob<sp/>whose<sp/>inversion<sp/>flag<sp/>does<sp/>not<sp/>agree</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>the<sp/>concencus<sp/>onto<sp/>the<sp/>reject<sp/>list.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>start_it.set_to_list(&amp;cblobs);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_it.empty())</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(start_it.mark_cycle_pt();<sp/>!start_it.cycled_list();<sp/>start_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/>reject_blob<sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/>blob_inverted;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>c_outline_it.set_to_list(start_it.data()-&gt;out_list());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_inverted<sp/>=<sp/>c_outline_it.data()-&gt;flag(<ref refid="coutln_8h_1a2eecf9690392754a783bc842b1f45fd2a343d9e88b102ec4a2ee233445cb29f7a" kindref="member">COUT_INVERSE</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c_outline_it.mark_cycle_pt();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!c_outline_it.cycled_list()<sp/>&amp;&amp;<sp/>!reject_blob;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_outline_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reject_blob<sp/>=<sp/>c_outline_it.data()-&gt;flag(<ref refid="coutln_8h_1a2eecf9690392754a783bc842b1f45fd2a343d9e88b102ec4a2ee233445cb29f7a" kindref="member">COUT_INVERSE</ref>)<sp/>!=<sp/>blob_inverted;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reject_blob)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rej_cblob_it.add_after_then_move(start_it.extract());</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_inverted)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inverted_vote++;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_inverted_vote++;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>flags.set_bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0beaecff222839a9a16c19d63463bfeb9ca7" kindref="member">W_INVERSE</ref>,<sp/>(inverted_vote<sp/>&gt;<sp/>non_inverted_vote));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>start_it.set_to_list(&amp;cblobs);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_it.empty())</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(start_it.mark_cycle_pt();<sp/>!start_it.cycled_list();<sp/>start_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>c_outline_it.set_to_list(start_it.data()-&gt;out_list());</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c_outline_it.data()-&gt;flag(<ref refid="coutln_8h_1a2eecf9690392754a783bc842b1f45fd2a343d9e88b102ec4a2ee233445cb29f7a" kindref="member">COUT_INVERSE</ref>)<sp/>!=<sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0beaecff222839a9a16c19d63463bfeb9ca7" kindref="member">W_INVERSE</ref>))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rej_cblob_it.add_after_then_move(start_it.extract());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><ref refid="class_w_e_r_d_1aa66df1d975f49d11f68b86e31c379f39" kindref="member">WERD::WERD</ref>(C_BLOB_LIST<sp/>*<sp/>blob_list,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>In<sp/>word<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref><sp/>*<sp/>clone)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Source<sp/>of<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>:<sp/>flags(clone-&gt;flags),</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>script_id_(clone-&gt;script_id_),</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>correct(clone-&gt;correct)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>start_it<sp/>=<sp/>blob_list;<sp/><sp/></highlight><highlight class="comment">//<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>end_it<sp/>=<sp/>blob_list;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!end_it.at_last<sp/>())</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>end_it.forward<sp/>();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//move<sp/>to<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>((C_BLOB_LIST<sp/>*)<sp/>(&amp;cblobs))-&gt;assign_to_sublist<sp/>(&amp;start_it,<sp/>&amp;end_it);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//move<sp/>to<sp/>our<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>blanks<sp/>=<sp/>clone-&gt;blanks;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,&quot;Wrong<sp/>constructor!!!!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>WERD<sp/>from<sp/>a<sp/>single_blob<sp/>and<sp/>clone<sp/>the<sp/>flags<sp/>from<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>W_BOL<sp/>and<sp/>W_EOL<sp/>flags<sp/>are<sp/>set<sp/>according<sp/>to<sp/>the<sp/>given<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/><ref refid="class_w_e_r_d_1a31a5b8f16e1629362369ba56a23c7cee" kindref="member">WERD::ConstructFromSingleBlob</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bol,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>eol,<sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>blob)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>C_BLOB_LIST<sp/>temp_blobs;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>temp_it(&amp;temp_blobs);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>temp_it.add_after_then_move(blob);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>blob_word<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1aa66df1d975f49d11f68b86e31c379f39" kindref="member">WERD</ref>(&amp;temp_blobs,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>blob_word-&gt;<ref refid="class_w_e_r_d_1aa42c9f53794ab51c95503cd277e89c60" kindref="member">set_flag</ref>(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0beaff21d7c8c8992120fff35942408a00d2" kindref="member">W_BOL</ref>,<sp/>bol);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>blob_word-&gt;<ref refid="class_w_e_r_d_1aa42c9f53794ab51c95503cd277e89c60" kindref="member">set_flag</ref>(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea62efb985a62d85e014ee5ab039dd50ce" kindref="member">W_EOL</ref>,<sp/>eol);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blob_word;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/><ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">WERD::bounding_box</ref>()<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>box<sp/>being<sp/>built</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>rej_cblob_it<sp/>=<sp/>&amp;rej_cblobs;<sp/><sp/></highlight><highlight class="comment">//<sp/>rejected<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rej_cblob_it.mark_cycle_pt();<sp/>!rej_cblob_it.cycled_list();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rej_cblob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>box<sp/>+=<sp/>rej_cblob_it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>it<sp/>=<sp/>&amp;cblobs;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blobs<sp/>of<sp/>WERD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>box<sp/>+=<sp/>it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>box;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1aff3b595b716acd7e25c6f4df518c84fc" kindref="member">WERD::move</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/><ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>cblob_it(&amp;cblobs);<sp/><sp/></highlight><highlight class="comment">//<sp/>cblob<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cblob_it.mark_cycle_pt();<sp/>!cblob_it.cycled_list();<sp/>cblob_it.forward())</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>cblob_it.data()-&gt;move(vec);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1ad856eb3b9230d14fe8f013bfd03d8828" kindref="member">WERD::join_on</ref>(<ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>blob_it(&amp;cblobs);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>src_it(&amp;other-&gt;cblobs);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>rej_cblob_it(&amp;rej_cblobs);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>src_rej_it(&amp;other-&gt;rej_cblobs);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!src_it.empty())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_it.add_to_end(src_it.extract());</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>src_it.forward();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!src_rej_it.empty())<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>rej_cblob_it.add_to_end(src_rej_it.extract());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>src_rej_it.forward();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1ac7ff7b4b07fa3252347f949395238aca" kindref="member">WERD::copy_on</ref>(<ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed<sp/>=<sp/>other-&gt;<ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&lt;<sp/><ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>c_blob_it(&amp;cblobs);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>C_BLOB_LIST<sp/>c_blobs;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>c_blobs.deep_copy(&amp;other-&gt;cblobs,<sp/>&amp;<ref refid="class_c___b_l_o_b_1abe4a0174938ec7e4d968382e8274c237" kindref="member">C_BLOB::deep_copy</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reversed)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>c_blob_it.add_list_before(&amp;c_blobs);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>c_blob_it.move_to_last();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>c_blob_it.add_list_after(&amp;c_blobs);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!other-&gt;rej_cblobs.empty())<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>rej_c_blob_it(&amp;rej_cblobs);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_LIST<sp/>new_rej_c_blobs;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>new_rej_c_blobs.deep_copy(&amp;other-&gt;rej_cblobs,<sp/>&amp;<ref refid="class_c___b_l_o_b_1abe4a0174938ec7e4d968382e8274c237" kindref="member">C_BLOB::deep_copy</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reversed)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rej_c_blob_it.add_list_before(&amp;new_rej_c_blobs);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rej_c_blob_it.move_to_last();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rej_c_blob_it.add_list_after(&amp;new_rej_c_blobs);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1a5a2d228e15200b7535fac2144109b677" kindref="member">WERD::print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Blanks=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>blanks);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Flags<sp/>=<sp/>%d<sp/>=<sp/>0%o\n&quot;</highlight><highlight class="normal">,<sp/>flags.val,<sp/>flags.val);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_SEGMENTED<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea8741ef3078614d5d00f0898b2dbd5bd7" kindref="member">W_SEGMENTED</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_ITALIC<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0beafb8a30718938e1e273e054e550fefac5" kindref="member">W_ITALIC</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_BOL<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0beaff21d7c8c8992120fff35942408a00d2" kindref="member">W_BOL</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_EOL<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea62efb985a62d85e014ee5ab039dd50ce" kindref="member">W_EOL</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_NORMALIZED<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea81d9f266977ff9be129e4de409a124ed" kindref="member">W_NORMALIZED</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_SCRIPT_HAS_XHEIGHT<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea3f41a0c5d64002c322177a4243a13aae" kindref="member">W_SCRIPT_HAS_XHEIGHT</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_SCRIPT_IS_LATIN<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea8c3664a200b620de34a3cb691cb1e71c" kindref="member">W_SCRIPT_IS_LATIN</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_DONT_CHOP<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0beac5f734536428e7e43dffe5c87d72d14e" kindref="member">W_DONT_CHOP</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_REP_CHAR<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0beaa20dcde8552519bb81c4206b0e57a8ce" kindref="member">W_REP_CHAR</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_FUZZY_SP<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea3580884b5b0335502fb928db4a0a2024" kindref="member">W_FUZZY_SP</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>W_FUZZY_NON<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>flags.bit(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea675eadd051ea82d1f288751799bfa31c" kindref="member">W_FUZZY_NON</ref>)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FALSE<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Correct=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>correct.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Rejected<sp/>cblob<sp/>count<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>rej_cblobs.length());</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Script<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>script_id_);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1ae88f52597b2b6fffa9ca2f8be53908c4" kindref="member">WERD::plot</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>*window,<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>colour)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>it<sp/>=<sp/>&amp;cblobs;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>it.data()-&gt;plot(window,<sp/>colour,<sp/>colour);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d_1adc9c85b2475c4165e3d9ea984be5a0f2" kindref="member">plot_rej_blobs</ref>(window);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>next<sp/>color<sp/>in<sp/>the<sp/>(looping)<sp/>rainbow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/><ref refid="class_w_e_r_d_1a05865f2b7c0365adaf4c76dd06dd0626" kindref="member">WERD::NextColor</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>colour)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/><ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(colour<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next<sp/>&gt;=<sp/><ref refid="werd_8cpp_1aaa8f711f73dfdf579c53b00dbc721966" kindref="member">LAST_COLOUR</ref><sp/>||<sp/>next<sp/>&lt;<sp/><ref refid="werd_8cpp_1a70083999d911cb1aa3ed0580bc66fd22" kindref="member">FIRST_COLOUR</ref>)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>next<sp/>=<sp/><ref refid="werd_8cpp_1a70083999d911cb1aa3ed0580bc66fd22" kindref="member">FIRST_COLOUR</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1ae88f52597b2b6fffa9ca2f8be53908c4" kindref="member">WERD::plot</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>colour<sp/>=<sp/><ref refid="werd_8cpp_1a70083999d911cb1aa3ed0580bc66fd22" kindref="member">FIRST_COLOUR</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>it<sp/>=<sp/>&amp;cblobs;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>it.data()-&gt;plot(window,<sp/>colour,<sp/><ref refid="werd_8cpp_1a7c40159b1166c369b1307ac9257f1405" kindref="member">CHILD_COLOUR</ref>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>colour<sp/>=<sp/><ref refid="class_w_e_r_d_1a05865f2b7c0365adaf4c76dd06dd0626" kindref="member">NextColor</ref>(colour);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d_1adc9c85b2475c4165e3d9ea984be5a0f2" kindref="member">plot_rej_blobs</ref>(window);</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1adc9c85b2475c4165e3d9ea984be5a0f2" kindref="member">WERD::plot_rej_blobs</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref><sp/>*window)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>it<sp/>=<sp/>&amp;rej_cblobs;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>it.data()-&gt;plot(window,<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a7bba33cbbab6aaa71dce1aad46ecc3a5" kindref="member">ScrollView::GREY</ref>,<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a7bba33cbbab6aaa71dce1aad46ecc3a5" kindref="member">ScrollView::GREY</ref>);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><ref refid="class_w_e_r_d" kindref="compound">WERD</ref><sp/>*<ref refid="class_w_e_r_d_1a338086c2fee2164c3bf82add310631b4" kindref="member">WERD::shallow_copy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref><sp/>*new_word<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1aa66df1d975f49d11f68b86e31c379f39" kindref="member">WERD</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>new_word-&gt;blanks<sp/>=<sp/>blanks;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>new_word-&gt;flags<sp/>=<sp/><ref refid="struct_e_d_g_e_p_t_1ab8b8cb59aa1db9d58bd4b5c66c2a6755" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>new_word-&gt;dummy<sp/>=<sp/>dummy;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>new_word-&gt;correct<sp/>=<sp/>correct;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_word;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><ref refid="class_w_e_r_d" kindref="compound">WERD</ref><sp/>&amp;<sp/><ref refid="class_w_e_r_d_1a872b2e669f0445e9cdd9ffb8d8479d31" kindref="member">WERD::operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref><sp/>&amp;<sp/>source)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_e_l_i_s_t2___l_i_n_k_1a8405b0dd69c6c60c989c6c84f126aa61" kindref="member">ELIST2_LINK::operator= </ref>(source);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>blanks<sp/>=<sp/>source.blanks;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>flags<sp/>=<sp/>source.flags;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>script_id_<sp/>=<sp/>source.script_id_;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>dummy<sp/>=<sp/>source.dummy;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>correct<sp/>=<sp/>source.correct;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cblobs.empty())</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>cblobs.clear();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>cblobs.deep_copy(&amp;source.cblobs,<sp/>&amp;<ref refid="class_c___b_l_o_b_1abe4a0174938ec7e4d968382e8274c237" kindref="member">C_BLOB::deep_copy</ref>);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rej_cblobs.empty())</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>rej_cblobs.clear();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>rej_cblobs.deep_copy(&amp;source.rej_cblobs,<sp/>&amp;<ref refid="class_c___b_l_o_b_1abe4a0174938ec7e4d968382e8274c237" kindref="member">C_BLOB::deep_copy</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="werd_8cpp_1a8a8c04307eb98f244554d5b2eb97ec56" kindref="member">word_comparator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*word1p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*word2p)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref><sp/>*word1<sp/>=<sp/>*(<ref refid="class_w_e_r_d" kindref="compound">WERD</ref><sp/>**)word1p;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref><sp/>*word2<sp/>=<sp/>*(<ref refid="class_w_e_r_d" kindref="compound">WERD</ref><sp/>**)word2p;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>word1-&gt;<ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>word2-&gt;<ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/><ref refid="class_w_e_r_d_1a025bce7764e4c2ef007e7d53d9a396f8" kindref="member">WERD::ConstructWerdWithNewBlobs</ref>(C_BLOB_LIST*<sp/>all_blobs,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_BLOB_LIST*<sp/>orphan_blobs)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>C_BLOB_LIST<sp/>current_blob_list;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>werd_blobs_it(&amp;current_blob_list);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>word&apos;s<sp/>c_blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>werd_blobs_it.add_list_after(<ref refid="class_w_e_r_d_1a174baefaa99afbfdbf444e4199f3b529" kindref="member">cblob_list</ref>());</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>blob<sp/>list.<sp/>These<sp/>contain<sp/>the<sp/>blobs<sp/>which<sp/>will<sp/>form<sp/>the<sp/>new<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>C_BLOB_LIST<sp/>new_werd_blobs;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>new_blobs_it(&amp;new_werd_blobs);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not_found_blobs<sp/>contains<sp/>the<sp/>list<sp/>of<sp/>current<sp/>word&apos;s<sp/>blobs<sp/>for<sp/>which<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>corresponding<sp/>blob<sp/>wasn&apos;t<sp/>found<sp/>in<sp/>the<sp/>input<sp/>all_blobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>C_BLOB_LIST<sp/>not_found_blobs;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>not_found_it(&amp;not_found_blobs);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>not_found_it.move_to_last();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>werd_blobs_it.move_to_first();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(werd_blobs_it.mark_cycle_pt();<sp/>!werd_blobs_it.cycled_list();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>werd_blobs_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>werd_blob<sp/>=<sp/>werd_blobs_it.extract();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>werd_blob_box<sp/>=<sp/>werd_blob-&gt;<ref refid="class_c___b_l_o_b_1a77e52e29e2c622a3a63bb7edb110f6ab" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>find<sp/>the<sp/>corresponding<sp/>blob<sp/>for<sp/>this<sp/>blob<sp/>in<sp/>the<sp/>all_blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list.<sp/>For<sp/>now,<sp/>follow<sp/>the<sp/>inefficient<sp/>method<sp/>of<sp/>pairwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>comparisons.<sp/>Ideally,<sp/>one<sp/>can<sp/>pre-bucket<sp/>the<sp/>blobs<sp/>by<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>all_blobs_it(all_blobs);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(all_blobs_it.mark_cycle_pt();<sp/>!all_blobs_it.cycled_list();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blobs_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>a_blob<sp/>=<sp/>all_blobs_it.data();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>overlap<sp/>of<sp/>the<sp/>two<sp/>blobs.<sp/>If<sp/>major,<sp/>a_blob<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>added<sp/>to<sp/>the<sp/>new<sp/>blobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>a_blob_box<sp/>=<sp/>a_blob-&gt;<ref refid="class_c___b_l_o_b_1a77e52e29e2c622a3a63bb7edb110f6ab" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_blob_box.<ref refid="class_t_b_o_x_1a7c6996aea1eb6be07b1d6634bf36cfd6" kindref="member">null_box</ref>())<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bounding<sp/>box<sp/>couldn&apos;t<sp/>be<sp/>ascertained\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(werd_blob_box.<ref refid="class_t_b_o_x_1a5d4e2c5f91b791e94d4c94e513180632" kindref="member">contains</ref>(a_blob_box)<sp/>||</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>werd_blob_box.<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(a_blob_box))<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Old<sp/>blobs<sp/>are<sp/>from<sp/>minimal<sp/>splits,<sp/>therefore<sp/>are<sp/>expected<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bigger.<sp/>The<sp/>new<sp/>small<sp/>blobs<sp/>should<sp/>cover<sp/>a<sp/>significant<sp/>portion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blobs_it.extract();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_blobs_it.add_after_then_move(a_blob);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>not_found_it.add_after_then_move(werd_blob);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>werd_blob;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>not<sp/>found<sp/>blobs.<sp/>Some<sp/>of<sp/>them<sp/>may<sp/>be<sp/>due<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>under-segmentation<sp/>(which<sp/>is<sp/>OK,<sp/>since<sp/>the<sp/>corresponding<sp/>blob<sp/>is<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>list<sp/>in<sp/>that<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>not_found_it.move_to_first();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(not_found_it.mark_cycle_pt();<sp/>!not_found_it.cycled_list();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not_found_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>not_found<sp/>=<sp/>not_found_it.data();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>not_found_box<sp/>=<sp/>not_found-&gt;<ref refid="class_c___b_l_o_b_1a77e52e29e2c622a3a63bb7edb110f6ab" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>existing_blobs_it(new_blobs_it);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(existing_blobs_it.mark_cycle_pt();<sp/>!existing_blobs_it.cycled_list();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>existing_blobs_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>a_blob<sp/>=<sp/>existing_blobs_it.data();</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>a_blob_box<sp/>=<sp/>a_blob-&gt;<ref refid="class_c___b_l_o_b_1a77e52e29e2c622a3a63bb7edb110f6ab" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((not_found_box.<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(a_blob_box)<sp/>||</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a_blob_box.<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(not_found_box))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not_found_box.<ref refid="class_t_b_o_x_1a7ae8e4b8b3af5b23db3d6c959249064c" kindref="member">y_overlap</ref>(a_blob_box))<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>taken<sp/>care<sp/>of.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>not_found_it.extract();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orphan_blobs)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>orphan_blobs_it(orphan_blobs);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>orphan_blobs_it.move_to_last();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>orphan_blobs_it.add_list_after(&amp;not_found_blobs);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>blobs<sp/>are<sp/>ready.<sp/>Create<sp/>a<sp/>new<sp/>werd<sp/>object<sp/>with<sp/>these.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>new_werd<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_werd_blobs.empty())<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>new_werd<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d_1aa66df1d975f49d11f68b86e31c379f39" kindref="member">WERD</ref>(&amp;new_werd_blobs,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>blobs<sp/>back<sp/>to<sp/>this<sp/>word<sp/>so<sp/>that<sp/>it<sp/>can<sp/>be<sp/>reused.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>this_list_it(<ref refid="class_w_e_r_d_1a174baefaa99afbfdbf444e4199f3b529" kindref="member">cblob_list</ref>());</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>this_list_it.add_list_after(&amp;not_found_blobs);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_werd;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp"/>
  </compounddef>
</doxygen>
