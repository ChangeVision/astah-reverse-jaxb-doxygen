<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_e_l_i_s_t" kind="class" prot="public">
    <compoundname>ELIST</compoundname>
    <derivedcompoundref refid="classtesseract_1_1_ambig_spec___l_i_s_t" prot="public" virt="non-virtual">tesseract::AmbigSpec_LIST</derivedcompoundref>
    <includes refid="elst_8h" local="no">elst.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_e_l_i_s_t_1a4aec179a718fd9e202aa2075bfaa5709" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ELIST_ITERATOR</definition>
        <argsstring></argsstring>
        <name>ELIST_ITERATOR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="116" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_e_l_i_s_t_1a3766e435cd48f1bc70d7ddcdf36004e7" prot="private" static="no" mutable="no">
        <type><ref refid="class_e_l_i_s_t___l_i_n_k" kindref="compound">ELIST_LINK</ref> *</type>
        <definition>ELIST_LINK* ELIST::last</definition>
        <argsstring></argsstring>
        <name>last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="118" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_e_l_i_s_t_1aa5dbbe84c1fb6adc62c7942cc5efa2a5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_e_l_i_s_t___l_i_n_k" kindref="compound">ELIST_LINK</ref> *</type>
        <definition>ELIST_LINK* ELIST::First</definition>
        <argsstring>()</argsstring>
        <name>First</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="120" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.h" bodystart="120" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_e_l_i_s_t_1ae37e11e80a427b1ea5c43321d7f8af56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ELIST::ELIST</definition>
        <argsstring>()</argsstring>
        <name>ELIST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="125" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.h" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1a9e3110796c3e5189fa846b44122176ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ELIST::internal_clear</definition>
        <argsstring>(void(*zapper)(ELIST_LINK *))</argsstring>
        <name>internal_clear</name>
        <param>
          <type>void(*)(<ref refid="class_e_l_i_s_t___l_i_n_k" kindref="compound">ELIST_LINK</ref> *)</type>
          <declname>zapper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="129" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.cpp" bodystart="42" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1a7788b6c4e4b9623e43c58fe3b2976edd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ELIST::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="133" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.h" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1abbe9f968d190bf5bf261e13af7bfc543" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ELIST::singleton</definition>
        <argsstring>() const </argsstring>
        <name>singleton</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="137" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.h" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1a8bd9cf7457dd6a17a68860b77abd379a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ELIST::shallow_copy</definition>
        <argsstring>(ELIST *from_list)</argsstring>
        <name>shallow_copy</name>
        <param>
          <type><ref refid="class_e_l_i_s_t" kindref="compound">ELIST</ref> *</type>
          <declname>from_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="141" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1a575eb2690055500a718e5ea8c6740de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ELIST::internal_deep_copy</definition>
        <argsstring>(ELIST_LINK *(*copier)(ELIST_LINK *), const ELIST *list)</argsstring>
        <name>internal_deep_copy</name>
        <param>
          <type><ref refid="class_e_l_i_s_t___l_i_n_k" kindref="compound">ELIST_LINK</ref> *(*)(<ref refid="class_e_l_i_s_t___l_i_n_k" kindref="compound">ELIST_LINK</ref> *)</type>
          <declname>copier</declname>
        </param>
        <param>
          <type>const <ref refid="class_e_l_i_s_t" kindref="compound">ELIST</ref> *</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1aec667b2b89d45695712f041bc3e09198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ELIST::assign_to_sublist</definition>
        <argsstring>(ELIST_ITERATOR *start_it, ELIST_ITERATOR *end_it)</argsstring>
        <name>assign_to_sublist</name>
        <param>
          <type><ref refid="class_e_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">ELIST_ITERATOR</ref> *</type>
          <declname>start_it</declname>
        </param>
        <param>
          <type><ref refid="class_e_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">ELIST_ITERATOR</ref> *</type>
          <declname>end_it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="150" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.cpp" bodystart="78" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1a571dfff8a1c0cef0f0120708a1b32185" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 ELIST::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="154" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.cpp" bodystart="102" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1a82eb75fa241c49b6ccdc92d96f810ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ELIST::sort</definition>
        <argsstring>(int comparator(const void *, const void *))</argsstring>
        <name>sort</name>
        <param>
          <type>int </type>
          <declname>comparator</declname>
          <array>const void *, const void *</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="156" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.cpp" bodystart="126" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1a01af0288f3fadb4d222a03f3fe7c6811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_e_l_i_s_t___l_i_n_k" kindref="compound">ELIST_LINK</ref> *</type>
        <definition>ELIST_LINK * ELIST::add_sorted_and_find</definition>
        <argsstring>(int comparator(const void *, const void *), bool unique, ELIST_LINK *new_link)</argsstring>
        <name>add_sorted_and_find</name>
        <param>
          <type>int </type>
          <declname>comparator</declname>
          <array>const void *, const void *</array>
        </param>
        <param>
          <type>bool</type>
          <declname>unique</declname>
        </param>
        <param>
          <type><ref refid="class_e_l_i_s_t___l_i_n_k" kindref="compound">ELIST_LINK</ref> *</type>
          <declname>new_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="170" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.cpp" bodystart="173" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_e_l_i_s_t_1af61dc70c4e992e1c05c843c0d541db80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ELIST::add_sorted</definition>
        <argsstring>(int comparator(const void *, const void *), bool unique, ELIST_LINK *new_link)</argsstring>
        <name>add_sorted</name>
        <param>
          <type>int </type>
          <declname>comparator</declname>
          <array>const void *, const void *</array>
        </param>
        <param>
          <type>bool</type>
          <declname>unique</declname>
        </param>
        <param>
          <type><ref refid="class_e_l_i_s_t___l_i_n_k" kindref="compound">ELIST_LINK</ref> *</type>
          <declname>new_link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="175" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.h" bodystart="175" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="851">
        <label>ELIST</label>
        <link refid="class_e_l_i_s_t"/>
      </node>
      <node id="852">
        <label>tesseract::AmbigSpec_LIST</label>
        <link refid="classtesseract_1_1_ambig_spec___l_i_s_t"/>
        <childnode refid="851" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Users/makoto/Desktop/trunk/ccutil/elst.h" line="115" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/elst.h" bodystart="114" bodyend="180"/>
    <listofallmembers>
      <member refid="class_e_l_i_s_t_1af61dc70c4e992e1c05c843c0d541db80" prot="public" virt="non-virtual"><scope>ELIST</scope><name>add_sorted</name></member>
      <member refid="class_e_l_i_s_t_1a01af0288f3fadb4d222a03f3fe7c6811" prot="public" virt="non-virtual"><scope>ELIST</scope><name>add_sorted_and_find</name></member>
      <member refid="class_e_l_i_s_t_1aec667b2b89d45695712f041bc3e09198" prot="public" virt="non-virtual"><scope>ELIST</scope><name>assign_to_sublist</name></member>
      <member refid="class_e_l_i_s_t_1ae37e11e80a427b1ea5c43321d7f8af56" prot="public" virt="non-virtual"><scope>ELIST</scope><name>ELIST</name></member>
      <member refid="class_e_l_i_s_t_1a4aec179a718fd9e202aa2075bfaa5709" prot="private" virt="non-virtual"><scope>ELIST</scope><name>ELIST_ITERATOR</name></member>
      <member refid="class_e_l_i_s_t_1a7788b6c4e4b9623e43c58fe3b2976edd" prot="public" virt="non-virtual"><scope>ELIST</scope><name>empty</name></member>
      <member refid="class_e_l_i_s_t_1aa5dbbe84c1fb6adc62c7942cc5efa2a5" prot="private" virt="non-virtual"><scope>ELIST</scope><name>First</name></member>
      <member refid="class_e_l_i_s_t_1a9e3110796c3e5189fa846b44122176ac" prot="public" virt="non-virtual"><scope>ELIST</scope><name>internal_clear</name></member>
      <member refid="class_e_l_i_s_t_1a575eb2690055500a718e5ea8c6740de3" prot="public" virt="non-virtual"><scope>ELIST</scope><name>internal_deep_copy</name></member>
      <member refid="class_e_l_i_s_t_1a3766e435cd48f1bc70d7ddcdf36004e7" prot="private" virt="non-virtual"><scope>ELIST</scope><name>last</name></member>
      <member refid="class_e_l_i_s_t_1a571dfff8a1c0cef0f0120708a1b32185" prot="public" virt="non-virtual"><scope>ELIST</scope><name>length</name></member>
      <member refid="class_e_l_i_s_t_1a8bd9cf7457dd6a17a68860b77abd379a" prot="public" virt="non-virtual"><scope>ELIST</scope><name>shallow_copy</name></member>
      <member refid="class_e_l_i_s_t_1abbe9f968d190bf5bf261e13af7bfc543" prot="public" virt="non-virtual"><scope>ELIST</scope><name>singleton</name></member>
      <member refid="class_e_l_i_s_t_1a82eb75fa241c49b6ccdc92d96f810ece" prot="public" virt="non-virtual"><scope>ELIST</scope><name>sort</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
