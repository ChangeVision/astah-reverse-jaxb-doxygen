<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="beam__search_8cpp" kind="file">
    <compoundname>beam_search.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes refid="beam__search_8h" local="yes">beam_search.h</includes>
    <includes refid="tesseractclass_8h" local="yes">tesseractclass.h</includes>
    <incdepgraph>
      <node id="28506">
        <label>matchtab.h</label>
        <link refid="matchtab_8h"/>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28454" relation="include">
        </childnode>
      </node>
      <node id="28464">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="28465" relation="include">
        </childnode>
        <childnode refid="28408" relation="include">
        </childnode>
        <childnode refid="28390" relation="include">
        </childnode>
      </node>
      <node id="28470">
        <label>docqual.h</label>
        <link refid="docqual_8h"/>
        <childnode refid="28422" relation="include">
        </childnode>
        <childnode refid="28451" relation="include">
        </childnode>
      </node>
      <node id="28476">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="28479">
        <label>wordrec.h</label>
        <link refid="wordrec_8h"/>
        <childnode refid="28480" relation="include">
        </childnode>
        <childnode refid="28483" relation="include">
        </childnode>
        <childnode refid="28493" relation="include">
        </childnode>
        <childnode refid="28504" relation="include">
        </childnode>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28481" relation="include">
        </childnode>
        <childnode refid="28506" relation="include">
        </childnode>
        <childnode refid="28505" relation="include">
        </childnode>
        <childnode refid="28507" relation="include">
        </childnode>
        <childnode refid="28460" relation="include">
        </childnode>
        <childnode refid="28482" relation="include">
        </childnode>
        <childnode refid="28508" relation="include">
        </childnode>
        <childnode refid="28510" relation="include">
        </childnode>
      </node>
      <node id="28398">
        <label>cube_reco_context.h</label>
        <link refid="cube__reco__context_8h"/>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28399" relation="include">
        </childnode>
        <childnode refid="28403" relation="include">
        </childnode>
        <childnode refid="28414" relation="include">
        </childnode>
        <childnode refid="28415" relation="include">
        </childnode>
        <childnode refid="28373" relation="include">
        </childnode>
        <childnode refid="28416" relation="include">
        </childnode>
        <childnode refid="28417" relation="include">
        </childnode>
        <childnode refid="28418" relation="include">
        </childnode>
      </node>
      <node id="28477">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="28446" relation="include">
        </childnode>
        <childnode refid="28439" relation="include">
        </childnode>
        <childnode refid="28437" relation="include">
        </childnode>
        <childnode refid="28423" relation="include">
        </childnode>
        <childnode refid="28452" relation="include">
        </childnode>
      </node>
      <node id="28482">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28390" relation="include">
        </childnode>
      </node>
      <node id="28450">
        <label>assert.h</label>
      </node>
      <node id="28421">
        <label>tesseractclass.h</label>
        <link refid="tesseractclass_8h"/>
        <childnode refid="28407" relation="include">
        </childnode>
        <childnode refid="28422" relation="include">
        </childnode>
        <childnode refid="28470" relation="include">
        </childnode>
        <childnode refid="28471" relation="include">
        </childnode>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28472" relation="include">
        </childnode>
        <childnode refid="28474" relation="include">
        </childnode>
        <childnode refid="28479" relation="include">
        </childnode>
      </node>
      <node id="28483">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="28484" relation="include">
        </childnode>
        <childnode refid="28475" relation="include">
        </childnode>
        <childnode refid="28483" relation="include">
        </childnode>
        <childnode refid="28493" relation="include">
        </childnode>
        <childnode refid="28498" relation="include">
        </childnode>
        <childnode refid="28500" relation="include">
        </childnode>
        <childnode refid="28501" relation="include">
        </childnode>
        <childnode refid="28502" relation="include">
        </childnode>
        <childnode refid="28457" relation="include">
        </childnode>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28499" relation="include">
        </childnode>
        <childnode refid="28492" relation="include">
        </childnode>
      </node>
      <node id="28389">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="28459">
        <label>rejctmap.h</label>
        <link refid="rejctmap_8h"/>
        <childnode refid="28391" relation="include">
        </childnode>
        <childnode refid="28438" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28451" relation="include">
        </childnode>
      </node>
      <node id="28452">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28436" relation="include">
        </childnode>
      </node>
      <node id="28408">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="28471">
        <label>devanagari_processing.h</label>
        <link refid="devanagari__processing_8h"/>
        <childnode refid="28423" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
      </node>
      <node id="28385">
        <label>stdlib.h</label>
      </node>
      <node id="28403">
        <label>lang_model.h</label>
        <link refid="lang__model_8h"/>
        <childnode refid="28369" relation="include">
        </childnode>
        <childnode refid="28404" relation="include">
        </childnode>
        <childnode refid="28373" relation="include">
        </childnode>
        <childnode refid="28372" relation="include">
        </childnode>
      </node>
      <node id="28380">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="28381" relation="include">
        </childnode>
      </node>
      <node id="28491">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
      </node>
      <node id="28507">
        <label>gradechop.h</label>
        <link refid="gradechop_8h"/>
        <childnode refid="28460" relation="include">
        </childnode>
        <childnode refid="28389" relation="include">
        </childnode>
      </node>
      <node id="28400">
        <label>neuron.h</label>
        <link refid="neuron_8h"/>
        <childnode refid="28401" relation="include">
        </childnode>
        <childnode refid="28376" relation="include">
        </childnode>
      </node>
      <node id="28472">
        <label>ocrclass.h</label>
        <link refid="ocrclass_8h"/>
        <childnode refid="28473" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
      </node>
      <node id="28440">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="28387" relation="include">
        </childnode>
      </node>
      <node id="28465">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="28466" relation="include">
        </childnode>
        <childnode refid="28387" relation="include">
        </childnode>
        <childnode refid="28390" relation="include">
        </childnode>
        <childnode refid="28377" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28393" relation="include">
        </childnode>
        <childnode refid="28467" relation="include">
        </childnode>
        <childnode refid="28468" relation="include">
        </childnode>
      </node>
      <node id="28407">
        <label>allheaders.h</label>
      </node>
      <node id="28436">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
      </node>
      <node id="28399">
        <label>neural_net.h</label>
        <link refid="neural__net_8h"/>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28376" relation="include">
        </childnode>
        <childnode refid="28400" relation="include">
        </childnode>
        <childnode refid="28402" relation="include">
        </childnode>
      </node>
      <node id="28364">
        <label>cube/beam_search.cpp</label>
        <link refid="beam_search.cpp"/>
        <childnode refid="28365" relation="include">
        </childnode>
        <childnode refid="28366" relation="include">
        </childnode>
        <childnode refid="28421" relation="include">
        </childnode>
      </node>
      <node id="28427">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="28385" relation="include">
        </childnode>
        <childnode refid="28374" relation="include">
        </childnode>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28391" relation="include">
        </childnode>
        <childnode refid="28387" relation="include">
        </childnode>
        <childnode refid="28428" relation="include">
        </childnode>
      </node>
      <node id="28469">
        <label>tessarray.h</label>
        <link refid="tessarray_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
      </node>
      <node id="28371">
        <label>string</label>
      </node>
      <node id="28446">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28427" relation="include">
        </childnode>
        <childnode refid="28429" relation="include">
        </childnode>
      </node>
      <node id="28489">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28454" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
      </node>
      <node id="28475">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="28463" relation="include">
        </childnode>
        <childnode refid="28476" relation="include">
        </childnode>
      </node>
      <node id="28441">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="28442" relation="include">
        </childnode>
        <childnode refid="28435" relation="include">
        </childnode>
      </node>
      <node id="28496">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="28494" relation="include">
        </childnode>
        <childnode refid="28463" relation="include">
        </childnode>
        <childnode refid="28384" relation="include">
        </childnode>
      </node>
      <node id="28449">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="28450" relation="include">
        </childnode>
        <childnode refid="28446" relation="include">
        </childnode>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28451" relation="include">
        </childnode>
        <childnode refid="28394" relation="include">
        </childnode>
        <childnode refid="28393" relation="include">
        </childnode>
        <childnode refid="28437" relation="include">
        </childnode>
      </node>
      <node id="28368">
        <label>search_node.h</label>
        <link refid="search__node_8h"/>
        <childnode refid="28369" relation="include">
        </childnode>
        <childnode refid="28398" relation="include">
        </childnode>
      </node>
      <node id="28392">
        <label>stddef.h</label>
      </node>
      <node id="28395">
        <label>memory.h</label>
      </node>
      <node id="28503">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="28486" relation="include">
        </childnode>
      </node>
      <node id="28415">
        <label>feature_base.h</label>
        <link refid="feature__base_8h"/>
        <childnode refid="28409" relation="include">
        </childnode>
        <childnode refid="28372" relation="include">
        </childnode>
      </node>
      <node id="28372">
        <label>tuning_params.h</label>
        <link refid="tuning__params_8h"/>
        <childnode refid="28371" relation="include">
        </childnode>
      </node>
      <node id="28488">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28401" relation="include">
        </childnode>
      </node>
      <node id="28510">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="28450" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28394" relation="include">
        </childnode>
      </node>
      <node id="28419">
        <label>word_altlist.h</label>
        <link refid="word__altlist_8h"/>
        <childnode refid="28405" relation="include">
        </childnode>
      </node>
      <node id="28387">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
      </node>
      <node id="28486">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28394" relation="include">
        </childnode>
      </node>
      <node id="28447">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="28425" relation="include">
        </childnode>
        <childnode refid="28426" relation="include">
        </childnode>
        <childnode refid="28433" relation="include">
        </childnode>
        <childnode refid="28435" relation="include">
        </childnode>
        <childnode refid="28436" relation="include">
        </childnode>
        <childnode refid="28448" relation="include">
        </childnode>
      </node>
      <node id="28417">
        <label>char_bigrams.h</label>
        <link refid="char__bigrams_8h"/>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28373" relation="include">
        </childnode>
      </node>
      <node id="28414">
        <label>classifier_base.h</label>
        <link refid="classifier__base_8h"/>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28409" relation="include">
        </childnode>
        <childnode refid="28404" relation="include">
        </childnode>
        <childnode refid="28373" relation="include">
        </childnode>
        <childnode refid="28415" relation="include">
        </childnode>
        <childnode refid="28403" relation="include">
        </childnode>
        <childnode refid="28372" relation="include">
        </childnode>
      </node>
      <node id="28381">
        <label>limits.h</label>
      </node>
      <node id="28509">
        <label>chop.h</label>
        <link refid="chop_8h"/>
        <childnode refid="28505" relation="include">
        </childnode>
        <childnode refid="28460" relation="include">
        </childnode>
      </node>
      <node id="28501">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="28454" relation="include">
        </childnode>
        <childnode refid="28485" relation="include">
        </childnode>
        <childnode refid="28457" relation="include">
        </childnode>
        <childnode refid="28401" relation="include">
        </childnode>
      </node>
      <node id="28480">
        <label>associate.h</label>
        <link refid="associate_8h"/>
        <childnode refid="28454" relation="include">
        </childnode>
        <childnode refid="28426" relation="include">
        </childnode>
        <childnode refid="28481" relation="include">
        </childnode>
        <childnode refid="28460" relation="include">
        </childnode>
        <childnode refid="28461" relation="include">
        </childnode>
        <childnode refid="28482" relation="include">
        </childnode>
      </node>
      <node id="28458">
        <label>params_training_featdef.h</label>
        <link refid="params__training__featdef_8h"/>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28390" relation="include">
        </childnode>
      </node>
      <node id="28493">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="28466" relation="include">
        </childnode>
        <childnode refid="28494" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28476" relation="include">
        </childnode>
        <childnode refid="28462" relation="include">
        </childnode>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28495" relation="include">
        </childnode>
        <childnode refid="28496" relation="include">
        </childnode>
        <childnode refid="28393" relation="include">
        </childnode>
        <childnode refid="28497" relation="include">
        </childnode>
      </node>
      <node id="28409">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="28385" relation="include">
        </childnode>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28410" relation="include">
        </childnode>
        <childnode refid="28375" relation="include">
        </childnode>
      </node>
      <node id="28434">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="28401" relation="include">
        </childnode>
      </node>
      <node id="28444">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="28433" relation="include">
        </childnode>
      </node>
      <node id="28439">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28427" relation="include">
        </childnode>
        <childnode refid="28429" relation="include">
        </childnode>
      </node>
      <node id="28467">
        <label>pthread.h</label>
      </node>
      <node id="28373">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="28374" relation="include">
        </childnode>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28365" relation="include">
        </childnode>
        <childnode refid="28375" relation="include">
        </childnode>
        <childnode refid="28377" relation="include">
        </childnode>
        <childnode refid="28393" relation="include">
        </childnode>
        <childnode refid="28397" relation="include">
        </childnode>
      </node>
      <node id="28374">
        <label>string.h</label>
      </node>
      <node id="28396">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="28394" relation="include">
        </childnode>
      </node>
      <node id="28456">
        <label>boxword.h</label>
        <link refid="boxword_8h"/>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28435" relation="include">
        </childnode>
      </node>
      <node id="28394">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="28395" relation="include">
        </childnode>
        <childnode refid="28374" relation="include">
        </childnode>
      </node>
      <node id="28463">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28374" relation="include">
        </childnode>
        <childnode refid="28385" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28382" relation="include">
        </childnode>
        <childnode refid="28464" relation="include">
        </childnode>
      </node>
      <node id="28406">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="28376" relation="include">
        </childnode>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28407" relation="include">
        </childnode>
        <childnode refid="28408" relation="include">
        </childnode>
        <childnode refid="28373" relation="include">
        </childnode>
        <childnode refid="28409" relation="include">
        </childnode>
        <childnode refid="28413" relation="include">
        </childnode>
      </node>
      <node id="28367">
        <label>search_column.h</label>
        <link refid="search__column_8h"/>
        <childnode refid="28368" relation="include">
        </childnode>
        <childnode refid="28369" relation="include">
        </childnode>
        <childnode refid="28398" relation="include">
        </childnode>
      </node>
      <node id="28508">
        <label>findseam.h</label>
        <link refid="findseam_8h"/>
        <childnode refid="28460" relation="include">
        </childnode>
        <childnode refid="28505" relation="include">
        </childnode>
        <childnode refid="28509" relation="include">
        </childnode>
      </node>
      <node id="28435">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="28401" relation="include">
        </childnode>
        <childnode refid="28433" relation="include">
        </childnode>
        <childnode refid="28389" relation="include">
        </childnode>
        <childnode refid="28436" relation="include">
        </childnode>
        <childnode refid="28382" relation="include">
        </childnode>
      </node>
      <node id="28438">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
      </node>
      <node id="28376">
        <label>vector</label>
      </node>
      <node id="28386">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
      </node>
      <node id="28468">
        <label>semaphore.h</label>
      </node>
      <node id="28442">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="28443" relation="include">
        </childnode>
        <childnode refid="28444" relation="include">
        </childnode>
        <childnode refid="28438" relation="include">
        </childnode>
        <childnode refid="28435" relation="include">
        </childnode>
        <childnode refid="28440" relation="include">
        </childnode>
        <childnode refid="28436" relation="include">
        </childnode>
      </node>
      <node id="28437">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28438" relation="include">
        </childnode>
        <childnode refid="28439" relation="include">
        </childnode>
        <childnode refid="28390" relation="include">
        </childnode>
        <childnode refid="28440" relation="include">
        </childnode>
        <childnode refid="28441" relation="include">
        </childnode>
        <childnode refid="28430" relation="include">
        </childnode>
      </node>
      <node id="28366">
        <label>beam_search.h</label>
        <link refid="beam__search_8h"/>
        <childnode refid="28367" relation="include">
        </childnode>
        <childnode refid="28419" relation="include">
        </childnode>
        <childnode refid="28420" relation="include">
        </childnode>
        <childnode refid="28403" relation="include">
        </childnode>
        <childnode refid="28406" relation="include">
        </childnode>
        <childnode refid="28398" relation="include">
        </childnode>
        <childnode refid="28407" relation="include">
        </childnode>
      </node>
      <node id="28430">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28431" relation="include">
        </childnode>
        <childnode refid="28437" relation="include">
        </childnode>
      </node>
      <node id="28428">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="28387" relation="include">
        </childnode>
      </node>
      <node id="28487">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28462" relation="include">
        </childnode>
        <childnode refid="28488" relation="include">
        </childnode>
        <childnode refid="28489" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
      </node>
      <node id="28466">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="28426" relation="include">
        </childnode>
        <childnode refid="28382" relation="include">
        </childnode>
        <childnode refid="28394" relation="include">
        </childnode>
        <childnode refid="28393" relation="include">
        </childnode>
        <childnode refid="28384" relation="include">
        </childnode>
      </node>
      <node id="28492">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="28386" relation="include">
        </childnode>
        <childnode refid="28387" relation="include">
        </childnode>
        <childnode refid="28384" relation="include">
        </childnode>
      </node>
      <node id="28473">
        <label>time.h</label>
      </node>
      <node id="28443">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="28433" relation="include">
        </childnode>
        <childnode refid="28444" relation="include">
        </childnode>
      </node>
      <node id="28401">
        <label>math.h</label>
      </node>
      <node id="28461">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="28454" relation="include">
        </childnode>
        <childnode refid="28462" relation="include">
        </childnode>
      </node>
      <node id="28429">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="28387" relation="include">
        </childnode>
      </node>
      <node id="28432">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="28433" relation="include">
        </childnode>
      </node>
      <node id="28455">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="28401" relation="include">
        </childnode>
        <childnode refid="28454" relation="include">
        </childnode>
      </node>
      <node id="28369">
        <label>lang_mod_edge.h</label>
        <link refid="lang__mod__edge_8h"/>
        <childnode refid="28370" relation="include">
        </childnode>
        <childnode refid="28373" relation="include">
        </childnode>
      </node>
      <node id="28425">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="28462">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="28463" relation="include">
        </childnode>
        <childnode refid="28386" relation="include">
        </childnode>
      </node>
      <node id="28499">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="28454" relation="include">
        </childnode>
        <childnode refid="28378" relation="include">
        </childnode>
      </node>
      <node id="28478">
        <label>gap_map.h</label>
        <link refid="gap__map_8h"/>
        <childnode refid="28477" relation="include">
        </childnode>
        <childnode refid="28451" relation="include">
        </childnode>
      </node>
      <node id="28423">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="28413" relation="include">
        </childnode>
        <childnode refid="28424" relation="include">
        </childnode>
        <childnode refid="28430" relation="include">
        </childnode>
        <childnode refid="28445" relation="include">
        </childnode>
      </node>
      <node id="28383">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28390" relation="include">
        </childnode>
      </node>
      <node id="28384">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28385" relation="include">
        </childnode>
        <childnode refid="28386" relation="include">
        </childnode>
        <childnode refid="28387" relation="include">
        </childnode>
        <childnode refid="28388" relation="include">
        </childnode>
        <childnode refid="28389" relation="include">
        </childnode>
      </node>
      <node id="28495">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28482" relation="include">
        </childnode>
        <childnode refid="28394" relation="include">
        </childnode>
      </node>
      <node id="28391">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="28392" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
      </node>
      <node id="28410">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="28385" relation="include">
        </childnode>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28411" relation="include">
        </childnode>
        <childnode refid="28412" relation="include">
        </childnode>
      </node>
      <node id="28474">
        <label>textord.h</label>
        <link refid="textord_8h"/>
        <childnode refid="28475" relation="include">
        </childnode>
        <childnode refid="28477" relation="include">
        </childnode>
        <childnode refid="28478" relation="include">
        </childnode>
        <childnode refid="28451" relation="include">
        </childnode>
        <childnode refid="28425" relation="include">
        </childnode>
      </node>
      <node id="28490">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="28491" relation="include">
        </childnode>
        <childnode refid="28463" relation="include">
        </childnode>
        <childnode refid="28394" relation="include">
        </childnode>
        <childnode refid="28492" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
      </node>
      <node id="28411">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="28418">
        <label>word_unigrams.h</label>
        <link refid="word__unigrams_8h"/>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28373" relation="include">
        </childnode>
        <childnode refid="28403" relation="include">
        </childnode>
      </node>
      <node id="28453">
        <label>pageres.h</label>
        <link refid="pageres_8h"/>
        <childnode refid="28454" relation="include">
        </childnode>
        <childnode refid="28456" relation="include">
        </childnode>
        <childnode refid="28426" relation="include">
        </childnode>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28457" relation="include">
        </childnode>
        <childnode refid="28423" relation="include">
        </childnode>
        <childnode refid="28430" relation="include">
        </childnode>
        <childnode refid="28458" relation="include">
        </childnode>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28459" relation="include">
        </childnode>
        <childnode refid="28460" relation="include">
        </childnode>
        <childnode refid="28437" relation="include">
        </childnode>
      </node>
      <node id="28504">
        <label>language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="28480" relation="include">
        </childnode>
        <childnode refid="28494" relation="include">
        </childnode>
        <childnode refid="28493" relation="include">
        </childnode>
        <childnode refid="28500" relation="include">
        </childnode>
        <childnode refid="28485" relation="include">
        </childnode>
        <childnode refid="28481" relation="include">
        </childnode>
        <childnode refid="28505" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28453" relation="include">
        </childnode>
      </node>
      <node id="28498">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="28499" relation="include">
        </childnode>
      </node>
      <node id="28370">
        <label>cube_tuning_params.h</label>
        <link refid="cube__tuning__params_8h"/>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28372" relation="include">
        </childnode>
      </node>
      <node id="28424">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="28425" relation="include">
        </childnode>
        <childnode refid="28426" relation="include">
        </childnode>
        <childnode refid="28390" relation="include">
        </childnode>
      </node>
      <node id="28426">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28427" relation="include">
        </childnode>
        <childnode refid="28429" relation="include">
        </childnode>
      </node>
      <node id="28393">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="28387" relation="include">
        </childnode>
        <childnode refid="28388" relation="include">
        </childnode>
        <childnode refid="28390" relation="include">
        </childnode>
        <childnode refid="28386" relation="include">
        </childnode>
        <childnode refid="28394" relation="include">
        </childnode>
        <childnode refid="28396" relation="include">
        </childnode>
      </node>
      <node id="28404">
        <label>char_altlist.h</label>
        <link refid="char__altlist_8h"/>
        <childnode refid="28405" relation="include">
        </childnode>
        <childnode refid="28373" relation="include">
        </childnode>
      </node>
      <node id="28460">
        <label>seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="28454" relation="include">
        </childnode>
        <childnode refid="28461" relation="include">
        </childnode>
        <childnode refid="28469" relation="include">
        </childnode>
      </node>
      <node id="28422">
        <label>control.h</label>
        <link refid="control_8h"/>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28423" relation="include">
        </childnode>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28452" relation="include">
        </childnode>
        <childnode refid="28453" relation="include">
        </childnode>
        <childnode refid="28451" relation="include">
        </childnode>
      </node>
      <node id="28505">
        <label>oldheap.h</label>
        <link refid="oldheap_8h"/>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28463" relation="include">
        </childnode>
      </node>
      <node id="28494">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="28426" relation="include">
        </childnode>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28386" relation="include">
        </childnode>
      </node>
      <node id="28500">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28394" relation="include">
        </childnode>
      </node>
      <node id="28433">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28401" relation="include">
        </childnode>
        <childnode refid="28426" relation="include">
        </childnode>
        <childnode refid="28434" relation="include">
        </childnode>
      </node>
      <node id="28484">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="28462" relation="include">
        </childnode>
        <childnode refid="28485" relation="include">
        </childnode>
        <childnode refid="28378" relation="include">
        </childnode>
      </node>
      <node id="28451">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="28397">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="28413">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="28391" relation="include">
        </childnode>
      </node>
      <node id="28382">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="28383" relation="include">
        </childnode>
      </node>
      <node id="28502">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28485" relation="include">
        </childnode>
        <childnode refid="28503" relation="include">
        </childnode>
      </node>
      <node id="28448">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="28365">
        <label>algorithm</label>
      </node>
      <node id="28379">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="28380" relation="include">
        </childnode>
      </node>
      <node id="28416">
        <label>word_size_model.h</label>
        <link refid="word__size__model_8h"/>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28409" relation="include">
        </childnode>
        <childnode refid="28373" relation="include">
        </childnode>
      </node>
      <node id="28412">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28371" relation="include">
        </childnode>
      </node>
      <node id="28445">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="28446" relation="include">
        </childnode>
        <childnode refid="28413" relation="include">
        </childnode>
        <childnode refid="28390" relation="include">
        </childnode>
        <childnode refid="28447" relation="include">
        </childnode>
        <childnode refid="28448" relation="include">
        </childnode>
      </node>
      <node id="28378">
        <label>stdio.h</label>
      </node>
      <node id="28402">
        <label>input_file_buffer.h</label>
        <link refid="input__file__buffer_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28371" relation="include">
        </childnode>
      </node>
      <node id="28375">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="28374" relation="include">
        </childnode>
        <childnode refid="28371" relation="include">
        </childnode>
        <childnode refid="28365" relation="include">
        </childnode>
        <childnode refid="28376" relation="include">
        </childnode>
      </node>
      <node id="28481">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28393" relation="include">
        </childnode>
      </node>
      <node id="28485">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="28384" relation="include">
        </childnode>
        <childnode refid="28486" relation="include">
        </childnode>
        <childnode refid="28487" relation="include">
        </childnode>
        <childnode refid="28490" relation="include">
        </childnode>
        <childnode refid="28436" relation="include">
        </childnode>
        <childnode refid="28393" relation="include">
        </childnode>
      </node>
      <node id="28420">
        <label>search_object.h</label>
        <link refid="search__object_8h"/>
        <childnode refid="28404" relation="include">
        </childnode>
        <childnode refid="28409" relation="include">
        </childnode>
        <childnode refid="28398" relation="include">
        </childnode>
      </node>
      <node id="28377">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
        <childnode refid="28382" relation="include">
        </childnode>
      </node>
      <node id="28457">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28379" relation="include">
        </childnode>
      </node>
      <node id="28390">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28374" relation="include">
        </childnode>
        <childnode refid="28380" relation="include">
        </childnode>
        <childnode refid="28391" relation="include">
        </childnode>
      </node>
      <node id="28405">
        <label>altlist.h</label>
        <link refid="altlist_8h"/>
        <childnode refid="28401" relation="include">
        </childnode>
        <childnode refid="28406" relation="include">
        </childnode>
      </node>
      <node id="28454">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="28446" relation="include">
        </childnode>
        <childnode refid="28435" relation="include">
        </childnode>
        <childnode refid="28455" relation="include">
        </childnode>
      </node>
      <node id="28388">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="28378" relation="include">
        </childnode>
        <childnode refid="28374" relation="include">
        </childnode>
      </node>
      <node id="28497">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="28449" relation="include">
        </childnode>
        <childnode refid="28383" relation="include">
        </childnode>
        <childnode refid="28393" relation="include">
        </childnode>
      </node>
      <node id="28431">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="28432" relation="include">
        </childnode>
        <childnode refid="28427" relation="include">
        </childnode>
        <childnode refid="28391" relation="include">
        </childnode>
        <childnode refid="28435" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beam_search.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Class<sp/>to<sp/>implement<sp/>Beam<sp/>Word<sp/>Search<sp/>Algorithm</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="beam__search_8h" kindref="compound">beam_search.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tesseractclass_8h" kindref="compound">tesseractclass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="classtesseract_1_1_beam_search_1a990eb3dcc8f14f2a17639caf93f840c1" kindref="member">BeamSearch::BeamSearch</ref>(CubeRecoContext<sp/>*cntxt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_mode)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>cntxt_<sp/>=<sp/>cntxt;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>seg_pt_cnt_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>col_cnt_<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>col_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>word_mode_<sp/>=<sp/>word_mode;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cleanup<sp/>the<sp/>lattice<sp/>corresponding<sp/>to<sp/>the<sp/>last<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BeamSearch::Cleanup()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>col_cnt_;<sp/>col++)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_[col])</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>col_[col];</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]col_;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>col_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="classtesseract_1_1_beam_search_1a1ad5f964a4b335929d99ab5596595428" kindref="member">BeamSearch::~BeamSearch</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>Cleanup();</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>set<sp/>of<sp/>children<sp/>nodes<sp/>emerging<sp/>from<sp/>a<sp/>parent<sp/>node<sp/>based<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>character<sp/>alternate<sp/>list<sp/>and<sp/>the<sp/>language<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BeamSearch::CreateChildren(SearchColumn<sp/>*out_col,<sp/>LangModel<sp/>*lang_mod,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SearchNode<sp/>*parent_node,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModEdge<sp/>*lm_parent_edge,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CharAltList<sp/>*char_alt_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extra_cost)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>all<sp/>the<sp/>edges<sp/>from<sp/>this<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge_cnt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>LangModEdge<sp/>**lm_edges<sp/>=<sp/>lang_mod-&gt;GetEdges(char_alt_list,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm_parent_edge,<sp/>&amp;edge_cnt);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lm_edges)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>them<sp/>to<sp/>the<sp/>ending<sp/>column<sp/>with<sp/>the<sp/>appropriate<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>edge<sp/>=<sp/>0;<sp/>edge<sp/>&lt;<sp/>edge_cnt;<sp/>edge++)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>a<sp/>node<sp/>to<sp/>the<sp/>column<sp/>if<sp/>the<sp/>current<sp/>column<sp/>is<sp/>not<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>one,<sp/>or<sp/>if<sp/>the<sp/>lang<sp/>model<sp/>edge<sp/>indicates<sp/>it<sp/>is<sp/>valid<sp/>EOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1af95c2581e9637615564b9062ba03ee71" kindref="member">NoisyInput</ref>()<sp/>&amp;&amp;<sp/>out_col-&gt;ColIdx()<sp/>&gt;=<sp/>seg_pt_cnt_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!lm_edges[edge]-&gt;IsEOW())<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>edge<sp/>since<sp/>no<sp/>object<sp/>is<sp/>going<sp/>to<sp/>own<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lm_edges[edge];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>recognition<sp/>cost<sp/>of<sp/>this<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recognition_cost<sp/>=<sp/><sp/><ref refid="cube__const_8h_1a7d98e096ee6e9bda7836df456b6b25e6" kindref="member">MIN_PROB_COST</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_alt_list<sp/>&amp;&amp;<sp/>char_alt_list-&gt;AltCount()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recognition_cost<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(0,<sp/>char_alt_list-&gt;ClassCost(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm_edges[edge]-&gt;ClassID()));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>no<sp/>space<sp/>cost.<sp/>This<sp/>should<sp/>zero<sp/>in<sp/>word<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recognition_cost<sp/>+=<sp/>extra_cost;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>edge<sp/>will<sp/>be<sp/>freed<sp/>inside<sp/>the<sp/>column<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AddNode<sp/>is<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recognition_cost<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_col-&gt;AddNode(lm_edges[edge],<sp/>recognition_cost,<sp/>parent_node,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntxt_);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lm_edges[edge];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>edge<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]lm_edges;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>lm_edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Performs<sp/>a<sp/>beam<sp/>seach<sp/>in<sp/>the<sp/>specified<sp/>search<sp/>using<sp/>the<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>model;<sp/>returns<sp/>an<sp/>alternate<sp/>list<sp/>of<sp/>possible<sp/>words<sp/>as<sp/>a<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">WordAltList<sp/>*<sp/><ref refid="classtesseract_1_1_beam_search_1adce6622c6d74ecae947f11aeac486ca0" kindref="member">BeamSearch::Search</ref>(SearchObject<sp/>*srch_obj,<sp/>LangModel<sp/>*lang_mod)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>verifications</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lang_mod)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>lang_mod<sp/>=<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1ab73cfe645a5071f5ccfef060d1faf3f1" kindref="member">LangMod</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lang_mod)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(BeamSearch::Search):<sp/>could<sp/>not<sp/>construct<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;LangModel\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>free<sp/>existing<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>Cleanup();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>seg<sp/>pt<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>seg_pt_cnt_<sp/>=<sp/>srch_obj-&gt;SegPtCnt();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg_pt_cnt_<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>col_cnt_<sp/>=<sp/>seg_pt_cnt_<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>disregard<sp/>suspicious<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg_pt_cnt_<sp/>&gt;<sp/>128)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(BeamSearch::Search):<sp/>segment<sp/>point<sp/>count<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;suspiciously<sp/>high;<sp/>bailing<sp/>out\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>alloc<sp/>memory<sp/>for<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>col_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SearchColumn<sp/>*[col_cnt_];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!col_)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(BeamSearch::Search):<sp/>could<sp/>not<sp/>construct<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SearchColumn<sp/>array\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>memset(col_,<sp/>0,<sp/>col_cnt_<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*col_));</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>possible<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_seg<sp/>=<sp/>1;<sp/>end_seg<sp/>&lt;=<sp/>(seg_pt_cnt_<sp/>+<sp/>1);<sp/>end_seg++)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>search<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>col_[end_seg<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SearchColumn(end_seg<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1addac767dbdf8405f9026848a17561556" kindref="member">Params</ref>()-&gt;<ref refid="classtesseract_1_1_tuning_params_1ae19ca7d2ab3f2ee05b5606c7ff66f754" kindref="member">BeamWidth</ref>());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!col_[end_seg<sp/>-<sp/>1])<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(BeamSearch::Search):<sp/>could<sp/>not<sp/>construct<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SearchColumn<sp/>for<sp/>column<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>end_seg<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>possible<sp/>start<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init_seg<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(0,<sp/>end_seg<sp/>-<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1addac767dbdf8405f9026848a17561556" kindref="member">Params</ref>()-&gt;<ref refid="classtesseract_1_1_tuning_params_1a36e53deafe8e2cb34f550ec456346d1f" kindref="member">MaxSegPerChar</ref>());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strt_seg<sp/>=<sp/>init_seg;<sp/>strt_seg<sp/>&lt;<sp/>end_seg;<sp/>strt_seg++)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parent_nodes_cnt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SearchNode<sp/>**parent_nodes;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>root<sp/>segment,<sp/>we<sp/>do<sp/>not<sp/>have<sp/>a<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strt_seg<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_nodes_cnt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_nodes<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>the<sp/>existing<sp/>nodes<sp/>in<sp/>the<sp/>starting<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_nodes_cnt<sp/>=<sp/>col_[strt_seg<sp/>-<sp/>1]-&gt;<ref refid="classtesseract_1_1_search_column_1a9a102cd86f201dee6abc1f90f5a5ef1e" kindref="member">NodeCount</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_nodes<sp/>=<sp/>col_[strt_seg<sp/>-<sp/>1]-&gt;<ref refid="classtesseract_1_1_search_column_1a57c10b151d3565c752c80bbf225cb834" kindref="member">Nodes</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>run<sp/>the<sp/>shape<sp/>recognizer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CharAltList<sp/>*char_alt_list<sp/>=<sp/>srch_obj-&gt;RecognizeSegment(strt_seg<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_seg<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>the<sp/>possible<sp/>parents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parent_idx<sp/>=<sp/>0;<sp/>parent_idx<sp/>&lt;<sp/>parent_nodes_cnt;<sp/>parent_idx++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>to<sp/>the<sp/>parent<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SearchNode<sp/>*parent_node<sp/>=<sp/>!parent_nodes<sp/>?<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parent_nodes[parent_idx];</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LangModEdge<sp/>*lm_parent_edge<sp/>=<sp/>!parent_node<sp/>?<sp/>lang_mod-&gt;Root()</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>parent_node-&gt;LangModelEdge();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>cost<sp/>of<sp/>not<sp/>having<sp/>spaces<sp/>within<sp/>the<sp/>segment<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>contig_cost<sp/>=<sp/>srch_obj-&gt;NoSpaceCost(strt_seg<sp/>-<sp/>1,<sp/>end_seg<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>phrase<sp/>mode,<sp/>compute<sp/>the<sp/>cost<sp/>of<sp/>not<sp/>having<sp/>a<sp/>space<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>no_space_cost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!word_mode_<sp/>&amp;&amp;<sp/>strt_seg<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_space_cost<sp/>=<sp/>srch_obj-&gt;NoSpaceCost(strt_seg<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>no<sp/>space<sp/>cost<sp/>is<sp/>low<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((contig_cost<sp/>+<sp/>no_space_cost)<sp/>&lt;<sp/><ref refid="cube__const_8h_1a7d98e096ee6e9bda7836df456b6b25e6" kindref="member">MIN_PROB_COST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>children<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateChildren(col_[end_seg<sp/>-<sp/>1],<sp/>lang_mod,<sp/>parent_node,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm_parent_edge,<sp/>char_alt_list,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>contig_cost<sp/>+<sp/>no_space_cost);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>phrase<sp/>mode<sp/>and<sp/>if<sp/>not<sp/>starting<sp/>at<sp/>the<sp/>root</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!word_mode_<sp/>&amp;&amp;<sp/>strt_seg<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>parent_node<sp/>must<sp/>be<sp/>non-NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>consider<sp/>starting<sp/>a<sp/>new<sp/>word<sp/>for<sp/>nodes<sp/>that<sp/>are<sp/>valid<sp/>EOW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_node-&gt;LangModelEdge()-&gt;IsEOW())<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>space<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>space_cost<sp/>=<sp/>srch_obj-&gt;SpaceCost(strt_seg<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>space<sp/>cost<sp/>is<sp/>low<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((contig_cost<sp/>+<sp/>space_cost)<sp/>&lt;<sp/><ref refid="cube__const_8h_1a7d98e096ee6e9bda7836df456b6b25e6" kindref="member">MIN_PROB_COST</ref>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restart<sp/>the<sp/>language<sp/>model<sp/>and<sp/>add<sp/>nodes<sp/>as<sp/>children<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CreateChildren(col_[end_seg<sp/>-<sp/>1],<sp/>lang_mod,<sp/>parent_node,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_alt_list,<sp/>contig_cost<sp/>+<sp/>space_cost);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>parent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>strt_seg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prune<sp/>the<sp/>column<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>col_[end_seg<sp/>-<sp/>1]-&gt;<ref refid="classtesseract_1_1_search_column_1af59882506aaf9becbfa8bfeff325a08f" kindref="member">Prune</ref>();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>column<sp/>hash<sp/>table.<sp/>No<sp/>longer<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>col_[end_seg<sp/>-<sp/>1]-&gt;<ref refid="classtesseract_1_1_search_column_1a98a8b0188debb17fb07eea6ec96660d4" kindref="member">FreeHashTable</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end_seg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>WordAltList<sp/>*alt_list<sp/>=<sp/>CreateWordAltList(srch_obj);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alt_list;</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>Word<sp/>alternate<sp/>list<sp/>from<sp/>the<sp/>results<sp/>in<sp/>the<sp/>lattice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">WordAltList<sp/>*BeamSearch::CreateWordAltList(SearchObject<sp/>*srch_obj)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>an<sp/>alternate<sp/>list<sp/>of<sp/>all<sp/>the<sp/>nodes<sp/>in<sp/>the<sp/>last<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_cnt<sp/>=<sp/>col_[col_cnt_<sp/>-<sp/>1]-&gt;<ref refid="classtesseract_1_1_search_column_1a9a102cd86f201dee6abc1f90f5a5ef1e" kindref="member">NodeCount</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>SearchNode<sp/>**srch_nodes<sp/>=<sp/>col_[col_cnt_<sp/>-<sp/>1]-&gt;<ref refid="classtesseract_1_1_search_column_1a57c10b151d3565c752c80bbf225cb834" kindref="member">Nodes</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>CharBigrams<sp/>*bigrams<sp/>=<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1af4cfeaa3838f7eefcd5fa7f01419b8ce" kindref="member">Bigrams</ref>();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>WordUnigrams<sp/>*word_unigrams<sp/>=<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1ab95b871efd568d44d69656bbdcdce167" kindref="member">WordUnigramsObj</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>index<sp/>of<sp/>the<sp/>best-cost<sp/>node<sp/>before<sp/>the<sp/>alt<sp/>list<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sorted,<sp/>so<sp/>that<sp/>we<sp/>can<sp/>retrieve<sp/>it<sp/>from<sp/>the<sp/>node<sp/>list<sp/>when<sp/>backtracking.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>best_presorted_node_idx_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_cost<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_cnt<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>creating<sp/>the<sp/>word<sp/>alternate<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>WordAltList<sp/>*alt_list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WordAltList(node_cnt<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_idx<sp/>=<sp/>0;<sp/>node_idx<sp/>&lt;<sp/>node_cnt;<sp/>node_idx++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recognition<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>recognition_cost<sp/>=<sp/>srch_nodes[node_idx]-&gt;BestCost();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>size<sp/>cost<sp/>of<sp/>the<sp/>alternate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*ch_buff<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_cost<sp/>=<sp/><ref refid="classtesseract_1_1_beam_search_1a8db9d114117e35964e67e2dedfaae253" kindref="member">SizeCost</ref>(srch_obj,<sp/>srch_nodes[node_idx],<sp/>&amp;ch_buff);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accumulate<sp/>other<sp/>costs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch_buff)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>char<sp/>bigram<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bigram_cost<sp/>=<sp/>!bigrams<sp/>?<sp/>0<sp/>:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bigrams-&gt;Cost(ch_buff,<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1ab9c6b5f85ef4baa38ad8ef9c949b8dee" kindref="member">CharacterSet</ref>());</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>unigram<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unigram_cost<sp/>=<sp/>!word_unigrams<sp/>?<sp/>0<sp/>:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_unigrams-&gt;Cost(ch_buff,<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1ab73cfe645a5071f5ccfef060d1faf3f1" kindref="member">LangMod</ref>(),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1ab9c6b5f85ef4baa38ad8ef9c949b8dee" kindref="member">CharacterSet</ref>());</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overall<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cost<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(size_cost<sp/>*<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1addac767dbdf8405f9026848a17561556" kindref="member">Params</ref>()-&gt;<ref refid="classtesseract_1_1_tuning_params_1a4fec980d9b962fe7357787e7511c1e7a" kindref="member">SizeWgt</ref>())<sp/>+</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bigram_cost<sp/>*<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1addac767dbdf8405f9026848a17561556" kindref="member">Params</ref>()-&gt;<ref refid="classtesseract_1_1_tuning_params_1a41babfa4b23f2d2602f3ca1317f4aab1" kindref="member">CharBigramWgt</ref>())<sp/>+</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unigram_cost<sp/>*<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1addac767dbdf8405f9026848a17561556" kindref="member">Params</ref>()-&gt;<ref refid="classtesseract_1_1_tuning_params_1a89ff4cdb95d8257c2f2b05e767082c2e" kindref="member">WordUnigramWgt</ref>())<sp/>+</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(recognition_cost<sp/>*<sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1addac767dbdf8405f9026848a17561556" kindref="member">Params</ref>()-&gt;<ref refid="classtesseract_1_1_tuning_params_1a20f4885d6efe282305e9f356536771db" kindref="member">RecoWgt</ref>()));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>into<sp/>word<sp/>alt<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alt_list-&gt;Insert(ch_buff,<sp/>cost,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;void<sp/>*&gt;(srch_nodes[node_idx]));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>strict<sp/>&lt;<sp/>is<sp/>necessary<sp/>because<sp/>WordAltList::Sort()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uses<sp/>it<sp/>in<sp/>a<sp/>bubble<sp/>sort<sp/>to<sp/>swap<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_cost<sp/>&lt;<sp/>0<sp/>||<sp/>cost<sp/>&lt;<sp/>best_cost)<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_presorted_node_idx_<sp/>=<sp/>node_idx;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_cost<sp/>=<sp/>cost;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]ch_buff;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>the<sp/>alternates<sp/>based<sp/>on<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>alt_list-&gt;Sort();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alt_list;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>lattice<sp/>column<sp/>corresponding<sp/>to<sp/>the<sp/>specified<sp/>column<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">SearchColumn<sp/>*<ref refid="classtesseract_1_1_beam_search_1aaca2dc4ddb2857ffbbb84e69f8a0f789" kindref="member">BeamSearch::Column</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>&lt;<sp/>0<sp/>||<sp/>col<sp/>&gt;=<sp/>col_cnt_<sp/>||<sp/>!col_)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>col_[col];</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>best<sp/>node<sp/>in<sp/>the<sp/>last<sp/>column<sp/>of<sp/>last<sp/>performed<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">SearchNode<sp/>*<ref refid="classtesseract_1_1_beam_search_1a57eea92e9a652a61a734f357104144d6" kindref="member">BeamSearch::BestNode</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_cnt_<sp/>&lt;<sp/>1<sp/>||<sp/>!col_<sp/>||<sp/>!col_[col_cnt_<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_cnt<sp/>=<sp/>col_[col_cnt_<sp/>-<sp/>1]-&gt;<ref refid="classtesseract_1_1_search_column_1a9a102cd86f201dee6abc1f90f5a5ef1e" kindref="member">NodeCount</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>SearchNode<sp/>**srch_nodes<sp/>=<sp/>col_[col_cnt_<sp/>-<sp/>1]-&gt;<ref refid="classtesseract_1_1_search_column_1a57c10b151d3565c752c80bbf225cb834" kindref="member">Nodes</ref>();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_cnt<sp/>&lt;<sp/>1<sp/>||<sp/>!srch_nodes<sp/>||<sp/>!srch_nodes[0])</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>srch_nodes[0];</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>string<sp/>corresponding<sp/>to<sp/>the<sp/>specified<sp/>alt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*<ref refid="classtesseract_1_1_beam_search_1a627bb3008dad38d1424d8af99fbe9261" kindref="member">BeamSearch::Alt</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>last<sp/>column<sp/>of<sp/>the<sp/>lattice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_cnt_<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>SearchColumn<sp/>*srch_col<sp/>=<sp/>col_[col_cnt_<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!srch_col)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>to<sp/>the<sp/>last<sp/>node<sp/>in<sp/>the<sp/>selected<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alt<sp/>&gt;=<sp/>srch_col-&gt;NodeCount()<sp/>||<sp/>srch_col-&gt;Nodes()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>SearchNode<sp/>*srch_node<sp/>=<sp/>srch_col-&gt;Nodes()[alt];</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!srch_node)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*str32<sp/>=<sp/>srch_node-&gt;PathString();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!str32)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str32;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backtracks<sp/>from<sp/>the<sp/>specified<sp/>node<sp/>index<sp/>and<sp/>returns<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>character<sp/>mapped<sp/>segments<sp/>and<sp/>character<sp/>count.<sp/>Optional<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments<sp/>are<sp/>the<sp/>char_32<sp/>result<sp/>string<sp/>and<sp/>character<sp/>bounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boxes,<sp/>if<sp/>non-NULL<sp/>values<sp/>are<sp/>passed<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">CharSamp<sp/>**<ref refid="classtesseract_1_1_beam_search_1ae3c9e6077238c37acd5ec27c6bf4fdc9" kindref="member">BeamSearch::BackTrack</ref>(SearchObject<sp/>*srch_obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_index,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*char_cnt,<sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>**str32,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Boxa<sp/>**char_boxes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>last<sp/>column<sp/>of<sp/>the<sp/>lattice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_cnt_<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>SearchColumn<sp/>*srch_col<sp/>=<sp/>col_[col_cnt_<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!srch_col)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>point<sp/>to<sp/>the<sp/>last<sp/>node<sp/>in<sp/>the<sp/>selected<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node_index<sp/>&gt;=<sp/>srch_col-&gt;NodeCount()<sp/>||<sp/>!srch_col-&gt;Nodes())</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>SearchNode<sp/>*srch_node<sp/>=<sp/>srch_col-&gt;Nodes()[node_index];</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!srch_node)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_beam_search_1ae3c9e6077238c37acd5ec27c6bf4fdc9" kindref="member">BackTrack</ref>(srch_obj,<sp/>srch_node,<sp/>char_cnt,<sp/>str32,<sp/>char_boxes);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backtracks<sp/>from<sp/>the<sp/>specified<sp/>node<sp/>index<sp/>and<sp/>returns<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>character<sp/>mapped<sp/>segments<sp/>and<sp/>character<sp/>count.<sp/>Optional<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arguments<sp/>are<sp/>the<sp/>char_32<sp/>result<sp/>string<sp/>and<sp/>character<sp/>bounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boxes,<sp/>if<sp/>non-NULL<sp/>values<sp/>are<sp/>passed<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal">CharSamp<sp/>**<ref refid="classtesseract_1_1_beam_search_1ae3c9e6077238c37acd5ec27c6bf4fdc9" kindref="member">BeamSearch::BackTrack</ref>(SearchObject<sp/>*srch_obj,<sp/>SearchNode<sp/>*srch_node,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*char_cnt,<sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>**str32,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Boxa<sp/>**char_boxes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!srch_node)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str32)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str32)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[](*str32);<sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>existing<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>*str32<sp/>=<sp/>srch_node-&gt;PathString();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*str32)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_boxes<sp/>&amp;&amp;<sp/>*char_boxes)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>boxaDestroy(char_boxes);<sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>existing<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>CharSamp<sp/>**chars;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>chars<sp/>=<sp/>SplitByNode(srch_obj,<sp/>srch_node,<sp/>char_cnt,<sp/>char_boxes);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!chars<sp/>&amp;&amp;<sp/>str32)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]*str32;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chars;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Backtracks<sp/>from<sp/>the<sp/>given<sp/>lattice<sp/>node<sp/>and<sp/>return<sp/>the<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">//<sp/>char<sp/>mapped<sp/>segments<sp/>and<sp/>character<sp/>count.<sp/>The<sp/>character<sp/>bounding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">//<sp/>boxes<sp/>are<sp/>optional<sp/>return<sp/>arguments,<sp/>if<sp/>non-NULL<sp/>values<sp/>are<sp/>passed<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">CharSamp<sp/>**BeamSearch::SplitByNode(SearchObject<sp/>*srch_obj,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SearchNode<sp/>*srch_node,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*char_cnt,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Boxa<sp/>**char_boxes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>characters<sp/>(could<sp/>be<sp/>less<sp/>than<sp/>the<sp/>path<sp/>length<sp/>when<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>phrase<sp/>mode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>*char_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>SearchNode<sp/>*node<sp/>=<sp/>srch_node;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;ParentNode();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>(*char_cnt)++;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*char_cnt<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>box<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_boxes)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*char_boxes)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxaDestroy(char_boxes);<sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>existing<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>*char_boxes<sp/>=<sp/>boxaCreate(*char_cnt);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*char_boxes<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory<sp/>for<sp/>CharSamp<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>CharSamp<sp/>**chars<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CharSamp<sp/>*[*char_cnt];</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!chars)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_boxes)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxaDestroy(char_boxes);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch_idx<sp/>=<sp/>*char_cnt<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seg_pt_cnt<sp/>=<sp/>srch_obj-&gt;SegPtCnt();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(srch_node<sp/>&amp;&amp;<sp/>ch_idx<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parent<sp/>node<sp/>(could<sp/>be<sp/>null)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>SearchNode<sp/>*parent_node<sp/>=<sp/>srch_node-&gt;ParentNode();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>seg<sp/>pts<sp/>corresponding<sp/>to<sp/>the<sp/>search<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>st_col<sp/>=<sp/>!parent_node<sp/>?<sp/>0<sp/>:<sp/>parent_node-&gt;ColIdx()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>st_seg_pt<sp/>=<sp/>st_col<sp/>&lt;=<sp/>0<sp/>?<sp/>-1<sp/>:<sp/>st_col<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_col<sp/>=<sp/>srch_node-&gt;ColIdx();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_seg_pt<sp/>=<sp/>end_col<sp/>&gt;=<sp/>seg_pt_cnt<sp/>?<sp/>seg_pt_cnt<sp/>:<sp/>end_col;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>char<sp/>sample<sp/>corresponding<sp/>to<sp/>the<sp/>segmentation<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>CharSamp<sp/>*samp<sp/>=<sp/>srch_obj-&gt;CharSample(st_seg_pt,<sp/>end_seg_pt);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!samp)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>samp-&gt;SetLabel(srch_node-&gt;NodeString());</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>chars[ch_idx]<sp/>=<sp/>samp;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_boxes)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>corresponding<sp/>character<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>*char_box<sp/>=<sp/>boxCreate(samp-&gt;Left(),<sp/>samp-&gt;Top(),</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samp-&gt;Width(),<sp/>samp-&gt;Height());</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!char_box)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxaAddBox(*char_boxes,<sp/>char_box,<sp/>L_INSERT);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>srch_node<sp/>=<sp/>parent_node;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>ch_idx--;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]chars;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_boxes)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxaDestroy(char_boxes);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reverse<sp/>the<sp/>order<sp/>of<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_boxes)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_boxa_size<sp/>=<sp/>boxaGetCount(*char_boxes);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>limit<sp/>=<sp/>char_boxa_size<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>limit;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box1_idx<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box2_idx<sp/>=<sp/>char_boxa_size<sp/>-<sp/>1<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>*box1<sp/>=<sp/>boxaGetBox(*char_boxes,<sp/>box1_idx,<sp/>L_CLONE);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Box<sp/>*box2<sp/>=<sp/>boxaGetBox(*char_boxes,<sp/>box2_idx,<sp/>L_CLONE);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxaReplaceBox(*char_boxes,<sp/>box2_idx,<sp/>box1);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxaReplaceBox(*char_boxes,<sp/>box1_idx,<sp/>box2);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chars;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>size<sp/>cost<sp/>of<sp/>a<sp/>string<sp/>for<sp/>a<sp/>lattice<sp/>path<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ends<sp/>at<sp/>the<sp/>specified<sp/>lattice<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_beam_search_1a8db9d114117e35964e67e2dedfaae253" kindref="member">BeamSearch::SizeCost</ref>(SearchObject<sp/>*srch_obj,<sp/>SearchNode<sp/>*node,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>**str32)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>CharSamp<sp/>**chars<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Backtrack<sp/>to<sp/>get<sp/>string<sp/>and<sp/>character<sp/>segmentation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>chars<sp/>=<sp/><ref refid="classtesseract_1_1_beam_search_1ae3c9e6077238c37acd5ec27c6bf4fdc9" kindref="member">BackTrack</ref>(srch_obj,<sp/>node,<sp/>&amp;char_cnt,<sp/>str32,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!chars)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cube__const_8h_1ab15bac3baa4fd3e56ba19eefebe4065f" kindref="member">WORST_COST</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_cost<sp/>=<sp/>(cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1a12bb2ed799fdad0682bf889d188784e5" kindref="member">SizeModel</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>0<sp/>:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cntxt_-&gt;<ref refid="classtesseract_1_1_cube_reco_context_1a12bb2ed799fdad0682bf889d188784e5" kindref="member">SizeModel</ref>()-&gt;<ref refid="classtesseract_1_1_word_size_model_1a1f1f51e3710b170b0f011a2e5256738f" kindref="member">Cost</ref>(chars,<sp/>char_cnt);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]chars;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_cost;</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesesract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/beam_search.cpp"/>
  </compounddef>
</doxygen>
