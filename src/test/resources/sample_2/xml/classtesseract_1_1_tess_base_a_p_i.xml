<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classtesseract_1_1_tess_base_a_p_i" kind="class" prot="public">
    <compoundname>tesseract::TessBaseAPI</compoundname>
    <includes refid="baseapi_8h" local="no">baseapi.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1a247f50792f581df05afe336a2aeda402" prot="protected" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> *</type>
        <definition>Tesseract* tesseract::TessBaseAPI::tesseract_</definition>
        <argsstring></argsstring>
        <name>tesseract_</name>
        <briefdescription>
<para>The underlying data object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="759" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="755" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1ad7b44f5b470c9e04289c348d82726b27" prot="protected" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> *</type>
        <definition>Tesseract* tesseract::TessBaseAPI::osd_tesseract_</definition>
        <argsstring></argsstring>
        <name>osd_tesseract_</name>
        <briefdescription>
<para>For orientation &amp; script detection. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="760" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1a0222d0f645909860d13f71c078008133" prot="protected" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_equation_detect" kindref="compound">EquationDetect</ref> *</type>
        <definition>EquationDetect* tesseract::TessBaseAPI::equ_detect_</definition>
        <argsstring></argsstring>
        <name>equ_detect_</name>
        <briefdescription>
<para>The equation detector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="761" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1a9d93e1d92ca230ae02b81d44bc88a55c" prot="protected" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_image_thresholder" kindref="compound">ImageThresholder</ref> *</type>
        <definition>ImageThresholder* tesseract::TessBaseAPI::thresholder_</definition>
        <argsstring></argsstring>
        <name>thresholder_</name>
        <briefdescription>
<para><ref refid="classtesseract_1_1_image" kindref="compound">Image</ref> thresholding module. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="762" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1a06084d66b830a388515663761d842041" prot="protected" static="no" mutable="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref> * &gt; *</type>
        <definition>GenericVector&lt;ParagraphModel *&gt;* tesseract::TessBaseAPI::paragraph_models_</definition>
        <argsstring></argsstring>
        <name>paragraph_models_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="763" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="763" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1ac22c36258b0cd727188505a9a1dbc7e1" prot="protected" static="no" mutable="no">
        <type>BLOCK_LIST *</type>
        <definition>BLOCK_LIST* tesseract::TessBaseAPI::block_list_</definition>
        <argsstring></argsstring>
        <name>block_list_</name>
        <briefdescription>
<para>The page layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="764" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1a12dda612630eba40e15f9d0b9955a04c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref> *</type>
        <definition>PAGE_RES* tesseract::TessBaseAPI::page_res_</definition>
        <argsstring></argsstring>
        <name>page_res_</name>
        <briefdescription>
<para>The page-level data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="765" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1a4690919aa9d4eabda36bdefdaadf7ac9" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
        <definition>STRING* tesseract::TessBaseAPI::input_file_</definition>
        <argsstring></argsstring>
        <name>input_file_</name>
        <briefdescription>
<para>Name used by training code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="766" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1a22a0c520bc88e2d80fb8b6a10b7caba1" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
        <definition>STRING* tesseract::TessBaseAPI::output_file_</definition>
        <argsstring></argsstring>
        <name>output_file_</name>
        <briefdescription>
<para>Name used by debug code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="767" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1ad7c3d4ead7b9c8e27e45e710e5407913" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
        <definition>STRING* tesseract::TessBaseAPI::datapath_</definition>
        <argsstring></argsstring>
        <name>datapath_</name>
        <briefdescription>
<para>Current location of tessdata. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="768" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="768" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1a74a291190aa0bbf90b57f678b1fb0a5c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
        <definition>STRING* tesseract::TessBaseAPI::language_</definition>
        <argsstring></argsstring>
        <name>language_</name>
        <briefdescription>
<para>Last initialized language. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="769" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1af9d4095a569fbf8687cefc005d2f58ee" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacetesseract_1a04550a0ed1279562027bf2fc92c421ae" kindref="member">OcrEngineMode</ref></type>
        <definition>OcrEngineMode tesseract::TessBaseAPI::last_oem_requested_</definition>
        <argsstring></argsstring>
        <name>last_oem_requested_</name>
        <briefdescription>
<para>Last ocr language mode requested. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="770" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1a7d4627f300b1096d43a3e7d54d8aa5df" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::recognition_done_</definition>
        <argsstring></argsstring>
        <name>recognition_done_</name>
        <briefdescription>
<para>page_res_ contains recognition data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="771" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_tess_base_a_p_i_1ac7eaed7f3fedb15212eb39b747de0102" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacetesseract_1ac936df568c982d1b91cdb50e5ea1beb7" kindref="member">TruthCallback</ref> *</type>
        <definition>TruthCallback* tesseract::TessBaseAPI::truth_cb_</definition>
        <argsstring></argsstring>
        <name>truth_cb_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="772" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="772" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___thresholder_params_1gab3c90d43a3628dc7abeb93e9ca01bc97" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::rect_left_</definition>
        <argsstring></argsstring>
        <name>rect_left_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="779" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="779" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___thresholder_params_1gac71648cd860510ca65b94d87d7d9bb1f" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::rect_top_</definition>
        <argsstring></argsstring>
        <name>rect_top_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="780" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___thresholder_params_1ga31dbaec91a5dd8ee7d399786a4bd5ef8" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::rect_width_</definition>
        <argsstring></argsstring>
        <name>rect_width_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="781" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="781" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___thresholder_params_1ga978edc537da096ec07d4bb8e4ae5332d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::rect_height_</definition>
        <argsstring></argsstring>
        <name>rect_height_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="782" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___thresholder_params_1gaf3238cd7ff2c0995e647c8c7846bdba3" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::image_width_</definition>
        <argsstring></argsstring>
        <name>image_width_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="783" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="783" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___thresholder_params_1gab7d24a78f3565c5bfb42b2592b9e8df0" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::image_height_</definition>
        <argsstring></argsstring>
        <name>image_height_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="784" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a3bc4277652df23eaeccd0629f2b1419d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::TessBaseAPI::TessBaseAPI</definition>
        <argsstring>()</argsstring>
        <name>TessBaseAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="104" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="101" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a02df6c7886962e347e3c5f7c1f632337" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>tesseract::TessBaseAPI::~TessBaseAPI</definition>
        <argsstring>()</argsstring>
        <name>~TessBaseAPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="105" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a896312e68d246b58e704a8f5576e6917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetInputName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SetInputName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the name of the input file. Needed only for training and reading a UNLV zone file.</para><para>Set the name of the input file. Needed only for training and loading a UNLV zone file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="116" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="138" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1af997008815be7af2edcd9ff1a5d55896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetOutputName</definition>
        <argsstring>(const char *name)</argsstring>
        <name>SetOutputName</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the name of the bonus output files. Needed only for debugging.</para><para>Set the name of the output files. Needed only for debugging. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="119" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="146" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a2e09259c558c6d8e0f7e523cbaf5adf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::SetVariable</definition>
        <argsstring>(const char *name, const char *value)</argsstring>
        <name>SetVariable</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the value of an internal &quot;parameter.&quot; Supply the name of the parameter and the value as a string, just as you would in a config file. Returns false if the name lookup failed. Eg SetVariable(&quot;tessedit_char_blacklist&quot;, &quot;xyz&quot;); to ignore x, y and z. Or SetVariable(&quot;classify_bln_numeric_mode&quot;, &quot;1&quot;); to set numeric-only mode. SetVariable may be used before Init, but settings will revert to defaults on <ref refid="group___advanced_a_p_i_1ga38027513ee9c0348de1790bddcdc3391" kindref="member">End()</ref>.</para><para>Note: Must be called after <ref refid="classtesseract_1_1_tess_base_a_p_i_1a96899e8e5358d96752ab1cfc3bc09f3e" kindref="member">Init()</ref>. Only works for non-init variables (init variables should be passed to <ref refid="classtesseract_1_1_tess_base_a_p_i_1a96899e8e5358d96752ab1cfc3bc09f3e" kindref="member">Init()</ref>). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="134" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="153" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a20c9b24d670ab01dd7f011727b7a8daa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::SetDebugVariable</definition>
        <argsstring>(const char *name, const char *value)</argsstring>
        <name>SetDebugVariable</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="135" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="159" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a5923cccbe20988f0f99072844d1af573" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::GetIntVariable</definition>
        <argsstring>(const char *name, int *value) const </argsstring>
        <name>GetIntVariable</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the parameter was found among <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> parameters. Fills in value with the value of the parameter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="141" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="165" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1ac5e219cbaa2c19c67ccef3246ff838a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::GetBoolVariable</definition>
        <argsstring>(const char *name, bool *value) const </argsstring>
        <name>GetBoolVariable</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="142" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="173" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a66a87a36eaee72d6ce12409f99f28eb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::GetDoubleVariable</definition>
        <argsstring>(const char *name, double *value) const </argsstring>
        <name>GetDoubleVariable</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="143" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="187" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a03dfbc60eeb4cef2937703c9df60003b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * tesseract::TessBaseAPI::GetStringVariable</definition>
        <argsstring>(const char *name) const </argsstring>
        <name>GetStringVariable</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the pointer to the string that represents the value of the parameter if it was found among <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="149" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1aa00be783b6ce3c3178fc86afdf1cba7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::PrintVariables</definition>
        <argsstring>(FILE *fp) const </argsstring>
        <name>PrintVariables</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> parameters to the given file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="154" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1aa40487f19e71221f05bb3ad5dd36c437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::GetVariableAsString</definition>
        <argsstring>(const char *name, STRING *val)</argsstring>
        <name>GetVariableAsString</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get value of named variable as a string, if it exists. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="159" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a96899e8e5358d96752ab1cfc3bc09f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::Init</definition>
        <argsstring>(const char *datapath, const char *language, OcrEngineMode mode, char **configs, int configs_size, const GenericVector&lt; STRING &gt; *vars_vec, const GenericVector&lt; STRING &gt; *vars_values, bool set_only_non_debug_params)</argsstring>
        <name>Init</name>
        <param>
          <type>const char *</type>
          <declname>datapath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>language</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1a04550a0ed1279562027bf2fc92c421ae" kindref="member">OcrEngineMode</ref></type>
          <declname>mode</declname>
          <defname>oem</defname>
        </param>
        <param>
          <type>char **</type>
          <declname>configs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>configs_size</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &gt; *</type>
          <declname>vars_vec</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &gt; *</type>
          <declname>vars_values</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>set_only_non_debug_params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instances are now mostly thread-safe and totally independent, but some global parameters remain. Basically it is safe to use multiple TessBaseAPIs in different threads in parallel, UNLESS: you use SetVariable on some of the Params in classify and textord. If you do, then the effect will be to change it for all your instances.</para><para>Start tesseract. Returns zero on success and -1 on failure. NOTE that the only members that may be called before Init are those listed above here in the class definition.</para><para>The datapath must be the name of the parent directory of tessdata and must end in / . Any name after the last / will be stripped. The language is (usually) an ISO 639-3 string or NULL will default to eng. It is entirely safe (and eventually will be efficient too) to call Init multiple times on the same instance to change language, or just to reset the classifier. The language may be a string of the form [~]&lt;lang&gt;[+[~]&lt;lang&gt;]* indicating that multiple languages are to be loaded. Eg hin+eng will load Hindi and English. Languages may specify internally that they want to be loaded with one or more other languages, so the ~ sign is available to override that. Eg if hin were set to load eng by default, then hin+~eng would force loading only hin. The number of loaded languages is limited only by memory, with the caveat that loading additional languages will impact both speed and accuracy, as there is more work to do to decide on the applicable language, and there is more chance of hallucinating incorrect words. WARNING: On changing languages, all <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> parameters are reset back to their default values. (Which may vary between languages.) If you have a rare need to set a Variable that controls initialization for a second call to Init you should explicitly call <ref refid="group___advanced_a_p_i_1ga38027513ee9c0348de1790bddcdc3391" kindref="member">End()</ref> and then use SetVariable before Init. This is only a very rare use case, since there are very few uses that require any parameters to be set before Init.</para><para>If set_only_non_debug_params is true, only params that do not contain &quot;debug&quot; in the name will be set.</para><para>The datapath must be the name of the data directory (no ending /) or some other file in which the data directory resides (for instance argv[0].) The language is (usually) an ISO 639-3 string or NULL will default to eng. If numeric_mode is true, then only digits and Roman numerals will be returned. <simplesect kind="return"><para>: 0 on success and -1 on initialization failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="199" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="213" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a6d0956a66158ead4e3a86c7f50dad56e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::Init</definition>
        <argsstring>(const char *datapath, const char *language, OcrEngineMode oem)</argsstring>
        <name>Init</name>
        <param>
          <type>const char *</type>
          <declname>datapath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>language</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1a04550a0ed1279562027bf2fc92c421ae" kindref="member">OcrEngineMode</ref></type>
          <declname>oem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="204" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a965ef2ff51c440756519a3d6f755f34f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::Init</definition>
        <argsstring>(const char *datapath, const char *language)</argsstring>
        <name>Init</name>
        <param>
          <type>const char *</type>
          <declname>datapath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>language</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="207" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1af4eab4c95ee65eff4f36de0b4d27d07a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * tesseract::TessBaseAPI::GetInitLanguagesAsString</definition>
        <argsstring>() const </argsstring>
        <name>GetInitLanguagesAsString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the languages string used in the last valid initialization. If the last initialization specified &quot;deu+hin&quot; then that will be returned. If hin loaded eng automatically as well, then that will not be included in this list. To find the languages actually loaded use GetLoadedLanguagesAsVector. The returned string should NOT be deleted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="219" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="269" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a16a8fb0d6583e1990d79757dc32c760c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::GetLoadedLanguagesAsVector</definition>
        <argsstring>(GenericVector&lt; STRING &gt; *langs) const </argsstring>
        <name>GetLoadedLanguagesAsVector</name>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &gt; *</type>
          <declname>langs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the loaded languages in the vector of STRINGs. Includes all languages loaded by the last Init, including those loaded as dependencies of other loaded languages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="226" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="279" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a1fd02f053ce01f915805fff31aea6695" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::GetAvailableLanguagesAsVector</definition>
        <argsstring>(GenericVector&lt; STRING &gt; *langs) const </argsstring>
        <name>GetAvailableLanguagesAsVector</name>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &gt; *</type>
          <declname>langs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the available languages in the vector of STRINGs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="231" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="293" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1ac5fdc031598e1237ec7e30c5efa95840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::InitLangMod</definition>
        <argsstring>(const char *datapath, const char *language)</argsstring>
        <name>InitLangMod</name>
        <param>
          <type>const char *</type>
          <declname>datapath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>language</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init only the lang model component of <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref>. The only functions that work after this init are SetVariable and IsValidWord. WARNING: temporary! This function will be removed from here and placed in a separate API at some future time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="239" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="343" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a23d63e2cac00b958eb8803cab4943b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::InitForAnalysePage</definition>
        <argsstring>()</argsstring>
        <name>InitForAnalysePage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Init only for page layout analysis. Use only for calls to SetImage and AnalysePage. Calls that attempt recognition will generate an error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="245" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="353" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1ab3bd61f8ccb7c4e1c41801ea708d2181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::ReadConfigFile</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>ReadConfigFile</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read a &quot;config&quot; file containing a set of param, value pairs. Searches the standard places: tessdata/configs, tessdata/tessconfigs and also accepts a relative or absolute path name. Note: only non-init params will be set (init params are set by <ref refid="classtesseract_1_1_tess_base_a_p_i_1a96899e8e5358d96752ab1cfc3bc09f3e" kindref="member">Init()</ref>).</para><para>Read a &quot;config&quot; file containing a set of parameter name, value pairs. Searches the standard places: tessdata/configs, tessdata/tessconfigs and also accepts a relative or absolute path name. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="253" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="365" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a4f3eec49763f76c347c216eed79cae93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::ReadDebugConfigFile</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>ReadDebugConfigFile</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as above, but only set debug params from the given config file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="255" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="370" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a15a7a9c1afbba3078a55b4566de891ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetPageSegMode</definition>
        <argsstring>(PageSegMode mode)</argsstring>
        <name>SetPageSegMode</name>
        <param>
          <type><ref refid="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66a" kindref="member">PageSegMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current page segmentation mode. Defaults to PSM_SINGLE_BLOCK. The mode is stored as an <ref refid="classtesseract_1_1_int_param" kindref="compound">IntParam</ref> so it can also be modified by ReadConfigFile or SetVariable(&quot;tessedit_pageseg_mode&quot;, mode as string).</para><para>Set the current page segmentation mode. Defaults to PSM_AUTO. The mode is stored as an <ref refid="classtesseract_1_1_int_param" kindref="compound">IntParam</ref> so it can also be modified by ReadConfigFile or SetVariable(&quot;tessedit_pageseg_mode&quot;, mode as string). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="262" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="379" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a943206e3548bfb517c67354ee50661f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66a" kindref="member">PageSegMode</ref></type>
        <definition>PageSegMode tesseract::TessBaseAPI::GetPageSegMode</definition>
        <argsstring>() const </argsstring>
        <name>GetPageSegMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the current page segmentation mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="265" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="386" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1ad34c56e08d999ece9972f4c9a9301f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * tesseract::TessBaseAPI::TesseractRect</definition>
        <argsstring>(const unsigned char *imagedata, int bytes_per_pixel, int bytes_per_line, int left, int top, int width, int height)</argsstring>
        <name>TesseractRect</name>
        <param>
          <type>const unsigned char *</type>
          <declname>imagedata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_pixel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recognize a rectangle from an image and return the result as a string. May be called many times for a single Init. Currently has no error checking. Greyscale of 8 and color of 24 or 32 bits per pixel may be given. Palette color images will not work properly and must be converted to 24 bit. Binary images of 1 bit per pixel may also be given but they must be byte packed with the MSB of the first byte being the first pixel, and a 1 represents WHITE. For binary images set bytes_per_pixel=0. The recognized text is returned as a char* which is coded as UTF8 and must be freed with the delete [] operator.</para><para>Note that TesseractRect is the simplified convenience interface. For advanced uses, use SetImage, (optionally) SetRectangle, Recognize, and one or more of the Get*Text functions below.</para><para>Recognize a rectangle from an image and return the result as a string. May be called many times for a single Init. Currently has no error checking. Greyscale of 8 and color of 24 or 32 bits per pixel may be given. Palette color images will not work properly and must be converted to 24 bit. Binary images of 1 bit per pixel may also be given but they must be byte packed with the MSB of the first byte being the first pixel, and a one pixel is WHITE. For binary images set bytes_per_pixel=0. The recognized text is returned as a char* which is coded as UTF8 and must be freed with the delete [] operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="284" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="406" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1ae16cc5135aba401b609e49d6790281e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::ClearAdaptiveClassifier</definition>
        <argsstring>()</argsstring>
        <name>ClearAdaptiveClassifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Call between pages or documents etc to free up memory and forget adaptive data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="292" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="428" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gaa463622111f3b11d8fca5863709cc699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetImage</definition>
        <argsstring>(const unsigned char *imagedata, int width, int height, int bytes_per_pixel, int bytes_per_line)</argsstring>
        <name>SetImage</name>
        <param>
          <type>const unsigned char *</type>
          <declname>imagedata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_pixel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bytes_per_line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide an image for <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> to recognize. Format is as TesseractRect above. Does not copy the image buffer, or take ownership. The source image may be destroyed after Recognize is called, either explicitly or implicitly via one of the Get*Text functions. SetImage clears all recognition results, and sets the rectangle to the full image, so it may be followed immediately by a GetUTF8Text, and it will automatically perform recognition. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="311" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="444" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga89aa20dee8b772168b2d18150984bd2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetImage</definition>
        <argsstring>(const Pix *pix)</argsstring>
        <name>SetImage</name>
        <param>
          <type>const Pix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide an image for <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> to recognize. As with SetImage above, <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> doesn&apos;t take a copy or ownership or pixDestroy the image, so it must persist until after Recognize. Pix vs raw, which to use? Use Pix where possible. A future version of <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> may choose to use Pix as its internal representation and discard <ref refid="class_i_m_a_g_e" kindref="compound">IMAGE</ref> altogether. Because of that, an implementation that sources and targets Pix may end up with less copies than an implementation that does not. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="324" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="469" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga4ded6137507a4e8eb6ed4bea0b9648f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetSourceResolution</definition>
        <argsstring>(int ppi)</argsstring>
        <name>SetSourceResolution</name>
        <param>
          <type>int</type>
          <declname>ppi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the resolution of the source image in pixels per inch so font size information can be calculated in results. Call this after <ref refid="group___advanced_a_p_i_1gaa463622111f3b11d8fca5863709cc699" kindref="member">SetImage()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="330" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="452" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga284228c7e9d18bbbd3984d44e252d625" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetRectangle</definition>
        <argsstring>(int left, int top, int width, int height)</argsstring>
        <name>SetRectangle</name>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Restrict recognition to a sub-rectangle of the image. Call after SetImage. Each SetRectangle clears the recogntion results so multiple rectangles can be recognized with the same image. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="337" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="479" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga73e6a99f5f09aaf26dc23f623a813143" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetThresholder</definition>
        <argsstring>(ImageThresholder *thresholder)</argsstring>
        <name>SetThresholder</name>
        <param>
          <type><ref refid="classtesseract_1_1_image_thresholder" kindref="compound">ImageThresholder</ref> *</type>
          <declname>thresholder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In extreme cases only, usually with a subclass of Thresholder, it is possible to provide a different Thresholder. The Thresholder may be preloaded with an image, settings etc, or they may be set after. Note that <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> takes ownership of the Thresholder and will delete it when it it is replaced or the API is destructed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="346" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="346" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gaee19c9ea78a647420bbe99a447569995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Pix *</type>
        <definition>Pix * tesseract::TessBaseAPI::GetThresholdedImage</definition>
        <argsstring>()</argsstring>
        <name>GetThresholdedImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a copy of the internal thresholded image from <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref>. Caller takes ownership of the Pix and must pixDestroy it. May be called any time after SetImage, or after TesseractRect.</para><para>ONLY available if you have Leptonica installed. Get a copy of the internal thresholded image from <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="358" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="490" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gafdd23f73100c54cff18ecfa14efa0379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Boxa *</type>
        <definition>Boxa * tesseract::TessBaseAPI::GetRegions</definition>
        <argsstring>(Pixa **pixa)</argsstring>
        <name>GetRegions</name>
        <param>
          <type>Pixa **</type>
          <declname>pixa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the result of page layout analysis as a leptonica-style Boxa, Pixa pair, in reading order. Can be called before or after Recognize. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="365" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="503" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga337bd007c5fff9336bba8dfade1924ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Boxa *</type>
        <definition>Boxa * tesseract::TessBaseAPI::GetTextlines</definition>
        <argsstring>(Pixa **pixa, int **blockids)</argsstring>
        <name>GetTextlines</name>
        <param>
          <type>Pixa **</type>
          <declname>pixa</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>blockids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the textlines as a leptonica-style Boxa, Pixa pair, in reading order. Can be called before or after Recognize. If blockids is not NULL, the block-id of each line is also returned as an array of one element per line. delete [] after use. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="374" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="513" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gac7c249f9f7e11eadc557d4b3cab123a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Boxa *</type>
        <definition>Boxa * tesseract::TessBaseAPI::GetStrips</definition>
        <argsstring>(Pixa **pixa, int **blockids)</argsstring>
        <name>GetStrips</name>
        <param>
          <type>Pixa **</type>
          <declname>pixa</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>blockids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get textlines and strips of image regions as a leptonica-style Boxa, Pixa pair, in reading order. Enables downstream handling of non-rectangular regions. Can be called before or after Recognize. If blockids is not NULL, the block-id of each line is also returned as an array of one element per line. delete [] after use. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="384" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="525" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga4133bcbe38dca1173db2882ef0727703" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Boxa *</type>
        <definition>Boxa * tesseract::TessBaseAPI::GetWords</definition>
        <argsstring>(Pixa **pixa)</argsstring>
        <name>GetWords</name>
        <param>
          <type>Pixa **</type>
          <declname>pixa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the words as a leptonica-style Boxa, Pixa pair, in reading order. Can be called before or after Recognize. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="391" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="534" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gaf2b4f88c53457fa5153dc80f5a60e152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Boxa *</type>
        <definition>Boxa * tesseract::TessBaseAPI::GetConnectedComponents</definition>
        <argsstring>(Pixa **cc)</argsstring>
        <name>GetConnectedComponents</name>
        <param>
          <type>Pixa **</type>
          <declname>cc</declname>
          <defname>pixa</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the individual connected (text) components (created after pages segmentation step, but before recognition) as a leptonica-style Boxa, Pixa pair, in reading order. Can be called before or after Recognize. Note: the caller is responsible for calling boxaDestroy() on the returned Boxa array and pixaDestroy() on cc array.</para><para>Gets the individual connected (text) components (created after pages segmentation step, but before recognition) as a leptonica-style Boxa, Pixa pair, in reading order. Can be called before or after Recognize. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="401" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="544" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga56369b1654400ef97e581bb65749ec3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Boxa *</type>
        <definition>Boxa * tesseract::TessBaseAPI::GetComponentImages</definition>
        <argsstring>(PageIteratorLevel level, bool text_only, Pixa **pixa, int **blockids)</argsstring>
        <name>GetComponentImages</name>
        <param>
          <type><ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref></type>
          <declname>level</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>text_only</declname>
        </param>
        <param>
          <type>Pixa **</type>
          <declname>pixa</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>blockids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the given level kind of components (block, textline, word etc.) as a leptonica-style Boxa, Pixa pair, in reading order. Can be called before or after Recognize. If blockids is not NULL, the block-id of each component is also returned as an array of one element per component. delete [] after use. If text_only is true, then only text components are returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="411" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="556" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga6b1c8cac1ba7da32dfd32cf708eea8b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::GetThresholdedImageScaleFactor</definition>
        <argsstring>() const </argsstring>
        <name>GetThresholdedImageScaleFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the scale factor of the thresholded image that would be returned by <ref refid="group___advanced_a_p_i_1gaee19c9ea78a647420bbe99a447569995" kindref="member">GetThresholdedImage()</ref> and the various GetX() methods that call <ref refid="group___advanced_a_p_i_1ga56369b1654400ef97e581bb65749ec3d" kindref="member">GetComponentImages()</ref>. Returns 0 if no thresholder has been set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="421" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="605" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga4e4a8dbd25ac8816155481bfb53f011a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::DumpPGM</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>DumpPGM</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dump the internal binary image to a PGM file. <xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use GetThresholdedImage and write the image using pixWrite instead if possible. </para></xrefdescription></xrefsect></para><para>Dump the internal binary image to a PGM file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="428" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="613" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gaaac2abf8505c89afb8466dc3cff2c666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesseract_1_1_page_iterator" kindref="compound">PageIterator</ref> *</type>
        <definition>PageIterator * tesseract::TessBaseAPI::AnalyseLayout</definition>
        <argsstring>()</argsstring>
        <name>AnalyseLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Runs page layout analysis in the mode set by SetPageSegMode. May optionally be called prior to Recognize to get access to just the page layout results. Returns an iterator to the results. Returns NULL on error. The returned iterator must be deleted after use. WARNING! This class points to data held within the <ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">TessBaseAPI</ref> class, and therefore can only be used while the <ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">TessBaseAPI</ref> class still exists and has not been subjected to a call of Init, SetImage, Recognize, Clear, End DetectOS, or anything else that changes the internal <ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>.</para><para>Runs page layout analysis in the mode set by SetPageSegMode. May optionally be called prior to Recognize to get access to just the page layout results. Returns an iterator to the results. Returns NULL on error or an empty page. The returned iterator must be deleted after use. WARNING! This class points to data held within the <ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">TessBaseAPI</ref> class, and therefore can only be used while the <ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">TessBaseAPI</ref> class still exists and has not been subjected to a call of Init, SetImage, Recognize, Clear, End DetectOS, or anything else that changes the internal <ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="441" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="687" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga0e4065c20b142d69a2324ee0c74ae0b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::Recognize</definition>
        <argsstring>(ETEXT_DESC *monitor)</argsstring>
        <name>Recognize</name>
        <param>
          <type><ref refid="class_e_t_e_x_t___d_e_s_c" kindref="compound">ETEXT_DESC</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recognize the image from SetAndThresholdImage, generating <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> internal structures. Returns 0 on success. Optional. The Get*Text functions below will call Recognize if needed. After Recognize, the output is kept internally until the next SetImage.</para><para>Recognize the tesseract global image and return the result as <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> internal structures. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="449" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="705" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gaec56194587e149ae38a08eccd2e0d96a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::RecognizeForChopTest</definition>
        <argsstring>(ETEXT_DESC *monitor)</argsstring>
        <name>RecognizeForChopTest</name>
        <param>
          <type><ref refid="class_e_t_e_x_t___d_e_s_c" kindref="compound">ETEXT_DESC</ref> *</type>
          <declname>monitor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Methods to retrieve information after SetAndThresholdImage(), <ref refid="group___advanced_a_p_i_1ga0e4065c20b142d69a2324ee0c74ae0b0" kindref="member">Recognize()</ref> or <ref refid="classtesseract_1_1_tess_base_a_p_i_1ad34c56e08d999ece9972f4c9a9301f93" kindref="member">TesseractRect()</ref>. (Recognize is called implicitly if needed.)Variant on Recognize used for testing chopper.</para><para>Tests the chopper by exhaustively running chop_one_blob. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="457" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="766" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gaf89df932c29b0abe4fb4ca3ae852506b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::ProcessPages</definition>
        <argsstring>(const char *filename, const char *retry_config, int timeout_millisec, STRING *text_out)</argsstring>
        <name>ProcessPages</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>retry_config</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_millisec</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>text_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recognizes all the pages in the named file, as a multi-page tiff or list of filenames, or single image, and gets the appropriate kind of text according to parameters: tessedit_create_boxfile, tessedit_make_boxes_from_boxes, tessedit_write_unlv, tessedit_create_hocr. Calls ProcessPage on each page in the input file, which may be a multi-page tiff, single-page other file format, or a plain text list of images to read. If tessedit_page_number is non-negative, processing begins at that page of a multi-page tiff file, or filelist. The text is returned in text_out. Returns false on error. If non-zero timeout_millisec terminates processing after the timeout on a single page. If non-NULL and non-empty, and some page fails for some reason, the page is reprocessed with the retry_config config file. Useful for interactively debugging a bad page. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="475" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="812" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga09be3b61fd89f7803fe37cc420b92b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::ProcessPage</definition>
        <argsstring>(Pix *pix, int page_index, const char *filename, const char *retry_config, int timeout_millisec, STRING *text_out)</argsstring>
        <name>ProcessPage</name>
        <param>
          <type>Pix *</type>
          <declname>pix</declname>
        </param>
        <param>
          <type>int</type>
          <declname>page_index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>retry_config</declname>
        </param>
        <param>
          <type>int</type>
          <declname>timeout_millisec</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>text_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recognizes a single page for ProcessPages, appending the text to text_out. The pix is the image processed - filename and page_index are metadata used by side-effect processes, such as reading a box file or formatting as hOCR. If non-zero timeout_millisec terminates processing after the timeout. If non-NULL and non-empty, and some page fails for some reason, the page is reprocessed with the retry_config config file. Useful for interactively debugging a bad page. The text is returned in text_out. Returns false on error. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="490" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="914" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga52eee8b9a4f147c26e4b64c16b46bc04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesseract_1_1_result_iterator" kindref="compound">ResultIterator</ref> *</type>
        <definition>ResultIterator * tesseract::TessBaseAPI::GetIterator</definition>
        <argsstring>()</argsstring>
        <name>GetIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a reading-order iterator to the results of LayoutAnalysis and/or Recognize. The returned iterator must be deleted after use. WARNING! This class points to data held within the <ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">TessBaseAPI</ref> class, and therefore can only be used while the <ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">TessBaseAPI</ref> class still exists and has not been subjected to a call of Init, SetImage, Recognize, Clear, End DetectOS, or anything else that changes the internal <ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="502" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="999" bodyend="1006"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga29906219f78adc7fd76a83bde37e09eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesseract_1_1_mutable_iterator" kindref="compound">MutableIterator</ref> *</type>
        <definition>MutableIterator * tesseract::TessBaseAPI::GetMutableIterator</definition>
        <argsstring>()</argsstring>
        <name>GetMutableIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a mutable iterator to the results of LayoutAnalysis and/or Recognize. The returned iterator must be deleted after use. WARNING! This class points to data held within the <ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">TessBaseAPI</ref> class, and therefore can only be used while the <ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">TessBaseAPI</ref> class still exists and has not been subjected to a call of Init, SetImage, Recognize, Clear, End DetectOS, or anything else that changes the internal <ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="512" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1016" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga115ef656f83352ba608b4f0bf9cfa2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * tesseract::TessBaseAPI::GetUTF8Text</definition>
        <argsstring>()</argsstring>
        <name>GetUTF8Text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The recognized text is returned as a char* which is coded as UTF8 and must be freed with the delete [] operator.</para><para>Make a text string from the internal data structures. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="518" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1026" bodyend="1042"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga655f906bbf64dcd6f33ce633ecce997d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * tesseract::TessBaseAPI::GetHOCRText</definition>
        <argsstring>(int page_number)</argsstring>
        <name>GetHOCRText</name>
        <param>
          <type>int</type>
          <declname>page_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Make a HTML-formatted string with hOCR markup from the internal data structures. page_number is 0-based but will appear in the output as 1-based.</para><para>Make a HTML-formatted string with hOCR markup from the internal data structures. page_number is 0-based but will appear in the output as 1-based. <ref refid="classtesseract_1_1_image" kindref="compound">Image</ref> name/input_file_ can be set by SetInputName before calling GetHOCRText STL removed from original patch submission and refactored by rays. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="525" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1064" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gaadda8cd6abe770d2f6a70a18329b1973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * tesseract::TessBaseAPI::GetBoxText</definition>
        <argsstring>(int page_number)</argsstring>
        <name>GetBoxText</name>
        <param>
          <type>int</type>
          <declname>page_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The recognized text is returned as a char* which is coded in the same format as a box file used in training. Returned string must be freed with the delete [] operator. Constructs coordinates in the original image - not just the rectangle. page_number is a 0-based page index that will appear in the box file.</para><para>The recognized text is returned as a char* which is coded as a UTF8 box file and must be freed with the delete [] operator. page_number is a 0-base page index that will appear in the box file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="533" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1233" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga173b4289191b6c2faf2a4a4b7c94affc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * tesseract::TessBaseAPI::GetUNLVText</definition>
        <argsstring>()</argsstring>
        <name>GetUNLVText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The recognized text is returned as a char* which is coded as UNLV format Latin-1 with specific reject and suspect codes and must be freed with the delete [] operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="539" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1288" bodyend="1387"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga027054e6176889ff49a7108e174fce0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::MeanTextConf</definition>
        <argsstring>()</argsstring>
        <name>MeanTextConf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the (average) confidence value between 0 and 100.</para><para>Returns the average word confidence for <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> page result. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="541" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1390" bodyend="1399"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga4a67a12db21b3569b2b50ad05b9e146a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * tesseract::TessBaseAPI::AllWordConfidences</definition>
        <argsstring>()</argsstring>
        <name>AllWordConfidences</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns all word confidences (between 0 and 100) in an array, terminated by -1. The calling function must delete [] after use. The number of confidences should correspond to the number of space- delimited words in GetUTF8Text.</para><para>Returns an array of all word confidences, terminated by -1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="548" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1402" bodyend="1424"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gab8c2ee5d614382f0d25deb9a7adfe199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::AdaptToWordStr</definition>
        <argsstring>(PageSegMode mode, const char *wordstr)</argsstring>
        <name>AdaptToWordStr</name>
        <param>
          <type><ref refid="namespacetesseract_1a338d4c8b5d497b5ec3e6e4269d8ac66a" kindref="member">PageSegMode</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>wordstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Applies the given word to the adaptive classifier if possible. The word must be SPACE-DELIMITED UTF-8 - l i k e t h i s , so it can tell the boundaries of the graphemes. Assumes that SetImage/SetRectangle have been used to set the image to the given word. The mode arg should be PSM_SINGLE_WORD or PSM_CIRCLE_WORD, as that will be used to control layout analysis. The currently set PageSegMode is preserved. Returns false if adaption was not possible for some reason. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="560" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1436" bodyend="1492"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga953b401286da174e609f09c5f275734e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free up recognition results and any stored image data, without actually freeing any recognition data that would be time-consuming to reload. Afterwards, you must call SetImage or TesseractRect before doing any Recognize or Get* operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="568" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1500" bodyend="1504"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga38027513ee9c0348de1790bddcdc3391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::End</definition>
        <argsstring>()</argsstring>
        <name>End</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Close down tesseract and free up all memory. <ref refid="group___advanced_a_p_i_1ga38027513ee9c0348de1790bddcdc3391" kindref="member">End()</ref> is equivalent to destructing and reconstructing your <ref refid="classtesseract_1_1_tess_base_a_p_i" kindref="compound">TessBaseAPI</ref>. Once <ref refid="group___advanced_a_p_i_1ga38027513ee9c0348de1790bddcdc3391" kindref="member">End()</ref> has been used, none of the other API functions may be used other than Init and anything declared above it in the class definition. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="576" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1512" bodyend="1560"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga2c06caf08c9a8aa97a08a2de2f6200df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::IsValidWord</definition>
        <argsstring>(const char *word)</argsstring>
        <name>IsValidWord</name>
        <param>
          <type>const char *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether a word is valid according to <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref>&apos;s language model <simplesect kind="return"><para>0 if the word is invalid, non-zero if valid. </para></simplesect>
<simplesect kind="warning"><para>temporary! This function will be removed from here and placed in a separate API at some future time.</para></simplesect>
Check whether a word is valid according to <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref>&apos;s language model returns 0 if the word is invalid, non-zero if valid </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="584" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1566" bodyend="1568"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga535728aa13f5f5eb66cbece59a7737e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::GetTextDirection</definition>
        <argsstring>(int *out_offset, float *out_slope)</argsstring>
        <name>GetTextDirection</name>
        <param>
          <type>int *</type>
          <declname>out_offset</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out_slope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="586" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1571" bodyend="1596"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga7a7b2870798363811c011cec2bfbf22c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetDictFunc</definition>
        <argsstring>(DictFunc f)</argsstring>
        <name>SetDictFunc</name>
        <param>
          <type><ref refid="namespacetesseract_1a8405c121c1d39fbfff2ee0318496d5f6" kindref="member">DictFunc</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets <ref refid="classtesseract_1_1_dict_1a802de385e07531ace182d16653e35f71" kindref="member">Dict::letter_is_okay_</ref> function to point to the given function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="589" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1599" bodyend="1603"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gad7a52133fe0ebab22e97166c5e5cab67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetProbabilityInContextFunc</definition>
        <argsstring>(ProbabilityInContextFunc f)</argsstring>
        <name>SetProbabilityInContextFunc</name>
        <param>
          <type><ref refid="namespacetesseract_1acff22894b78fa786f06840a81caf7650" kindref="member">ProbabilityInContextFunc</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets <ref refid="classtesseract_1_1_dict_1a7ac1496aaae5e9977a31a2781e7866f0" kindref="member">Dict::probability_in_context_</ref> function to point to the given function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="594" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1609" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga36a739bd0dc23a819170ca40f35c4b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::SetFillLatticeFunc</definition>
        <argsstring>(FillLatticeFunc f)</argsstring>
        <name>SetFillLatticeFunc</name>
        <param>
          <type><ref refid="namespacetesseract_1a1d9d5b16b1c6d8d4add27aaf89267ce9" kindref="member">FillLatticeFunc</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets <ref refid="classtesseract_1_1_wordrec_1a7a4f5e2cb7957a5decbc91eb2d31f87c" kindref="member">Wordrec::fill_lattice_</ref> function to point to the given function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="597" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1621" bodyend="1623"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga5ed6e495e7f1c269588a8b85e4e19ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::TessBaseAPI::DetectOS</definition>
        <argsstring>(OSResults *)</argsstring>
        <name>DetectOS</name>
        <param>
          <type><ref refid="struct_o_s_results" kindref="compound">OSResults</ref> *</type>
          <defname>osr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Estimates the Orientation And Script of the image. <simplesect kind="return"><para>true if the image was processed successfully.</para></simplesect>
Estimates the Orientation And Script of the image. Returns true if the image was processed successfully. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="603" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1796" bodyend="1805"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga7e60370845b53aefa2e58d0e639435e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::GetFeaturesForBlob</definition>
        <argsstring>(TBLOB *blob, const DENORM &amp;denorm, INT_FEATURE_ARRAY int_features, int *num_features, int *FeatureOutlineIndex)</argsstring>
        <name>GetFeaturesForBlob</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> &amp;</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type><ref refid="intproto_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref></type>
          <declname>int_features</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_features</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>FeatureOutlineIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the features associated with the input image.</para><para>This method returns the features associated with the input blob. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="606" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2159" bodyend="2172"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga34a1c103414dd0293ff4d40c275a5971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::RunAdaptiveClassifier</definition>
        <argsstring>(TBLOB *blob, const DENORM &amp;denorm, int num_max_matches, int *unichar_ids, float *ratings, int *num_matches_returned)</argsstring>
        <name>RunAdaptiveClassifier</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> &amp;</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_max_matches</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>unichar_ids</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>ratings</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>num_matches_returned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method to run adaptive classifier on a blob. It returns at max num_max_matches results.</para><para>Method to run adaptive classifier on a blob. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="621" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2203" bodyend="2223"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga34314bb3635a6e0d171e33d4b4181db2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * tesseract::TessBaseAPI::GetUnichar</definition>
        <argsstring>(int unichar_id)</argsstring>
        <name>GetUnichar</name>
        <param>
          <type>int</type>
          <declname>unichar_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the string form of the specified unichar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="628" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2226" bodyend="2228"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga01fc04b1c673045ed8736c02c5943eaf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
        <definition>const Dawg * tesseract::TessBaseAPI::GetDawg</definition>
        <argsstring>(int i) const </argsstring>
        <name>GetDawg</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the pointer to the i-th dawg loaded into tesseract_ object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="631" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2231" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gac0a13108ccd514cab99badcb014d2f43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::TessBaseAPI::NumDawgs</definition>
        <argsstring>() const </argsstring>
        <name>NumDawgs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the number of dawgs loaded into tesseract_ object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="634" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2237" bodyend="2239"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga7b46dfdb521a2a575ab914ece8a40e6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> *const</type>
        <definition>Tesseract* const tesseract::TessBaseAPI::tesseract</definition>
        <argsstring>() const </argsstring>
        <name>tesseract</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="651" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="651" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gaf810a9dc1e6d74132796c298445ea06d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacetesseract_1a04550a0ed1279562027bf2fc92c421ae" kindref="member">OcrEngineMode</ref> const</type>
        <definition>OcrEngineMode const tesseract::TessBaseAPI::oem</definition>
        <argsstring>() const </argsstring>
        <name>oem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="655" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="655" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga43810a084b5482d0731611513c0a9e16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::InitTruthCallback</definition>
        <argsstring>(TruthCallback *cb)</argsstring>
        <name>InitTruthCallback</name>
        <param>
          <type><ref refid="namespacetesseract_1ac936df568c982d1b91cdb50e5ea1beb7" kindref="member">TruthCallback</ref> *</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="659" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="659" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga4b21b3a15434987381804258d79651fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classtesseract_1_1_cube_reco_context" kindref="compound">CubeRecoContext</ref> *</type>
        <definition>CubeRecoContext * tesseract::TessBaseAPI::GetCubeRecoContext</definition>
        <argsstring>() const </argsstring>
        <name>GetCubeRecoContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a pointer to underlying <ref refid="classtesseract_1_1_cube_reco_context" kindref="compound">CubeRecoContext</ref> object if present. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="662" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2242" bodyend="2244"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gac4a301ee35d57b0a7572d4434cae284c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::set_min_orientation_margin</definition>
        <argsstring>(double margin)</argsstring>
        <name>set_min_orientation_margin</name>
        <param>
          <type>double</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="664" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1807" bodyend="1809"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga16c4b28cadc2160bf18b84c3f897a2d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::GetBlockTextOrientations</definition>
        <argsstring>(int **block_orientation, bool **vertical_writing)</argsstring>
        <name>GetBlockTextOrientations</name>
        <param>
          <type>int **</type>
          <declname>block_orientation</declname>
        </param>
        <param>
          <type>bool **</type>
          <declname>vertical_writing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return text orientation of each block as determined by an earlier run of layout analysis.</para><para>Return text orientation of each block as determined in an earlier page layout analysis operation. Orientation is returned as the number of ccw 90-degree rotations (in [0..3]) required to make the text in the block upright (readable). Note that this may not necessary be the block orientation preferred for recognition (such as the case of vertical CJK text).</para><para>Also returns whether the text in the block is believed to have vertical writing direction (when in an upright page orientation).</para><para>The returned array is of length equal to the number of text blocks, which may be less than the total number of blocks. The ordering is intended to be consistent with GetTextLines(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="670" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1825" bodyend="1867"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga12273df6a36cd7b618029c21d0c53cfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BLOCK_LIST *</type>
        <definition>BLOCK_LIST * tesseract::TessBaseAPI::FindLinesCreateBlockList</definition>
        <argsstring>()</argsstring>
        <name>FindLinesCreateBlockList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find lines from the image making the BLOCK_LIST. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="674" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1873" bodyend="1878"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a3785779c909fcdd77e24b340f5913e4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * tesseract::TessBaseAPI::Version</definition>
        <argsstring>()</argsstring>
        <name>Version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the version identifier as a static string. Do not delete. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="110" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1gab73311ecd1bf8f7e6f98585a76328740" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
        <definition>ROW * tesseract::TessBaseAPI::FindRowForBox</definition>
        <argsstring>(BLOCK_LIST *blocks, int left, int top, int right, int bottom)</argsstring>
        <name>FindRowForBox</name>
        <param>
          <type>BLOCK_LIST *</type>
          <declname>blocks</declname>
        </param>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
        </param>
        <param>
          <type>int</type>
          <declname>bottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the row to which a box of specified dimensions would belong. If no good match is found, it returns NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="614" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2178" bodyend="2200"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga6188cb0fdcf944408db772131c545429" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
        <definition>ROW * tesseract::TessBaseAPI::MakeTessOCRRow</definition>
        <argsstring>(float baseline, float xheight, float descender, float ascender)</argsstring>
        <name>MakeTessOCRRow</name>
        <param>
          <type>float</type>
          <declname>baseline</declname>
        </param>
        <param>
          <type>float</type>
          <declname>xheight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>descender</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ascender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="class_r_o_w" kindref="compound">ROW</ref> object created from the input row specification. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="637" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1890" bodyend="1904"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga0306bec5d154260922c203d8022832ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
        <definition>TBLOB * tesseract::TessBaseAPI::MakeTBLOB</definition>
        <argsstring>(Pix *pix)</argsstring>
        <name>MakeTBLOB</name>
        <param>
          <type>Pix *</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> corresponding to the entire input image.</para><para>Creates a TBLOB* from the whole pix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="641" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1907" bodyend="1930"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga52efb13dbc0127d903cb3ecc5734ec7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::NormalizeTBLOB</definition>
        <argsstring>(TBLOB *tblob, ROW *row, bool numeric_mode, DENORM *denorm)</argsstring>
        <name>NormalizeTBLOB</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>tblob</declname>
        </param>
        <param>
          <type><ref refid="class_r_o_w" kindref="compound">ROW</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>numeric_mode</declname>
        </param>
        <param>
          <type><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method baseline normalizes a <ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> in-place. The input row is used for normalization. The denorm is an optional parameter in which the normalization-antidote is returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="648" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1937" bodyend="1950"/>
      </memberdef>
      <memberdef kind="function" id="group___advanced_a_p_i_1ga8f69791ff9730a032068c87bd7b92ca1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::TessBaseAPI::DeleteBlockList</definition>
        <argsstring>(BLOCK_LIST *block_list)</argsstring>
        <name>DeleteBlockList</name>
        <param>
          <type>BLOCK_LIST *</type>
          <declname>block_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete a block list. This is to keep BLOCK_LIST pointer opaque and let go of including the other headers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="681" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1885" bodyend="1887"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a17820a43c31b66c3a12eda59e0b51bba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> bool</type>
        <definition>bool tesseract::TessBaseAPI::InternalSetImage</definition>
        <argsstring>()</argsstring>
        <name>InternalSetImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common code for setting the image. Returns true if Init has been called.</para><para>Common code for setting the image. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="687" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1626" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a8c8a3b050d6c356c4846345a3818f79e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> void</type>
        <definition>void tesseract::TessBaseAPI::Threshold</definition>
        <argsstring>(Pix **pix)</argsstring>
        <name>Threshold</name>
        <param>
          <type>Pix **</type>
          <declname>pix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run the thresholder to make the thresholded image. If pix is not NULL, the source is thresholded to pix instead of the internal <ref refid="class_i_m_a_g_e" kindref="compound">IMAGE</ref>.</para><para>Run the thresholder to make the thresholded image, returned in pix, which must not be NULL. *pix must be initialized to NULL, or point to an existing pixDestroyable Pix. The usual argument to Threshold is <ref refid="classtesseract_1_1_tesseract_1a512809e371c7bff1a24bb531721010a3" kindref="member">Tesseract::mutable_pix_binary()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="693" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1643" bodyend="1673"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a86899716a1adde396be4efd57b547d27" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> int</type>
        <definition>int tesseract::TessBaseAPI::FindLines</definition>
        <argsstring>()</argsstring>
        <name>FindLines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find lines from the image making the BLOCK_LIST. <simplesect kind="return"><para>0 on success.</para></simplesect>
Find lines from the image making the BLOCK_LIST. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="699" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1676" bodyend="1736"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1a83ca325b5e521416b1edcd020b169be0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> void</type>
        <definition>void tesseract::TessBaseAPI::ClearResults</definition>
        <argsstring>()</argsstring>
        <name>ClearResults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete the pageres and block list ready for a new page.</para><para>Delete the pageres and clear the block list ready for a new page. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="702" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1739" bodyend="1757"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1ad7a9b7f45f94801d7891035bf38d4861" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> <ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref> *</type>
        <definition>LTRResultIterator * tesseract::TessBaseAPI::GetLTRIterator</definition>
        <argsstring>()</argsstring>
        <name>GetLTRIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return an LTR Result Iterator <ndash/> used only for training, as we really want to ignore all BiDi smarts at that point. delete once you&apos;re done with it.</para><para>Get a left-to-right iterator to the results of LayoutAnalysis and/or Recognize. The returned iterator must be deleted after use. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="709" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="982" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_tess_base_a_p_i_1aed3d481fc0c7dffad24572bd1f449598" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> int</type>
        <definition>int tesseract::TessBaseAPI::TextLength</definition>
        <argsstring>(int *blob_count)</argsstring>
        <name>TextLength</name>
        <param>
          <type>int *</type>
          <declname>blob_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the length of the output text string, as UTF8, assuming one newline per line and one per block, with a terminator, and assuming a single character reject marker for each rejected character. Also return the number of recognized blobs in blob_count.</para><para>Return the length of the output text string, as UTF8, assuming liberally two spacing marks after each word (as paragraphs end with two newlines), and assuming a single character reject marker for each rejected character. Also return the number of recognized blobs in blob_count. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="717" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1766" bodyend="1790"/>
      </memberdef>
      <memberdef kind="function" id="group__ocropus_add_ons_1gaf62a3be9f3b8ca4f8260ec2cc1628ecc" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> void</type>
        <definition>void tesseract::TessBaseAPI::AdaptToCharacter</definition>
        <argsstring>(const char *unichar_repr, int length, float baseline, float xheight, float descender, float ascender)</argsstring>
        <name>AdaptToCharacter</name>
        <param>
          <type>const char *</type>
          <declname>unichar_repr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>float</type>
          <declname>baseline</declname>
        </param>
        <param>
          <type>float</type>
          <declname>xheight</declname>
        </param>
        <param>
          <type>float</type>
          <declname>descender</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ascender</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adapt to recognize the current image as the given character. The image must be preloaded and be just an image of a single character.</para><para>Adapt to recognize the current image as the given character. The image must be preloaded into pix_binary_ and be just an image of a single character. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="726" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="1974" bodyend="2008"/>
      </memberdef>
      <memberdef kind="function" id="group__ocropus_add_ons_1ga0384f67e497ea3e81436d09da0ad7270" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> <ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref> *</type>
        <definition>PAGE_RES * tesseract::TessBaseAPI::RecognitionPass1</definition>
        <argsstring>(BLOCK_LIST *block_list)</argsstring>
        <name>RecognitionPass1</name>
        <param>
          <type>BLOCK_LIST *</type>
          <declname>block_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recognize text doing one pass only, using settings for a given pass. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="734" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2011" bodyend="2016"/>
      </memberdef>
      <memberdef kind="function" id="group__ocropus_add_ons_1ga158cc2af7170f3efa8cb140f2745d9b8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> <ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref> *</type>
        <definition>PAGE_RES * tesseract::TessBaseAPI::RecognitionPass2</definition>
        <argsstring>(BLOCK_LIST *block_list, PAGE_RES *pass1_result)</argsstring>
        <name>RecognitionPass2</name>
        <param>
          <type>BLOCK_LIST *</type>
          <declname>block_list</declname>
        </param>
        <param>
          <type><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref> *</type>
          <declname>pass1_result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="735" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2018" bodyend="2025"/>
      </memberdef>
      <memberdef kind="function" id="group__ocropus_add_ons_1ga33cf8d85c3714857bc8753fef035ea95" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> void</type>
        <definition>void tesseract::TessBaseAPI::DetectParagraphs</definition>
        <argsstring>(bool after_text_recognition)</argsstring>
        <name>DetectParagraphs</name>
        <param>
          <type>bool</type>
          <declname>after_text_recognition</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="738" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2027" bodyend="2040"/>
      </memberdef>
      <memberdef kind="function" id="group__ocropus_add_ons_1ga4bf81423a0eff353a6bf5d7cc098e2d2" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> const <ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref> *</type>
        <definition>TESS_LOCAL const PAGE_RES* tesseract::TessBaseAPI::GetPageRes</definition>
        <argsstring>() const </argsstring>
        <name>GetPageRes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="753" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="753" bodyend="755"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="group__ocropus_add_ons_1ga554e33b4a8fa10ccd2200698ded6753d" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="platform_8h_1aefcd819eeed9085ef0eeeff0f4cac64f" kindref="member">TESS_LOCAL</ref> int</type>
        <definition>int tesseract::TessBaseAPI::TesseractExtractResult</definition>
        <argsstring>(char **text, int **lengths, float **costs, int **x0, int **y0, int **x1, int **y1, PAGE_RES *page_res)</argsstring>
        <name>TesseractExtractResult</name>
        <param>
          <type>char **</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>lengths</declname>
        </param>
        <param>
          <type>float **</type>
          <declname>costs</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>y0</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int **</type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref> *</type>
          <declname>page_res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract the OCR results, costs (penalty points for uncertainty), and the bounding boxes of the characters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="744" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.cpp" bodystart="2113" bodyend="2156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base class for all tesseract APIs. Specific classes can add ability to work on different inputs or produce different outputs. This class is mostly an interface layer on top of the <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> instance class to hide the data types so that users of this class don&apos;t have to include any other <ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref> headers. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="2075">
        <label>tesseract::Wordrec</label>
        <link refid="classtesseract_1_1_wordrec"/>
        <childnode refid="2076" relation="public-inheritance">
        </childnode>
        <childnode refid="2111" relation="usage">
          <edgelabel>prev_word_best_choice_</edgelabel>
        </childnode>
        <childnode refid="2112" relation="usage">
          <edgelabel>last_segmentation</edgelabel>
        </childnode>
        <childnode refid="2113" relation="usage">
          <edgelabel>blob_match_table</edgelabel>
        </childnode>
        <childnode refid="2114" relation="usage">
          <edgelabel>language_model_</edgelabel>
        </childnode>
        <childnode refid="2125" relation="usage">
          <edgelabel>blame_reasons_</edgelabel>
        </childnode>
      </node>
      <node id="2094">
        <label>list_rec</label>
        <link refid="structlist__rec"/>
        <childnode refid="2094" relation="usage">
          <edgelabel>node</edgelabel>
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="2136">
        <label>tesseract::BBGrid&lt; ColPartition, ColPartition_CLIST, ColPartition_C_IT &gt;</label>
        <link refid="classtesseract_1_1_b_b_grid"/>
        <childnode refid="2137" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2139">
        <label>TBOX</label>
        <link refid="class_t_b_o_x"/>
      </node>
      <node id="2072">
        <label>TessCallback1&lt; ParagraphModel * &gt;</label>
        <link refid="class_tess_callback1"/>
      </node>
      <node id="2093">
        <label>TEMP_CONFIG_STRUCT</label>
        <link refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t"/>
        <childnode refid="2094" relation="usage">
          <edgelabel>ContextsSeen</edgelabel>
        </childnode>
      </node>
      <node id="2142">
        <label>TessCallback3&lt; A1, A2, A3 &gt;</label>
        <link refid="class_tess_callback3"/>
      </node>
      <node id="2132">
        <label>tesseract::ColPartition</label>
        <link refid="classtesseract_1_1_col_partition"/>
        <childnode refid="2133" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2138">
        <label>ICOORD</label>
        <link refid="class_i_c_o_o_r_d"/>
      </node>
      <node id="2082">
        <label>STRING</label>
        <link refid="class_s_t_r_i_n_g"/>
      </node>
      <node id="2123">
        <label>TessResultCallback2&lt; bool, bool *const &amp;, bool *const &amp; &gt;</label>
        <link refid="class_tess_result_callback2"/>
      </node>
      <node id="2145">
        <label>GenericVector&lt; STRING &gt;</label>
        <link refid="class_generic_vector"/>
        <childnode refid="2082" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
        <childnode refid="2146" relation="usage">
          <edgelabel>clear_cb_</edgelabel>
        </childnode>
        <childnode refid="2147" relation="usage">
          <edgelabel>compare_cb_</edgelabel>
        </childnode>
      </node>
      <node id="2100">
        <label>NORM_PROTOS</label>
        <link refid="struct_n_o_r_m___p_r_o_t_o_s"/>
        <childnode refid="2094" relation="usage">
          <edgelabel>Protos</edgelabel>
        </childnode>
        <childnode refid="2101" relation="usage">
          <edgelabel>ParamDesc</edgelabel>
        </childnode>
      </node>
      <node id="2092">
        <label>PERM_CONFIG_STRUCT</label>
        <link refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t"/>
      </node>
      <node id="2115">
        <label>tesseract::Dict</label>
        <link refid="classtesseract_1_1_dict"/>
      </node>
      <node id="2108">
        <label>FEATURE_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t"/>
        <childnode refid="2109" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
      </node>
      <node id="2103">
        <label>tesseract::ShapeTable</label>
        <link refid="classtesseract_1_1_shape_table"/>
      </node>
      <node id="2079">
        <label>tesseract::CCUtil</label>
        <link refid="classtesseract_1_1_c_c_util"/>
        <childnode refid="2080" relation="usage">
          <edgelabel>use_definite_ambigs_for_classifier</edgelabel>
          <edgelabel>use_ambigs_for_adaption</edgelabel>
        </childnode>
        <childnode refid="2082" relation="usage">
          <edgelabel>directory</edgelabel>
          <edgelabel>language_data_path_prefix</edgelabel>
          <edgelabel>imagebasename</edgelabel>
          <edgelabel>datadir</edgelabel>
          <edgelabel>imagefile</edgelabel>
          <edgelabel>lang</edgelabel>
        </childnode>
        <childnode refid="2083" relation="usage">
          <edgelabel>unicharset</edgelabel>
        </childnode>
        <childnode refid="2084" relation="usage">
          <edgelabel>tessdata_manager</edgelabel>
        </childnode>
        <childnode refid="2085" relation="usage">
          <edgelabel>m_data_sub_dir</edgelabel>
        </childnode>
        <childnode refid="2086" relation="usage">
          <edgelabel>unichar_ambigs</edgelabel>
        </childnode>
        <childnode refid="2087" relation="usage">
          <edgelabel>ambigs_debug_level</edgelabel>
        </childnode>
      </node>
      <node id="2109">
        <label>FEATURE_DESC_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t"/>
        <childnode refid="2101" relation="usage">
          <edgelabel>ParamDesc</edgelabel>
        </childnode>
      </node>
      <node id="2122">
        <label>GenericVector&lt; bool * &gt;</label>
        <link refid="class_generic_vector"/>
        <childnode refid="2123" relation="usage">
          <edgelabel>compare_cb_</edgelabel>
        </childnode>
        <childnode refid="2124" relation="usage">
          <edgelabel>clear_cb_</edgelabel>
        </childnode>
      </node>
      <node id="2112">
        <label>EVALUATION_RECORD</label>
        <link refid="struct_e_v_a_l_u_a_t_i_o_n___r_e_c_o_r_d"/>
      </node>
      <node id="2084">
        <label>tesseract::TessdataManager</label>
        <link refid="classtesseract_1_1_tessdata_manager"/>
      </node>
      <node id="2111">
        <label>WERD_CHOICE</label>
        <link refid="class_w_e_r_d___c_h_o_i_c_e"/>
      </node>
      <node id="2097">
        <label>PROTO_SET_STRUCT</label>
        <link refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t"/>
        <childnode refid="2098" relation="usage">
          <edgelabel>Protos</edgelabel>
        </childnode>
      </node>
      <node id="2107">
        <label>FEATURE_SET_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t"/>
        <childnode refid="2108" relation="usage">
          <edgelabel>Features</edgelabel>
        </childnode>
      </node>
      <node id="2077">
        <label>tesseract::CCStruct</label>
        <link refid="classtesseract_1_1_c_c_struct"/>
        <childnode refid="2078" relation="public-inheritance">
        </childnode>
        <childnode refid="2088" relation="usage">
          <edgelabel>image_</edgelabel>
        </childnode>
      </node>
      <node id="2071">
        <label>ParagraphModel</label>
        <link refid="class_paragraph_model"/>
      </node>
      <node id="2116">
        <label>tesseract::DawgInfoVector</label>
        <link refid="classtesseract_1_1_dawg_info_vector"/>
        <childnode refid="2117" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2140">
        <label>tesseract::ColPartitionSet</label>
        <link refid="classtesseract_1_1_col_partition_set"/>
        <childnode refid="2141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2129">
        <label>tesseract::EquationDetectBase</label>
        <link refid="classtesseract_1_1_equation_detect_base"/>
      </node>
      <node id="2124">
        <label>TessCallback1&lt; bool * &gt;</label>
        <link refid="class_tess_callback1"/>
      </node>
      <node id="2146">
        <label>TessCallback1&lt; STRING &gt;</label>
        <link refid="class_tess_callback1"/>
      </node>
      <node id="2126">
        <label>TessResultCallback2&lt; bool, intconst &amp;, intconst &amp; &gt;</label>
        <link refid="class_tess_result_callback2"/>
      </node>
      <node id="2118">
        <label>tesseract::DawgInfo</label>
        <link refid="structtesseract_1_1_dawg_info"/>
      </node>
      <node id="2106">
        <label>FEATURE_EXT_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___e_x_t___s_t_r_u_c_t"/>
        <childnode refid="2107" relation="usage">
          <edgelabel>Extractor</edgelabel>
        </childnode>
      </node>
      <node id="2121">
        <label>tesseract::DawgArgs</label>
        <link refid="structtesseract_1_1_dawg_args"/>
        <childnode refid="2116" relation="usage">
          <edgelabel>updated_active_dawgs</edgelabel>
          <edgelabel>constraints</edgelabel>
          <edgelabel>updated_constraints</edgelabel>
          <edgelabel>active_dawgs</edgelabel>
        </childnode>
      </node>
      <node id="2143">
        <label>tesseract::ImageThresholder</label>
        <link refid="classtesseract_1_1_image_thresholder"/>
      </node>
      <node id="2127">
        <label>TessCallback1&lt; int &gt;</label>
        <link refid="class_tess_callback1"/>
      </node>
      <node id="2105">
        <label>FEATURE_DEFS_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t"/>
        <childnode refid="2106" relation="usage">
          <edgelabel>FeatureExtractors</edgelabel>
        </childnode>
        <childnode refid="2109" relation="usage">
          <edgelabel>FeatureDesc</edgelabel>
        </childnode>
      </node>
      <node id="2114">
        <label>tesseract::LanguageModel</label>
        <link refid="classtesseract_1_1_language_model"/>
        <childnode refid="2115" relation="usage">
          <edgelabel>dict_</edgelabel>
        </childnode>
        <childnode refid="2082" relation="usage">
          <edgelabel>prev_word_str_</edgelabel>
        </childnode>
        <childnode refid="2116" relation="usage">
          <edgelabel>fixed_length_beginning_active_dawgs_</edgelabel>
          <edgelabel>empty_dawg_info_vec_</edgelabel>
          <edgelabel>beginning_active_dawgs_</edgelabel>
          <edgelabel>beginning_constraints_</edgelabel>
        </childnode>
        <childnode refid="2121" relation="usage">
          <edgelabel>dawg_args_</edgelabel>
        </childnode>
        <childnode refid="2122" relation="usage">
          <edgelabel>updated_flags_</edgelabel>
        </childnode>
        <childnode refid="2104" relation="usage">
          <edgelabel>fontinfo_table_</edgelabel>
        </childnode>
      </node>
      <node id="2081">
        <label>tesseract::Param</label>
        <link refid="classtesseract_1_1_param"/>
      </node>
      <node id="2078">
        <label>tesseract::CUtil</label>
        <link refid="classtesseract_1_1_c_util"/>
        <childnode refid="2079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2076">
        <label>tesseract::Classify</label>
        <link refid="classtesseract_1_1_classify"/>
        <childnode refid="2077" relation="public-inheritance">
        </childnode>
        <childnode refid="2089" relation="usage">
          <edgelabel>AdaptedTemplates</edgelabel>
        </childnode>
        <childnode refid="2095" relation="usage">
          <edgelabel>PreTrainedTemplates</edgelabel>
        </childnode>
        <childnode refid="2100" relation="usage">
          <edgelabel>NormProtos</edgelabel>
        </childnode>
        <childnode refid="2102" relation="usage">
          <edgelabel>fontset_table_</edgelabel>
        </childnode>
        <childnode refid="2103" relation="usage">
          <edgelabel>shape_table_</edgelabel>
        </childnode>
        <childnode refid="2104" relation="usage">
          <edgelabel>fontinfo_table_</edgelabel>
        </childnode>
        <childnode refid="2105" relation="usage">
          <edgelabel>feature_defs_</edgelabel>
        </childnode>
        <childnode refid="2110" relation="usage">
          <edgelabel>im_</edgelabel>
        </childnode>
      </node>
      <node id="2101">
        <label>PARAM_DESC</label>
        <link refid="struct_p_a_r_a_m___d_e_s_c"/>
      </node>
      <node id="2133">
        <label>ELIST2_LINK</label>
        <link refid="class_e_l_i_s_t2___l_i_n_k"/>
      </node>
      <node id="2120">
        <label>TessResultCallback2&lt; bool, DawgInfoconst &amp;, DawgInfoconst &amp; &gt;</label>
        <link refid="class_tess_result_callback2"/>
      </node>
      <node id="2098">
        <label>INT_PROTO_STRUCT</label>
        <link refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t"/>
      </node>
      <node id="2089">
        <label>ADAPT_TEMPLATES_STRUCT</label>
        <link refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t"/>
        <childnode refid="2090" relation="usage">
          <edgelabel>Class</edgelabel>
        </childnode>
        <childnode refid="2095" relation="usage">
          <edgelabel>Templates</edgelabel>
        </childnode>
      </node>
      <node id="2117">
        <label>GenericVector&lt; DawgInfo &gt;</label>
        <link refid="class_generic_vector"/>
        <childnode refid="2118" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
        <childnode refid="2119" relation="usage">
          <edgelabel>clear_cb_</edgelabel>
        </childnode>
        <childnode refid="2120" relation="usage">
          <edgelabel>compare_cb_</edgelabel>
        </childnode>
      </node>
      <node id="2086">
        <label>tesseract::UnicharAmbigs</label>
        <link refid="classtesseract_1_1_unichar_ambigs"/>
      </node>
      <node id="2085">
        <label>tesseract::StringParam</label>
        <link refid="classtesseract_1_1_string_param"/>
        <childnode refid="2081" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2119">
        <label>TessCallback1&lt; DawgInfo &gt;</label>
        <link refid="class_tess_callback1"/>
      </node>
      <node id="2095">
        <label>INT_TEMPLATES_STRUCT</label>
        <link refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t"/>
        <childnode refid="2096" relation="usage">
          <edgelabel>Class</edgelabel>
        </childnode>
        <childnode refid="2099" relation="usage">
          <edgelabel>ClassPruners</edgelabel>
        </childnode>
      </node>
      <node id="2074">
        <label>tesseract::Tesseract</label>
        <link refid="classtesseract_1_1_tesseract"/>
        <childnode refid="2075" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2083">
        <label>UNICHARSET</label>
        <link refid="class_u_n_i_c_h_a_r_s_e_t"/>
      </node>
      <node id="2080">
        <label>tesseract::BoolParam</label>
        <link refid="classtesseract_1_1_bool_param"/>
        <childnode refid="2081" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2125">
        <label>GenericVector&lt; int &gt;</label>
        <link refid="class_generic_vector"/>
        <childnode refid="2126" relation="usage">
          <edgelabel>compare_cb_</edgelabel>
        </childnode>
        <childnode refid="2127" relation="usage">
          <edgelabel>clear_cb_</edgelabel>
        </childnode>
      </node>
      <node id="2087">
        <label>tesseract::IntParam</label>
        <link refid="classtesseract_1_1_int_param"/>
        <childnode refid="2081" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2090">
        <label>ADAPT_CLASS_STRUCT</label>
        <link refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t"/>
        <childnode refid="2091" relation="usage">
          <edgelabel>Config</edgelabel>
        </childnode>
        <childnode refid="2094" relation="usage">
          <edgelabel>TempProtos</edgelabel>
        </childnode>
      </node>
      <node id="2113">
        <label>tesseract::BlobMatchTable</label>
        <link refid="classtesseract_1_1_blob_match_table"/>
      </node>
      <node id="2091">
        <label>ADAPTED_CONFIG</label>
        <link refid="union_a_d_a_p_t_e_d___c_o_n_f_i_g"/>
        <childnode refid="2092" relation="usage">
          <edgelabel>Perm</edgelabel>
        </childnode>
        <childnode refid="2093" relation="usage">
          <edgelabel>Temp</edgelabel>
        </childnode>
      </node>
      <node id="2141">
        <label>ELIST_LINK</label>
        <link refid="class_e_l_i_s_t___l_i_n_k"/>
      </node>
      <node id="2088">
        <label>tesseract::Image</label>
        <link refid="classtesseract_1_1_image"/>
      </node>
      <node id="2128">
        <label>tesseract::EquationDetect</label>
        <link refid="classtesseract_1_1_equation_detect"/>
        <childnode refid="2129" relation="public-inheritance">
        </childnode>
        <childnode refid="2074" relation="usage">
          <edgelabel>lang_tesseract_</edgelabel>
          <edgelabel>equ_tesseract_</edgelabel>
        </childnode>
        <childnode refid="2130" relation="usage">
          <edgelabel>cp_seeds_</edgelabel>
        </childnode>
        <childnode refid="2135" relation="usage">
          <edgelabel>part_grid_</edgelabel>
        </childnode>
        <childnode refid="2139" relation="usage">
          <edgelabel>cps_super_bbox_</edgelabel>
        </childnode>
        <childnode refid="2140" relation="usage">
          <edgelabel>best_columns_</edgelabel>
        </childnode>
      </node>
      <node id="2130">
        <label>GenericVector&lt; tesseract::ColPartition * &gt;</label>
        <link refid="class_generic_vector"/>
        <childnode refid="2131" relation="usage">
          <edgelabel>clear_cb_</edgelabel>
        </childnode>
        <childnode refid="2132" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
        <childnode refid="2134" relation="usage">
          <edgelabel>compare_cb_</edgelabel>
        </childnode>
      </node>
      <node id="2131">
        <label>TessCallback1&lt; tesseract::ColPartition * &gt;</label>
        <link refid="class_tess_callback1"/>
      </node>
      <node id="2104">
        <label>UnicityTable&lt; tesseract::FontInfo &gt;</label>
        <link refid="class_unicity_table"/>
      </node>
      <node id="2073">
        <label>TessResultCallback2&lt; bool, ParagraphModel *const &amp;, ParagraphModel *const &amp; &gt;</label>
        <link refid="class_tess_result_callback2"/>
      </node>
      <node id="2147">
        <label>TessResultCallback2&lt; bool, STRINGconst &amp;, STRINGconst &amp; &gt;</label>
        <link refid="class_tess_result_callback2"/>
      </node>
      <node id="2135">
        <label>tesseract::ColPartitionGrid</label>
        <link refid="classtesseract_1_1_col_partition_grid"/>
        <childnode refid="2136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2096">
        <label>INT_CLASS_STRUCT</label>
        <link refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t"/>
        <childnode refid="2097" relation="usage">
          <edgelabel>ProtoSets</edgelabel>
        </childnode>
      </node>
      <node id="2069">
        <label>tesseract::TessBaseAPI</label>
        <link refid="classtesseract_1_1_tess_base_a_p_i"/>
        <childnode refid="2070" relation="usage">
          <edgelabel>paragraph_models_</edgelabel>
        </childnode>
        <childnode refid="2074" relation="usage">
          <edgelabel>tesseract_</edgelabel>
          <edgelabel>osd_tesseract_</edgelabel>
        </childnode>
        <childnode refid="2128" relation="usage">
          <edgelabel>equ_detect_</edgelabel>
        </childnode>
        <childnode refid="2082" relation="usage">
          <edgelabel>datapath_</edgelabel>
          <edgelabel>output_file_</edgelabel>
          <edgelabel>input_file_</edgelabel>
          <edgelabel>language_</edgelabel>
        </childnode>
        <childnode refid="2142" relation="usage">
          <edgelabel>truth_cb_</edgelabel>
        </childnode>
        <childnode refid="2143" relation="usage">
          <edgelabel>thresholder_</edgelabel>
        </childnode>
        <childnode refid="2144" relation="usage">
          <edgelabel>page_res_</edgelabel>
        </childnode>
      </node>
      <node id="2070">
        <label>GenericVector&lt; ParagraphModel * &gt;</label>
        <link refid="class_generic_vector"/>
        <childnode refid="2071" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
        <childnode refid="2072" relation="usage">
          <edgelabel>clear_cb_</edgelabel>
        </childnode>
        <childnode refid="2073" relation="usage">
          <edgelabel>compare_cb_</edgelabel>
        </childnode>
      </node>
      <node id="2134">
        <label>TessResultCallback2&lt; bool, tesseract::ColPartition *const &amp;, tesseract::ColPartition *const &amp; &gt;</label>
        <link refid="class_tess_result_callback2"/>
      </node>
      <node id="2144">
        <label>PAGE_RES</label>
        <link refid="class_p_a_g_e___r_e_s"/>
        <childnode refid="2111" relation="usage">
          <edgelabel>prev_word_best_choice</edgelabel>
        </childnode>
        <childnode refid="2145" relation="usage">
          <edgelabel>misadaption_log</edgelabel>
        </childnode>
        <childnode refid="2125" relation="usage">
          <edgelabel>blame_reasons</edgelabel>
        </childnode>
      </node>
      <node id="2137">
        <label>tesseract::GridBase</label>
        <link refid="classtesseract_1_1_grid_base"/>
        <childnode refid="2138" relation="usage">
          <edgelabel>tright_</edgelabel>
          <edgelabel>bleft_</edgelabel>
        </childnode>
      </node>
      <node id="2099">
        <label>CLASS_PRUNER_STRUCT</label>
        <link refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t"/>
      </node>
      <node id="2110">
        <label>IntegerMatcher</label>
        <link refid="class_integer_matcher"/>
      </node>
      <node id="2102">
        <label>UnicityTable&lt; tesseract::FontSet &gt;</label>
        <link refid="class_unicity_table"/>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/trunk/api/baseapi.h" line="102" column="1" bodyfile="/Users/makoto/Desktop/trunk/api/baseapi.h" bodystart="102" bodyend="787"/>
    <listofallmembers>
      <member refid="group__ocropus_add_ons_1gaf62a3be9f3b8ca4f8260ec2cc1628ecc" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>AdaptToCharacter</name></member>
      <member refid="group___advanced_a_p_i_1gab8c2ee5d614382f0d25deb9a7adfe199" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>AdaptToWordStr</name></member>
      <member refid="group___advanced_a_p_i_1ga4a67a12db21b3569b2b50ad05b9e146a" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>AllWordConfidences</name></member>
      <member refid="group___advanced_a_p_i_1gaaac2abf8505c89afb8466dc3cff2c666" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>AnalyseLayout</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ac22c36258b0cd727188505a9a1dbc7e1" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>block_list_</name></member>
      <member refid="group___advanced_a_p_i_1ga953b401286da174e609f09c5f275734e" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>Clear</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ae16cc5135aba401b609e49d6790281e3" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>ClearAdaptiveClassifier</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a83ca325b5e521416b1edcd020b169be0" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>ClearResults</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ad7c3d4ead7b9c8e27e45e710e5407913" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>datapath_</name></member>
      <member refid="group___advanced_a_p_i_1ga8f69791ff9730a032068c87bd7b92ca1" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>DeleteBlockList</name></member>
      <member refid="group___advanced_a_p_i_1ga5ed6e495e7f1c269588a8b85e4e19ca8" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>DetectOS</name></member>
      <member refid="group__ocropus_add_ons_1ga33cf8d85c3714857bc8753fef035ea95" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>DetectParagraphs</name></member>
      <member refid="group___advanced_a_p_i_1ga4e4a8dbd25ac8816155481bfb53f011a" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>DumpPGM</name></member>
      <member refid="group___advanced_a_p_i_1ga38027513ee9c0348de1790bddcdc3391" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>End</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a0222d0f645909860d13f71c078008133" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>equ_detect_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a86899716a1adde396be4efd57b547d27" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>FindLines</name></member>
      <member refid="group___advanced_a_p_i_1ga12273df6a36cd7b618029c21d0c53cfa" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>FindLinesCreateBlockList</name></member>
      <member refid="group___advanced_a_p_i_1gab73311ecd1bf8f7e6f98585a76328740" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>FindRowForBox</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a1fd02f053ce01f915805fff31aea6695" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetAvailableLanguagesAsVector</name></member>
      <member refid="group___advanced_a_p_i_1ga16c4b28cadc2160bf18b84c3f897a2d2" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetBlockTextOrientations</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ac5e219cbaa2c19c67ccef3246ff838a6" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetBoolVariable</name></member>
      <member refid="group___advanced_a_p_i_1gaadda8cd6abe770d2f6a70a18329b1973" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetBoxText</name></member>
      <member refid="group___advanced_a_p_i_1ga56369b1654400ef97e581bb65749ec3d" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetComponentImages</name></member>
      <member refid="group___advanced_a_p_i_1gaf2b4f88c53457fa5153dc80f5a60e152" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetConnectedComponents</name></member>
      <member refid="group___advanced_a_p_i_1ga4b21b3a15434987381804258d79651fc" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetCubeRecoContext</name></member>
      <member refid="group___advanced_a_p_i_1ga01fc04b1c673045ed8736c02c5943eaf" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetDawg</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a66a87a36eaee72d6ce12409f99f28eb8" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetDoubleVariable</name></member>
      <member refid="group___advanced_a_p_i_1ga7e60370845b53aefa2e58d0e639435e2" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetFeaturesForBlob</name></member>
      <member refid="group___advanced_a_p_i_1ga655f906bbf64dcd6f33ce633ecce997d" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetHOCRText</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1af4eab4c95ee65eff4f36de0b4d27d07a" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetInitLanguagesAsString</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a5923cccbe20988f0f99072844d1af573" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetIntVariable</name></member>
      <member refid="group___advanced_a_p_i_1ga52eee8b9a4f147c26e4b64c16b46bc04" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetIterator</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a16a8fb0d6583e1990d79757dc32c760c" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetLoadedLanguagesAsVector</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ad7a9b7f45f94801d7891035bf38d4861" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetLTRIterator</name></member>
      <member refid="group___advanced_a_p_i_1ga29906219f78adc7fd76a83bde37e09eb" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetMutableIterator</name></member>
      <member refid="group__ocropus_add_ons_1ga4bf81423a0eff353a6bf5d7cc098e2d2" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetPageRes</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a943206e3548bfb517c67354ee50661f3" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetPageSegMode</name></member>
      <member refid="group___advanced_a_p_i_1gafdd23f73100c54cff18ecfa14efa0379" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetRegions</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a03dfbc60eeb4cef2937703c9df60003b" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetStringVariable</name></member>
      <member refid="group___advanced_a_p_i_1gac7c249f9f7e11eadc557d4b3cab123a1" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetStrips</name></member>
      <member refid="group___advanced_a_p_i_1ga535728aa13f5f5eb66cbece59a7737e5" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetTextDirection</name></member>
      <member refid="group___advanced_a_p_i_1ga337bd007c5fff9336bba8dfade1924ce" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetTextlines</name></member>
      <member refid="group___advanced_a_p_i_1gaee19c9ea78a647420bbe99a447569995" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetThresholdedImage</name></member>
      <member refid="group___advanced_a_p_i_1ga6b1c8cac1ba7da32dfd32cf708eea8b4" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetThresholdedImageScaleFactor</name></member>
      <member refid="group___advanced_a_p_i_1ga34314bb3635a6e0d171e33d4b4181db2" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetUnichar</name></member>
      <member refid="group___advanced_a_p_i_1ga173b4289191b6c2faf2a4a4b7c94affc" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetUNLVText</name></member>
      <member refid="group___advanced_a_p_i_1ga115ef656f83352ba608b4f0bf9cfa2c4" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetUTF8Text</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1aa40487f19e71221f05bb3ad5dd36c437" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetVariableAsString</name></member>
      <member refid="group___advanced_a_p_i_1ga4133bcbe38dca1173db2882ef0727703" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>GetWords</name></member>
      <member refid="group___thresholder_params_1gab7d24a78f3565c5bfb42b2592b9e8df0" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>image_height_</name></member>
      <member refid="group___thresholder_params_1gaf3238cd7ff2c0995e647c8c7846bdba3" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>image_width_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a96899e8e5358d96752ab1cfc3bc09f3e" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>Init</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a6d0956a66158ead4e3a86c7f50dad56e" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>Init</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a965ef2ff51c440756519a3d6f755f34f" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>Init</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a23d63e2cac00b958eb8803cab4943b4c" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>InitForAnalysePage</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ac5fdc031598e1237ec7e30c5efa95840" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>InitLangMod</name></member>
      <member refid="group___advanced_a_p_i_1ga43810a084b5482d0731611513c0a9e16" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>InitTruthCallback</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a4690919aa9d4eabda36bdefdaadf7ac9" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>input_file_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a17820a43c31b66c3a12eda59e0b51bba" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>InternalSetImage</name></member>
      <member refid="group___advanced_a_p_i_1ga2c06caf08c9a8aa97a08a2de2f6200df" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>IsValidWord</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a74a291190aa0bbf90b57f678b1fb0a5c" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>language_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1af9d4095a569fbf8687cefc005d2f58ee" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>last_oem_requested_</name></member>
      <member refid="group___advanced_a_p_i_1ga0306bec5d154260922c203d8022832ca" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>MakeTBLOB</name></member>
      <member refid="group___advanced_a_p_i_1ga6188cb0fdcf944408db772131c545429" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>MakeTessOCRRow</name></member>
      <member refid="group___advanced_a_p_i_1ga027054e6176889ff49a7108e174fce0f" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>MeanTextConf</name></member>
      <member refid="group___advanced_a_p_i_1ga52efb13dbc0127d903cb3ecc5734ec7c" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>NormalizeTBLOB</name></member>
      <member refid="group___advanced_a_p_i_1gac0a13108ccd514cab99badcb014d2f43" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>NumDawgs</name></member>
      <member refid="group___advanced_a_p_i_1gaf810a9dc1e6d74132796c298445ea06d" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>oem</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ad7b44f5b470c9e04289c348d82726b27" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>osd_tesseract_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a22a0c520bc88e2d80fb8b6a10b7caba1" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>output_file_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a12dda612630eba40e15f9d0b9955a04c" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>page_res_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a06084d66b830a388515663761d842041" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>paragraph_models_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1aa00be783b6ce3c3178fc86afdf1cba7d" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>PrintVariables</name></member>
      <member refid="group___advanced_a_p_i_1ga09be3b61fd89f7803fe37cc420b92b30" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>ProcessPage</name></member>
      <member refid="group___advanced_a_p_i_1gaf89df932c29b0abe4fb4ca3ae852506b" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>ProcessPages</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ab3bd61f8ccb7c4e1c41801ea708d2181" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>ReadConfigFile</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a4f3eec49763f76c347c216eed79cae93" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>ReadDebugConfigFile</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a7d4627f300b1096d43a3e7d54d8aa5df" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>recognition_done_</name></member>
      <member refid="group__ocropus_add_ons_1ga0384f67e497ea3e81436d09da0ad7270" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>RecognitionPass1</name></member>
      <member refid="group__ocropus_add_ons_1ga158cc2af7170f3efa8cb140f2745d9b8" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>RecognitionPass2</name></member>
      <member refid="group___advanced_a_p_i_1ga0e4065c20b142d69a2324ee0c74ae0b0" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>Recognize</name></member>
      <member refid="group___advanced_a_p_i_1gaec56194587e149ae38a08eccd2e0d96a" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>RecognizeForChopTest</name></member>
      <member refid="group___thresholder_params_1ga978edc537da096ec07d4bb8e4ae5332d" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>rect_height_</name></member>
      <member refid="group___thresholder_params_1gab3c90d43a3628dc7abeb93e9ca01bc97" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>rect_left_</name></member>
      <member refid="group___thresholder_params_1gac71648cd860510ca65b94d87d7d9bb1f" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>rect_top_</name></member>
      <member refid="group___thresholder_params_1ga31dbaec91a5dd8ee7d399786a4bd5ef8" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>rect_width_</name></member>
      <member refid="group___advanced_a_p_i_1ga34a1c103414dd0293ff4d40c275a5971" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>RunAdaptiveClassifier</name></member>
      <member refid="group___advanced_a_p_i_1gac4a301ee35d57b0a7572d4434cae284c" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>set_min_orientation_margin</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a20c9b24d670ab01dd7f011727b7a8daa" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetDebugVariable</name></member>
      <member refid="group___advanced_a_p_i_1ga7a7b2870798363811c011cec2bfbf22c" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetDictFunc</name></member>
      <member refid="group___advanced_a_p_i_1ga36a739bd0dc23a819170ca40f35c4b58" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetFillLatticeFunc</name></member>
      <member refid="group___advanced_a_p_i_1gaa463622111f3b11d8fca5863709cc699" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetImage</name></member>
      <member refid="group___advanced_a_p_i_1ga89aa20dee8b772168b2d18150984bd2f" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetImage</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a896312e68d246b58e704a8f5576e6917" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetInputName</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1af997008815be7af2edcd9ff1a5d55896" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetOutputName</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a15a7a9c1afbba3078a55b4566de891ab" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetPageSegMode</name></member>
      <member refid="group___advanced_a_p_i_1gad7a52133fe0ebab22e97166c5e5cab67" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetProbabilityInContextFunc</name></member>
      <member refid="group___advanced_a_p_i_1ga284228c7e9d18bbbd3984d44e252d625" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetRectangle</name></member>
      <member refid="group___advanced_a_p_i_1ga4ded6137507a4e8eb6ed4bea0b9648f4" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetSourceResolution</name></member>
      <member refid="group___advanced_a_p_i_1ga73e6a99f5f09aaf26dc23f623a813143" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetThresholder</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a2e09259c558c6d8e0f7e523cbaf5adf5" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>SetVariable</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a3bc4277652df23eaeccd0629f2b1419d" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>TessBaseAPI</name></member>
      <member refid="group___advanced_a_p_i_1ga7b46dfdb521a2a575ab914ece8a40e6c" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>tesseract</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a247f50792f581df05afe336a2aeda402" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>tesseract_</name></member>
      <member refid="group__ocropus_add_ons_1ga554e33b4a8fa10ccd2200698ded6753d" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>TesseractExtractResult</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ad34c56e08d999ece9972f4c9a9301f93" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>TesseractRect</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1aed3d481fc0c7dffad24572bd1f449598" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>TextLength</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a8c8a3b050d6c356c4846345a3818f79e" prot="protected" virt="virtual"><scope>tesseract::TessBaseAPI</scope><name>Threshold</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a9d93e1d92ca230ae02b81d44bc88a55c" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>thresholder_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1ac7eaed7f3fedb15212eb39b747de0102" prot="protected" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>truth_cb_</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a3785779c909fcdd77e24b340f5913e4b" prot="public" virt="non-virtual"><scope>tesseract::TessBaseAPI</scope><name>Version</name></member>
      <member refid="classtesseract_1_1_tess_base_a_p_i_1a02df6c7886962e347e3c5f7c1f632337" prot="public" virt="virtual"><scope>tesseract::TessBaseAPI</scope><name>~TessBaseAPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
