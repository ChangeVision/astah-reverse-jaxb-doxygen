<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="emalloc_8cpp" kind="file">
    <compoundname>emalloc.cpp</compoundname>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="danerror_8h" local="yes">danerror.h</includes>
    <includes local="no">stdlib.h</includes>
    <incdepgraph>
      <node id="33538">
        <label>assert.h</label>
      </node>
      <node id="33532">
        <label>cutil/emalloc.cpp</label>
        <link refid="emalloc.cpp"/>
        <childnode refid="33533" relation="include">
        </childnode>
        <childnode refid="33553" relation="include">
        </childnode>
        <childnode refid="33542" relation="include">
        </childnode>
      </node>
      <node id="33547">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="33542">
        <label>stdlib.h</label>
      </node>
      <node id="33535">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="33536" relation="include">
        </childnode>
      </node>
      <node id="33550">
        <label>stddef.h</label>
      </node>
      <node id="33552">
        <label>memory.h</label>
      </node>
      <node id="33537">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="33538" relation="include">
        </childnode>
        <childnode refid="33534" relation="include">
        </childnode>
        <childnode refid="33539" relation="include">
        </childnode>
        <childnode refid="33551" relation="include">
        </childnode>
      </node>
      <node id="33544">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="33534" relation="include">
        </childnode>
      </node>
      <node id="33536">
        <label>limits.h</label>
      </node>
      <node id="33546">
        <label>string.h</label>
      </node>
      <node id="33551">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="33552" relation="include">
        </childnode>
        <childnode refid="33546" relation="include">
        </childnode>
      </node>
      <node id="33543">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="33534" relation="include">
        </childnode>
      </node>
      <node id="33553">
        <label>danerror.h</label>
        <link refid="danerror_8h"/>
      </node>
      <node id="33533">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="33534" relation="include">
        </childnode>
        <childnode refid="33537" relation="include">
        </childnode>
      </node>
      <node id="33539">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="33540" relation="include">
        </childnode>
        <childnode refid="33541" relation="include">
        </childnode>
        <childnode refid="33548" relation="include">
        </childnode>
      </node>
      <node id="33541">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="33540" relation="include">
        </childnode>
        <childnode refid="33542" relation="include">
        </childnode>
        <childnode refid="33543" relation="include">
        </childnode>
        <childnode refid="33544" relation="include">
        </childnode>
        <childnode refid="33545" relation="include">
        </childnode>
        <childnode refid="33547" relation="include">
        </childnode>
      </node>
      <node id="33549">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="33550" relation="include">
        </childnode>
        <childnode refid="33534" relation="include">
        </childnode>
      </node>
      <node id="33534">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="33535" relation="include">
        </childnode>
      </node>
      <node id="33540">
        <label>stdio.h</label>
      </node>
      <node id="33548">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="33540" relation="include">
        </childnode>
        <childnode refid="33546" relation="include">
        </childnode>
        <childnode refid="33535" relation="include">
        </childnode>
        <childnode refid="33549" relation="include">
        </childnode>
      </node>
      <node id="33545">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="33540" relation="include">
        </childnode>
        <childnode refid="33546" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* Emalloc</definition>
        <argsstring>(size_t Size)</argsstring>
        <name>Emalloc</name>
        <param>
          <type>size_t</type>
          <declname>Size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <heading level="2">Include Files and Type Defines </heading>
</para><para><heading level="2">Public Code </heading>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/emalloc.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/emalloc.cpp" bodystart="35" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="emalloc_8cpp_1a92c09eaf43dcfc23a738fca16eb677b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* Erealloc</definition>
        <argsstring>(void *ptr, size_t size)</argsstring>
        <name>Erealloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/emalloc.cpp" line="70" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/emalloc.cpp" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Efree</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>Efree</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cutil/emalloc.cpp" line="85" column="1" bodyfile="/Users/makoto/Desktop/trunk/cutil/emalloc.cpp" bodystart="85" bodyend="91"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Filename:</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emalloc.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Purpose:</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Routines<sp/>for<sp/>trapping<sp/>memory<sp/>allocation<sp/>errors.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Author:</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HP-UX<sp/>6.2</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HP-UX<sp/>6.2</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>History:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4/3/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/><sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">******************************************************************************/</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="danerror_8h" kindref="compound">danerror.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Size)<sp/>{<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>bytes<sp/>of<sp/>memory<sp/>to<sp/>be<sp/>allocated</highlight></codeline>
<codeline lineno="40"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="41"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="42"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>attempts<sp/>to<sp/>allocate<sp/>the<sp/>specified<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="43"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes.<sp/><sp/>If<sp/>the<sp/>memory<sp/>can<sp/>be<sp/>allocated,<sp/>a<sp/>pointer<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="44"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory<sp/>is<sp/>returned.<sp/><sp/>If<sp/>the<sp/>memory<sp/>cannot<sp/>be<sp/>allocated,<sp/>or</highlight></codeline>
<codeline lineno="45"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>allocation<sp/>request<sp/>is<sp/>negative<sp/>or<sp/>zero,</highlight></codeline>
<codeline lineno="46"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>an<sp/>error<sp/>is<sp/>trapped.</highlight></codeline>
<codeline lineno="47"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Return:<sp/>Pointer<sp/>to<sp/>allocated<sp/>memory.</highlight></codeline>
<codeline lineno="48"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Exceptions:<sp/>NOTENOUGHMEMORY</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unable<sp/>to<sp/>allocate<sp/>Size<sp/>bytes</highlight></codeline>
<codeline lineno="50"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ILLEGALMALLOCREQUEST</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>negative<sp/>or<sp/>zero<sp/>request<sp/>size</highlight></codeline>
<codeline lineno="52"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>History:<sp/>4/3/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Buffer;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Size<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="emalloc_8h_1af4b3c6a2833ca7c3f531746c2937e3a8" kindref="member">ILLEGALMALLOCREQUEST</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>malloc<sp/>request<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>Buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>malloc<sp/>(Size);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Buffer<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="emalloc_8h_1a33c9be2e27c6832c275df3c2745e039b" kindref="member">NOTENOUGHMEMORY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>enough<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Buffer);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Emalloc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="emalloc_8cpp_1a92c09eaf43dcfc23a738fca16eb677b9" kindref="member">Erealloc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Buffer;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/>0<sp/>||<sp/>(size<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>ptr<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="emalloc_8h_1af4b3c6a2833ca7c3f531746c2937e3a8" kindref="member">ILLEGALMALLOCREQUEST</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Illegal<sp/>realloc<sp/>request<sp/>size&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>Buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>realloc<sp/>(ptr,<sp/>size);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Buffer<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>size<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="emalloc_8h_1a33c9be2e27c6832c275df3c2745e039b" kindref="member">NOTENOUGHMEMORY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Not<sp/>enough<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(Buffer);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Erealloc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="emalloc_8cpp_1af846576ae65dc13e49ddc616e17baa27" kindref="member">Efree</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)<sp/>{<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="danerror_8cpp_1a480942fa88232bda23e9809e5afa9f25" kindref="member">DoError</ref><sp/>(<ref refid="emalloc_8h_1af4b3c6a2833ca7c3f531746c2937e3a8" kindref="member">ILLEGALMALLOCREQUEST</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Attempted<sp/>to<sp/>free<sp/>NULL<sp/>ptr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>free(ptr);<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Efree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cutil/emalloc.cpp"/>
  </compounddef>
</doxygen>
