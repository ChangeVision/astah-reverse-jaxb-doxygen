<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="sampleiterator_8h" kind="file">
    <compoundname>sampleiterator.h</compoundname>
    <includedby refid="errorcounter_8cpp" local="yes">classify/errorcounter.cpp</includedby>
    <includedby refid="mastertrainer_8cpp" local="yes">classify/mastertrainer.cpp</includedby>
    <includedby refid="sampleiterator_8cpp" local="yes">classify/sampleiterator.cpp</includedby>
    <invincdepgraph>
      <node id="27540">
        <label>classify/sampleiterator.cpp</label>
        <link refid="sampleiterator_8cpp"/>
      </node>
      <node id="27537">
        <label>classify/sampleiterator.h</label>
        <link refid="sampleiterator.h"/>
        <childnode refid="27538" relation="include">
        </childnode>
        <childnode refid="27539" relation="include">
        </childnode>
        <childnode refid="27540" relation="include">
        </childnode>
      </node>
      <node id="27539">
        <label>classify/mastertrainer.cpp</label>
        <link refid="mastertrainer_8cpp"/>
      </node>
      <node id="27538">
        <label>classify/errorcounter.cpp</label>
        <link refid="errorcounter_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesseract_1_1_sample_iterator" prot="public">tesseract::SampleIterator</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2011<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>rays@google.com<sp/>(Ray<sp/>Smith)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_CLASSIFY_SAMPLEITERATOR_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_CLASSIFY_SAMPLEITERATOR_H_</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IndexMapBiDi;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IntFeatureMap;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ShapeTable;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TrainingSample;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TrainingSampleSet;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UnicharAndFonts;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterator<sp/>class<sp/>to<sp/>encapsulate<sp/>the<sp/>complex<sp/>iteration<sp/>involved<sp/>in<sp/>getting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>samples<sp/>of<sp/>all<sp/>shapes<sp/>needed<sp/>for<sp/>a<sp/>classification<sp/>problem.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=====INPUTS<sp/>TO<sp/>Init<sp/>FUNCTION=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>charset_map<sp/>defines<sp/>a<sp/>subset<sp/>of<sp/>the<sp/>sample_set<sp/>classes<sp/>(with<sp/>a<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shape_table,<sp/>or<sp/>the<sp/>shape_table<sp/>classes<sp/>if<sp/>not<sp/>NULL.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>shape_table<sp/>(if<sp/>not<sp/>NULL)<sp/>defines<sp/>the<sp/>mapping<sp/>from<sp/>shapes<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>font_id/class_id<sp/>pairs.<sp/>Each<sp/>shape<sp/>is<sp/>a<sp/>list<sp/>of<sp/>unichar_id<sp/>and<sp/>font<sp/>lists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>sample_set<sp/>holds<sp/>the<sp/>samples<sp/>and<sp/>provides<sp/>indexed<sp/>access<sp/>to<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>font_id/class_id<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>randomize<sp/>is<sp/>true,<sp/>the<sp/>samples<sp/>are<sp/>perturbed<sp/>slightly,<sp/>but<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>perturbation<sp/>is<sp/>guaranteed<sp/>to<sp/>be<sp/>the<sp/>same<sp/>for<sp/>multiple<sp/>identical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>iterations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=====DIFFERENT<sp/>COMBINATIONS<sp/>OF<sp/>INPUTS=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NULL<sp/>shape_table:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Without<sp/>a<sp/>shape_table,<sp/>everything<sp/>works<sp/>in<sp/>UNICHAR_IDs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NULL<sp/>shape_table,<sp/>NULL<sp/>charset_map:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterations<sp/>simply<sp/>run<sp/>over<sp/>the<sp/>samples<sp/>in<sp/>the<sp/>order<sp/>the<sp/>samples<sp/>occur<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GetCompactClassID<sp/>and<sp/>GetSparseClassID<sp/>both<sp/>return<sp/>the<sp/>sample<sp/>UNICHAR_ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NULL<sp/>shape_table,<sp/>non-NULL<sp/>charset_map:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>shape_table<sp/>is<sp/>NULL,<sp/>the<sp/>charset_map<sp/>indexes<sp/>unichar_ids<sp/>directly,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>an<sp/>iteration<sp/>returns<sp/>all<sp/>samples<sp/>of<sp/>all<sp/>chars<sp/>in<sp/>the<sp/>charset_map,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>a<sp/>subset<sp/>of<sp/>the<sp/>full<sp/>unicharset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>iteration<sp/>will<sp/>be<sp/>in<sp/>groups<sp/>of<sp/>the<sp/>same<sp/>unichar_id,<sp/>in<sp/>the<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>defined<sp/>by<sp/>the<sp/>charset_map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GetCompactClassID<sp/>returns<sp/>the<sp/>charset_map<sp/>index<sp/>of<sp/>a<sp/>sample,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GetSparseClassID<sp/>returns<sp/>the<sp/>sample<sp/>UNICHAR_ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Non-NULL<sp/>shape_table:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>With<sp/>a<sp/>shape_table,<sp/>samples<sp/>are<sp/>grouped<sp/>according<sp/>to<sp/>the<sp/>shape_table,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>multiple<sp/>UNICHAR_IDs<sp/>and<sp/>fonts<sp/>may<sp/>be<sp/>grouped<sp/>together,<sp/>and<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>works<sp/>in<sp/>shape_ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Non-NULL<sp/>shape_table,<sp/>NULL<sp/>charset_map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterations<sp/>simply<sp/>run<sp/>over<sp/>the<sp/>samples<sp/>in<sp/>the<sp/>order<sp/>of<sp/>shape_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GetCompactClassID<sp/>and<sp/>GetSparseClassID<sp/>both<sp/>return<sp/>the<sp/>shape_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(If<sp/>you<sp/>want<sp/>the<sp/>unichar_id<sp/>or<sp/>font_id,<sp/>the<sp/>sample<sp/>still<sp/>has<sp/>them.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Non-NULL<sp/>shape_table,<sp/>non-NULL<sp/>charset_map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>shape_table<sp/>is<sp/>not<sp/>NULL,<sp/>the<sp/>charset_map<sp/>indexes<sp/>and<sp/>subsets<sp/>shapes<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>shape_table,<sp/>and<sp/>iterations<sp/>will<sp/>be<sp/>in<sp/>shape_table<sp/>order,<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>charset_map<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GetCompactClassID<sp/>returns<sp/>the<sp/>charset_map<sp/>index<sp/>of<sp/>a<sp/>shape,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GetSparseClassID<sp/>returns<sp/>the<sp/>shape_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=====What<sp/>is<sp/>SampleIterator<sp/>good<sp/>for?=====</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inside<sp/>a<sp/>classifier<sp/>training<sp/>module,<sp/>the<sp/>SampleIterator<sp/>has<sp/>abstracted<sp/>away</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>different<sp/>modes<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>following<sp/>iteration<sp/>to<sp/>train<sp/>your<sp/>classifier:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>(it.Begin();<sp/>!it.AtEnd();<sp/>it.Next())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>TrainingSample&amp;<sp/>sample<sp/>=<sp/>it.GetSample();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/>class_id<sp/>=<sp/>it.GetCompactClassID();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Your<sp/>classifier<sp/>may<sp/>or<sp/>may<sp/>not<sp/>be<sp/>dealing<sp/>with<sp/>a<sp/>shape_table,<sp/>and<sp/>may<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>dealing<sp/>with<sp/>some<sp/>subset<sp/>of<sp/>the<sp/>character/shape<sp/>set.<sp/>It<sp/>doesn&apos;t<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>know<sp/>and<sp/>shouldn&apos;t<sp/>care.<sp/>It<sp/>is<sp/>just<sp/>learning<sp/>shapes<sp/>with<sp/>compact<sp/>class<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>range<sp/>[0,<sp/>it.CompactCharsetSize()).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="classtesseract_1_1_sample_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_sample_iterator" kindref="compound">SampleIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_sample_iterator_1a9789d39f648bb3942e69fb42402b173c" kindref="member">SampleIterator</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_sample_iterator_1a6a7e5ec1f292ab6ecea1f3385496ec37" kindref="member">~SampleIterator</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1ab9b74fc9ac303c34474b69ee69f2d663" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>class<sp/>comment<sp/>for<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1a0cdb514895d01dff26b51a2e5bc1b0ea" kindref="member">Init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di" kindref="compound">IndexMapBiDi</ref>*<sp/><ref refid="classtesseract_1_1_sample_iterator_1a1fdfa33c330477eb7c5eef8ca47fd40c" kindref="member">charset_map</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>*<sp/><ref refid="classtesseract_1_1_sample_iterator_1aeae6fe3f5607f0e0ff9f82151d096ced" kindref="member">shape_table</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>randomize,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set" kindref="compound">TrainingSampleSet</ref>*<sp/><ref refid="classtesseract_1_1_sample_iterator_1a11e0a8f5f60216b68c3fe6528d551295" kindref="member">sample_set</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterator<sp/>functions<sp/>designed<sp/>for<sp/>use<sp/>with<sp/>a<sp/>simple<sp/>for<sp/>loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>(it.Begin();<sp/>!it.AtEnd();<sp/>it.Next())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>TrainingSample&amp;<sp/>sample<sp/>=<sp/>it.GetSample();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>int<sp/>class_id<sp/>=<sp/>it.GetCompactClassID();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1a90e5190efbff41c67519ba29fa59186f" kindref="member">Begin</ref>();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1a4dde9bf911b04c848fbdc4cca8699b70" kindref="member">AtEnd</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>&amp;<sp/><ref refid="classtesseract_1_1_sample_iterator_1a274fa0bca10b58d7efddebde0338a698" kindref="member">GetSample</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="classtesseract_1_1_sample_iterator_1a0941312fec55859dc29a1b32b0e298cd" kindref="member">MutableSample</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>total<sp/>index<sp/>(from<sp/>the<sp/>original<sp/>set<sp/>of<sp/>samples)<sp/>of<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1a3651237953d616f7d27f4ed46106707c" kindref="member">GlobalSampleIndex</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>index<sp/>of<sp/>the<sp/>current<sp/>sample<sp/>in<sp/>compact<sp/>charset<sp/>space,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>2-class<sp/>problem<sp/>between<sp/>x<sp/>and<sp/>y,<sp/>the<sp/>returned<sp/>indices<sp/>will<sp/>all<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>or<sp/>1,<sp/>and<sp/>have<sp/>nothing<sp/>to<sp/>do<sp/>with<sp/>the<sp/>unichar_ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>charset_map_<sp/>is<sp/>NULL,<sp/>then<sp/>this<sp/>is<sp/>equal<sp/>to<sp/>GetSparseClassID().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1a745b2bf5f8956bc1233e28f9b1c5b639" kindref="member">GetCompactClassID</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>index<sp/>of<sp/>the<sp/>current<sp/>sample<sp/>in<sp/>sparse<sp/>charset<sp/>space,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>2-class<sp/>problem<sp/>between<sp/>x<sp/>and<sp/>y,<sp/>the<sp/>returned<sp/>indices<sp/>will<sp/>all<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>x<sp/>or<sp/>y,<sp/>where<sp/>x<sp/>and<sp/>y<sp/>may<sp/>be<sp/>unichar_ids<sp/>(no<sp/>shape_table_)<sp/>or<sp/>shape_ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>shape_table_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1a35e0355b17965fef669f2bd84ea624a7" kindref="member">GetSparseClassID</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Moves<sp/>on<sp/>to<sp/>the<sp/>next<sp/>indexable<sp/>sample.<sp/>If<sp/>the<sp/>end<sp/>is<sp/>reached,<sp/>leaves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>state<sp/>such<sp/>that<sp/>AtEnd()<sp/>is<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1aea58e8234a0b6bab9061929622150bb1" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>size<sp/>of<sp/>the<sp/>compact<sp/>charset<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1a95b17d95d0777709dee9606e57a6aad1" kindref="member">CompactCharsetSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>size<sp/>of<sp/>the<sp/>sparse<sp/>charset<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1ad575eda15498de5a5de614dbcfa4d0aa" kindref="member">SparseCharsetSize</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classtesseract_1_1_sample_iterator_1a1fdfa33c330477eb7c5eef8ca47fd40c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di" kindref="compound">IndexMapBiDi</ref>&amp;<sp/><ref refid="classtesseract_1_1_sample_iterator_1a1fdfa33c330477eb7c5eef8ca47fd40c" kindref="member">charset_map</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*charset_map_;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="140" refid="classtesseract_1_1_sample_iterator_1aeae6fe3f5607f0e0ff9f82151d096ced" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>*<sp/><ref refid="classtesseract_1_1_sample_iterator_1aeae6fe3f5607f0e0ff9f82151d096ced" kindref="member">shape_table</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_table_;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sample<sp/>set<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classtesseract_1_1_sample_iterator_1a11e0a8f5f60216b68c3fe6528d551295" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set" kindref="compound">TrainingSampleSet</ref>*<sp/><ref refid="classtesseract_1_1_sample_iterator_1a11e0a8f5f60216b68c3fe6528d551295" kindref="member">sample_set</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sample_set_;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>set<sp/>of<sp/>functions<sp/>that<sp/>do<sp/>something<sp/>to<sp/>all<sp/>the<sp/>samples<sp/>accessed<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterator,<sp/>as<sp/>it<sp/>is<sp/>currently<sp/>setup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>the<sp/>supplied<sp/>feature_space/feature_map<sp/>transform<sp/>to<sp/>all<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>accessed<sp/>by<sp/>this<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1a476d245234d73a6c9ef7c85b57148a27" kindref="member">MapSampleFeatures</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_map" kindref="compound">IntFeatureMap</ref>&amp;<sp/>feature_map);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>weights<sp/>of<sp/>all<sp/>the<sp/>samples<sp/>to<sp/>be<sp/>uniform<sp/>in<sp/>the<sp/>given<sp/>charset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>in<sp/>the<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1a82e48b99ecac34b9e0dbf8a96521bb4e" kindref="member">UniformSamples</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>the<sp/>weights<sp/>of<sp/>all<sp/>the<sp/>samples<sp/>defined<sp/>by<sp/>the<sp/>iterator<sp/>so<sp/>they</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sum<sp/>to<sp/>1.<sp/>Returns<sp/>the<sp/>minimum<sp/>assigned<sp/>sample<sp/>weight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_sample_iterator_1ac0a70c42261385f21d97c699ff181fad" kindref="member">NormalizeSamples</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>returns<sp/>the<sp/>current<sp/>UnicharAndFont<sp/>shape_entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_unichar_and_fonts" kindref="compound">UnicharAndFonts</ref>*<sp/>GetShapeEntry()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>to<sp/>subset<sp/>the<sp/>actual<sp/>charset<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di" kindref="compound">IndexMapBiDi</ref>*<sp/>charset_map_;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shape<sp/>table<sp/>to<sp/>recombine<sp/>character<sp/>classes<sp/>into<sp/>shapes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>*<sp/>shape_table_;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>samples<sp/>to<sp/>iterate<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set" kindref="compound">TrainingSampleSet</ref>*<sp/>sample_set_;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Flag<sp/>to<sp/>control<sp/>randomizing<sp/>the<sp/>sample<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>randomize_;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shape<sp/>table<sp/>owned<sp/>by<sp/>this<sp/>used<sp/>to<sp/>iterate<sp/>character<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>*<sp/>owned_shape_table_;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Top-level<sp/>iteration.<sp/>Shape<sp/>index<sp/>in<sp/>sparse<sp/>charset_map<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_index_;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_shapes_;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>to<sp/>the<sp/>character<sp/>class<sp/>within<sp/>a<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_char_index_;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_shape_chars_;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>to<sp/>the<sp/>font<sp/>within<sp/>a<sp/>shape/class<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_font_index_;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_shape_fonts_;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>lowest<sp/>level<sp/>iteration.<sp/>sample_index_/num_samples_<sp/>counts<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>current<sp/>shape/class/font<sp/>combination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_index_;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples_;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_CLASSIFY_SAMPLEITERATOR_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/sampleiterator.h"/>
  </compounddef>
</doxygen>
