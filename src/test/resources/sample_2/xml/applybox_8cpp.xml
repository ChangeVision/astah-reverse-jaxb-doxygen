<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="applybox_8cpp" kind="file">
    <compoundname>applybox.cpp</compoundname>
    <includes refid="mfcpch_8h" local="yes">mfcpch.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">allheaders.h</includes>
    <includes refid="boxread_8h" local="yes">boxread.h</includes>
    <includes refid="chopper_8h" local="yes">chopper.h</includes>
    <includes refid="pageres_8h" local="yes">pageres.h</includes>
    <includes refid="unichar_8h" local="yes">unichar.h</includes>
    <includes refid="unicharset_8h" local="yes">unicharset.h</includes>
    <includes refid="tesseractclass_8h" local="yes">tesseractclass.h</includes>
    <includes refid="genericvector_8h" local="yes">genericvector.h</includes>
    <incdepgraph>
      <node id="514">
        <label>matchtab.h</label>
        <link refid="matchtab_8h"/>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
      </node>
      <node id="422">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
      </node>
      <node id="481">
        <label>docqual.h</label>
        <link refid="docqual_8h"/>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
      </node>
      <node id="487">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="490">
        <label>wordrec.h</label>
        <link refid="wordrec_8h"/>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
      </node>
      <node id="488">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
      </node>
      <node id="464">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
      </node>
      <node id="439">
        <label>assert.h</label>
      </node>
      <node id="400">
        <label>mfcpch.h</label>
        <link refid="mfcpch_8h"/>
      </node>
      <node id="478">
        <label>tesseractclass.h</label>
        <link refid="tesseractclass_8h"/>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
        <childnode refid="481" relation="include">
        </childnode>
        <childnode refid="482" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="483" relation="include">
        </childnode>
        <childnode refid="485" relation="include">
        </childnode>
        <childnode refid="490" relation="include">
        </childnode>
      </node>
      <node id="492">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="493" relation="include">
        </childnode>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="492" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
      </node>
      <node id="421">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="477">
        <label>rejctmap.h</label>
        <link refid="rejctmap_8h"/>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
      </node>
      <node id="480">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
      </node>
      <node id="436">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="482">
        <label>devanagari_processing.h</label>
        <link refid="devanagari__processing_8h"/>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="414">
        <label>stdlib.h</label>
      </node>
      <node id="407">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="500">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="515">
        <label>gradechop.h</label>
        <link refid="gradechop_8h"/>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
      </node>
      <node id="483">
        <label>ocrclass.h</label>
        <link refid="ocrclass_8h"/>
        <childnode refid="484" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="445">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="419" relation="include">
        </childnode>
      </node>
      <node id="423">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
      </node>
      <node id="403">
        <label>allheaders.h</label>
      </node>
      <node id="454">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
      </node>
      <node id="426">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
      </node>
      <node id="463">
        <label>tessarray.h</label>
        <link refid="tessarray_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
      </node>
      <node id="440">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
      </node>
      <node id="498">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="486">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
      </node>
      <node id="446">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
      </node>
      <node id="504">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
      <node id="438">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="410">
        <label>stddef.h</label>
      </node>
      <node id="430">
        <label>memory.h</label>
      </node>
      <node id="511">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="495" relation="include">
        </childnode>
      </node>
      <node id="497">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
      </node>
      <node id="518">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="419">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="495">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="474">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
      <node id="408">
        <label>limits.h</label>
      </node>
      <node id="517">
        <label>chop.h</label>
        <link refid="chop_8h"/>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
      </node>
      <node id="509">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
      </node>
      <node id="491">
        <label>associate.h</label>
        <link refid="associate_8h"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
      </node>
      <node id="476">
        <label>params_training_featdef.h</label>
        <link refid="params__training__featdef_8h"/>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
      </node>
      <node id="502">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="504" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="505" relation="include">
        </childnode>
      </node>
      <node id="451">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="450" relation="include">
        </childnode>
      </node>
      <node id="452">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="449" relation="include">
        </childnode>
      </node>
      <node id="399">
        <label>ccmain/applybox.cpp</label>
        <link refid="applybox.cpp"/>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
      <node id="444">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
      </node>
      <node id="434">
        <label>pthread.h</label>
      </node>
      <node id="402">
        <label>string.h</label>
      </node>
      <node id="432">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="467">
        <label>boxword.h</label>
        <link refid="boxword_8h"/>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
      </node>
      <node id="429">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
      </node>
      <node id="413">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
      </node>
      <node id="516">
        <label>findseam.h</label>
        <link refid="findseam_8h"/>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
      </node>
      <node id="453">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
      </node>
      <node id="443">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="418">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="435">
        <label>semaphore.h</label>
      </node>
      <node id="404">
        <label>boxread.h</label>
        <link refid="boxread_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
      </node>
      <node id="447">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
      </node>
      <node id="442">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="455">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="427">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="419" relation="include">
        </childnode>
      </node>
      <node id="496">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="497" relation="include">
        </childnode>
        <childnode refid="498" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="424">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
      <node id="501">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
      <node id="484">
        <label>time.h</label>
      </node>
      <node id="450">
        <label>math.h</label>
      </node>
      <node id="448">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
      </node>
      <node id="461">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
      </node>
      <node id="428">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="419" relation="include">
        </childnode>
      </node>
      <node id="457">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="449" relation="include">
        </childnode>
      </node>
      <node id="460">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
      </node>
      <node id="472">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="462">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
      </node>
      <node id="507">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
      </node>
      <node id="401">
        <label>ctype.h</label>
      </node>
      <node id="489">
        <label>gap_map.h</label>
        <link refid="gap__map_8h"/>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
      </node>
      <node id="469">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
      </node>
      <node id="416">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
      </node>
      <node id="417">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="485">
        <label>textord.h</label>
        <link refid="textord_8h"/>
        <childnode refid="486" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
        <childnode refid="489" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
      </node>
      <node id="499">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="500" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="501" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="466">
        <label>pageres.h</label>
        <link refid="pageres_8h"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="512">
        <label>language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="491" relation="include">
        </childnode>
        <childnode refid="503" relation="include">
        </childnode>
        <childnode refid="502" relation="include">
        </childnode>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
      </node>
      <node id="506">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="471">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
      </node>
      <node id="425">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
      </node>
      <node id="431">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
      </node>
      <node id="458">
        <label>seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
      </node>
      <node id="479">
        <label>control.h</label>
        <link refid="control_8h"/>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="480" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
      </node>
      <node id="513">
        <label>oldheap.h</label>
        <link refid="oldheap_8h"/>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
      </node>
      <node id="503">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="418" relation="include">
        </childnode>
      </node>
      <node id="508">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="449">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="493">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
      </node>
      <node id="441">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="470">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="409" relation="include">
        </childnode>
      </node>
      <node id="415">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="510">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="494" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="411">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="407" relation="include">
        </childnode>
      </node>
      <node id="473">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
      </node>
      <node id="405">
        <label>stdio.h</label>
      </node>
      <node id="437">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="494">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="495" relation="include">
        </childnode>
        <childnode refid="496" relation="include">
        </childnode>
        <childnode refid="499" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="412">
        <label>chopper.h</label>
        <link refid="chopper_8h"/>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
      </node>
      <node id="433">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
      </node>
      <node id="468">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="406">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
      </node>
      <node id="459">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
      </node>
      <node id="420">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
      </node>
      <node id="505">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="456">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="applybox_8cpp_1a1ecfbb8dde381ffc9c672e569cb1a1d2" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kMaxGroupSize</definition>
        <argsstring></argsstring>
        <name>kMaxGroupSize</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" line="41" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="applybox_8cpp_1a7c746c8c99aa2b6f10f7c26838290da0" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double kMaxXHeightDeviationFraction</definition>
        <argsstring></argsstring>
        <name>kMaxXHeightDeviationFraction</name>
        <initializer>= 0.125</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>applybox.cpp<sp/><sp/>(Formerly<sp/>applybox.c)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Re<sp/>segment<sp/>rows<sp/>according<sp/>to<sp/>box<sp/>file<sp/>data</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Phil<sp/>Cheatle</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Wed<sp/>Nov<sp/>24<sp/>09:11:23<sp/>GMT<sp/>1993</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>1993,<sp/>Hewlett-Packard<sp/>Ltd.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfcpch_8h" kindref="compound">mfcpch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__UNIX__</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="boxread_8h" kindref="compound">boxread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="chopper_8h" kindref="compound">chopper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pageres_8h" kindref="compound">pageres.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unichar_8h" kindref="compound">unichar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicharset_8h" kindref="compound">unicharset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tesseractclass_8h" kindref="compound">tesseractclass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericvector_8h" kindref="compound">genericvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>number<sp/>of<sp/>blobs<sp/>to<sp/>classify<sp/>together<sp/>in<sp/>FindSegmentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="applybox_8cpp_1a1ecfbb8dde381ffc9c672e569cb1a1d2" kindref="member">kMaxGroupSize</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>fraction<sp/>of<sp/>median<sp/>allowed<sp/>as<sp/>deviation<sp/>in<sp/>xheight<sp/>before<sp/>switching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>median.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="applybox_8cpp_1a7c746c8c99aa2b6f10f7c26838290da0" kindref="member">kMaxXHeightDeviationFraction</ref><sp/>=<sp/>0.125;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>The<sp/>box<sp/>file<sp/>is<sp/>assumed<sp/>to<sp/>contain<sp/>box<sp/>definitions,<sp/>one<sp/>per<sp/>line,<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>following<sp/>format<sp/>for<sp/>blob-level<sp/>boxes:</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/><sp/>&lt;UTF8<sp/>str&gt;<sp/>&lt;left&gt;<sp/>&lt;bottom&gt;<sp/>&lt;right&gt;<sp/>&lt;top&gt;<sp/>&lt;page<sp/>id&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>and<sp/>for<sp/>word/line-level<sp/>boxes:</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/><sp/>WordStr<sp/>&lt;left&gt;<sp/>&lt;bottom&gt;<sp/>&lt;right&gt;<sp/>&lt;top&gt;<sp/>&lt;page<sp/>id&gt;<sp/>#&lt;space-delimited<sp/>word<sp/>str&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>NOTES:</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>The<sp/>boxes<sp/>use<sp/>tesseract<sp/>coordinates,<sp/>i.e.<sp/>0,0<sp/>is<sp/>at<sp/>BOTTOM-LEFT.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>&lt;page<sp/>id&gt;<sp/>is<sp/>0-based,<sp/>and<sp/>the<sp/>page<sp/>number<sp/>is<sp/>used<sp/>for<sp/>multipage<sp/>input<sp/>(tiff).</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>In<sp/>the<sp/>blob-level<sp/>form,<sp/>each<sp/>line<sp/>represents<sp/>a<sp/>recognizable<sp/>unit,<sp/>which<sp/>may</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>be<sp/>several<sp/>UTF-8<sp/>bytes,<sp/>but<sp/>there<sp/>is<sp/>a<sp/>bounding<sp/>box<sp/>around<sp/>each<sp/>recognizable</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>unit,<sp/>and<sp/>no<sp/>classifier<sp/>is<sp/>needed<sp/>to<sp/>train<sp/>in<sp/>this<sp/>mode<sp/>(bootstrapping.)</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>In<sp/>the<sp/>word/line-level<sp/>form,<sp/>the<sp/>line<sp/>begins<sp/>with<sp/>the<sp/>literal<sp/>&quot;WordStr&quot;,<sp/>and</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>the<sp/>bounding<sp/>box<sp/>bounds<sp/>either<sp/>a<sp/>whole<sp/>line<sp/>or<sp/>a<sp/>whole<sp/>word.<sp/>The<sp/>recognizable</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>units<sp/>in<sp/>the<sp/>word/line<sp/>are<sp/>listed<sp/>after<sp/>the<sp/>#<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>and</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>are<sp/>space<sp/>delimited,<sp/>ignoring<sp/>any<sp/>original<sp/>spaces<sp/>on<sp/>the<sp/>line.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>Eg.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>word<sp/>-&gt;<sp/>#w<sp/>o<sp/>r<sp/>d</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>multi<sp/>word<sp/>line<sp/>-&gt;<sp/>#m<sp/>u<sp/>l<sp/>t<sp/>i<sp/>w<sp/>o<sp/>r<sp/>d<sp/>l<sp/>i<sp/>n<sp/>e</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>The<sp/>recognizable<sp/>units<sp/>must<sp/>be<sp/>space-delimited<sp/>in<sp/>order<sp/>to<sp/>allow<sp/>multiple</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>unicodes<sp/>to<sp/>be<sp/>used<sp/>for<sp/>a<sp/>single<sp/>recognizable<sp/>unit,<sp/>eg<sp/>Hindi.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>In<sp/>this<sp/>mode,<sp/>the<sp/>classifier<sp/>must<sp/>have<sp/>been<sp/>pre-trained<sp/>with<sp/>the<sp/>desired</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>character<sp/>set,<sp/>or<sp/>it<sp/>will<sp/>not<sp/>be<sp/>able<sp/>to<sp/>find<sp/>the<sp/>character<sp/>segmentations.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear_any_old_text(BLOCK_LIST<sp/>*block_list)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>BLOCK_IT<sp/>block_it(block_list);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(block_it.mark_cycle_pt();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!block_it.cycled_list();<sp/>block_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>ROW_IT<sp/>row_it(block_it.data()-&gt;row_list());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row_it.mark_cycle_pt();<sp/>!row_it.cycled_list();<sp/>row_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WERD_IT<sp/>word_it(row_it.data()-&gt;word_list());</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(word_it.mark_cycle_pt();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!word_it.cycled_list();<sp/>word_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_it.data()-&gt;set_text(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Applies<sp/>the<sp/>box<sp/>file<sp/>based<sp/>on<sp/>the<sp/>image<sp/>name<sp/>fname,<sp/>and<sp/>resegments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>words<sp/>in<sp/>the<sp/>block_list<sp/>(page),<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blob-mode:<sp/>one<sp/>blob<sp/>per<sp/>line<sp/>in<sp/>the<sp/>box<sp/>file,<sp/>words<sp/>as<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>word/line-mode:<sp/>one<sp/>blob<sp/>per<sp/>space-delimited<sp/>unit<sp/>after<sp/>the<sp/>#,<sp/>and<sp/>one<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>per<sp/>line<sp/>in<sp/>the<sp/>box<sp/>file.<sp/>(See<sp/>comment<sp/>above<sp/>for<sp/>box<sp/>file<sp/>format.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>find_segmentation<sp/>is<sp/>true,<sp/>(word/line<sp/>mode)<sp/>then<sp/>the<sp/>classifier<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>re-segment<sp/>words/lines<sp/>to<sp/>match<sp/>the<sp/>space-delimited<sp/>truth<sp/>string<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>each<sp/>box.<sp/>In<sp/>this<sp/>case,<sp/>the<sp/>input<sp/>box<sp/>may<sp/>be<sp/>for<sp/>a<sp/>word<sp/>or<sp/>even<sp/>a<sp/>whole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>text<sp/>line,<sp/>and<sp/>the<sp/>output<sp/>words<sp/>will<sp/>contain<sp/>multiple<sp/>blobs<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>space-delimited<sp/>input<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>With<sp/>find_segmentation<sp/>false,<sp/>no<sp/>classifier<sp/>is<sp/>needed,<sp/>but<sp/>the<sp/>chopper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>still<sp/>be<sp/>used<sp/>to<sp/>correctly<sp/>segment<sp/>touching<sp/>characters<sp/>with<sp/>the<sp/>help</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>input<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>returned<sp/>PAGE_RES,<sp/>the<sp/>WERD_RES<sp/>are<sp/>setup<sp/>as<sp/>they<sp/>would<sp/>be<sp/>returned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>normal<sp/>classification,<sp/>ie.<sp/>with<sp/>a<sp/>word,<sp/>chopped_word,<sp/>rebuild_word,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>seam_array,<sp/>denorm,<sp/>box_word,<sp/>and<sp/>best_state,<sp/>but<sp/>NO<sp/>best_choice<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>raw_choice,<sp/>as<sp/>they<sp/>would<sp/>require<sp/>a<sp/>UNICHARSET,<sp/>which<sp/>we<sp/>aim<sp/>to<sp/>avoid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Instead,<sp/>the<sp/>correct_text<sp/>member<sp/>of<sp/>WERD_RES<sp/>is<sp/>set,<sp/>and<sp/>this<sp/>may<sp/>be<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converted<sp/>to<sp/>a<sp/>best_choice<sp/>using<sp/>CorrectClassifyWords.<sp/>CorrectClassifyWords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>not<sp/>required<sp/>before<sp/>calling<sp/>ApplyBoxTraining.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/><ref refid="classtesseract_1_1_tesseract_1ad8d1403d0d4862f9c07fc1eafdd13a00" kindref="member">Tesseract::ApplyBoxes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/>fname,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>find_segmentation,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOCK_LIST<sp/>*block_list)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>box_failures<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>FILE*<sp/>box_file<sp/>=<sp/><ref refid="boxread_8cpp_1af8f00c0aa1951fff65cff5802879a91d" kindref="member">OpenBoxFile</ref>(fname);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;TBOX&gt;</ref><sp/>boxes;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;STRING&gt;</ref><sp/>texts,<sp/>full_texts;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found_box<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(found_box)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_number<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Line<sp/>number<sp/>of<sp/>the<sp/>box<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>text,<sp/>full_text;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>found_box<sp/>=<sp/><ref refid="boxread_8cpp_1a8236e051549f8174e263196602edadc5" kindref="member">ReadNextBox</ref>(applybox_page,<sp/>&amp;line_number,<sp/>box_file,<sp/>&amp;text,<sp/>&amp;box);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found_box)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++box_count;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="boxread_8cpp_1a12d56f93e661ff006a382fb8d7314898" kindref="member">MakeBoxFileStr</ref>(text.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>box,<sp/>applybox_page,<sp/>&amp;full_text);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>full_text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(box);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>texts.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(text);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>full_texts.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(full_text);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>word<sp/>mode,<sp/>we<sp/>use<sp/>the<sp/>boxes<sp/>to<sp/>make<sp/>a<sp/>word<sp/>for<sp/>each<sp/>box,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>blob<sp/>mode<sp/>we<sp/>use<sp/>the<sp/>existing<sp/>words<sp/>and<sp/>maximally<sp/>chop<sp/>them<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/>page_res<sp/>=<sp/>find_segmentation<sp/>?</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>:<sp/><ref refid="classtesseract_1_1_tesseract_1a8dea5db2452f327200936d6e9f2ab593" kindref="member">SetupApplyBoxes</ref>(boxes,<sp/>block_list);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>clear_any_old_text(block_list);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>boxes.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>-<sp/>1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundit<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page_res<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundit<sp/>=<sp/><ref refid="classtesseract_1_1_tesseract_1a6e62ea5e081f83420ed5b6a4ed2a8bd5" kindref="member">ResegmentCharBox</ref>(page_res,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>boxes[i],<sp/>boxes[i<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_texts[i].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundit<sp/>=<sp/><ref refid="classtesseract_1_1_tesseract_1a6e62ea5e081f83420ed5b6a4ed2a8bd5" kindref="member">ResegmentCharBox</ref>(page_res,<sp/>&amp;boxes[i-1],<sp/>boxes[i],</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes[i<sp/>+<sp/>1],<sp/>full_texts[i].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>foundit<sp/>=<sp/><ref refid="classtesseract_1_1_tesseract_1ac9908a7f313815407d3c86a9b907d51e" kindref="member">ResegmentWordBox</ref>(block_list,<sp/>boxes[i],<sp/>boxes[i<sp/>+<sp/>1],</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texts[i].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!foundit)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box_failures++;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tesseract_1ac465a51dfce59ff3bc7a20bdfa8850a4" kindref="member">ReportFailedBox</ref>(i,<sp/>boxes[i],<sp/>texts[i].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;FAILURE!<sp/>Couldn&apos;t<sp/>find<sp/>a<sp/>matching<sp/>blob&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(page_res<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>word/line<sp/>mode,<sp/>we<sp/>now<sp/>maximally<sp/>chop<sp/>all<sp/>the<sp/>words<sp/>and<sp/>resegment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>them<sp/>with<sp/>the<sp/>classifier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>page_res<sp/>=<sp/><ref refid="classtesseract_1_1_tesseract_1a8dea5db2452f327200936d6e9f2ab593" kindref="member">SetupApplyBoxes</ref>(boxes,<sp/>block_list);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tesseract_1a6193fb469b62b12c1b999194fc5cd569" kindref="member">ReSegmentByClassification</ref>(page_res);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;APPLY_BOXES:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Boxes<sp/>read<sp/>from<sp/>boxfile:<sp/><sp/>%6d\n&quot;</highlight><highlight class="normal">,<sp/>box_count);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box_failures<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Boxes<sp/>failed<sp/>resegmentation:<sp/><sp/>%6d\n&quot;</highlight><highlight class="normal">,<sp/>box_failures);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tesseract_1a420654e409a9d28fd133515b5f3ed2c3" kindref="member">TidyUp</ref>(page_res);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page_res;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>computes<sp/>median<sp/>xheight<sp/>in<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>MedianXHeight(BLOCK_LIST<sp/>*block_list)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>BLOCK_IT<sp/>block_it(block_list);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>xheights(0,<sp/>block_it.data()-&gt;bounding_box().height());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(block_it.mark_cycle_pt();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!block_it.cycled_list();<sp/>block_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>ROW_IT<sp/>row_it(block_it.data()-&gt;row_list());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row_it.mark_cycle_pt();<sp/>!row_it.cycled_list();<sp/>row_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xheights.<ref refid="class_s_t_a_t_s_1ab8cacba14df28eed1bffc4cea0b2f87f" kindref="member">add</ref>(<ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(row_it.data()-&gt;x_height()),<sp/>1);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xheights.median();</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Builds<sp/>a<sp/>PAGE_RES<sp/>from<sp/>the<sp/>block_list<sp/>in<sp/>the<sp/>way<sp/>required<sp/>for<sp/>ApplyBoxes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>fuzzy<sp/>spaces<sp/>are<sp/>removed,<sp/>and<sp/>all<sp/>the<sp/>words<sp/>are<sp/>maximally<sp/>chopped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/><ref refid="classtesseract_1_1_tesseract_1a8dea5db2452f327200936d6e9f2ab593" kindref="member">Tesseract::SetupApplyBoxes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;TBOX&gt;</ref>&amp;<sp/>boxes,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOCK_LIST<sp/>*block_list)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>median_xheight<sp/>=<sp/>MedianXHeight(block_list);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_deviation<sp/>=<sp/><ref refid="applybox_8cpp_1a7c746c8c99aa2b6f10f7c26838290da0" kindref="member">kMaxXHeightDeviationFraction</ref><sp/>*<sp/>median_xheight;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Strip<sp/>all<sp/>fuzzy<sp/>space<sp/>markers<sp/>to<sp/>simplify<sp/>the<sp/>PAGE_RES.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>BLOCK_IT<sp/>b_it(block_list);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b_it.mark_cycle_pt();<sp/>!b_it.cycled_list();<sp/>b_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block<sp/>=<sp/>b_it.data();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>ROW_IT<sp/>r_it(block-&gt;<ref refid="class_b_l_o_c_k_1ae9826e422b0bf17a7592dee8db3fe058" kindref="member" tooltip="get rows ">row_list</ref>());</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r_it.mark_cycle_pt();<sp/>!r_it.cycled_list();<sp/>r_it.forward<sp/>())<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_o_w" kindref="compound">ROW</ref>*<sp/>row<sp/>=<sp/>r_it.data();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>fabs(row-&gt;<ref refid="class_r_o_w_1a2954f94ec4eefe1e3729912e5b8ea779" kindref="member">x_height</ref>()<sp/>-<sp/>median_xheight);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff<sp/>&gt;<sp/>max_deviation)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;row<sp/>xheight=%g,<sp/>but<sp/>median<sp/>xheight<sp/>=<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row-&gt;<ref refid="class_r_o_w_1a2954f94ec4eefe1e3729912e5b8ea779" kindref="member">x_height</ref>(),<sp/>median_xheight);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row-&gt;<ref refid="class_r_o_w_1a90b980cd6ebbc47e80c0e2ea55ff14a2" kindref="member">set_x_height</ref>(static_cast&lt;float&gt;(median_xheight));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WERD_IT<sp/>w_it(row-&gt;<ref refid="class_r_o_w_1ac9d07f978420b3564bf5508ad294fb70" kindref="member">word_list</ref>());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w_it.mark_cycle_pt();<sp/>!w_it.cycled_list();<sp/>w_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>word<sp/>=<sp/>w_it.data();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word-&gt;<ref refid="class_w_e_r_d_1a174baefaa99afbfdbf444e4199f3b529" kindref="member">cblob_list</ref>()-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>w_it.extract();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d_1aa42c9f53794ab51c95503cd277e89c60" kindref="member">set_flag</ref>(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea3580884b5b0335502fb928db4a0a2024" kindref="member">W_FUZZY_SP</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d_1aa42c9f53794ab51c95503cd277e89c60" kindref="member">set_flag</ref>(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea675eadd051ea82d1f288751799bfa31c" kindref="member">W_FUZZY_NON</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/>page_res<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>(block_list,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="class_p_a_g_e___r_e_s___i_t" kindref="compound">PAGE_RES_IT</ref><sp/>pr_it(page_res);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref>*<sp/>word_res;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((word_res<sp/>=<sp/>pr_it.<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tesseract_1aab153649250a4b8bd6ffb4e22f44f79f" kindref="member">MaximallyChopWord</ref>(boxes,<sp/>pr_it.block()-&gt;block,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pr_it.row()-&gt;row,<sp/>word_res);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>pr_it.forward();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>page_res;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>make<sp/>a<sp/>WERD_CHOICE<sp/>from<sp/>the<sp/>BLOB_CHOICE_LIST_VECTOR<sp/>using<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>top<sp/>choices.<sp/>Avoids<sp/>problems<sp/>with<sp/>very<sp/>long<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeWordChoice(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref>&amp;<sp/>char_choices,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>*<sp/>word_choice)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>*word_choice<sp/>=<sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>(&amp;unicharset);<sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>word<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>word_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aad71e860a573a615ce8958898b2657fb" kindref="member" tooltip="Set the fields in this choice to be default (bad) values. ">make_bad</ref>();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>char_choices.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOB_CHOICE_IT<sp/>it(char_choices[i]);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref>*<sp/>bc<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>word_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a76b0ea9f9f0d9c08b2e84b7372964001" kindref="member">append_unichar_id</ref>(bc-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>(),<sp/>1,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bc-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a7fbd2d505bf5b55beee424096fb1e9bc" kindref="member">rating</ref>(),<sp/>bc-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1af53d45b718c562ea7209b583c77ac14e" kindref="member">certainty</ref>());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tests<sp/>the<sp/>chopper<sp/>by<sp/>exhaustively<sp/>running<sp/>chop_one_blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>word_res<sp/>will<sp/>contain<sp/>filled<sp/>chopped_word,<sp/>seam_array,<sp/>denorm,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>box_word<sp/>and<sp/>best_state<sp/>for<sp/>the<sp/>maximally<sp/>chopped<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1aab153649250a4b8bd6ffb4e22f44f79f" kindref="member">Tesseract::MaximallyChopWord</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;TBOX&gt;</ref>&amp;<sp/>boxes,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block,<sp/><ref refid="class_r_o_w" kindref="compound">ROW</ref>*<sp/>row,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref>*<sp/>word_res)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a48538bd850eedc3adfc901f4aee1a216" kindref="member">SetupForTessRecognition</ref>(unicharset,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="classtesseract_1_1_tesseract_1a4934a09fb5d68ea047009f419eeafd35" kindref="member">BestPix</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;textord_use_cjk_fp_model,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row,<sp/>block))<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a1c0bbe4f9ec71150e1e06a5023a84707" kindref="member">CloneChoppedToRebuild</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chop_debug)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Maximally<sp/>chopping<sp/>word<sp/>at:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>-&gt;<ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_wordrec_1a7518e041a8ddab1d1a2b7e609553b8e3" kindref="member">blob_match_table</ref>.<ref refid="classtesseract_1_1_blob_match_table_1adccd291f7c70303e621e950c289be897" kindref="member">init_match_table</ref>();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_LIST<sp/>*match_result;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>*char_choices<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref>();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rating<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="host_8h_1aa092b7d509790c28edc065b23de6e39e" kindref="member">MAX_INT8</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>blob-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rating<sp/>and<sp/>certainty<sp/>are<sp/>not<sp/>quite<sp/>arbitrary.<sp/>Since</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>select_blob_to_chop<sp/>uses<sp/>the<sp/>worst<sp/>certainty<sp/>to<sp/>choose,<sp/>they<sp/>all<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>different,<sp/>so<sp/>starting<sp/>with<sp/>MAX_INT8,<sp/>subtract<sp/>1/8<sp/>for<sp/>each<sp/>blob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>here,<sp/>and<sp/>then<sp/>divide<sp/>by<sp/>e<sp/>each<sp/>time<sp/>they<sp/>are<sp/>chopped,<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>guarantee<sp/>a<sp/>set<sp/>of<sp/>unequal<sp/>values<sp/>for<sp/>the<sp/>whole<sp/>tree<sp/>of<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>produced,<sp/>however<sp/>much<sp/>chopping<sp/>is<sp/>required.<sp/>The<sp/>chops<sp/>are<sp/>thus<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>limited<sp/>by<sp/>the<sp/>ability<sp/>of<sp/>the<sp/>chopper<sp/>to<sp/>find<sp/>suitable<sp/>chop<sp/>points,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>not<sp/>by<sp/>the<sp/>value<sp/>of<sp/>the<sp/>certainties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>match_result<sp/>=<sp/><ref refid="classtesseract_1_1_wordrec_1ae15505acaad8195b1b96de4a393bfc3e" kindref="member">fake_classify_blob</ref>(0,<sp/>rating,<sp/>-rating);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_wordrec_1a30984c34a31ca6ef5ee363fc5ebfeff4" kindref="member">modify_blob_choice</ref>(match_result,<sp/>0);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!match_result-&gt;empty());</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>*char_choices<sp/>+=<sp/>match_result;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>rating<sp/>-=<sp/>0.125f;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>blob_number;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_chop_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!assume_fixed_pitch_char_segment)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>chop<sp/>if<sp/>the<sp/>language<sp/>is<sp/>not<sp/>fixed<sp/>pitch<sp/>like<sp/>CJK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prioritize_division)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_wordrec_1adb4cc59f6e9cca86fbba44ad483ab0b1" kindref="member">chop_one_blob2</ref>(boxes,<sp/>word_res,<sp/>&amp;word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1adefe2273d7f4b36fcbe7ae420bfd077a" kindref="member">seam_array</ref>));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_wordrec_1a3649b7ab00c4d5947904af99716c6b20" kindref="member">chop_one_blob</ref>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>,<sp/>char_choices,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;blob_number,<sp/>&amp;word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1adefe2273d7f4b36fcbe7ae420bfd077a" kindref="member">seam_array</ref>,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;right_chop_index));</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>MakeWordChoice(*char_choices,<sp/>unicharset,<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3d42ac7ec121263e757c9b7160dfd50d" kindref="member">best_choice</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>MakeWordChoice(*char_choices,<sp/>unicharset,<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab4d02a7548dab0a4522f02ed90e48100" kindref="member">raw_choice</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a1c0bbe4f9ec71150e1e06a5023a84707" kindref="member">CloneChoppedToRebuild</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_wordrec_1a7518e041a8ddab1d1a2b7e609553b8e3" kindref="member">blob_match_table</ref>.<ref refid="classtesseract_1_1_blob_match_table_1afdaff3d125ee57f9ee4d6a777e13f0ce" kindref="member">end_match_table</ref>();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_choices<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>char_choices-&gt;<ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>char_choices;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>compute<sp/>the<sp/>dispute<sp/>resolution<sp/>metric.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Disputed<sp/>blob<sp/>resolution.<sp/>The<sp/>aim<sp/>is<sp/>to<sp/>give<sp/>the<sp/>blob<sp/>to<sp/>the<sp/>most</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>appropriate<sp/>boxfile<sp/>box.<sp/>Most<sp/>of<sp/>the<sp/>time<sp/>it<sp/>is<sp/>obvious,<sp/>but<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">//<sp/>two<sp/>boxfile<sp/>boxes<sp/>overlap<sp/>significantly<sp/>it<sp/>is<sp/>not.<sp/>If<sp/>a<sp/>small<sp/>boxfile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/>box<sp/>takes<sp/>most<sp/>of<sp/>the<sp/>blob,<sp/>and<sp/>a<sp/>large<sp/>boxfile<sp/>box<sp/>does<sp/>too,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>the<sp/>small<sp/>boxfile<sp/>box<sp/>to<sp/>get<sp/>it,<sp/>but<sp/>if<sp/>the<sp/>small<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>much<sp/>smaller<sp/>than<sp/>the<sp/>blob,<sp/>we<sp/>don&apos;t<sp/>want<sp/>it<sp/>to<sp/>get<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Details<sp/>of<sp/>the<sp/>disputed<sp/>blob<sp/>resolution:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>a<sp/>box<sp/>with<sp/>area<sp/>A,<sp/>and<sp/>a<sp/>blob<sp/>with<sp/>area<sp/>B,<sp/>with<sp/>overlap<sp/>area<sp/>C,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>miss<sp/>metric<sp/>is<sp/>(A-C)(B-C)/(AB)<sp/>and<sp/>the<sp/>box<sp/>with<sp/>minimum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>miss<sp/>metric<sp/>gets<sp/>the<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>BoxMissMetric(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box2)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlap_area<sp/>=<sp/>box1.<ref refid="class_t_b_o_x_1a33e45c7389737cdf1a908bca0af315c4" kindref="member">intersection</ref>(box2).<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>miss_metric<sp/>=<sp/>box1.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()-<sp/>overlap_area;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>miss_metric<sp/>/=<sp/>box1.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>miss_metric<sp/>*=<sp/>box2.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()<sp/>-<sp/>overlap_area;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>miss_metric<sp/>/=<sp/>box2.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>miss_metric;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gather<sp/>consecutive<sp/>blobs<sp/>that<sp/>match<sp/>the<sp/>given<sp/>box<sp/>into<sp/>the<sp/>best_state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>corresponding<sp/>correct_text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fights<sp/>over<sp/>which<sp/>box<sp/>owns<sp/>which<sp/>blobs<sp/>are<sp/>settled<sp/>by<sp/>pre-chopping<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>applying<sp/>the<sp/>blobs<sp/>to<sp/>box<sp/>or<sp/>next_box<sp/>with<sp/>the<sp/>least<sp/>non-overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>the<sp/>box<sp/>was<sp/>in<sp/>error,<sp/>which<sp/>can<sp/>only<sp/>be<sp/>caused<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>failing<sp/>to<sp/>find<sp/>an<sp/>appropriate<sp/>blob<sp/>for<sp/>a<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>means<sp/>that<sp/>occasionally,<sp/>blobs<sp/>may<sp/>be<sp/>incorrectly<sp/>segmented<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>chopper<sp/>fails<sp/>to<sp/>find<sp/>a<sp/>suitable<sp/>chop<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1a6e62ea5e081f83420ed5b6a4ed2a8bd5" kindref="member">Tesseract::ResegmentCharBox</ref>(<ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/>page_res,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>*prev_box,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>next_box,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>correct_text)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nAPPLY_BOX:<sp/>in<sp/>ResegmentCharBox()<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>correct_text);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="class_p_a_g_e___r_e_s___i_t" kindref="compound">PAGE_RES_IT</ref><sp/>page_res_it(page_res);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref>*<sp/>word_res;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(word_res<sp/>=<sp/>page_res_it.<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>();<sp/>word_res<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res<sp/>=<sp/>page_res_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3a92c8c9750d78631d75998f008f366a" kindref="member">box_word</ref>-&gt;<ref refid="classtesseract_1_1_box_word_1aa3e49314fa288ca6b29fde03cc251cd9" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(box))</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Checking<sp/>word<sp/>box:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3a92c8c9750d78631d75998f008f366a" kindref="member">box_word</ref>-&gt;<ref refid="classtesseract_1_1_box_word_1aa3e49314fa288ca6b29fde03cc251cd9" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_len<sp/>=<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3a92c8c9750d78631d75998f008f366a" kindref="member">box_word</ref>-&gt;<ref refid="classtesseract_1_1_box_word_1afe001fe8fb7f2d3725b2ac2f542e9878" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word_len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>char_box<sp/>=<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_count<sp/>=<sp/>0;<sp/>i<sp/>+<sp/>blob_count<sp/>&lt;<sp/>word_len;<sp/>++blob_count)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box<sp/>=<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3a92c8c9750d78631d75998f008f366a" kindref="member">box_word</ref>-&gt;<ref refid="classtesseract_1_1_box_word_1a022cfe52a644e9e800595f014b1fbcf5" kindref="member">BlobBox</ref>(i<sp/>+<sp/>blob_count);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blob_box.<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(box))</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>[i<sp/>+<sp/>blob_count].<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Blob<sp/>is<sp/>claimed<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_box_miss_metric<sp/>=<sp/>BoxMissMetric(blob_box,<sp/>box);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>next_box_miss_metric<sp/>=<sp/>BoxMissMetric(blob_box,<sp/>next_box);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Checking<sp/>blob:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Current<sp/>miss<sp/>metric<sp/>=<sp/>%g,<sp/>next<sp/>=<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_box_miss_metric,<sp/>next_box_miss_metric);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_box_miss_metric<sp/>&gt;<sp/>next_box_miss_metric)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Blob<sp/>is<sp/>a<sp/>better<sp/>match<sp/>for<sp/>next<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_box<sp/>+=<sp/>blob_box;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Index<sp/>[%d,<sp/>%d)<sp/>seem<sp/>good.\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>i<sp/>+<sp/>blob_count);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!char_box.<ref refid="class_t_b_o_x_1a0f7a028a3ad0355f38e17db45c737384" kindref="member">almost_equal</ref>(box,<sp/>3)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(next_box)<sp/>&lt;<sp/>-3<sp/>||</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(prev_box<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>prev_box-&gt;<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(box)<sp/>&lt;<sp/>-3)))<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>refine<sp/>just<sp/>the<sp/>box_word,<sp/>best_state<sp/>and<sp/>correct_text<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rebuild_word<sp/>is<sp/>made<sp/>in<sp/>TidyUp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blob_count<sp/>blobs<sp/>are<sp/>put<sp/>together<sp/>to<sp/>match<sp/>the<sp/>box.<sp/>Merge<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>box_word<sp/>boxes,<sp/>save<sp/>the<sp/>blob_count<sp/>in<sp/>the<sp/>state<sp/>and<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3a92c8c9750d78631d75998f008f366a" kindref="member">box_word</ref>-&gt;<ref refid="classtesseract_1_1_box_word_1a3a7da282c5432576b36cd7a8ec9702d8" kindref="member">MergeBoxes</ref>(i,<sp/>i<sp/>+<sp/>blob_count);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>[i]<sp/>=<sp/>blob_count;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>[i]<sp/>=<sp/>correct_text;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>Blobs<sp/>match:<sp/>blob<sp/>box:&quot;</highlight><highlight class="normal">,<sp/>blob_count);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3a92c8c9750d78631d75998f008f366a" kindref="member">box_word</ref>-&gt;<ref refid="classtesseract_1_1_box_word_1a022cfe52a644e9e800595f014b1fbcf5" kindref="member">BlobBox</ref>(i).<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Matches<sp/>box:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;With<sp/>next<sp/>box:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Eliminated<sp/>best_state<sp/>and<sp/>correct_text<sp/>entries<sp/>for<sp/>the<sp/>consumed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>blob_count;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>.<ref refid="class_generic_vector_1a3fd37a240a42f1c3052e8d28614d3702" kindref="member">remove</ref>(i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>.<ref refid="class_generic_vector_1a3fd37a240a42f1c3052e8d28614d3702" kindref="member">remove</ref>(i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>that<sp/>no<sp/>box<sp/>spans<sp/>multiple<sp/>source<sp/>words,<sp/>so<sp/>we<sp/>are<sp/>done<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Best<sp/>state<sp/>=<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>[j]);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Correct<sp/>text<sp/>=<sp/>[[<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>&quot;</highlight><highlight class="normal">,<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>[j].string());</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;]]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;FAIL!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Consume<sp/>all<sp/>source<sp/>blobs<sp/>that<sp/>strongly<sp/>overlap<sp/>the<sp/>given<sp/>box,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>putting<sp/>them<sp/>into<sp/>a<sp/>new<sp/>word,<sp/>with<sp/>the<sp/>correct_text<sp/>label.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Fights<sp/>over<sp/>which<sp/>box<sp/>owns<sp/>which<sp/>blobs<sp/>are<sp/>settled<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>applying<sp/>the<sp/>blobs<sp/>to<sp/>box<sp/>or<sp/>next_box<sp/>with<sp/>the<sp/>least<sp/>non-overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>the<sp/>box<sp/>was<sp/>in<sp/>error,<sp/>which<sp/>can<sp/>only<sp/>be<sp/>caused<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//<sp/>failing<sp/>to<sp/>find<sp/>an<sp/>overlapping<sp/>blob<sp/>for<sp/>a<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1ac9908a7f313815407d3c86a9b907d51e" kindref="member">Tesseract::ResegmentWordBox</ref>(BLOCK_LIST<sp/>*block_list,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>next_box,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>correct_text)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nAPPLY_BOX:<sp/>in<sp/>ResegmentWordBox()<sp/>for<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>correct_text);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>new_word<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>BLOCK_IT<sp/>b_it(block_list);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b_it.mark_cycle_pt();<sp/>!b_it.cycled_list();<sp/>b_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block<sp/>=<sp/>b_it.data();</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!box.<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(block-&gt;<ref refid="class_p_d_b_l_k_1a91950a96127b4a0bb9b237e1f5f889a4" kindref="member" tooltip="get box ">bounding_box</ref>()))</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>ROW_IT<sp/>r_it(block-&gt;<ref refid="class_b_l_o_c_k_1ae9826e422b0bf17a7592dee8db3fe058" kindref="member" tooltip="get rows ">row_list</ref>());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(r_it.mark_cycle_pt();<sp/>!r_it.cycled_list();<sp/>r_it.forward<sp/>())<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_o_w" kindref="compound">ROW</ref>*<sp/>row<sp/>=<sp/>r_it.data();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!box.<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(row-&gt;<ref refid="class_r_o_w_1a7bb838e55056e39e15d7e2cea8ebebb0" kindref="member">bounding_box</ref>()))</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WERD_IT<sp/>w_it(row-&gt;<ref refid="class_r_o_w_1ac9d07f978420b3564bf5508ad294fb70" kindref="member">word_list</ref>());</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(w_it.mark_cycle_pt();<sp/>!w_it.cycled_list();<sp/>w_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>word<sp/>=<sp/>w_it.data();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Checking<sp/>word:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word-&gt;<ref refid="class_w_e_r_d_1ae539e0a93fc08f95a6822bf23666c840" kindref="member">text</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>word-&gt;<ref refid="class_w_e_r_d_1ae539e0a93fc08f95a6822bf23666c840" kindref="member">text</ref>()[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>words<sp/>that<sp/>are<sp/>already<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!box.<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(word-&gt;<ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>()))</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>blob_it(word-&gt;<ref refid="class_w_e_r_d_1a174baefaa99afbfdbf444e4199f3b529" kindref="member">cblob_list</ref>());</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box<sp/>=<sp/>blob-&gt;<ref refid="class_c___b_l_o_b_1a77e52e29e2c622a3a63bb7edb110f6ab" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!blob_box.<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(box))</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>current_box_miss_metric<sp/>=<sp/>BoxMissMetric(blob_box,<sp/>box);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>next_box_miss_metric<sp/>=<sp/>BoxMissMetric(blob_box,<sp/>next_box);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Checking<sp/>blob:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Current<sp/>miss<sp/>metric<sp/>=<sp/>%g,<sp/>next<sp/>=<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_box_miss_metric,<sp/>next_box_miss_metric);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_box_miss_metric<sp/>&gt;<sp/>next_box_miss_metric)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Blob<sp/>is<sp/>a<sp/>better<sp/>match<sp/>for<sp/>next<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Blob<sp/>match:<sp/>blob:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Matches<sp/>box:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;With<sp/>next<sp/>box:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_word<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>new<sp/>word<sp/>with<sp/>a<sp/>single<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_word<sp/>=<sp/>word-&gt;<ref refid="class_w_e_r_d_1a338086c2fee2164c3bf82add310631b4" kindref="member">shallow_copy</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_word-&gt;<ref refid="class_w_e_r_d_1a5decd0b33533bf908c26ad4b10336fb0" kindref="member">set_text</ref>(correct_text);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_it.add_to_end(new_word);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>new_blob_it(new_word-&gt;<ref refid="class_w_e_r_d_1a174baefaa99afbfdbf444e4199f3b529" kindref="member">cblob_list</ref>());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_blob_it.add_to_end(blob_it.extract());</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_word<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>applybox_debug<sp/>&gt;<sp/>0)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;FAIL!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_word<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Resegments<sp/>the<sp/>words<sp/>by<sp/>running<sp/>the<sp/>classifier<sp/>in<sp/>an<sp/>attempt<sp/>to<sp/>find<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>correct<sp/>segmentation<sp/>that<sp/>produces<sp/>the<sp/>required<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1a6193fb469b62b12c1b999194fc5cd569" kindref="member">Tesseract::ReSegmentByClassification</ref>(<ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/>page_res)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><ref refid="class_p_a_g_e___r_e_s___i_t" kindref="compound">PAGE_RES_IT</ref><sp/>pr_it(page_res);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref>*<sp/>word_res;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>(word_res<sp/>=<sp/>pr_it.<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>pr_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>word<sp/>=<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word-&gt;<ref refid="class_w_e_r_d_1ae539e0a93fc08f95a6822bf23666c840" kindref="member">text</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>word-&gt;<ref refid="class_w_e_r_d_1ae539e0a93fc08f95a6822bf23666c840" kindref="member">text</ref>()[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>words<sp/>that<sp/>have<sp/>no<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>the<sp/>correct<sp/>text<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>UNICHAR_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;UNICHAR_ID&gt;</ref><sp/>target_text;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_tesseract_1a29d34def0fb50890d45ed6d2b914bdd8" kindref="member">ConvertStringToUnichars</ref>(word-&gt;<ref refid="class_w_e_r_d_1ae539e0a93fc08f95a6822bf23666c840" kindref="member">text</ref>(),<sp/>&amp;target_text))<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;APPLY_BOX:<sp/>FAILURE:<sp/>can&apos;t<sp/>find<sp/>class_id<sp/>for<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d_1ae539e0a93fc08f95a6822bf23666c840" kindref="member">text</ref>());</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_it.DeleteCurrentWord();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_tesseract_1aa41485885750454f70de1bc1672ce04f" kindref="member">FindSegmentation</ref>(target_text,<sp/>word_res))<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;APPLY_BOX:<sp/>FAILURE:<sp/>can&apos;t<sp/>find<sp/>segmentation<sp/>for<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d_1ae539e0a93fc08f95a6822bf23666c840" kindref="member">text</ref>());</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_it.DeleteCurrentWord();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>the<sp/>space-delimited<sp/>string<sp/>of<sp/>utf8<sp/>text<sp/>to<sp/>a<sp/>vector<sp/>of<sp/>UNICHAR_ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>an<sp/>invalid<sp/>UNICHAR_ID<sp/>is<sp/>encountered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1a29d34def0fb50890d45ed6d2b914bdd8" kindref="member">Tesseract::ConvertStringToUnichars</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>utf8,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;UNICHAR_ID&gt;</ref>*<sp/>class_ids)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>0;<sp/>*utf8<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>utf8<sp/>+=<sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>next_space<sp/>=<sp/>strchr(utf8,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_space<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_space<sp/>=<sp/>utf8<sp/>+<sp/>strlen(utf8);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>=<sp/>next_space<sp/>-<sp/>utf8;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>class_id<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(utf8,<sp/>step);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_id<sp/>==<sp/>INVALID_UNICHAR_ID)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(utf8[step]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++step;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>class_ids-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(class_id);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Resegments<sp/>the<sp/>word<sp/>to<sp/>achieve<sp/>the<sp/>target_text<sp/>from<sp/>the<sp/>classifier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>if<sp/>the<sp/>re-segmentation<sp/>fails.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Uses<sp/>brute-force<sp/>combination<sp/>of<sp/>up<sp/>to<sp/>kMaxGroupSize<sp/>adjacent<sp/>blobs,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">//<sp/>applies<sp/>a<sp/>full<sp/>search<sp/>on<sp/>the<sp/>classifier<sp/>results<sp/>to<sp/>find<sp/>the<sp/>best<sp/>classified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>segmentation.<sp/>As<sp/>a<sp/>compromise<sp/>to<sp/>obtain<sp/>better<sp/>recall,<sp/>1-1<sp/>ambiguity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>substitutions<sp/>ARE<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1aa41485885750454f70de1bc1672ce04f" kindref="member">Tesseract::FindSegmentation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;UNICHAR_ID&gt;</ref>&amp;<sp/>target_text,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref>*<sp/>word_res)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_wordrec_1a7518e041a8ddab1d1a2b7e609553b8e3" kindref="member">blob_match_table</ref>.<ref refid="classtesseract_1_1_blob_match_table_1adccd291f7c70303e621e950c289be897" kindref="member">init_match_table</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Classify<sp/>all<sp/>required<sp/>combinations<sp/>of<sp/>blobs<sp/>and<sp/>save<sp/>results<sp/>in<sp/>choices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_length<sp/>=<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3a92c8c9750d78631d75998f008f366a" kindref="member">box_word</ref>-&gt;<ref refid="classtesseract_1_1_box_word_1afe001fe8fb7f2d3725b2ac2f542e9878" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;BLOB_CHOICE_LIST*&gt;</ref>*<sp/>choices<sp/>=</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;BLOB_CHOICE_LIST*&gt;</ref>[word_length];</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word_length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/><ref refid="applybox_8cpp_1a1ecfbb8dde381ffc9c672e569cb1a1d2" kindref="member">kMaxGroupSize</ref><sp/>&amp;&amp;<sp/>i<sp/>+<sp/>j<sp/>&lt;=<sp/>word_length;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BLOB_CHOICE_LIST*<sp/>match_result<sp/>=<sp/><ref refid="classtesseract_1_1_wordrec_1ad59946532b08a90f940ecfa994b06653" kindref="member">classify_piece</ref>(</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ad1d449f93bb0150bc7ef0d9b59ed27ba" kindref="member">chopped_word</ref>-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>,<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a202d9d5d2a462d84012011c689e16605" kindref="member">denorm</ref>,<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1adefe2273d7f4b36fcbe7ae420bfd077a" kindref="member">seam_array</ref>,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>i<sp/>+<sp/>j<sp/>-<sp/>1,<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a267e5d5e9fe67117e47223c5d336b8ba" kindref="member">blamer_bundle</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d+%d:&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ratngs_8cpp_1a2de5b7d5a020bb9823091dbece4ea36e" kindref="member">print_ratings_list</ref>(</highlight><highlight class="stringliteral">&quot;Segment:&quot;</highlight><highlight class="normal">,<sp/>match_result,<sp/>unicharset);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>choices[i].<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(match_result);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>the<sp/>segmentation<sp/>graph<sp/>for<sp/>the<sp/>target<sp/>text.<sp/>Must<sp/>be<sp/>an<sp/>exact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>match.<sp/>Using<sp/>wildcards<sp/>makes<sp/>it<sp/>difficult<sp/>to<sp/>find<sp/>the<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>segmentation<sp/>even<sp/>when<sp/>it<sp/>is<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>search_segmentation;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>best_rating<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tesseract_1a6062d66848007e0ac7674b12dfbc7d9f" kindref="member">SearchForText</ref>(choices,<sp/>0,<sp/>word_length,<sp/>target_text,<sp/>0,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;search_segmentation,<sp/>&amp;best_rating,<sp/>&amp;word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_wordrec_1a7518e041a8ddab1d1a2b7e609553b8e3" kindref="member">blob_match_table</ref>.<ref refid="classtesseract_1_1_blob_match_table_1afdaff3d125ee57f9ee4d6a777e13f0ce" kindref="member">end_match_table</ref>();</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word_length;<sp/>++i)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>choices[i].delete_data_pointers();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>choices;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>original<sp/>segmentation<sp/>and<sp/>if<sp/>it<sp/>is<sp/>the<sp/>same<sp/>length<sp/>as<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>truth,<sp/>assume<sp/>it<sp/>will<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/><ref refid="tessarray_8h_1a89ee8010120771c8612dc7058b327f84" kindref="member">array_count</ref>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1adefe2273d7f4b36fcbe7ae420bfd077a" kindref="member">seam_array</ref>);<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structseam__record" kindref="compound">SEAM</ref>*<sp/>seam<sp/>=</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structseam__record" kindref="compound">SEAM</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="tessarray_8h_1a290cd2ea119e279ad48b57fbe5ca1aad" kindref="member">array_value</ref>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1adefe2273d7f4b36fcbe7ae420bfd077a" kindref="member">seam_array</ref>,<sp/>s));</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seam-&gt;<ref refid="structseam__record_1a4161a1874921a7854bdd3d7a9f930729" kindref="member">split1</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(blob_count);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++blob_count;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(blob_count);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>!=<sp/>target_text.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ab3c9354a32a99c3283f4ac411b5f9b93" kindref="member">best_state</ref>.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>good.<sp/>Original<sp/>segmentation<sp/>bad<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>target_text.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(target_text[i])));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recursive<sp/>helper<sp/>to<sp/>find<sp/>a<sp/>match<sp/>to<sp/>the<sp/>target_text<sp/>(from<sp/>text_index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">//<sp/>position)<sp/>in<sp/>the<sp/>choices<sp/>(from<sp/>choices_pos<sp/>position).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Choices<sp/>is<sp/>an<sp/>array<sp/>of<sp/>GenericVectors,<sp/>of<sp/>length<sp/>choices_length,<sp/>with<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">//<sp/>element<sp/>representing<sp/>a<sp/>starting<sp/>position<sp/>in<sp/>the<sp/>word,<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GenericVector<sp/>holding<sp/>classification<sp/>results<sp/>for<sp/>a<sp/>sequence<sp/>of<sp/>consecutive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blobs,<sp/>with<sp/>index<sp/>0<sp/>being<sp/>a<sp/>single<sp/>blob,<sp/>index<sp/>1<sp/>being<sp/>2<sp/>blobs<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1a6062d66848007e0ac7674b12dfbc7d9f" kindref="member">Tesseract::SearchForText</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;BLOB_CHOICE_LIST*&gt;</ref>*<sp/>choices,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choices_pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>choices_length,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;UNICHAR_ID&gt;</ref>&amp;<sp/>target_text,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>text_index,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rating,<sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>*<sp/>segmentation,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>best_rating,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>*<sp/>best_segmentation)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa63fceec9a01c185fac83c0e7d04fe08" kindref="member">UnicharAmbigsVector</ref>&amp;<sp/>table<sp/>=<sp/><ref refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" kindref="member">getDict</ref>().<ref refid="classtesseract_1_1_dict_1a4a886a86bc5d0d4405dd9da165b3e1fd" kindref="member">getUnicharAmbigs</ref>().<ref refid="classtesseract_1_1_unichar_ambigs_1a9726c0e6bec2390404360c51c9bbfbbb" kindref="member">dang_ambigs</ref>();</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>1;<sp/>length<sp/>&lt;=<sp/>choices[choices_pos].<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++length)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rating<sp/>of<sp/>matching<sp/>choice<sp/>or<sp/>worst<sp/>choice<sp/>if<sp/>no<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>choice_rating<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>corresponding<sp/>best<sp/>BLOB_CHOICE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOB_CHOICE_IT<sp/>choice_it(choices[choices_pos][length<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(choice_it.mark_cycle_pt();<sp/>!choice_it.cycled_list();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref>*<sp/>choice<sp/>=<sp/>choice_it.data();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>choice_rating<sp/>=<sp/>choice-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a7fbd2d505bf5b55beee424096fb1e9bc" kindref="member">rating</ref>();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>class_id<sp/>=<sp/>choice-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_id<sp/>==<sp/>target_text[text_index])<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>ambigs<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(class_id<sp/>&lt;<sp/>table.size()<sp/>&amp;&amp;<sp/>table[class_id]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AmbigSpec_IT<sp/>spec_it(table[class_id]);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(spec_it.mark_cycle_pt();<sp/>!spec_it.cycled_list();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AmbigSpec<sp/>*ambig_spec<sp/>=<sp/>spec_it.data();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>only<sp/>do<sp/>1-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ambig_spec-&gt;wrong_ngram[1]<sp/>==<sp/>INVALID_UNICHAR_ID<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ambig_spec-&gt;correct_ngram_id<sp/>==<sp/>target_text[text_index])</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!spec_it.cycled_list())</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>an<sp/>ambig.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(choice_it.cycled_list())</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>segmentation-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(length);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(choices_pos<sp/>+<sp/>length<sp/>==<sp/>choices_length<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_index<sp/>+<sp/>1<sp/>==<sp/>target_text.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>complete<sp/>match.<sp/>If<sp/>the<sp/>rating<sp/>is<sp/>good<sp/>record<sp/>a<sp/>new<sp/>best.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Complete<sp/>match,<sp/>rating<sp/>=<sp/>%g,<sp/>best=%g,<sp/>seglength=%d,<sp/>best=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rating<sp/>+<sp/>choice_rating,<sp/>*best_rating,<sp/>segmentation-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>(),</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_segmentation-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_segmentation-&gt;<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>()<sp/>||<sp/>rating<sp/>+<sp/>choice_rating<sp/>&lt;<sp/>*best_rating)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*best_segmentation<sp/>=<sp/>*segmentation;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*best_rating<sp/>=<sp/>rating<sp/>+<sp/>choice_rating;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(choices_pos<sp/>+<sp/>length<sp/>&lt;<sp/>choices_length<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_index<sp/>+<sp/>1<sp/>&lt;<sp/>target_text.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Match<sp/>found<sp/>for<sp/>%d=%s:%s,<sp/>at<sp/>%d+%d,<sp/>recursing...\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_text[text_index],</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(target_text[text_index]),</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choice_it.data()-&gt;unichar_id()<sp/>==<sp/>target_text[text_index]</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Match&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Ambig&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>choices_pos,<sp/>length);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tesseract_1a6062d66848007e0ac7674b12dfbc7d9f" kindref="member">SearchForText</ref>(choices,<sp/>choices_pos<sp/>+<sp/>length,<sp/>choices_length,<sp/>target_text,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_index<sp/>+<sp/>1,<sp/>rating<sp/>+<sp/>choice_rating,<sp/>segmentation,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_rating,<sp/>best_segmentation);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;End<sp/>recursion<sp/>for<sp/>%d=%s\n&quot;</highlight><highlight class="normal">,<sp/>target_text[text_index],</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(target_text[text_index]));</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>segmentation-&gt;<ref refid="class_generic_vector_1af1793745c45178626c9afe48c7a1e140" kindref="member">truncate</ref>(segmentation-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Counts<sp/>up<sp/>the<sp/>labelled<sp/>words<sp/>and<sp/>the<sp/>blobs<sp/>within.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>all<sp/>unused<sp/>or<sp/>emptied<sp/>words,<sp/>counting<sp/>the<sp/>unused<sp/>ones.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Resets<sp/>W_BOL<sp/>and<sp/>W_EOL<sp/>flags<sp/>correctly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Builds<sp/>the<sp/>rebuild_word<sp/>and<sp/>rebuilds<sp/>the<sp/>box_word<sp/>and<sp/>the<sp/>best_choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1a420654e409a9d28fd133515b5f3ed2c3" kindref="member">Tesseract::TidyUp</ref>(<ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/>page_res)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok_blob_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bad_blob_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok_word_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unlabelled_words<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><ref refid="class_p_a_g_e___r_e_s___i_t" kindref="compound">PAGE_RES_IT</ref><sp/>pr_it(page_res);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref>*<sp/>word_res;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>(word_res<sp/>=<sp/>pr_it.<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>pr_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok_in_word<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>char_choices;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>[i].<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++ok_in_word;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>only<sp/>need<sp/>a<sp/>fake<sp/>word_res-&gt;best_choice,<sp/>the<sp/>actual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unichar_ids<sp/>do<sp/>not<sp/>matter.<sp/>Which<sp/>is<sp/>fortunate,<sp/>since<sp/>TidyUp()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>called<sp/>while<sp/>training<sp/>Tesseract,<sp/>at<sp/>the<sp/>stage<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unicharset<sp/>is<sp/>not<sp/>meaningful<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>char_choices<sp/>+=<sp/><ref refid="classtesseract_1_1_wordrec_1ae15505acaad8195b1b96de4a393bfc3e" kindref="member">fake_classify_blob</ref>(INVALID_UNICHAR_ID,<sp/>1.0,<sp/>-1.0);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok_in_word<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ok_blob_count<sp/>+=<sp/>ok_in_word;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bad_blob_count<sp/>+=<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>-<sp/>ok_in_word;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MakeWordChoice(char_choices,<sp/>unicharset,<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3d42ac7ec121263e757c9b7160dfd50d" kindref="member">best_choice</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++unlabelled_words;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;APPLY_BOXES:<sp/>Unlabelled<sp/>word<sp/>at<sp/>:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>-&gt;<ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pr_it.DeleteCurrentWord();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>char_choices.<ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>pr_it.restart_page();</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>(word_res<sp/>=<sp/>pr_it.<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>())<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>pr_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Denormalize<sp/>back<sp/>to<sp/>a<sp/>BoxWord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae57ef3e90db1cb0bcdf96f4b32dee362" kindref="member">RebuildBestState</ref>();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a6efe07c079a04a91985f99c71258a193" kindref="member">SetupBoxWord</ref>();</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>-&gt;<ref refid="class_w_e_r_d_1aa42c9f53794ab51c95503cd277e89c60" kindref="member">set_flag</ref>(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0beaff21d7c8c8992120fff35942408a00d2" kindref="member">W_BOL</ref>,<sp/>pr_it.prev_row()<sp/>!=<sp/>pr_it.row());</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>-&gt;<ref refid="class_w_e_r_d_1aa42c9f53794ab51c95503cd277e89c60" kindref="member">set_flag</ref>(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea62efb985a62d85e014ee5ab039dd50ce" kindref="member">W_EOL</ref>,<sp/>pr_it.next_row()<sp/>!=<sp/>pr_it.row());</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(applybox_debug<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Found<sp/>%d<sp/>good<sp/>blobs.\n&quot;</highlight><highlight class="normal">,<sp/>ok_blob_count);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bad_blob_count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Leaving<sp/>%d<sp/>unlabelled<sp/>blobs<sp/>in<sp/>%d<sp/>words.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad_blob_count,<sp/>ok_word_count);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unlabelled_words<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>%d<sp/>remaining<sp/>unlabelled<sp/>words<sp/>deleted.\n&quot;</highlight><highlight class="normal">,<sp/>unlabelled_words);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Logs<sp/>a<sp/>bad<sp/>box<sp/>by<sp/>line<sp/>in<sp/>the<sp/>box<sp/>file<sp/>and<sp/>box<sp/>coords.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1ac465a51dfce59ff3bc7a20bdfa8850a4" kindref="member">Tesseract::ReportFailedBox</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boxfile_lineno,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*box_ch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*err_msg)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;APPLY_BOXES:<sp/>boxfile<sp/>line<sp/>%d/%s<sp/>((%d,%d),(%d,%d)):<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxfile_lineno,<sp/>box_ch,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>err_msg);</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>fake<sp/>best_choice<sp/>entry<sp/>in<sp/>each<sp/>WERD_RES<sp/>with<sp/>the<sp/>correct<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1aaac7729b5dc17651a6b3ee44689302d5" kindref="member">Tesseract::CorrectClassifyWords</ref>(<ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/>page_res)<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><ref refid="class_p_a_g_e___r_e_s___i_t" kindref="compound">PAGE_RES_IT</ref><sp/>pr_it(page_res);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref><sp/>*word_res<sp/>=<sp/>pr_it.<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>();<sp/>word_res<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res<sp/>=<sp/>pr_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>*<sp/>choice<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a053a2aeeddc26a93a41a04fa08dd688a" kindref="member">uch_set</ref>,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>part<sp/>before<sp/>the<sp/>first<sp/>space<sp/>is<sp/>the<sp/>real<sp/>ground<sp/>truth,<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rest<sp/>is<sp/>the<sp/>bounding<sp/>box<sp/>location<sp/>and<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;STRING&gt;</ref><sp/>tokens;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1ae524416d2398009c92a5678105f3cbfb" kindref="member">correct_text</ref>[i].split(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>&amp;tokens);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>char_id<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(tokens[0].</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">());</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a222ced86be88a66a119b6c5d10af23fb" kindref="member">append_unichar_id_space_allocated</ref>(char_id,<sp/>1,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3d42ac7ec121263e757c9b7160dfd50d" kindref="member">best_choice</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3d42ac7ec121263e757c9b7160dfd50d" kindref="member">best_choice</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>word_res-&gt;<ref refid="class_w_e_r_d___r_e_s_1a3d42ac7ec121263e757c9b7160dfd50d" kindref="member">best_choice</ref><sp/>=<sp/>choice;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Calls<sp/>LearnWord<sp/>to<sp/>extract<sp/>features<sp/>for<sp/>labelled<sp/>blobs<sp/>within<sp/>each<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Features<sp/>are<sp/>written<sp/>to<sp/>the<sp/>given<sp/>filename.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tesseract_1a8a81b9367a8ec670835f766f64f773db" kindref="member">Tesseract::ApplyBoxTraining</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/><ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>,<sp/><ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/>page_res)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><ref refid="class_p_a_g_e___r_e_s___i_t" kindref="compound">PAGE_RES_IT</ref><sp/>pr_it(page_res);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref><sp/>*word_res<sp/>=<sp/>pr_it.<ref refid="class_w_e_r_d___r_e_s_1afc15fa7c1b5ad55d6772dea0d6865df1" kindref="member">word</ref>();<sp/>word_res<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_res<sp/>=<sp/>pr_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_classify_1abbbd86871758c036d7ba2af682abb45f" kindref="member">LearnWord</ref>(filename.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>word_res);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>++word_count;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Generated<sp/>training<sp/>data<sp/>for<sp/>%d<sp/>words\n&quot;</highlight><highlight class="normal">,<sp/>word_count);</highlight></codeline>
<codeline lineno="795"><highlight class="normal">}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccmain/applybox.cpp"/>
  </compounddef>
</doxygen>
