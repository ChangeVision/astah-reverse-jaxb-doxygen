<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="ltrresultiterator_8h" kind="file">
    <compoundname>ltrresultiterator.h</compoundname>
    <includes refid="platform_8h" local="yes">platform.h</includes>
    <includes refid="pageiterator_8h" local="yes">pageiterator.h</includes>
    <includes refid="unicharset_8h" local="yes">unicharset.h</includes>
    <includedby refid="ltrresultiterator_8cpp" local="yes">ccmain/ltrresultiterator.cpp</includedby>
    <includedby refid="resultiterator_8h" local="yes">ccmain/resultiterator.h</includedby>
    <incdepgraph>
      <node id="2187">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="2188" relation="include">
        </childnode>
      </node>
      <node id="2189">
        <label>pageiterator.h</label>
        <link refid="pageiterator_8h"/>
        <childnode refid="2190" relation="include">
        </childnode>
        <childnode refid="2187" relation="include">
        </childnode>
      </node>
      <node id="2199">
        <label>stddef.h</label>
      </node>
      <node id="2202">
        <label>memory.h</label>
      </node>
      <node id="2192">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="2193" relation="include">
        </childnode>
      </node>
      <node id="2188">
        <label>limits.h</label>
      </node>
      <node id="2196">
        <label>string.h</label>
      </node>
      <node id="2203">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="2201" relation="include">
        </childnode>
      </node>
      <node id="2201">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="2202" relation="include">
        </childnode>
        <childnode refid="2196" relation="include">
        </childnode>
      </node>
      <node id="2200">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="2193" relation="include">
        </childnode>
      </node>
      <node id="2186">
        <label>ccmain/ltrresultiterator.h</label>
        <link refid="ltrresultiterator.h"/>
        <childnode refid="2187" relation="include">
        </childnode>
        <childnode refid="2189" relation="include">
        </childnode>
        <childnode refid="2191" relation="include">
        </childnode>
      </node>
      <node id="2190">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="2198">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="2199" relation="include">
        </childnode>
        <childnode refid="2193" relation="include">
        </childnode>
      </node>
      <node id="2191">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="2192" relation="include">
        </childnode>
        <childnode refid="2194" relation="include">
        </childnode>
        <childnode refid="2197" relation="include">
        </childnode>
        <childnode refid="2200" relation="include">
        </childnode>
        <childnode refid="2201" relation="include">
        </childnode>
        <childnode refid="2203" relation="include">
        </childnode>
      </node>
      <node id="2193">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="2187" relation="include">
        </childnode>
      </node>
      <node id="2195">
        <label>stdio.h</label>
      </node>
      <node id="2197">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="2195" relation="include">
        </childnode>
        <childnode refid="2196" relation="include">
        </childnode>
        <childnode refid="2187" relation="include">
        </childnode>
        <childnode refid="2198" relation="include">
        </childnode>
      </node>
      <node id="2194">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="2195" relation="include">
        </childnode>
        <childnode refid="2196" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2215">
        <label>ccmain/paragraphs.cpp</label>
        <link refid="paragraphs_8cpp"/>
      </node>
      <node id="2214">
        <label>ccmain/mutableiterator.h</label>
        <link refid="mutableiterator_8h"/>
        <childnode refid="2208" relation="include">
        </childnode>
        <childnode refid="2215" relation="include">
        </childnode>
      </node>
      <node id="2210">
        <label>api/capi.cpp</label>
        <link refid="capi_8cpp"/>
      </node>
      <node id="2205">
        <label>ccmain/ltrresultiterator.cpp</label>
        <link refid="ltrresultiterator_8cpp"/>
      </node>
      <node id="2206">
        <label>ccmain/resultiterator.h</label>
        <link refid="resultiterator_8h"/>
        <childnode refid="2207" relation="include">
        </childnode>
        <childnode refid="2208" relation="include">
        </childnode>
        <childnode refid="2209" relation="include">
        </childnode>
        <childnode refid="2214" relation="include">
        </childnode>
        <childnode refid="2216" relation="include">
        </childnode>
      </node>
      <node id="2207">
        <label>api/baseapi.h</label>
        <link refid="baseapi_8h"/>
        <childnode refid="2208" relation="include">
        </childnode>
        <childnode refid="2209" relation="include">
        </childnode>
        <childnode refid="2211" relation="include">
        </childnode>
        <childnode refid="2212" relation="include">
        </childnode>
        <childnode refid="2213" relation="include">
        </childnode>
      </node>
      <node id="2208">
        <label>api/baseapi.cpp</label>
        <link refid="baseapi_8cpp"/>
      </node>
      <node id="2211">
        <label>api/tesseractmain.cpp</label>
        <link refid="tesseractmain_8cpp"/>
      </node>
      <node id="2212">
        <label>training/ambiguous_words.cpp</label>
        <link refid="ambiguous__words_8cpp"/>
      </node>
      <node id="2204">
        <label>ccmain/ltrresultiterator.h</label>
        <link refid="ltrresultiterator.h"/>
        <childnode refid="2205" relation="include">
        </childnode>
        <childnode refid="2206" relation="include">
        </childnode>
      </node>
      <node id="2209">
        <label>api/capi.h</label>
        <link refid="capi_8h"/>
        <childnode refid="2210" relation="include">
        </childnode>
      </node>
      <node id="2213">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="2216">
        <label>ccmain/resultiterator.cpp</label>
        <link refid="resultiterator_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesseract_1_1_l_t_r_result_iterator" prot="public">tesseract::LTRResultIterator</innerclass>
    <innerclass refid="classtesseract_1_1_choice_iterator" prot="public">tesseract::ChoiceIterator</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltrresultiterator.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Iterator<sp/>for<sp/>tesseract<sp/>results<sp/>in<sp/>strict<sp/>left-to-right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order<sp/>that<sp/>avoids<sp/>using<sp/>tesseract<sp/>internal<sp/>data<sp/>structures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Feb<sp/>26<sp/>11:01:06<sp/>PST<sp/>2010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2010,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_CCMAIN_LTR_RESULT_ITERATOR_H__</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_CCMAIN_LTR_RESULT_ITERATOR_H__</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="platform_8h" kindref="compound">platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pageiterator_8h" kindref="compound">pageiterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicharset_8h" kindref="compound">unicharset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BLOB_CHOICE_IT;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tesseract;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>to<sp/>iterate<sp/>over<sp/>tesseract<sp/>results,<sp/>providing<sp/>access<sp/>to<sp/>all<sp/>levels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>page<sp/>hierarchy,<sp/>without<sp/>including<sp/>any<sp/>tesseract<sp/>headers<sp/>or<sp/>having</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>handle<sp/>any<sp/>tesseract<sp/>structures.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WARNING!<sp/>This<sp/>class<sp/>points<sp/>to<sp/>data<sp/>held<sp/>within<sp/>the<sp/>TessBaseAPI<sp/>class,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>therefore<sp/>can<sp/>only<sp/>be<sp/>used<sp/>while<sp/>the<sp/>TessBaseAPI<sp/>class<sp/>still<sp/>exists<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>has<sp/>not<sp/>been<sp/>subjected<sp/>to<sp/>a<sp/>call<sp/>of<sp/>Init,<sp/>SetImage,<sp/>Recognize,<sp/>Clear,<sp/>End</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DetectOS,<sp/>or<sp/>anything<sp/>else<sp/>that<sp/>changes<sp/>the<sp/>internal<sp/>PAGE_RES.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>apitypes.h<sp/>for<sp/>the<sp/>definition<sp/>of<sp/>PageIteratorLevel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>also<sp/>base<sp/>class<sp/>PageIterator,<sp/>which<sp/>contains<sp/>the<sp/>bulk<sp/>of<sp/>the<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LTRResultIterator<sp/>adds<sp/>text-specific<sp/>methods<sp/>for<sp/>access<sp/>to<sp/>OCR<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classtesseract_1_1_l_t_r_result_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="platform_8h_1a86e51270628c53ce7e2c23b1c2b4490e" kindref="member">TESS_API</ref><sp/><ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_page_iterator" kindref="compound">PageIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="47" refid="classtesseract_1_1_l_t_r_result_iterator_1a70bfabaaec14a25c7abef6984759c8db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_choice_iterator" kindref="compound">ChoiceIterator</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>page_res<sp/>and<sp/>tesseract<sp/>come<sp/>directly<sp/>from<sp/>the<sp/>BaseAPI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>rectangle<sp/>parameters<sp/>are<sp/>copied<sp/>indirectly<sp/>from<sp/>the<sp/>Thresholder,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>via<sp/>the<sp/>BaseAPI.<sp/>They<sp/>represent<sp/>the<sp/>coordinates<sp/>of<sp/>some<sp/>rectangle<sp/>in<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>original<sp/>image<sp/>(in<sp/>top-left-origin<sp/>coordinates)<sp/>and<sp/>therefore<sp/>the<sp/>top-left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>be<sp/>added<sp/>to<sp/>any<sp/>output<sp/>boxes<sp/>in<sp/>order<sp/>to<sp/>specify<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>original<sp/>image.<sp/>See<sp/>TessBaseAPI::SetRectangle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>scale<sp/>and<sp/>scaled_yres<sp/>are<sp/>in<sp/>case<sp/>the<sp/>Thresholder<sp/>scaled<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>rectangle<sp/>prior<sp/>to<sp/>thresholding.<sp/>Any<sp/>coordinates<sp/>in<sp/>tesseract&apos;s<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>divided<sp/>by<sp/>scale<sp/>before<sp/>adding<sp/>(rect_left,<sp/>rect_top).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>scaled_yres<sp/>indicates<sp/>the<sp/>effective<sp/>resolution<sp/>of<sp/>the<sp/>binary<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>tesseract<sp/>has<sp/>been<sp/>given<sp/>by<sp/>the<sp/>Thresholder.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>the<sp/>constructor,<sp/>Begin<sp/>has<sp/>already<sp/>been<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref>(<ref refid="class_p_a_g_e___r_e_s" kindref="compound">PAGE_RES</ref>*<sp/>page_res,<sp/><ref refid="classtesseract_1_1_tesseract" kindref="compound">Tesseract</ref>*<sp/><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaled_yres,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rect_left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rect_top,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rect_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rect_height);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>LTRResultIterators<sp/>may<sp/>be<sp/>copied!<sp/>This<sp/>makes<sp/>it<sp/>possible<sp/>to<sp/>iterate<sp/>over</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>objects<sp/>at<sp/>a<sp/>lower<sp/>level,<sp/>while<sp/>maintaining<sp/>an<sp/>iterator<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>objects<sp/>at<sp/>a<sp/>higher<sp/>level.<sp/>These<sp/>constructors<sp/>DO<sp/>NOT<sp/>CALL<sp/>Begin,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterations<sp/>will<sp/>continue<sp/>from<sp/>the<sp/>location<sp/>of<sp/>src.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>For<sp/>now<sp/>the<sp/>copy<sp/>constructor<sp/>and<sp/>operator=<sp/>only<sp/>need<sp/>the<sp/>base<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>versions,<sp/>but<sp/>if<sp/>new<sp/>data<sp/>members<sp/>are<sp/>added,<sp/>don&apos;t<sp/>forget<sp/>to<sp/>add<sp/>them!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>=============<sp/>Moving<sp/>around<sp/>within<sp/>the<sp/>page<sp/>============.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>PageIterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>=============<sp/>Accessing<sp/>data<sp/>==============.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>null<sp/>terminated<sp/>UTF-8<sp/>encoded<sp/>text<sp/>string<sp/>for<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>at<sp/>the<sp/>given<sp/>level.<sp/>Use<sp/>delete<sp/>[]<sp/>to<sp/>free<sp/>after<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>GetUTF8Text(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>string<sp/>inserted<sp/>at<sp/>the<sp/>end<sp/>of<sp/>each<sp/>text<sp/>line.<sp/>&quot;\n&quot;<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetLineSeparator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cutil_8h_1a1185f064cc7bdd3f2a433da85a834c37" kindref="member">new_line</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>string<sp/>inserted<sp/>at<sp/>the<sp/>end<sp/>of<sp/>each<sp/>paragraph.<sp/>&quot;\n&quot;<sp/>by<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetParagraphSeparator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_para);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>mean<sp/>confidence<sp/>of<sp/>the<sp/>current<sp/>object<sp/>at<sp/>the<sp/>given<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>should<sp/>be<sp/>interpreted<sp/>as<sp/>a<sp/>percent<sp/>probability.<sp/>(0.0f-100.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Confidence(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>=============<sp/>Functions<sp/>that<sp/>refer<sp/>to<sp/>words<sp/>only<sp/>============.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>font<sp/>attributes<sp/>of<sp/>the<sp/>current<sp/>word.<sp/>If<sp/>iterating<sp/>at<sp/>a<sp/>higher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>level<sp/>object<sp/>than<sp/>words,<sp/>eg<sp/>textlines,<sp/>then<sp/>this<sp/>will<sp/>return<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attributes<sp/>of<sp/>the<sp/>first<sp/>word<sp/>in<sp/>that<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>actual<sp/>return<sp/>value<sp/>is<sp/>a<sp/>string<sp/>representing<sp/>a<sp/>font<sp/>name.<sp/>It<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>an<sp/>internal<sp/>table<sp/>and<sp/>SHOULD<sp/>NOT<sp/>BE<sp/>DELETED.<sp/>Lifespan<sp/>is<sp/>the<sp/>same<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>iterator<sp/>itself,<sp/>ie<sp/>rendered<sp/>invalid<sp/>by<sp/>various<sp/>members<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TessBaseAPI,<sp/>including<sp/>Init,<sp/>SetImage,<sp/>End<sp/>or<sp/>deleting<sp/>the<sp/>TessBaseAPI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pointsize<sp/>is<sp/>returned<sp/>in<sp/>printers<sp/>points<sp/>(1/72<sp/>inch.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>WordFontAttributes(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>is_bold,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>is_italic,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>is_underlined,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>is_monospace,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>is_serif,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>is_smallcaps,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>pointsize,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>font_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>name<sp/>of<sp/>the<sp/>language<sp/>used<sp/>to<sp/>recognize<sp/>this<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>error,<sp/>NULL.<sp/><sp/>Do<sp/>not<sp/>delete<sp/>this<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>WordRecognitionLanguage()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>overall<sp/>directionality<sp/>of<sp/>this<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dba" kindref="member">StrongScriptDirection</ref><sp/>WordDirection()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>current<sp/>word<sp/>was<sp/>found<sp/>in<sp/>a<sp/>dictionary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WordIsFromDictionary()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>current<sp/>word<sp/>is<sp/>numeric.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WordIsNumeric()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>word<sp/>contains<sp/>blamer<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasBlamerInfo()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>pointer<sp/>to<sp/>ParamsTrainingBundle<sp/>stored<sp/>in<sp/>the<sp/>BlamerBundle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>current<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*GetParamsTrainingBundle()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>string<sp/>with<sp/>blamer<sp/>information<sp/>for<sp/>this<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>that<sp/>the<sp/>word&apos;s<sp/>blamer_bundle<sp/>is<sp/>not<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*GetBlamerDebug()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>string<sp/>with<sp/>misadaption<sp/>information<sp/>for<sp/>this<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>that<sp/>the<sp/>word&apos;s<sp/>blamer_bundle<sp/>is<sp/>not<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*GetBlamerMisadaptionDebug()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>null<sp/>terminated<sp/>UTF-8<sp/>encoded<sp/>truth<sp/>string<sp/>for<sp/>the<sp/>current<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>delete<sp/>[]<sp/>to<sp/>free<sp/>after<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>WordTruthUTF8Text()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>pointer<sp/>to<sp/>serialized<sp/>choice<sp/>lattice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fills<sp/>lattice_size<sp/>with<sp/>the<sp/>number<sp/>of<sp/>bytes<sp/>in<sp/>lattice<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*WordLattice(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*lattice_size)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>=============<sp/>Functions<sp/>that<sp/>refer<sp/>to<sp/>symbols<sp/>only<sp/>============.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>current<sp/>symbol<sp/>is<sp/>a<sp/>superscript.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>iterating<sp/>at<sp/>a<sp/>higher<sp/>level<sp/>object<sp/>than<sp/>symbols,<sp/>eg<sp/>words,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>return<sp/>the<sp/>attributes<sp/>of<sp/>the<sp/>first<sp/>symbol<sp/>in<sp/>that<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SymbolIsSuperscript()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>current<sp/>symbol<sp/>is<sp/>a<sp/>subscript.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>iterating<sp/>at<sp/>a<sp/>higher<sp/>level<sp/>object<sp/>than<sp/>symbols,<sp/>eg<sp/>words,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>return<sp/>the<sp/>attributes<sp/>of<sp/>the<sp/>first<sp/>symbol<sp/>in<sp/>that<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SymbolIsSubscript()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>current<sp/>symbol<sp/>is<sp/>a<sp/>dropcap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>iterating<sp/>at<sp/>a<sp/>higher<sp/>level<sp/>object<sp/>than<sp/>symbols,<sp/>eg<sp/>words,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>will<sp/>return<sp/>the<sp/>attributes<sp/>of<sp/>the<sp/>first<sp/>symbol<sp/>in<sp/>that<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SymbolIsDropcap()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165" refid="classtesseract_1_1_l_t_r_result_iterator_1ae1b5b360d5bf55c0cd0eb336de37ea8b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classtesseract_1_1_l_t_r_result_iterator_1ae1b5b360d5bf55c0cd0eb336de37ea8b" kindref="member">line_separator_</ref>;</highlight></codeline>
<codeline lineno="166" refid="classtesseract_1_1_l_t_r_result_iterator_1a1c6e431ccea8aaad26d9e8d6b9ca2f60" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="classtesseract_1_1_l_t_r_result_iterator_1a1c6e431ccea8aaad26d9e8d6b9ca2f60" kindref="member">paragraph_separator_</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class<sp/>to<sp/>iterate<sp/>over<sp/>the<sp/>classifier<sp/>choices<sp/>for<sp/>a<sp/>single<sp/>RIL_SYMBOL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classtesseract_1_1_choice_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_choice_iterator" kindref="compound">ChoiceIterator</ref><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construction<sp/>is<sp/>from<sp/>a<sp/>LTRResultIterator<sp/>that<sp/>points<sp/>to<sp/>the<sp/>symbol<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>interest.<sp/>The<sp/>ChoiceIterator<sp/>allows<sp/>a<sp/>one-shot<sp/>iteration<sp/>over<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>choices<sp/>for<sp/>this<sp/>symbol<sp/>and<sp/>after<sp/>that<sp/>is<sp/>is<sp/>useless.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_choice_iterator_1a47a2f2fdad78720b4c1a0ccf09e802c1" kindref="member">ChoiceIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_l_t_r_result_iterator" kindref="compound">LTRResultIterator</ref>&amp;<sp/>result_it);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_choice_iterator_1a67e30da1e05da880234e347787181898" kindref="member">~ChoiceIterator</ref>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Moves<sp/>to<sp/>the<sp/>next<sp/>choice<sp/>for<sp/>the<sp/>symbol<sp/>and<sp/>returns<sp/>false<sp/>if<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>none<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_choice_iterator_1a1038c9116c30e5dc1c85fa2e93d45259" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>=============<sp/>Accessing<sp/>data<sp/>==============.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>null<sp/>terminated<sp/>UTF-8<sp/>encoded<sp/>text<sp/>string<sp/>for<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>Unlike<sp/>LTRResultIterator::GetUTF8Text,<sp/>the<sp/>return<sp/>points<sp/>to<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>internal<sp/>structure<sp/>and<sp/>should<sp/>NOT<sp/>be<sp/>delete[]ed<sp/>to<sp/>free<sp/>after<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="classtesseract_1_1_choice_iterator_1adb4d081d8aaf0363287f4252a5449bc4" kindref="member">GetUTF8Text</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>confidence<sp/>of<sp/>the<sp/>current<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>should<sp/>be<sp/>interpreted<sp/>as<sp/>a<sp/>percent<sp/>probability.<sp/>(0.0f-100.0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_choice_iterator_1a26c25cb189289e7156904d746a9bb6b3" kindref="member">Confidence</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>to<sp/>the<sp/>WERD_RES<sp/>object<sp/>owned<sp/>by<sp/>the<sp/>API.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref>*<sp/>word_res_;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterator<sp/>over<sp/>the<sp/>blob<sp/>choices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT*<sp/>choice_it_;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_CCMAIN_LTR_RESULT_ITERATOR_H__</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccmain/ltrresultiterator.h"/>
  </compounddef>
</doxygen>
