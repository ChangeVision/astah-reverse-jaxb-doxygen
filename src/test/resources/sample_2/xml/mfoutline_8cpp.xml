<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="mfoutline_8cpp" kind="file">
    <compoundname>mfoutline.cpp</compoundname>
    <includes refid="clusttool_8h" local="yes">clusttool.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="mfoutline_8h" local="yes">mfoutline.h</includes>
    <includes refid="blobs_8h" local="yes">blobs.h</includes>
    <includes refid="const_8h" local="yes">const.h</includes>
    <includes refid="mfx_8h" local="yes">mfx.h</includes>
    <includes refid="params_8h" local="yes">params.h</includes>
    <includes refid="classify_8h" local="yes">classify.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="26275">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="26276" relation="include">
        </childnode>
        <childnode refid="26289" relation="include">
        </childnode>
        <childnode refid="26272" relation="include">
        </childnode>
      </node>
      <node id="26315">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="26332">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26272" relation="include">
        </childnode>
      </node>
      <node id="26302">
        <label>assert.h</label>
      </node>
      <node id="26307">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="26308" relation="include">
        </childnode>
        <childnode refid="26314" relation="include">
        </childnode>
        <childnode refid="26307" relation="include">
        </childnode>
        <childnode refid="26316" relation="include">
        </childnode>
        <childnode refid="26335" relation="include">
        </childnode>
        <childnode refid="26336" relation="include">
        </childnode>
        <childnode refid="26337" relation="include">
        </childnode>
        <childnode refid="26339" relation="include">
        </childnode>
        <childnode refid="26338" relation="include">
        </childnode>
        <childnode refid="26318" relation="include">
        </childnode>
        <childnode refid="26290" relation="include">
        </childnode>
        <childnode refid="26313" relation="include">
        </childnode>
      </node>
      <node id="26271">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="26289">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="26264">
        <label>stdlib.h</label>
      </node>
      <node id="26257">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="26258" relation="include">
        </childnode>
      </node>
      <node id="26312">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
      </node>
      <node id="26259">
        <label>cluster.h</label>
        <link refid="cluster_8h"/>
        <childnode refid="26260" relation="include">
        </childnode>
        <childnode refid="26299" relation="include">
        </childnode>
      </node>
      <node id="26254">
        <label>classify/mfoutline.cpp</label>
        <link refid="mfoutline.cpp"/>
        <childnode refid="26255" relation="include">
        </childnode>
        <childnode refid="26300" relation="include">
        </childnode>
        <childnode refid="26303" relation="include">
        </childnode>
        <childnode refid="26291" relation="include">
        </childnode>
        <childnode refid="26289" relation="include">
        </childnode>
        <childnode refid="26306" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
        <childnode refid="26307" relation="include">
        </childnode>
        <childnode refid="26294" relation="include">
        </childnode>
        <childnode refid="26262" relation="include">
        </childnode>
      </node>
      <node id="26323">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="26269" relation="include">
        </childnode>
      </node>
      <node id="26276">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="26277" relation="include">
        </childnode>
        <childnode refid="26269" relation="include">
        </childnode>
        <childnode refid="26272" relation="include">
        </childnode>
        <childnode refid="26286" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
        <childnode refid="26284" relation="include">
        </childnode>
        <childnode refid="26287" relation="include">
        </childnode>
        <childnode refid="26288" relation="include">
        </childnode>
      </node>
      <node id="26297">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
      </node>
      <node id="26279">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="26264" relation="include">
        </childnode>
        <childnode refid="26263" relation="include">
        </childnode>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26273" relation="include">
        </childnode>
        <childnode refid="26269" relation="include">
        </childnode>
        <childnode refid="26280" relation="include">
        </childnode>
      </node>
      <node id="26292">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26279" relation="include">
        </childnode>
        <childnode refid="26281" relation="include">
        </childnode>
      </node>
      <node id="26305">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26291" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
      </node>
      <node id="26314">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="26261" relation="include">
        </childnode>
        <childnode refid="26315" relation="include">
        </childnode>
      </node>
      <node id="26324">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="26325" relation="include">
        </childnode>
        <childnode refid="26293" relation="include">
        </childnode>
      </node>
      <node id="26333">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="26317" relation="include">
        </childnode>
        <childnode refid="26261" relation="include">
        </childnode>
        <childnode refid="26267" relation="include">
        </childnode>
      </node>
      <node id="26318">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="26302" relation="include">
        </childnode>
        <childnode refid="26292" relation="include">
        </childnode>
        <childnode refid="26267" relation="include">
        </childnode>
        <childnode refid="26319" relation="include">
        </childnode>
        <childnode refid="26282" relation="include">
        </childnode>
        <childnode refid="26284" relation="include">
        </childnode>
        <childnode refid="26320" relation="include">
        </childnode>
      </node>
      <node id="26274">
        <label>stddef.h</label>
      </node>
      <node id="26283">
        <label>memory.h</label>
      </node>
      <node id="26340">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="26310" relation="include">
        </childnode>
      </node>
      <node id="26304">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26294" relation="include">
        </childnode>
      </node>
      <node id="26301">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="26302" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
        <childnode refid="26282" relation="include">
        </childnode>
      </node>
      <node id="26269">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
      </node>
      <node id="26310">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26282" relation="include">
        </childnode>
      </node>
      <node id="26255">
        <label>clusttool.h</label>
        <link refid="clusttool_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26259" relation="include">
        </childnode>
        <childnode refid="26262" relation="include">
        </childnode>
      </node>
      <node id="26258">
        <label>limits.h</label>
      </node>
      <node id="26260">
        <label>kdtree.h</label>
        <link refid="kdtree_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26261" relation="include">
        </childnode>
        <childnode refid="26290" relation="include">
        </childnode>
      </node>
      <node id="26337">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="26291" relation="include">
        </childnode>
        <childnode refid="26309" relation="include">
        </childnode>
        <childnode refid="26338" relation="include">
        </childnode>
        <childnode refid="26294" relation="include">
        </childnode>
      </node>
      <node id="26316">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="26277" relation="include">
        </childnode>
        <childnode refid="26317" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26315" relation="include">
        </childnode>
        <childnode refid="26299" relation="include">
        </childnode>
        <childnode refid="26318" relation="include">
        </childnode>
        <childnode refid="26331" relation="include">
        </childnode>
        <childnode refid="26333" relation="include">
        </childnode>
        <childnode refid="26284" relation="include">
        </childnode>
        <childnode refid="26334" relation="include">
        </childnode>
      </node>
      <node id="26296">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="26294" relation="include">
        </childnode>
      </node>
      <node id="26327">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="26295" relation="include">
        </childnode>
      </node>
      <node id="26322">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26279" relation="include">
        </childnode>
        <childnode refid="26281" relation="include">
        </childnode>
      </node>
      <node id="26287">
        <label>pthread.h</label>
      </node>
      <node id="26263">
        <label>string.h</label>
      </node>
      <node id="26285">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="26282" relation="include">
        </childnode>
      </node>
      <node id="26282">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="26283" relation="include">
        </childnode>
        <childnode refid="26263" relation="include">
        </childnode>
      </node>
      <node id="26261">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26263" relation="include">
        </childnode>
        <childnode refid="26264" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26265" relation="include">
        </childnode>
        <childnode refid="26275" relation="include">
        </childnode>
      </node>
      <node id="26293">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="26294" relation="include">
        </childnode>
        <childnode refid="26295" relation="include">
        </childnode>
        <childnode refid="26271" relation="include">
        </childnode>
        <childnode refid="26297" relation="include">
        </childnode>
        <childnode refid="26265" relation="include">
        </childnode>
      </node>
      <node id="26321">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
      </node>
      <node id="26268">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
      </node>
      <node id="26288">
        <label>semaphore.h</label>
      </node>
      <node id="26325">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="26326" relation="include">
        </childnode>
        <childnode refid="26327" relation="include">
        </childnode>
        <childnode refid="26321" relation="include">
        </childnode>
        <childnode refid="26293" relation="include">
        </childnode>
        <childnode refid="26323" relation="include">
        </childnode>
        <childnode refid="26297" relation="include">
        </childnode>
      </node>
      <node id="26320">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="26266" relation="include">
        </childnode>
        <childnode refid="26321" relation="include">
        </childnode>
        <childnode refid="26322" relation="include">
        </childnode>
        <childnode refid="26272" relation="include">
        </childnode>
        <childnode refid="26323" relation="include">
        </childnode>
        <childnode refid="26324" relation="include">
        </childnode>
        <childnode refid="26328" relation="include">
        </childnode>
      </node>
      <node id="26328">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26329" relation="include">
        </childnode>
        <childnode refid="26320" relation="include">
        </childnode>
      </node>
      <node id="26280">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="26269" relation="include">
        </childnode>
      </node>
      <node id="26303">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26299" relation="include">
        </childnode>
        <childnode refid="26304" relation="include">
        </childnode>
        <childnode refid="26305" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
      </node>
      <node id="26277">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="26278" relation="include">
        </childnode>
        <childnode refid="26265" relation="include">
        </childnode>
        <childnode refid="26282" relation="include">
        </childnode>
        <childnode refid="26284" relation="include">
        </childnode>
        <childnode refid="26267" relation="include">
        </childnode>
      </node>
      <node id="26306">
        <label>mfx.h</label>
        <link refid="mfx_8h"/>
        <childnode refid="26266" relation="include">
        </childnode>
      </node>
      <node id="26313">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="26268" relation="include">
        </childnode>
        <childnode refid="26269" relation="include">
        </childnode>
        <childnode refid="26267" relation="include">
        </childnode>
      </node>
      <node id="26326">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="26295" relation="include">
        </childnode>
        <childnode refid="26327" relation="include">
        </childnode>
      </node>
      <node id="26294">
        <label>math.h</label>
      </node>
      <node id="26281">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="26269" relation="include">
        </childnode>
      </node>
      <node id="26330">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="26295" relation="include">
        </childnode>
      </node>
      <node id="26300">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26301" relation="include">
        </childnode>
      </node>
      <node id="26298">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="26294" relation="include">
        </childnode>
        <childnode refid="26291" relation="include">
        </childnode>
      </node>
      <node id="26299">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="26261" relation="include">
        </childnode>
        <childnode refid="26268" relation="include">
        </childnode>
      </node>
      <node id="26290">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="26291" relation="include">
        </childnode>
        <childnode refid="26262" relation="include">
        </childnode>
      </node>
      <node id="26266">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26267" relation="include">
        </childnode>
        <childnode refid="26272" relation="include">
        </childnode>
      </node>
      <node id="26267">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26264" relation="include">
        </childnode>
        <childnode refid="26268" relation="include">
        </childnode>
        <childnode refid="26269" relation="include">
        </childnode>
        <childnode refid="26270" relation="include">
        </childnode>
        <childnode refid="26271" relation="include">
        </childnode>
      </node>
      <node id="26331">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="26267" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
        <childnode refid="26318" relation="include">
        </childnode>
        <childnode refid="26332" relation="include">
        </childnode>
        <childnode refid="26282" relation="include">
        </childnode>
      </node>
      <node id="26273">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="26274" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
      </node>
      <node id="26311">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="26312" relation="include">
        </childnode>
        <childnode refid="26261" relation="include">
        </childnode>
        <childnode refid="26282" relation="include">
        </childnode>
        <childnode refid="26313" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
      </node>
      <node id="26335">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="26290" relation="include">
        </childnode>
      </node>
      <node id="26278">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26279" relation="include">
        </childnode>
        <childnode refid="26281" relation="include">
        </childnode>
      </node>
      <node id="26284">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="26269" relation="include">
        </childnode>
        <childnode refid="26270" relation="include">
        </childnode>
        <childnode refid="26272" relation="include">
        </childnode>
        <childnode refid="26268" relation="include">
        </childnode>
        <childnode refid="26282" relation="include">
        </childnode>
        <childnode refid="26285" relation="include">
        </childnode>
      </node>
      <node id="26317">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="26278" relation="include">
        </childnode>
        <childnode refid="26318" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
        <childnode refid="26268" relation="include">
        </childnode>
      </node>
      <node id="26336">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="26267" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26282" relation="include">
        </childnode>
      </node>
      <node id="26295">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26294" relation="include">
        </childnode>
        <childnode refid="26278" relation="include">
        </childnode>
        <childnode refid="26296" relation="include">
        </childnode>
      </node>
      <node id="26308">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="26299" relation="include">
        </childnode>
        <childnode refid="26309" relation="include">
        </childnode>
        <childnode refid="26262" relation="include">
        </childnode>
      </node>
      <node id="26319">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="26265">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="26266" relation="include">
        </childnode>
      </node>
      <node id="26339">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="26266" relation="include">
        </childnode>
        <childnode refid="26309" relation="include">
        </childnode>
        <childnode refid="26340" relation="include">
        </childnode>
      </node>
      <node id="26256">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="26257" relation="include">
        </childnode>
      </node>
      <node id="26262">
        <label>stdio.h</label>
      </node>
      <node id="26309">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="26267" relation="include">
        </childnode>
        <childnode refid="26310" relation="include">
        </childnode>
        <childnode refid="26303" relation="include">
        </childnode>
        <childnode refid="26311" relation="include">
        </childnode>
        <childnode refid="26297" relation="include">
        </childnode>
        <childnode refid="26284" relation="include">
        </childnode>
      </node>
      <node id="26286">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
        <childnode refid="26265" relation="include">
        </childnode>
      </node>
      <node id="26338">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26256" relation="include">
        </childnode>
      </node>
      <node id="26272">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26263" relation="include">
        </childnode>
        <childnode refid="26257" relation="include">
        </childnode>
        <childnode refid="26273" relation="include">
        </childnode>
      </node>
      <node id="26291">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="26292" relation="include">
        </childnode>
        <childnode refid="26293" relation="include">
        </childnode>
        <childnode refid="26298" relation="include">
        </childnode>
      </node>
      <node id="26270">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="26262" relation="include">
        </childnode>
        <childnode refid="26263" relation="include">
        </childnode>
      </node>
      <node id="26334">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="26318" relation="include">
        </childnode>
        <childnode refid="26266" relation="include">
        </childnode>
        <childnode refid="26284" relation="include">
        </childnode>
      </node>
      <node id="26329">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="26330" relation="include">
        </childnode>
        <childnode refid="26279" relation="include">
        </childnode>
        <childnode refid="26273" relation="include">
        </childnode>
        <childnode refid="26293" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="mfoutline_8cpp_1aeb013f47829ae8698a722f8fd1ddb989" prot="public" static="no">
        <name>MIN_INERTIA</name>
        <initializer>(0.00001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="33" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mfoutline_8cpp_1a4acb6328d74e385e88c02c45e1306b97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
        <definition>LIST ConvertBlob</definition>
        <argsstring>(TBLOB *blob)</argsstring>
        <name>ConvertBlob</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="41" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a8ddc957cfa64a7dc50f9a3836319e766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
        <definition>MFOUTLINE ConvertOutline</definition>
        <argsstring>(TESSLINE *outline)</argsstring>
        <name>ConvertOutline</name>
        <param>
          <type><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="51" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a4d507cbf8bfa947b364ed74f5cb160cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
        <definition>LIST ConvertOutlines</definition>
        <argsstring>(TESSLINE *outline, LIST mf_outlines, OUTLINETYPE outline_type)</argsstring>
        <name>ConvertOutlines</name>
        <param>
          <type><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref> *</type>
          <declname>outline</declname>
        </param>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>mf_outlines</declname>
        </param>
        <param>
          <type><ref refid="mfoutline_8h_1abace9421f1a42147c8af40a950bc7203" kindref="member">OUTLINETYPE</ref></type>
          <declname>outline_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="92" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a84a628621cc7dc5eb36614c785a098a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ComputeOutlineStats</definition>
        <argsstring>(LIST Outlines, OUTLINE_STATS *OutlineStats)</argsstring>
        <name>ComputeOutlineStats</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>Outlines</declname>
        </param>
        <param>
          <type><ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s" kindref="compound">OUTLINE_STATS</ref> *</type>
          <declname>OutlineStats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="108" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="108" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1ac2b870343576dd24d1c4871f5988d556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FindDirectionChanges</definition>
        <argsstring>(MFOUTLINE Outline, FLOAT32 MinSlope, FLOAT32 MaxSlope)</argsstring>
        <name>FindDirectionChanges</name>
        <param>
          <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
          <declname>Outline</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>MinSlope</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>MaxSlope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="157" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="157" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a4633687049466a4f28d70775b0481431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeMFOutline</definition>
        <argsstring>(void *arg)</argsstring>
        <name>FreeMFOutline</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="200" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="200" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a553352ad44661adad2a80a24ac78aeaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeOutlines</definition>
        <argsstring>(LIST Outlines)</argsstring>
        <name>FreeOutlines</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>Outlines</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="227" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="227" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1afa2531f8656ba496465bc23ff1a2f99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MarkDirectionChanges</definition>
        <argsstring>(MFOUTLINE Outline)</argsstring>
        <name>MarkDirectionChanges</name>
        <param>
          <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
          <declname>Outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="243" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="243" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a917b406f8854b822d8cf2eb2480e6684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref> *</type>
        <definition>MFEDGEPT* NewEdgePoint</definition>
        <argsstring>()</argsstring>
        <name>NewEdgePoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="281" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="281" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1af520bd5bba313216d0b6fb9e58041266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
        <definition>MFOUTLINE NextExtremity</definition>
        <argsstring>(MFOUTLINE EdgePoint)</argsstring>
        <name>NextExtremity</name>
        <param>
          <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
          <declname>EdgePoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="287" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="287" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a30b1492f0756c31499da0157ecba50ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NormalizeOutline</definition>
        <argsstring>(MFOUTLINE Outline, FLOAT32 XOrigin)</argsstring>
        <name>NormalizeOutline</name>
        <param>
          <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
          <declname>Outline</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>XOrigin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="312" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="312" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1abd95d6d2be6406aea26fbf0f0bf157ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ChangeDirection</definition>
        <argsstring>(MFOUTLINE Start, MFOUTLINE End, DIRECTION Direction)</argsstring>
        <name>ChangeDirection</name>
        <param>
          <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
          <declname>Start</declname>
        </param>
        <param>
          <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
          <declname>End</declname>
        </param>
        <param>
          <type><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0" kindref="member">DIRECTION</ref></type>
          <declname>Direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <heading level="2">Private Code </heading>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="413" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="413" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a5918c653f568c2a6e5aa43569c01f346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CharNormalizeOutline</definition>
        <argsstring>(MFOUTLINE Outline, FLOAT32 XCenter, FLOAT32 YCenter, FLOAT32 XScale, FLOAT32 YScale)</argsstring>
        <name>CharNormalizeOutline</name>
        <param>
          <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
          <declname>Outline</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>XCenter</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>YCenter</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>XScale</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>YScale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="439" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="439" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a97334eef13fe16a7e0ce178f905d2c39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ComputeDirection</definition>
        <argsstring>(MFEDGEPT *Start, MFEDGEPT *Finish, FLOAT32 MinSlope, FLOAT32 MaxSlope)</argsstring>
        <name>ComputeDirection</name>
        <param>
          <type><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref> *</type>
          <declname>Start</declname>
        </param>
        <param>
          <type><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref> *</type>
          <declname>Finish</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>MinSlope</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>MaxSlope</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="480" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="480" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a8983618bd7c7c05ff69355b0aa4185fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FinishOutlineStats</definition>
        <argsstring>(register OUTLINE_STATS *OutlineStats)</argsstring>
        <name>FinishOutlineStats</name>
        <param>
          <type>register <ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s" kindref="compound">OUTLINE_STATS</ref> *</type>
          <declname>OutlineStats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="557" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="557" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1ab1a3167a695b3448b64ee38f6da9a264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitOutlineStats</definition>
        <argsstring>(OUTLINE_STATS *OutlineStats)</argsstring>
        <name>InitOutlineStats</name>
        <param>
          <type><ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s" kindref="compound">OUTLINE_STATS</ref> *</type>
          <declname>OutlineStats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="597" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="597" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a224d838335416038dcb0348f665f5a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
        <definition>MFOUTLINE NextDirectionChange</definition>
        <argsstring>(MFOUTLINE EdgePoint)</argsstring>
        <name>NextDirectionChange</name>
        <param>
          <type><ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref></type>
          <declname>EdgePoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="621" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="621" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="mfoutline_8cpp_1a943167d00e171b3cbc68252f32a45196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void UpdateOutlineStats</definition>
        <argsstring>(register OUTLINE_STATS *OutlineStats, register FLOAT32 x1, register FLOAT32 x2, register FLOAT32 y1, register FLOAT32 y2)</argsstring>
        <name>UpdateOutlineStats</name>
        <param>
          <type>register <ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s" kindref="compound">OUTLINE_STATS</ref> *</type>
          <declname>OutlineStats</declname>
        </param>
        <param>
          <type>register <ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>x1</declname>
        </param>
        <param>
          <type>register <ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>x2</declname>
        </param>
        <param>
          <type>register <ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>y1</declname>
        </param>
        <param>
          <type>register <ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" line="652" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp" bodystart="652" bodyend="696"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/><sp/>mfoutline.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Interface<sp/>to<sp/>outline<sp/>struct<sp/>used<sp/>for<sp/>extracting<sp/>features</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>May<sp/>17<sp/>08:14:18<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Include<sp/>Files<sp/>and<sp/>Type<sp/>Defines</highlight></codeline>
<codeline lineno="20"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clusttool_8h" kindref="compound">clusttool.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>remove<sp/>you<sp/>get<sp/>cought<sp/>in<sp/>a<sp/>loop<sp/>somewhere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfoutline_8h" kindref="compound">mfoutline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobs_8h" kindref="compound">blobs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="const_8h" kindref="compound">const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfx_8h" kindref="compound">mfx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classify_8h" kindref="compound">classify.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN_INERTIA<sp/>(0.00001)</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Code</highlight></codeline>
<codeline lineno="37"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>blob<sp/>into<sp/>a<sp/>list<sp/>of<sp/>MFOUTLINEs<sp/>(float-based<sp/>microfeature<sp/>format).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><ref refid="mfoutline_8cpp_1a4acb6328d74e385e88c02c45e1306b97" kindref="member">ConvertBlob</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>outlines<sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(blob<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="mfoutline_8cpp_1a4d507cbf8bfa947b364ed74f5cb160cd" kindref="member">ConvertOutlines</ref>(blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>,<sp/>outlines,<sp/><ref refid="mfoutline_8h_1abace9421f1a42147c8af40a950bc7203a281b97b7e8b9c87a09e7fc5b5fe95da8" kindref="member">outer</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>TESSLINE<sp/>into<sp/>the<sp/>float-based<sp/>MFOUTLINE<sp/>micro-feature<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/><ref refid="mfoutline_8cpp_1a8ddc957cfa64a7dc50f9a3836319e766" kindref="member">ConvertOutline</ref>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref><sp/>*outline)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*NewPoint;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>MFOutline<sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*EdgePoint;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*StartPoint;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*NextPoint;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MFOutline;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>StartPoint<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>EdgePoint<sp/>=<sp/>StartPoint;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>NextPoint<sp/>=<sp/>EdgePoint-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>filter<sp/>out<sp/>duplicate<sp/>points<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EdgePoint-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>!=<sp/>NextPoint-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>||</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EdgePoint-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>!=<sp/>NextPoint-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewPoint<sp/>=<sp/><ref refid="mfoutline_8cpp_1a917b406f8854b822d8cf2eb2480e6684" kindref="member">NewEdgePoint</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mfoutline_8h_1a1960e4d5f6a5ee3649830432ab38937b" kindref="member">ClearMark</ref>(NewPoint);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewPoint-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a6c6f4bc040c7147dce9a63516758ad5d" kindref="member">Hidden</ref><sp/>=<sp/>EdgePoint-&gt;<ref refid="struct_e_d_g_e_p_t_1a7e6e4c9b9bcc3b1e66ab62bb7641c39a" kindref="member">IsHidden</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewPoint-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>EdgePoint-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewPoint-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>EdgePoint-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MFOutline<sp/>=<sp/><ref refid="oldlist_8cpp_1a9c4294375af81ab4c133b6b5a3679a16" kindref="member">push</ref>(MFOutline,<sp/>NewPoint);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgePoint<sp/>=<sp/>NextPoint;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(EdgePoint<sp/>!=<sp/>StartPoint);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MFOutline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mfoutline_8h_1a72b744e3e7220468dad3d2c67ef65bbf" kindref="member">MakeOutlineCircular</ref>(MFOutline);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MFOutline;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>tree<sp/>of<sp/>outlines<sp/>to<sp/>a<sp/>list<sp/>of<sp/>MFOUTLINEs<sp/>(lists<sp/>of<sp/>MFEDGEPTs).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parameters:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>outline<sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>outline<sp/>to<sp/>be<sp/>converted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mf_outlines<sp/><sp/>list<sp/>to<sp/>add<sp/>converted<sp/>outlines<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>outline_type<sp/><sp/>are<sp/>the<sp/>outlines<sp/>outer<sp/>or<sp/>holes?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><ref refid="mfoutline_8cpp_1a4d507cbf8bfa947b364ed74f5cb160cd" kindref="member">ConvertOutlines</ref>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref><sp/>*outline,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>mf_outlines,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mfoutline_8h_1abace9421f1a42147c8af40a950bc7203" kindref="member">OUTLINETYPE</ref><sp/>outline_type)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>mf_outline;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>mf_outline<sp/>=<sp/><ref refid="mfoutline_8cpp_1a8ddc957cfa64a7dc50f9a3836319e766" kindref="member">ConvertOutline</ref>(outline);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mf_outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mf_outlines<sp/>=<sp/><ref refid="oldlist_8cpp_1a9c4294375af81ab4c133b6b5a3679a16" kindref="member">push</ref>(mf_outlines,<sp/>mf_outline);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mf_outlines;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1a84a628621cc7dc5eb36614c785a098a9" kindref="member">ComputeOutlineStats</ref>(<ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>Outlines,<sp/><ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s" kindref="compound">OUTLINE_STATS</ref><sp/>*OutlineStats)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Outlines<sp/><sp/>list<sp/>of<sp/>outlines<sp/>to<sp/>compute<sp/>stats<sp/>for</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>**<sp/><sp/><sp/>OutlineStats<sp/><sp/>place<sp/>to<sp/>put<sp/>results</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>computes<sp/>several<sp/>statistics<sp/>about<sp/>the<sp/>outlines</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>**<sp/><sp/><sp/>in<sp/>Outlines.<sp/><sp/>These<sp/>statistics<sp/>are<sp/>usually<sp/>used<sp/>to<sp/>perform</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>**<sp/><sp/><sp/>anistropic<sp/>normalization<sp/>of<sp/>all<sp/>of<sp/>the<sp/>outlines.<sp/><sp/>The</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>**<sp/><sp/><sp/>statistics<sp/>generated<sp/>are:</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>first<sp/>moments<sp/>about<sp/>x<sp/>and<sp/>y<sp/>axes</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>total<sp/>length<sp/>of<sp/>all<sp/>outlines</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>center<sp/>of<sp/>mass<sp/>of<sp/>all<sp/>outlines</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>second<sp/>moments<sp/>about<sp/>center<sp/>of<sp/>mass<sp/>axes</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>radius<sp/>of<sp/>gyration<sp/>about<sp/>center<sp/>of<sp/>mass<sp/>axes</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none<sp/>(results<sp/>are<sp/>returned<sp/>in<sp/>OutlineStats)</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Dec<sp/>14<sp/>08:32:03<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Outline;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>EdgePoint;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*Current;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*Last;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="mfoutline_8cpp_1ab1a3167a695b3448b64ee38f6da9a264" kindref="member">InitOutlineStats</ref>(OutlineStats);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(Outlines)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>Outline<sp/>=<sp/>(<ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(Outlines);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>Last<sp/>=<sp/><ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref><sp/>(Outline);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>Outline<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref><sp/>(Outline);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgePoint<sp/>=<sp/>Outline;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Current<sp/>=<sp/><ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref><sp/>(EdgePoint);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mfoutline_8cpp_1a943167d00e171b3cbc68252f32a45196" kindref="member">UpdateOutlineStats</ref><sp/>(OutlineStats,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Last-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>Last-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Current-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>Current-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Last<sp/>=<sp/>Current;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EdgePoint<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref><sp/>(EdgePoint);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(EdgePoint<sp/>!=<sp/>Outline);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="mfoutline_8cpp_1a8983618bd7c7c05ff69355b0aa4185fe" kindref="member">FinishOutlineStats</ref>(OutlineStats);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ComputeOutlineStats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1ac2b870343576dd24d1c4871f5988d556" kindref="member">FindDirectionChanges</ref>(<ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Outline,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>MinSlope,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>MaxSlope)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Outline<sp/><sp/><sp/>micro-feature<sp/>outline<sp/>to<sp/>analyze</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>**<sp/><sp/><sp/>MinSlope<sp/><sp/>controls<sp/>&quot;snapping&quot;<sp/>of<sp/>segments<sp/>to<sp/>horizontal</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>**<sp/><sp/><sp/>MaxSlope<sp/><sp/>controls<sp/>&quot;snapping&quot;<sp/>of<sp/>segments<sp/>to<sp/>vertical</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>**<sp/><sp/><sp/>This<sp/>routine<sp/>searches<sp/>thru<sp/>the<sp/>specified<sp/>outline,<sp/>computes</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>**<sp/><sp/><sp/>a<sp/>slope<sp/>for<sp/>each<sp/>vector<sp/>in<sp/>the<sp/>outline,<sp/>and<sp/>marks<sp/>each</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>**<sp/><sp/><sp/>vector<sp/>as<sp/>having<sp/>one<sp/>of<sp/>the<sp/>following<sp/>directions:</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>N,<sp/>S,<sp/>E,<sp/>W,<sp/>NE,<sp/>NW,<sp/>SE,<sp/>SW</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>**<sp/><sp/><sp/>This<sp/>information<sp/>is<sp/>then<sp/>stored<sp/>in<sp/>the<sp/>outline<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>**<sp/><sp/><sp/>outline<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>**<sp/>History:<sp/>7/21/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*Current;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*Last;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>EdgePoint;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mfoutline_8h_1ac8e258367e719e5a22e83af1c2b33e53" kindref="member">DegenerateOutline</ref><sp/>(Outline))</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>Last<sp/>=<sp/><ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref><sp/>(Outline);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>Outline<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref><sp/>(Outline);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>EdgePoint<sp/>=<sp/>Outline;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>Current<sp/>=<sp/><ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref><sp/>(EdgePoint);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mfoutline_8cpp_1a97334eef13fe16a7e0ce178f905d2c39" kindref="member">ComputeDirection</ref>(Last,<sp/>Current,<sp/>MinSlope,<sp/>MaxSlope);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>Last<sp/>=<sp/>Current;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgePoint<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref><sp/>(EdgePoint);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(EdgePoint<sp/>!=<sp/>Outline);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FindDirectionChanges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1a4633687049466a4f28d70775b0481431" kindref="member">FreeMFOutline</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)<sp/>{<sp/><sp/></highlight><highlight class="comment">//MFOUTLINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Outline)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Outline<sp/><sp/><sp/>micro-feature<sp/>outline<sp/>to<sp/>be<sp/>freed</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>**<sp/><sp/><sp/>This<sp/>routine<sp/>deallocates<sp/>all<sp/>of<sp/>the<sp/>memory<sp/>consumed<sp/>by</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>**<sp/><sp/><sp/>a<sp/>micro-feature<sp/>outline.</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>**<sp/>History:<sp/>7/27/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Start;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Outline<sp/>=<sp/>(<ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref>)<sp/>arg;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>break<sp/>the<sp/>circular<sp/>outline<sp/>so<sp/>we<sp/>can<sp/>use<sp/>std.<sp/>techniques<sp/>to<sp/>deallocate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>Start<sp/>=<sp/><ref refid="oldlist_8h_1adb120d4c08ce52b5dfe524f0419a9154" kindref="member">list_rest</ref><sp/>(Outline);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a42cc2d9c5eabb2193e2e64df41adedf4" kindref="member">set_rest</ref>(Outline,<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Start<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="memry_8cpp_1a204a6cd6de69d4bd7a73ca30e0a0f947" kindref="member">free_struct</ref><sp/>(<ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(Start),<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref>),<sp/></highlight><highlight class="stringliteral">&quot;MFEDGEPT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>Start<sp/>=<sp/><ref refid="oldlist_8cpp_1a4a16ea0d766f4b3bc697142d5303a62c" kindref="member">pop</ref><sp/>(Start);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeMFOutline<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1a553352ad44661adad2a80a24ac78aeaf" kindref="member">FreeOutlines</ref>(<ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>Outlines)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Outlines<sp/><sp/>list<sp/>of<sp/>mf-outlines<sp/>to<sp/>be<sp/>freed</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>Release<sp/>all<sp/>memory<sp/>consumed<sp/>by<sp/>the<sp/>specified<sp/>list</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>**<sp/><sp/><sp/>of<sp/>outlines.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>**<sp/>History:<sp/>Thu<sp/>Dec<sp/>13<sp/>16:14:50<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a1a1efc1a269e5bb5bf16c1a174363ba4" kindref="member">destroy_nodes</ref>(Outlines,<sp/><ref refid="mfoutline_8cpp_1a4633687049466a4f28d70775b0481431" kindref="member">FreeMFOutline</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeOutlines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1afa2531f8656ba496465bc23ff1a2f99c" kindref="member">MarkDirectionChanges</ref>(<ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Outline)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Outline<sp/><sp/><sp/>micro-feature<sp/>outline<sp/>to<sp/>analyze</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>**<sp/><sp/><sp/>This<sp/>routine<sp/>searches<sp/>thru<sp/>the<sp/>specified<sp/>outline<sp/>and<sp/>finds</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>**<sp/><sp/><sp/>the<sp/>points<sp/>at<sp/>which<sp/>the<sp/>outline<sp/>changes<sp/>direction.<sp/><sp/>These</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>**<sp/><sp/><sp/>points<sp/>are<sp/>then<sp/>marked<sp/>as<sp/>&quot;extremities&quot;.<sp/><sp/>This<sp/>routine<sp/>is</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>**<sp/><sp/><sp/>used<sp/>as<sp/>an<sp/>alternative<sp/>to<sp/>FindExtremities().<sp/><sp/>It<sp/>forces<sp/>the</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>**<sp/><sp/><sp/>endpoints<sp/>of<sp/>the<sp/>microfeatures<sp/>to<sp/>be<sp/>at<sp/>the<sp/>direction</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>**<sp/><sp/><sp/>changes<sp/>rather<sp/>than<sp/>at<sp/>the<sp/>midpoint<sp/>between<sp/>direction</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>**<sp/><sp/><sp/>changes.</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>**<sp/>History:<sp/>6/29/90,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Current;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Last;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>First;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mfoutline_8h_1ac8e258367e719e5a22e83af1c2b33e53" kindref="member">DegenerateOutline</ref><sp/>(Outline))</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>First<sp/>=<sp/><ref refid="mfoutline_8cpp_1a224d838335416038dcb0348f665f5a05" kindref="member">NextDirectionChange</ref><sp/>(Outline);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>Last<sp/>=<sp/>First;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>Current<sp/>=<sp/><ref refid="mfoutline_8cpp_1a224d838335416038dcb0348f665f5a05" kindref="member">NextDirectionChange</ref><sp/>(Last);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mfoutline_8h_1ae5174bb3e6e300b198551b13834c1a62" kindref="member">MarkPoint</ref><sp/>(<ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref><sp/>(Current));</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>Last<sp/>=<sp/>Current;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Last<sp/>!=<sp/>First);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MarkDirectionChanges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>new<sp/>edge<sp/>point<sp/>for<sp/>a<sp/>micro-feature<sp/>outline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*<ref refid="mfoutline_8cpp_1a917b406f8854b822d8cf2eb2480e6684" kindref="member">NewEdgePoint</ref>()<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*)<sp/><ref refid="memry_8cpp_1a4f4e6728de23eb0530f9bdc8b3a114d3" kindref="member">alloc_struct</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref>),<sp/></highlight><highlight class="stringliteral">&quot;MFEDGEPT&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/><ref refid="mfoutline_8cpp_1af520bd5bba313216d0b6fb9e58041266" kindref="member">NextExtremity</ref>(<ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>EdgePoint)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>**<sp/><sp/><sp/>EdgePoint<sp/>start<sp/>search<sp/>from<sp/>this<sp/>point</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>**<sp/><sp/><sp/>This<sp/>routine<sp/>returns<sp/>the<sp/>next<sp/>point<sp/>in<sp/>the<sp/>micro-feature</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>**<sp/><sp/><sp/>outline<sp/>that<sp/>is<sp/>an<sp/>extremity.<sp/><sp/>The<sp/>search<sp/>starts<sp/>after</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>**<sp/><sp/><sp/>EdgePoint.<sp/><sp/>The<sp/>routine<sp/>assumes<sp/>that<sp/>the<sp/>outline<sp/>being</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>**<sp/><sp/><sp/>searched<sp/>is<sp/>not<sp/>a<sp/>degenerate<sp/>outline<sp/>(i.e.<sp/>it<sp/>must<sp/>have</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>**<sp/><sp/><sp/>2<sp/>or<sp/>more<sp/>edge<sp/>points).</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Next<sp/>extremity<sp/>in<sp/>the<sp/>outline<sp/>after<sp/>EdgePoint.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>**<sp/>History:<sp/>7/26/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>EdgePoint<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref>(EdgePoint);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref>(EdgePoint)-&gt;ExtremityMark)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgePoint<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref>(EdgePoint);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(EdgePoint);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NextExtremity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1a30b1492f0756c31499da0157ecba50ff" kindref="member">NormalizeOutline</ref>(<ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Outline,</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>XOrigin)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Outline<sp/><sp/><sp/>outline<sp/>to<sp/>be<sp/>normalized</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>**<sp/><sp/><sp/>XOrigin<sp/><sp/><sp/>x-origin<sp/>of<sp/>text</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>**<sp/><sp/><sp/>This<sp/>routine<sp/>normalizes<sp/>the<sp/>coordinates<sp/>of<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>**<sp/><sp/><sp/>outline<sp/>so<sp/>that<sp/>the<sp/>outline<sp/>is<sp/>deskewed<sp/>down<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>**<sp/><sp/><sp/>baseline,<sp/>translated<sp/>so<sp/>that<sp/>x=0<sp/>is<sp/>at<sp/>XOrigin,<sp/>and<sp/>scaled</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>**<sp/><sp/><sp/>so<sp/>that<sp/>the<sp/>height<sp/>of<sp/>a<sp/>character<sp/>cell<sp/>from<sp/>descender<sp/>to</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>**<sp/><sp/><sp/>ascender<sp/>is<sp/>1.<sp/><sp/>Of<sp/>this<sp/>height,<sp/>0.25<sp/>is<sp/>for<sp/>the<sp/>descender,</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>**<sp/><sp/><sp/>0.25<sp/>for<sp/>the<sp/>ascender,<sp/>and<sp/>0.5<sp/>for<sp/>the<sp/>x-height.<sp/><sp/>The</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>**<sp/><sp/><sp/>y<sp/>coordinate<sp/>of<sp/>the<sp/>baseline<sp/>is<sp/>0.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>**<sp/>History:<sp/>8/2/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Outline<sp/>==<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>EdgePoint<sp/>=<sp/>Outline;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*Current<sp/>=<sp/><ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref>(EdgePoint);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>Current-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/><ref refid="mfoutline_8h_1a91645597f620e8307a65e8ab35d963b8" kindref="member">MF_SCALE_FACTOR</ref><sp/>*<sp/>(Current-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>-<sp/><ref refid="baseline_8h_1a011c4f289bef07581a2aed5570f1918c" kindref="member">BASELINE_OFFSET</ref>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>Current-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/><ref refid="mfoutline_8h_1a91645597f620e8307a65e8ab35d963b8" kindref="member">MF_SCALE_FACTOR</ref><sp/>*<sp/>(Current-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>-<sp/>XOrigin);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgePoint<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref>(EdgePoint);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(EdgePoint<sp/>!=<sp/>Outline);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NormalizeOutline<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_classify_1a8cbc3c255f888cc49c713c0a7408d2ad" kindref="member">Classify::NormalizeOutlines</ref>(<ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>Outlines,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*XScale,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*YScale)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Outlines<sp/><sp/>list<sp/>of<sp/>outlines<sp/>to<sp/>be<sp/>normalized</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>**<sp/><sp/><sp/>XScale<sp/><sp/><sp/><sp/>x-direction<sp/>scale<sp/>factor<sp/>used<sp/>by<sp/>routine</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>**<sp/><sp/><sp/>YScale<sp/><sp/><sp/><sp/>y-direction<sp/>scale<sp/>factor<sp/>used<sp/>by<sp/>routine</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>**<sp/>Globals:</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>**<sp/><sp/><sp/>classify_norm_method<sp/><sp/>method<sp/>being<sp/>used<sp/>for<sp/>normalization</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>**<sp/><sp/><sp/>classify_char_norm_range<sp/>map<sp/>radius<sp/>of<sp/>gyration<sp/>to<sp/>this<sp/>value</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>normalizes<sp/>every<sp/>outline<sp/>in<sp/>Outlines</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>**<sp/><sp/><sp/>according<sp/>to<sp/>the<sp/>currently<sp/>selected<sp/>normalization<sp/>method.</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>**<sp/><sp/><sp/>It<sp/>also<sp/>returns<sp/>the<sp/>scale<sp/>factors<sp/>that<sp/>it<sp/>used<sp/>to<sp/>do<sp/>this</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>**<sp/><sp/><sp/>scaling.<sp/><sp/>The<sp/>scale<sp/>factors<sp/>returned<sp/>represent<sp/>the<sp/>x<sp/>and</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>**<sp/><sp/><sp/>y<sp/>sizes<sp/>in<sp/>the<sp/>normalized<sp/>coordinate<sp/>system<sp/>that<sp/>correspond</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>**<sp/><sp/><sp/>to<sp/>1<sp/>pixel<sp/>in<sp/>the<sp/>original<sp/>coordinate<sp/>system.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none<sp/>(Outlines<sp/>are<sp/>changed<sp/>and<sp/>XScale<sp/>and<sp/>YScale<sp/>are<sp/>updated)</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Dec<sp/>14<sp/>08:14:55<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Outline;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s" kindref="compound">OUTLINE_STATS</ref><sp/>OutlineStats;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>BaselineScale;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(classify_norm_method)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref>:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mfoutline_8cpp_1a84a628621cc7dc5eb36614c785a098a9" kindref="member">ComputeOutlineStats</ref>(Outlines,<sp/>&amp;OutlineStats);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>limit<sp/>scale<sp/>factor<sp/>to<sp/>avoid<sp/>overscaling<sp/>small<sp/>blobs<sp/>(.,`&apos;),</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thin<sp/>blobs<sp/>(l1ift),<sp/>and<sp/>merged<sp/>blobs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*XScale<sp/>=<sp/>*YScale<sp/>=<sp/>BaselineScale<sp/>=<sp/><ref refid="mfoutline_8h_1a91645597f620e8307a65e8ab35d963b8" kindref="member">MF_SCALE_FACTOR</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*XScale<sp/>*=<sp/>OutlineStats.<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1afb6d2229fa00b3a255aa11efa7894527" kindref="member">Ry</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*YScale<sp/>*=<sp/>OutlineStats.<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a44df0e96a471cc5e0380b52d04eec549" kindref="member">Rx</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*XScale<sp/>&lt;<sp/>classify_min_norm_scale_x)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*XScale<sp/>=<sp/>classify_min_norm_scale_x;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*YScale<sp/>&lt;<sp/>classify_min_norm_scale_y)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*YScale<sp/>=<sp/>classify_min_norm_scale_y;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*XScale<sp/>&gt;<sp/>classify_max_norm_scale_x<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*YScale<sp/>&lt;=<sp/>classify_max_norm_scale_y)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*XScale<sp/>=<sp/>classify_max_norm_scale_x;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*XScale<sp/>=<sp/>classify_char_norm_range<sp/>*<sp/>BaselineScale<sp/>/<sp/>*XScale;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*YScale<sp/>=<sp/>classify_char_norm_range<sp/>*<sp/>BaselineScale<sp/>/<sp/>*YScale;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(Outlines)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Outline<sp/>=<sp/>(<ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(Outlines);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mfoutline_8cpp_1a5918c653f568c2a6e5aa43569c01f346" kindref="member">CharNormalizeOutline</ref><sp/>(Outline,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutlineStats.<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a2e72d57afc14290aef97b17bba52cd98" kindref="member">x</ref>,<sp/>OutlineStats.<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a27f428c88f5d21ad9125a93c30d73699" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*XScale,<sp/>*YScale);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865a83297de004f4e58b9be2108c6cd08a23" kindref="member">baseline</ref>:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(Outlines)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Outline<sp/>=<sp/>(<ref refid="mfoutline_8h_1a7ccab0cdf14413921e017ad0af14e1de" kindref="member">MFOUTLINE</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(Outlines);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mfoutline_8cpp_1a30b1492f0756c31499da0157ecba50ff" kindref="member">NormalizeOutline</ref>(Outline,<sp/>0.0);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*XScale<sp/>=<sp/>*YScale<sp/>=<sp/><ref refid="mfoutline_8h_1a91645597f620e8307a65e8ab35d963b8" kindref="member">MF_SCALE_FACTOR</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NormalizeOutlines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1abd95d6d2be6406aea26fbf0f0bf157ae" kindref="member">ChangeDirection</ref>(<ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Start,<sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>End,<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0" kindref="member">DIRECTION</ref><sp/>Direction)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Start,<sp/>End<sp/><sp/>defines<sp/>segment<sp/>of<sp/>outline<sp/>to<sp/>be<sp/>modified</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Direction<sp/>new<sp/>direction<sp/>to<sp/>assign<sp/>to<sp/>segment</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>Change<sp/>the<sp/>direction<sp/>of<sp/>every<sp/>vector<sp/>in<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>**<sp/><sp/><sp/>outline<sp/>segment<sp/>to<sp/>Direction.<sp/><sp/>The<sp/>segment<sp/>to<sp/>be<sp/>changed</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>**<sp/><sp/><sp/>starts<sp/>at<sp/>Start<sp/>and<sp/>ends<sp/>at<sp/>End.<sp/><sp/>Note<sp/>that<sp/>the<sp/>previous</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>**<sp/><sp/><sp/>direction<sp/>of<sp/>End<sp/>must<sp/>also<sp/>be<sp/>changed<sp/>to<sp/>reflect<sp/>the</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>**<sp/><sp/><sp/>change<sp/>in<sp/>direction<sp/>of<sp/>the<sp/>point<sp/>before<sp/>it.</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>May<sp/><sp/>4<sp/>10:42:04<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Current;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Current<sp/>=<sp/>Start;<sp/>Current<sp/>!=<sp/>End;<sp/>Current<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref><sp/>(Current))</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref><sp/>(Current)-&gt;Direction<sp/>=<sp/>Direction;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref><sp/>(End)-&gt;PreviousDirection<sp/>=<sp/>Direction;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ChangeDirection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1a5918c653f568c2a6e5aa43569c01f346" kindref="member">CharNormalizeOutline</ref>(<ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>Outline,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>XCenter,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>YCenter,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>XScale,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>YScale)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Outline<sp/><sp/><sp/><sp/><sp/>outline<sp/>to<sp/>be<sp/>character<sp/>normalized</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>**<sp/><sp/><sp/>XCenter,<sp/>YCenter<sp/><sp/>center<sp/>point<sp/>for<sp/>normalization</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>**<sp/><sp/><sp/>XScale,<sp/>YScale<sp/><sp/><sp/><sp/>scale<sp/>factors<sp/>for<sp/>normalization</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>normalizes<sp/>each<sp/>point<sp/>in<sp/>Outline<sp/>by</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>**<sp/><sp/><sp/>translating<sp/>it<sp/>to<sp/>the<sp/>specified<sp/>center<sp/>and<sp/>scaling<sp/>it</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>**<sp/><sp/><sp/>anisotropically<sp/>according<sp/>to<sp/>the<sp/>given<sp/>scale<sp/>factors.</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Dec<sp/>14<sp/>10:27:11<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>First,<sp/>Current;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*CurrentPoint;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Outline<sp/>==<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>First<sp/>=<sp/>Outline;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>Current<sp/>=<sp/>First;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>CurrentPoint<sp/>=<sp/><ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref><sp/>(Current);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>CurrentPoint-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(CurrentPoint-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>-<sp/>XCenter)<sp/>*<sp/>XScale;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>CurrentPoint-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(CurrentPoint-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>-<sp/>YCenter)<sp/>*<sp/>YScale;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>Current<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref><sp/>(Current);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Current<sp/>!=<sp/>First);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CharNormalizeOutline<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1a97334eef13fe16a7e0ce178f905d2c39" kindref="member">ComputeDirection</ref>(<ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*Start,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_f_e_d_g_e_p_t" kindref="compound">MFEDGEPT</ref><sp/>*Finish,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>MinSlope,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>MaxSlope)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Start<sp/><sp/><sp/>starting<sp/>point<sp/>to<sp/>compute<sp/>direction<sp/>from</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Finish<sp/><sp/><sp/><sp/>finishing<sp/>point<sp/>to<sp/>compute<sp/>direction<sp/>to</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>**<sp/><sp/><sp/>MinSlope<sp/><sp/>slope<sp/>below<sp/>which<sp/>lines<sp/>are<sp/>horizontal</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>**<sp/><sp/><sp/>MaxSlope<sp/><sp/>slope<sp/>above<sp/>which<sp/>lines<sp/>are<sp/>vertical</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>**<sp/><sp/><sp/>This<sp/>routine<sp/>computes<sp/>the<sp/>slope<sp/>from<sp/>Start<sp/>to<sp/>Finish<sp/>and</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>**<sp/><sp/><sp/>and<sp/>then<sp/>computes<sp/>the<sp/>approximate<sp/>direction<sp/>of<sp/>the<sp/>line</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>**<sp/><sp/><sp/>segment<sp/>from<sp/>Start<sp/>to<sp/>Finish.<sp/><sp/>The<sp/>direction<sp/>is<sp/>quantized</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>**<sp/><sp/><sp/>into<sp/>8<sp/>buckets:</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>N,<sp/>S,<sp/>E,<sp/>W,<sp/>NE,<sp/>NW,<sp/>SE,<sp/>SW</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Both<sp/>the<sp/>slope<sp/>and<sp/>the<sp/>direction<sp/>are<sp/>then<sp/>stored<sp/>into</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>**<sp/><sp/><sp/>the<sp/>appropriate<sp/>fields<sp/>of<sp/>the<sp/>Start<sp/>edge<sp/>point.<sp/><sp/>The</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>**<sp/><sp/><sp/>direction<sp/>is<sp/>also<sp/>stored<sp/>into<sp/>the<sp/>PreviousDirection<sp/>field</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>**<sp/><sp/><sp/>of<sp/>the<sp/>Finish<sp/>edge<sp/>point.</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>**<sp/>History:<sp/>7/25/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><ref refid="struct_f_p_o_i_n_t" kindref="compound">FVECTOR</ref><sp/>Delta;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>Delta.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/>Finish-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>-<sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>Delta.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/>Finish-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>-<sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b633b56b9a1a71a23551e387b7c8af4" kindref="member">Point</ref>.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Delta.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Delta.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>=<sp/>-<ref refid="host_8h_1a9adcee815220ec9db98062213806ed04" kindref="member">MAX_FLOAT32</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a035a454a75284b5dc261bd500ab311ed" kindref="member">south</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>=<sp/><ref refid="host_8h_1a9adcee815220ec9db98062213806ed04" kindref="member">MAX_FLOAT32</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a257e6b7fcd6ccb860083f20eb9bd660d" kindref="member">north</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>=<sp/>Delta.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>/<sp/>Delta.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Delta.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Delta.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>&gt;<sp/>MinSlope)</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>&lt;<sp/>MaxSlope)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0ae3b4c14104592166f37bd10677137b23" kindref="member">northeast</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a257e6b7fcd6ccb860083f20eb9bd660d" kindref="member">north</ref>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a1be79cd4775c5384e197f1031580b10a" kindref="member">east</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>&lt;<sp/>-MinSlope)</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>&gt;<sp/>-MaxSlope)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0ae1fe6949267a85f8ffd113c0eb67116a" kindref="member">southeast</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a035a454a75284b5dc261bd500ab311ed" kindref="member">south</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a1be79cd4775c5384e197f1031580b10a" kindref="member">east</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Delta.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>&lt;<sp/>-MinSlope)</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>&gt;<sp/>-MaxSlope)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a612166623e6f200d052d3d8dc4c075c0" kindref="member">northwest</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a257e6b7fcd6ccb860083f20eb9bd660d" kindref="member">north</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a9f771a3f89930d6b7e164e32a951dcb6" kindref="member">west</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>&gt;<sp/>MinSlope)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a75770cf1960863e6937f2ca578ede6ef" kindref="member">Slope</ref><sp/>&lt;<sp/>MaxSlope)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a0a8b39b36c98d2346b9a5453838f3aea" kindref="member">southwest</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a035a454a75284b5dc261bd500ab311ed" kindref="member">south</ref>;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref><sp/>=<sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0a9f771a3f89930d6b7e164e32a951dcb6" kindref="member">west</ref>;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>Finish-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a47d3c4465ab5bb663d77c507cfebc18a" kindref="member">PreviousDirection</ref><sp/>=<sp/>Start-&gt;<ref refid="struct_m_f_e_d_g_e_p_t_1a2b987163e368c4d0a3c4d027b5619665" kindref="member">Direction</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ComputeDirection<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1a8983618bd7c7c05ff69355b0aa4185fe" kindref="member">FinishOutlineStats</ref>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s" kindref="compound">OUTLINE_STATS</ref><sp/>*OutlineStats)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>**<sp/><sp/><sp/>OutlineStats<sp/><sp/>statistics<sp/>about<sp/>a<sp/>set<sp/>of<sp/>outlines</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>Use<sp/>the<sp/>preliminary<sp/>statistics<sp/>accumulated<sp/>in<sp/>OutlineStats</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>**<sp/><sp/><sp/>to<sp/>compute<sp/>the<sp/>final<sp/>statistics.</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>**<sp/><sp/><sp/>(see<sp/>Dan<sp/>Johnson&apos;s<sp/>Tesseract<sp/>lab</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>**<sp/><sp/><sp/>notebook<sp/>#2,<sp/>pgs.<sp/>74-78).</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Dec<sp/>14<sp/>10:13:36<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a2e72d57afc14290aef97b17bba52cd98" kindref="member">x</ref><sp/>=<sp/>0.5<sp/>*<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a19fd6ebb6e878a2f2df7c168edd7ed81" kindref="member">My</ref><sp/>/<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a91a6aea2761ea0e675b1e47c87da2509" kindref="member">L</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a27f428c88f5d21ad9125a93c30d73699" kindref="member">y</ref><sp/>=<sp/>0.5<sp/>*<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a48dcb42e547f23fbf75a53f396c2d020" kindref="member">Mx</ref><sp/>/<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a91a6aea2761ea0e675b1e47c87da2509" kindref="member">L</ref>;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a6af6966cfc75974663f3746d8a490a34" kindref="member">Ix</ref><sp/>=<sp/>(OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a6af6966cfc75974663f3746d8a490a34" kindref="member">Ix</ref><sp/>/<sp/>3.0<sp/>-</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a27f428c88f5d21ad9125a93c30d73699" kindref="member">y</ref><sp/>*<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a48dcb42e547f23fbf75a53f396c2d020" kindref="member">Mx</ref><sp/>+</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a27f428c88f5d21ad9125a93c30d73699" kindref="member">y</ref><sp/>*<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a27f428c88f5d21ad9125a93c30d73699" kindref="member">y</ref><sp/>*<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a91a6aea2761ea0e675b1e47c87da2509" kindref="member">L</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1af32048351768bcc8ad6566dcb452090d" kindref="member">Iy</ref><sp/>=<sp/>(OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1af32048351768bcc8ad6566dcb452090d" kindref="member">Iy</ref><sp/>/<sp/>3.0<sp/>-</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a2e72d57afc14290aef97b17bba52cd98" kindref="member">x</ref><sp/>*<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a19fd6ebb6e878a2f2df7c168edd7ed81" kindref="member">My</ref><sp/>+</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a2e72d57afc14290aef97b17bba52cd98" kindref="member">x</ref><sp/>*<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a2e72d57afc14290aef97b17bba52cd98" kindref="member">x</ref><sp/>*<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a91a6aea2761ea0e675b1e47c87da2509" kindref="member">L</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ix<sp/>and/or<sp/>Iy<sp/>could<sp/>possibly<sp/>be<sp/>negative<sp/>due<sp/>to<sp/>roundoff<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a6af6966cfc75974663f3746d8a490a34" kindref="member">Ix</ref><sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a6af6966cfc75974663f3746d8a490a34" kindref="member">Ix</ref><sp/>=<sp/><ref refid="mfoutline_8cpp_1aeb013f47829ae8698a722f8fd1ddb989" kindref="member">MIN_INERTIA</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1af32048351768bcc8ad6566dcb452090d" kindref="member">Iy</ref><sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1af32048351768bcc8ad6566dcb452090d" kindref="member">Iy</ref><sp/>=<sp/><ref refid="mfoutline_8cpp_1aeb013f47829ae8698a722f8fd1ddb989" kindref="member">MIN_INERTIA</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a44df0e96a471cc5e0380b52d04eec549" kindref="member">Rx</ref><sp/>=<sp/>sqrt<sp/>(OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a6af6966cfc75974663f3746d8a490a34" kindref="member">Ix</ref><sp/>/<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a91a6aea2761ea0e675b1e47c87da2509" kindref="member">L</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1afb6d2229fa00b3a255aa11efa7894527" kindref="member">Ry</ref><sp/>=<sp/>sqrt<sp/>(OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1af32048351768bcc8ad6566dcb452090d" kindref="member">Iy</ref><sp/>/<sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a91a6aea2761ea0e675b1e47c87da2509" kindref="member">L</ref>);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a48dcb42e547f23fbf75a53f396c2d020" kindref="member">Mx</ref><sp/>*=<sp/>0.5;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a19fd6ebb6e878a2f2df7c168edd7ed81" kindref="member">My</ref><sp/>*=<sp/>0.5;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FinishOutlineStats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1ab1a3167a695b3448b64ee38f6da9a264" kindref="member">InitOutlineStats</ref>(<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s" kindref="compound">OUTLINE_STATS</ref><sp/>*OutlineStats)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>**<sp/><sp/><sp/>OutlineStats<sp/><sp/>stats<sp/>data<sp/>structure<sp/>to<sp/>be<sp/>initialized</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>Initialize<sp/>the<sp/>outline<sp/>statistics<sp/>data<sp/>structure<sp/>so</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>**<sp/><sp/><sp/>that<sp/>it<sp/>is<sp/>ready<sp/>to<sp/>start<sp/>accumulating<sp/>statistics.</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Dec<sp/>14<sp/>08:55:22<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a48dcb42e547f23fbf75a53f396c2d020" kindref="member">Mx</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a19fd6ebb6e878a2f2df7c168edd7ed81" kindref="member">My</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a91a6aea2761ea0e675b1e47c87da2509" kindref="member">L</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a2e72d57afc14290aef97b17bba52cd98" kindref="member">x</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a27f428c88f5d21ad9125a93c30d73699" kindref="member">y</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a6af6966cfc75974663f3746d8a490a34" kindref="member">Ix</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1af32048351768bcc8ad6566dcb452090d" kindref="member">Iy</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a44df0e96a471cc5e0380b52d04eec549" kindref="member">Rx</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1afb6d2229fa00b3a255aa11efa7894527" kindref="member">Ry</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>InitOutlineStats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/><ref refid="mfoutline_8cpp_1a224d838335416038dcb0348f665f5a05" kindref="member">NextDirectionChange</ref>(<ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>EdgePoint)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>**<sp/><sp/><sp/>EdgePoint<sp/>start<sp/>search<sp/>from<sp/>this<sp/>point</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>**<sp/><sp/><sp/>This<sp/>routine<sp/>returns<sp/>the<sp/>next<sp/>point<sp/>in<sp/>the<sp/>micro-feature</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>**<sp/><sp/><sp/>outline<sp/>that<sp/>has<sp/>a<sp/>direction<sp/>different<sp/>than<sp/>EdgePoint.<sp/><sp/>The</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>**<sp/><sp/><sp/>routine<sp/>assumes<sp/>that<sp/>the<sp/>outline<sp/>being<sp/>searched<sp/>is<sp/>not<sp/>a</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/>**<sp/><sp/><sp/>degenerate<sp/>outline<sp/>(i.e.<sp/>it<sp/>must<sp/>have<sp/>2<sp/>or<sp/>more<sp/>edge<sp/>points).</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Point<sp/>of<sp/>next<sp/>direction<sp/>change<sp/>in<sp/>micro-feature<sp/>outline.</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/>**<sp/>History:<sp/>7/25/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><ref refid="mfoutline_8h_1aa268a41a13430b18e933ed40207178d0" kindref="member">DIRECTION</ref><sp/>InitialDirection;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>InitialDirection<sp/>=<sp/><ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref><sp/>(EdgePoint)-&gt;Direction;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">MFOUTLINE</ref><sp/>next_pt<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>EdgePoint<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref>(EdgePoint);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>next_pt<sp/>=<sp/><ref refid="mfoutline_8h_1ad2dfef920e57366bab3231610ab39f4d" kindref="member">NextPointAfter</ref>(EdgePoint);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref>(EdgePoint)-&gt;Direction<sp/>==<sp/>InitialDirection<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref>(EdgePoint)-&gt;Hidden<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_pt<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!<ref refid="mfoutline_8h_1aabb22902a8c1b9a830cb6347a474feea" kindref="member">PointAt</ref>(next_pt)-&gt;Hidden);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(EdgePoint);</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NextDirectionChange<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8cpp_1a943167d00e171b3cbc68252f32a45196" kindref="member">UpdateOutlineStats</ref>(</highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s" kindref="compound">OUTLINE_STATS</ref><sp/>*OutlineStats,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>x1,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>x2,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>y1,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>y2)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/>**<sp/><sp/><sp/>OutlineStats<sp/><sp/>statistics<sp/>to<sp/>add<sp/>this<sp/>segment<sp/>to</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/>**<sp/><sp/><sp/>x1,<sp/>y1,<sp/>x2,<sp/>y2<sp/><sp/>segment<sp/>to<sp/>be<sp/>added<sp/>to<sp/>statistics</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>**<sp/>Operation:<sp/>This<sp/>routine<sp/>adds<sp/>the<sp/>statistics<sp/>for<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/>**<sp/><sp/><sp/>line<sp/>segment<sp/>to<sp/>OutlineStats.<sp/><sp/>The<sp/>statistics<sp/>that<sp/>are</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/>**<sp/><sp/><sp/>kept<sp/>are:</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>sum<sp/>of<sp/>length<sp/>of<sp/>all<sp/>segments</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>sum<sp/>of<sp/>2*Mx<sp/>for<sp/>all<sp/>segments</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>sum<sp/>of<sp/>2*My<sp/>for<sp/>all<sp/>segments</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>sum<sp/>of<sp/>2*Mx*(y1+y2)<sp/>-<sp/>L*y1*y2<sp/>for<sp/>all<sp/>segments</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>sum<sp/>of<sp/>2*My*(x1+x2)<sp/>-<sp/>L*x1*x2<sp/>for<sp/>all<sp/>segments</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>**<sp/><sp/><sp/>These<sp/>numbers,<sp/>once<sp/>collected<sp/>can<sp/>later<sp/>be<sp/>used<sp/>to<sp/>easily</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>**<sp/><sp/><sp/>compute<sp/>the<sp/>center<sp/>of<sp/>mass,<sp/>first<sp/>and<sp/>second<sp/>moments,</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>**<sp/><sp/><sp/>and<sp/>radii<sp/>of<sp/>gyration.<sp/><sp/>(see<sp/>Dan<sp/>Johnson&apos;s<sp/>Tesseract<sp/>lab</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/>**<sp/><sp/><sp/>notebook<sp/>#2,<sp/>pgs.<sp/>74-78).</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Dec<sp/>14<sp/>08:59:17<sp/>1990,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1aa8336782d864ba03efadb73a51260961" kindref="member">FLOAT64</ref><sp/>L;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1aa8336782d864ba03efadb73a51260961" kindref="member">FLOAT64</ref><sp/>Mx2;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="host_8h_1aa8336782d864ba03efadb73a51260961" kindref="member">FLOAT64</ref><sp/>My2;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>length<sp/>of<sp/>segment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>L<sp/>=<sp/>sqrt<sp/>((x2<sp/>-<sp/>x1)<sp/>*<sp/>(x2<sp/>-<sp/>x1)<sp/>+<sp/>(y2<sp/>-<sp/>y1)<sp/>*<sp/>(y2<sp/>-<sp/>y1));</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a91a6aea2761ea0e675b1e47c87da2509" kindref="member">L</ref><sp/>+=<sp/>L;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>2Mx<sp/>and<sp/>2My<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>Mx2<sp/>=<sp/>L<sp/>*<sp/>(y1<sp/>+<sp/>y2);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>My2<sp/>=<sp/>L<sp/>*<sp/>(x1<sp/>+<sp/>x2);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a48dcb42e547f23fbf75a53f396c2d020" kindref="member">Mx</ref><sp/>+=<sp/>Mx2;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a19fd6ebb6e878a2f2df7c168edd7ed81" kindref="member">My</ref><sp/>+=<sp/>My2;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>second<sp/>moment<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1a6af6966cfc75974663f3746d8a490a34" kindref="member">Ix</ref><sp/>+=<sp/>Mx2<sp/>*<sp/>(y1<sp/>+<sp/>y2)<sp/>-<sp/>L<sp/>*<sp/>y1<sp/>*<sp/>y2;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/>OutlineStats-&gt;<ref refid="struct_o_u_t_l_i_n_e___s_t_a_t_s_1af32048351768bcc8ad6566dcb452090d" kindref="member">Iy</ref><sp/>+=<sp/>My2<sp/>*<sp/>(x1<sp/>+<sp/>x2)<sp/>-<sp/>L<sp/>*<sp/>x1<sp/>*<sp/>x2;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>UpdateOutlineStats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/mfoutline.cpp"/>
  </compounddef>
</doxygen>
