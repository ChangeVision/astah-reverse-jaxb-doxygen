<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_s_v_sync" kind="class" prot="public">
    <compoundname>SVSync</compoundname>
    <includes refid="svutil_8h" local="no">svutil.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_s_v_sync_1a125c68e610da736499500f145601799a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SVSync::StartThread</definition>
        <argsstring>(void *(*func)(void *), void *arg)</argsstring>
        <name>StartThread</name>
        <param>
          <type>void *(*)(void *)</type>
          <declname>func</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Create new thread. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/viewer/svutil.h" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/viewer/svutil.cpp" bodystart="187" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_sync_1a2d48b893c4ed83873d7975be888f8b00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SVSync::ExitThread</definition>
        <argsstring>()</argsstring>
        <name>ExitThread</name>
        <briefdescription>
<para>Signals a thread to exit. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/viewer/svutil.h" line="60" column="1" bodyfile="/Users/makoto/Desktop/trunk/viewer/svutil.cpp" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_s_v_sync_1aea4f2c7847c7c165fba1a60aadec3e05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SVSync::StartProcess</definition>
        <argsstring>(const char *executable, const char *args)</argsstring>
        <name>StartProcess</name>
        <param>
          <type>const char *</type>
          <declname>executable</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Starts a new process. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/viewer/svutil.h" line="62" column="1" bodyfile="/Users/makoto/Desktop/trunk/viewer/svutil.cpp" bodystart="75" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_s_v_sync" kindref="compound">SVSync</ref> class provides functionality for Thread &amp; Process Creation. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/viewer/svutil.h" line="55" column="1" bodyfile="/Users/makoto/Desktop/trunk/viewer/svutil.h" bodystart="55" bodyend="63"/>
    <listofallmembers>
      <member refid="class_s_v_sync_1a2d48b893c4ed83873d7975be888f8b00" prot="public" virt="non-virtual"><scope>SVSync</scope><name>ExitThread</name></member>
      <member refid="class_s_v_sync_1aea4f2c7847c7c165fba1a60aadec3e05" prot="public" virt="non-virtual"><scope>SVSync</scope><name>StartProcess</name></member>
      <member refid="class_s_v_sync_1a125c68e610da736499500f145601799a" prot="public" virt="non-virtual"><scope>SVSync</scope><name>StartThread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
