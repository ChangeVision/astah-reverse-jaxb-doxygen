<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="resultiterator_8cpp" kind="file">
    <compoundname>resultiterator.cpp</compoundname>
    <includes refid="resultiterator_8h" local="yes">resultiterator.h</includes>
    <includes local="yes">allheaders.h</includes>
    <includes refid="pageres_8h" local="yes">pageres.h</includes>
    <includes refid="strngs_8h" local="yes">strngs.h</includes>
    <includes refid="tesseractclass_8h" local="yes">tesseractclass.h</includes>
    <includes refid="unicharset_8h" local="yes">unicharset.h</includes>
    <includes refid="unicodes_8h" local="yes">unicodes.h</includes>
    <incdepgraph>
      <node id="4072">
        <label>matchtab.h</label>
        <link refid="matchtab_8h"/>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="3983" relation="include">
        </childnode>
      </node>
      <node id="4077">
        <label>unicodes.h</label>
        <link refid="unicodes_8h"/>
      </node>
      <node id="4025">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="4026" relation="include">
        </childnode>
        <childnode refid="4031" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
      </node>
      <node id="4036">
        <label>docqual.h</label>
        <link refid="docqual_8h"/>
        <childnode refid="4034" relation="include">
        </childnode>
        <childnode refid="4019" relation="include">
        </childnode>
      </node>
      <node id="4042">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="4045">
        <label>wordrec.h</label>
        <link refid="wordrec_8h"/>
        <childnode refid="4046" relation="include">
        </childnode>
        <childnode refid="4049" relation="include">
        </childnode>
        <childnode refid="4059" relation="include">
        </childnode>
        <childnode refid="4070" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="4047" relation="include">
        </childnode>
        <childnode refid="4072" relation="include">
        </childnode>
        <childnode refid="4071" relation="include">
        </childnode>
        <childnode refid="4073" relation="include">
        </childnode>
        <childnode refid="4021" relation="include">
        </childnode>
        <childnode refid="4048" relation="include">
        </childnode>
        <childnode refid="4074" relation="include">
        </childnode>
        <childnode refid="4076" relation="include">
        </childnode>
      </node>
      <node id="4043">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="3984" relation="include">
        </childnode>
        <childnode refid="4007" relation="include">
        </childnode>
        <childnode refid="4005" relation="include">
        </childnode>
        <childnode refid="3999" relation="include">
        </childnode>
        <childnode refid="4035" relation="include">
        </childnode>
      </node>
      <node id="4048">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
      </node>
      <node id="4018">
        <label>assert.h</label>
      </node>
      <node id="4033">
        <label>tesseractclass.h</label>
        <link refid="tesseractclass_8h"/>
        <childnode refid="3981" relation="include">
        </childnode>
        <childnode refid="4034" relation="include">
        </childnode>
        <childnode refid="4036" relation="include">
        </childnode>
        <childnode refid="4037" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="4038" relation="include">
        </childnode>
        <childnode refid="4040" relation="include">
        </childnode>
        <childnode refid="4045" relation="include">
        </childnode>
      </node>
      <node id="4049">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="4050" relation="include">
        </childnode>
        <childnode refid="4041" relation="include">
        </childnode>
        <childnode refid="4049" relation="include">
        </childnode>
        <childnode refid="4059" relation="include">
        </childnode>
        <childnode refid="4064" relation="include">
        </childnode>
        <childnode refid="4066" relation="include">
        </childnode>
        <childnode refid="4067" relation="include">
        </childnode>
        <childnode refid="4068" relation="include">
        </childnode>
        <childnode refid="3998" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="4065" relation="include">
        </childnode>
        <childnode refid="4058" relation="include">
        </childnode>
      </node>
      <node id="3980">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="4020">
        <label>rejctmap.h</label>
        <link refid="rejctmap_8h"/>
        <childnode refid="3972" relation="include">
        </childnode>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="4019" relation="include">
        </childnode>
      </node>
      <node id="4035">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3993" relation="include">
        </childnode>
      </node>
      <node id="4031">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="4037">
        <label>devanagari_processing.h</label>
        <link refid="devanagari__processing_8h"/>
        <childnode refid="3999" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
      </node>
      <node id="3979">
        <label>stdlib.h</label>
      </node>
      <node id="3960">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="3961" relation="include">
        </childnode>
      </node>
      <node id="4057">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="4073">
        <label>gradechop.h</label>
        <link refid="gradechop_8h"/>
        <childnode refid="4021" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
      </node>
      <node id="4038">
        <label>ocrclass.h</label>
        <link refid="ocrclass_8h"/>
        <childnode refid="4039" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="3963">
        <label>pageiterator.h</label>
        <link refid="pageiterator_8h"/>
        <childnode refid="3964" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
      </node>
      <node id="4008">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="3966" relation="include">
        </childnode>
      </node>
      <node id="4026">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="4027" relation="include">
        </childnode>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
        <childnode refid="4028" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="4029" relation="include">
        </childnode>
        <childnode refid="4030" relation="include">
        </childnode>
      </node>
      <node id="3981">
        <label>allheaders.h</label>
      </node>
      <node id="3993">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
      </node>
      <node id="3959">
        <label>resultiterator.h</label>
        <link refid="resultiterator_8h"/>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3962" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
      </node>
      <node id="3985">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="3979" relation="include">
        </childnode>
        <childnode refid="3970" relation="include">
        </childnode>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3972" relation="include">
        </childnode>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3986" relation="include">
        </childnode>
      </node>
      <node id="4032">
        <label>tessarray.h</label>
        <link refid="tessarray_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
      </node>
      <node id="3984">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3985" relation="include">
        </childnode>
        <childnode refid="3987" relation="include">
        </childnode>
      </node>
      <node id="4055">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
      </node>
      <node id="4041">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="4024" relation="include">
        </childnode>
        <childnode refid="4042" relation="include">
        </childnode>
      </node>
      <node id="4009">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="4010" relation="include">
        </childnode>
        <childnode refid="3988" relation="include">
        </childnode>
      </node>
      <node id="4062">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="4060" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
      </node>
      <node id="4017">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="3984" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="4019" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="4005" relation="include">
        </childnode>
      </node>
      <node id="3973">
        <label>stddef.h</label>
      </node>
      <node id="3976">
        <label>memory.h</label>
      </node>
      <node id="4069">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="4052" relation="include">
        </childnode>
      </node>
      <node id="4054">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3989" relation="include">
        </childnode>
      </node>
      <node id="4076">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="4018" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
      </node>
      <node id="3966">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="4052">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
      </node>
      <node id="4014">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="3964" relation="include">
        </childnode>
        <childnode refid="3991" relation="include">
        </childnode>
        <childnode refid="3990" relation="include">
        </childnode>
        <childnode refid="3988" relation="include">
        </childnode>
        <childnode refid="3993" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
      </node>
      <node id="3961">
        <label>limits.h</label>
      </node>
      <node id="4075">
        <label>chop.h</label>
        <link refid="chop_8h"/>
        <childnode refid="4071" relation="include">
        </childnode>
        <childnode refid="4021" relation="include">
        </childnode>
      </node>
      <node id="4067">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="4051" relation="include">
        </childnode>
        <childnode refid="3998" relation="include">
        </childnode>
        <childnode refid="3989" relation="include">
        </childnode>
      </node>
      <node id="4046">
        <label>associate.h</label>
        <link refid="associate_8h"/>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="3991" relation="include">
        </childnode>
        <childnode refid="4047" relation="include">
        </childnode>
        <childnode refid="4021" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4048" relation="include">
        </childnode>
      </node>
      <node id="4016">
        <label>params_training_featdef.h</label>
        <link refid="params__training__featdef_8h"/>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
      </node>
      <node id="4059">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="4027" relation="include">
        </childnode>
        <childnode refid="4060" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="4042" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="4061" relation="include">
        </childnode>
        <childnode refid="4062" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="4063" relation="include">
        </childnode>
      </node>
      <node id="3992">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="3989" relation="include">
        </childnode>
      </node>
      <node id="4012">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="3990" relation="include">
        </childnode>
      </node>
      <node id="4007">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3985" relation="include">
        </childnode>
        <childnode refid="3987" relation="include">
        </childnode>
      </node>
      <node id="4029">
        <label>pthread.h</label>
      </node>
      <node id="3970">
        <label>string.h</label>
      </node>
      <node id="3977">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="3975" relation="include">
        </childnode>
      </node>
      <node id="3997">
        <label>boxword.h</label>
        <link refid="boxword_8h"/>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3988" relation="include">
        </childnode>
      </node>
      <node id="3975">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="3976" relation="include">
        </childnode>
        <childnode refid="3970" relation="include">
        </childnode>
      </node>
      <node id="4024">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3970" relation="include">
        </childnode>
        <childnode refid="3979" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3994" relation="include">
        </childnode>
        <childnode refid="4025" relation="include">
        </childnode>
      </node>
      <node id="4074">
        <label>findseam.h</label>
        <link refid="findseam_8h"/>
        <childnode refid="4021" relation="include">
        </childnode>
        <childnode refid="4071" relation="include">
        </childnode>
        <childnode refid="4075" relation="include">
        </childnode>
      </node>
      <node id="3988">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="3989" relation="include">
        </childnode>
        <childnode refid="3990" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
        <childnode refid="3993" relation="include">
        </childnode>
        <childnode refid="3994" relation="include">
        </childnode>
      </node>
      <node id="4006">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="3974">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="4030">
        <label>semaphore.h</label>
      </node>
      <node id="4010">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="4011" relation="include">
        </childnode>
        <childnode refid="4012" relation="include">
        </childnode>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="3988" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="3993" relation="include">
        </childnode>
      </node>
      <node id="4005">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="4006" relation="include">
        </childnode>
        <childnode refid="4007" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
        <childnode refid="4008" relation="include">
        </childnode>
        <childnode refid="4009" relation="include">
        </childnode>
        <childnode refid="4002" relation="include">
        </childnode>
      </node>
      <node id="4002">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="4003" relation="include">
        </childnode>
        <childnode refid="4005" relation="include">
        </childnode>
      </node>
      <node id="3986">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="3966" relation="include">
        </childnode>
      </node>
      <node id="4053">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4054" relation="include">
        </childnode>
        <childnode refid="4055" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
      </node>
      <node id="4027">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="3991" relation="include">
        </childnode>
        <childnode refid="3994" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
      </node>
      <node id="4058">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="3974" relation="include">
        </childnode>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
      </node>
      <node id="4039">
        <label>time.h</label>
      </node>
      <node id="4011">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="3990" relation="include">
        </childnode>
        <childnode refid="4012" relation="include">
        </childnode>
      </node>
      <node id="3989">
        <label>math.h</label>
      </node>
      <node id="4022">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="4023" relation="include">
        </childnode>
      </node>
      <node id="3987">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="3966" relation="include">
        </childnode>
      </node>
      <node id="3962">
        <label>ltrresultiterator.h</label>
        <link refid="ltrresultiterator_8h"/>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3963" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
      </node>
      <node id="4004">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="3990" relation="include">
        </childnode>
      </node>
      <node id="3996">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="3989" relation="include">
        </childnode>
        <childnode refid="3983" relation="include">
        </childnode>
      </node>
      <node id="3964">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="4023">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="4024" relation="include">
        </childnode>
        <childnode refid="3974" relation="include">
        </childnode>
      </node>
      <node id="4065">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="3969" relation="include">
        </childnode>
      </node>
      <node id="4044">
        <label>gap_map.h</label>
        <link refid="gap__map_8h"/>
        <childnode refid="4043" relation="include">
        </childnode>
        <childnode refid="4019" relation="include">
        </childnode>
      </node>
      <node id="3999">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="4000" relation="include">
        </childnode>
        <childnode refid="4001" relation="include">
        </childnode>
        <childnode refid="4002" relation="include">
        </childnode>
        <childnode refid="4013" relation="include">
        </childnode>
      </node>
      <node id="3995">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
      </node>
      <node id="3978">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3979" relation="include">
        </childnode>
        <childnode refid="3974" relation="include">
        </childnode>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3968" relation="include">
        </childnode>
        <childnode refid="3980" relation="include">
        </childnode>
      </node>
      <node id="4061">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="4048" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
      </node>
      <node id="3972">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="3973" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="4040">
        <label>textord.h</label>
        <link refid="textord_8h"/>
        <childnode refid="4041" relation="include">
        </childnode>
        <childnode refid="4043" relation="include">
        </childnode>
        <childnode refid="4044" relation="include">
        </childnode>
        <childnode refid="4019" relation="include">
        </childnode>
        <childnode refid="3964" relation="include">
        </childnode>
      </node>
      <node id="4056">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="4057" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="4058" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
      </node>
      <node id="3982">
        <label>pageres.h</label>
        <link refid="pageres_8h"/>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="3997" relation="include">
        </childnode>
        <childnode refid="3991" relation="include">
        </childnode>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3998" relation="include">
        </childnode>
        <childnode refid="3999" relation="include">
        </childnode>
        <childnode refid="4002" relation="include">
        </childnode>
        <childnode refid="4016" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="4020" relation="include">
        </childnode>
        <childnode refid="4021" relation="include">
        </childnode>
        <childnode refid="4005" relation="include">
        </childnode>
      </node>
      <node id="4070">
        <label>language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="4046" relation="include">
        </childnode>
        <childnode refid="4060" relation="include">
        </childnode>
        <childnode refid="4059" relation="include">
        </childnode>
        <childnode refid="4066" relation="include">
        </childnode>
        <childnode refid="4051" relation="include">
        </childnode>
        <childnode refid="4047" relation="include">
        </childnode>
        <childnode refid="4071" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
      </node>
      <node id="4064">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="4065" relation="include">
        </childnode>
      </node>
      <node id="4001">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="3964" relation="include">
        </childnode>
        <childnode refid="3991" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
      </node>
      <node id="3991">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3985" relation="include">
        </childnode>
        <childnode refid="3987" relation="include">
        </childnode>
      </node>
      <node id="3965">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3968" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
        <childnode refid="3974" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
        <childnode refid="3977" relation="include">
        </childnode>
      </node>
      <node id="4021">
        <label>seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="3983" relation="include">
        </childnode>
        <childnode refid="4022" relation="include">
        </childnode>
        <childnode refid="4032" relation="include">
        </childnode>
      </node>
      <node id="4034">
        <label>control.h</label>
        <link refid="control_8h"/>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="3999" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="4035" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
        <childnode refid="4019" relation="include">
        </childnode>
      </node>
      <node id="3958">
        <label>ccmain/resultiterator.cpp</label>
        <link refid="resultiterator.cpp"/>
        <childnode refid="3959" relation="include">
        </childnode>
        <childnode refid="3981" relation="include">
        </childnode>
        <childnode refid="3982" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
        <childnode refid="4033" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="4077" relation="include">
        </childnode>
      </node>
      <node id="4071">
        <label>oldheap.h</label>
        <link refid="oldheap_8h"/>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="4024" relation="include">
        </childnode>
      </node>
      <node id="4060">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="3991" relation="include">
        </childnode>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="3974" relation="include">
        </childnode>
      </node>
      <node id="4066">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3975" relation="include">
        </childnode>
      </node>
      <node id="3990">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3989" relation="include">
        </childnode>
        <childnode refid="3991" relation="include">
        </childnode>
        <childnode refid="3992" relation="include">
        </childnode>
      </node>
      <node id="4050">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="4023" relation="include">
        </childnode>
        <childnode refid="4051" relation="include">
        </childnode>
        <childnode refid="3969" relation="include">
        </childnode>
      </node>
      <node id="4019">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="4000">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="3972" relation="include">
        </childnode>
      </node>
      <node id="3994">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="3995" relation="include">
        </childnode>
      </node>
      <node id="4068">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="4051" relation="include">
        </childnode>
        <childnode refid="4069" relation="include">
        </childnode>
      </node>
      <node id="4015">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="3967">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="3960" relation="include">
        </childnode>
      </node>
      <node id="4013">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="3984" relation="include">
        </childnode>
        <childnode refid="4000" relation="include">
        </childnode>
        <childnode refid="3971" relation="include">
        </childnode>
        <childnode refid="4014" relation="include">
        </childnode>
        <childnode refid="4015" relation="include">
        </childnode>
      </node>
      <node id="3969">
        <label>stdio.h</label>
      </node>
      <node id="4047">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
      </node>
      <node id="4051">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="3978" relation="include">
        </childnode>
        <childnode refid="4052" relation="include">
        </childnode>
        <childnode refid="4053" relation="include">
        </childnode>
        <childnode refid="4056" relation="include">
        </childnode>
        <childnode refid="3993" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
      </node>
      <node id="4028">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
        <childnode refid="3994" relation="include">
        </childnode>
      </node>
      <node id="3998">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="3971">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3970" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3972" relation="include">
        </childnode>
      </node>
      <node id="3983">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="3984" relation="include">
        </childnode>
        <childnode refid="3988" relation="include">
        </childnode>
        <childnode refid="3996" relation="include">
        </childnode>
      </node>
      <node id="3968">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="3969" relation="include">
        </childnode>
        <childnode refid="3970" relation="include">
        </childnode>
      </node>
      <node id="4063">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="4017" relation="include">
        </childnode>
        <childnode refid="3995" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
      </node>
      <node id="4003">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="4004" relation="include">
        </childnode>
        <childnode refid="3985" relation="include">
        </childnode>
        <childnode refid="3972" relation="include">
        </childnode>
        <childnode refid="3988" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultiterator.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Iterator<sp/>for<sp/>tesseract<sp/>results<sp/>that<sp/>is<sp/>capable<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterating<sp/>in<sp/>proper<sp/>reading<sp/>order<sp/>over<sp/>Bi<sp/>Directional</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(e.g.<sp/>mixed<sp/>Hebrew<sp/>and<sp/>English)<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>David<sp/>Eger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>May<sp/>27<sp/>13:58:06<sp/>PST<sp/>2011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2011,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resultiterator_8h" kindref="compound">resultiterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pageres_8h" kindref="compound">pageres.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strngs_8h" kindref="compound">strngs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tesseractclass_8h" kindref="compound">tesseractclass.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicharset_8h" kindref="compound">unicharset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicodes_8h" kindref="compound">unicodes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="classtesseract_1_1_result_iterator_1aa0f6c0e15c83e9ed718d80d736865c3f" kindref="member">ResultIterator::ResultIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LTRResultIterator<sp/>&amp;resit)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>LTRResultIterator(resit)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>in_minor_direction_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>at_beginning_of_minor_run_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>current_paragraph_is_ltr_<sp/>=<sp/>CurrentParagraphIsLtr();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>MoveToLogicalStartOfTextline();</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">ResultIterator<sp/>*ResultIterator::StartOfParagraph(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LTRResultIterator<sp/>&amp;resit)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ResultIterator(resit);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ResultIterator::ParagraphIsLtr()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current_paragraph_is_ltr_;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ResultIterator::CurrentParagraphIsLtr()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it_-&gt;word())</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>doesn&apos;t<sp/>matter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>LTRResultIterator<sp/>it(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>it.RestartParagraph();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>figure<sp/>out<sp/>the<sp/>ltr-ness<sp/>of<sp/>the<sp/>paragraph.<sp/><sp/>The<sp/>rules<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>more<sp/>sense<sp/>in<sp/>the<sp/>context<sp/>of<sp/>a<sp/>difficult<sp/>paragraph<sp/>example.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>denote<sp/>{ltr<sp/>characters,<sp/>RTL<sp/>CHARACTERS}:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>&quot;don&apos;t<sp/>go<sp/>in<sp/>there!&quot;<sp/>DAIS<sp/>EH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>EHT<sp/>OTNI<sp/>DEPMUJ<sp/>FELSMIH<sp/>NEHT<sp/>DNA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.GNIDLIUB<sp/>GNINRUB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>the<sp/>first<sp/>line,<sp/>the<sp/>left-most<sp/>word<sp/>is<sp/>LTR<sp/>and<sp/>the<sp/>rightmost<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>RTL.<sp/><sp/>Thus,<sp/>we<sp/>are<sp/>better<sp/>off<sp/>taking<sp/>the<sp/>majority<sp/>direction<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>whole<sp/>paragraph<sp/>contents.<sp/><sp/>So<sp/>instead<sp/>of<sp/>&quot;the<sp/>leftmost<sp/>word<sp/>is<sp/>LTR&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>indicating<sp/>an<sp/>LTR<sp/>paragraph,<sp/>we<sp/>use<sp/>a<sp/>heuristic<sp/>about<sp/>what<sp/>RTL<sp/>paragraphs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>would<sp/>not<sp/>do:<sp/><sp/>Typically<sp/>an<sp/>RTL<sp/>paragraph<sp/>would<sp/>*not*<sp/>start<sp/>with<sp/>an<sp/>LTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>word.<sp/><sp/>So<sp/>our<sp/>heuristics<sp/>are<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(1)<sp/>If<sp/>the<sp/>first<sp/>text<sp/>line<sp/>has<sp/>an<sp/>RTL<sp/>word<sp/>in<sp/>the<sp/>left-most<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>it<sp/>is<sp/>RTL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(2)<sp/>If<sp/>the<sp/>first<sp/>text<sp/>line<sp/>has<sp/>an<sp/>LTR<sp/>word<sp/>in<sp/>the<sp/>right-most<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>it<sp/>is<sp/>LTR.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(3)<sp/>If<sp/>neither<sp/>of<sp/>the<sp/>above<sp/>is<sp/>true,<sp/>take<sp/>the<sp/>majority<sp/>count<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>paragraph<sp/>--<sp/>if<sp/>there<sp/>are<sp/>more<sp/>rtl<sp/>words,<sp/>it<sp/>is<sp/>RTL.<sp/><sp/>If<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>are<sp/>more<sp/>LTR<sp/>words,<sp/>it&apos;s<sp/>LTR.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>leftmost_rtl<sp/>=<sp/>it.WordDirection()<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa3c6da23f98ab8ac48598c21583d9297e" kindref="member">DIR_RIGHT_TO_LEFT</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rightmost_ltr<sp/>=<sp/>it.WordDirection()<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa5978cd698552a6106db1bf6528617317" kindref="member">DIR_LEFT_TO_RIGHT</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_ltr,<sp/>num_rtl;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>num_rtl<sp/>=<sp/>leftmost_rtl<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>num_ltr<sp/>=<sp/>(it.WordDirection()<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa5978cd698552a6106db1bf6528617317" kindref="member">DIR_LEFT_TO_RIGHT</ref>)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!it.Empty(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>)<sp/>&amp;&amp;<sp/>!it.IsAtBeginningOf(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3123e62cc5c3e33f975ff196193f8d53" kindref="member">RIL_TEXTLINE</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>))<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dba" kindref="member">StrongScriptDirection</ref><sp/>dir<sp/>=<sp/>it.WordDirection();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>rightmost_ltr<sp/>=<sp/>(dir<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa5978cd698552a6106db1bf6528617317" kindref="member">DIR_LEFT_TO_RIGHT</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>num_rtl<sp/>+=<sp/>(dir<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa3c6da23f98ab8ac48598c21583d9297e" kindref="member">DIR_RIGHT_TO_LEFT</ref>)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>num_ltr<sp/>+=<sp/>rightmost_ltr<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leftmost_rtl)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rightmost_ltr)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>line<sp/>is<sp/>ambiguous.<sp/><sp/>Take<sp/>statistics<sp/>on<sp/>the<sp/>whole<sp/>paragraph.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.Empty(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>)<sp/>&amp;&amp;<sp/>!it.IsAtBeginningOf(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3c0c2835849e110ba0a6ae414f90f2f0" kindref="member">RIL_PARA</ref>))<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dba" kindref="member">StrongScriptDirection</ref><sp/>dir<sp/>=<sp/>it.WordDirection();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>num_rtl<sp/>+=<sp/>(dir<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa3c6da23f98ab8ac48598c21583d9297e" kindref="member">DIR_RIGHT_TO_LEFT</ref>)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>num_ltr<sp/>+=<sp/>(dir<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa5978cd698552a6106db1bf6528617317" kindref="member">DIR_LEFT_TO_RIGHT</ref>)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it.Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>)<sp/>&amp;&amp;<sp/>!it.IsAtBeginningOf(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3c0c2835849e110ba0a6ae414f90f2f0" kindref="member">RIL_PARA</ref>));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_ltr<sp/>&gt;=<sp/>num_rtl;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResultIterator::kMinorRunStart<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResultIterator::kMinorRunEnd<sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResultIterator::kComplexWord<sp/>=<sp/>-3;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::CalculateBlobOrder(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>*blob_indices)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>context_is_ltr<sp/>=<sp/>current_paragraph_is_ltr_<sp/>^<sp/>in_minor_direction_;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>blob_indices-&gt;<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Empty(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(context_is_ltr<sp/>||<sp/>it_-&gt;word()-&gt;UnicharsInReadingOrder())<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Easy!<sp/>just<sp/>return<sp/>the<sp/>blobs<sp/>in<sp/>order;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word_length_;<sp/>i++)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_indices-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(i);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>blobs<sp/>are<sp/>in<sp/>left-to-right<sp/>order,<sp/>but<sp/>the<sp/>current<sp/>reading<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>right-to-left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>U_LTR<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078aea057cec3044e6ec313ffc0c0d85e0db" kindref="member">UNICHARSET::U_LEFT_TO_RIGHT</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>U_RTL<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078ac979da8ecbc0d158b8cb516db7e3824d" kindref="member">UNICHARSET::U_RIGHT_TO_LEFT</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>U_EURO_NUM<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078aaf5dc95f557dbfbbf3a517e8b93d9a01" kindref="member">UNICHARSET::U_EUROPEAN_NUMBER</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>U_EURO_NUM_SEP<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078a65341629a233d9f3003c110dff857f4b" kindref="member">UNICHARSET::U_EUROPEAN_NUMBER_SEPARATOR</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>U_EURO_NUM_TERM<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078a5f07604e909b46b5dc1920be0bbc7a88" kindref="member">UNICHARSET::U_EUROPEAN_NUMBER_TERMINATOR</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>U_COMMON_NUM_SEP<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078a409ccbace5eab0702c2f3c6eb948742b" kindref="member">UNICHARSET::U_COMMON_NUMBER_SEPARATOR</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>U_OTHER_NEUTRAL<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t_1a31e06ec0b942a9d392db21b49cf40078a5a183c9262a1161b5d34cf3d7c950cac" kindref="member">UNICHARSET::U_OTHER_NEUTRAL</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>1:<sp/>Scan<sp/>for<sp/>and<sp/>mark<sp/>European<sp/>Number<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>[:ET:]*[:EN:]+(([:ES:]|[:CS:])?[:EN:]+)*[:ET:]*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>letter_types;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word_length_;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>letter_types.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(it_-&gt;word()-&gt;SymbolDirection(i));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>a<sp/>single<sp/>separtor<sp/>sandwiched<sp/>between<sp/>two<sp/>EN&apos;s<sp/>into<sp/>an<sp/>EN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>+<sp/>2<sp/>&lt;<sp/>word_length_;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(letter_types[i]<sp/>==<sp/>U_EURO_NUM<sp/>&amp;&amp;<sp/>letter_types[i<sp/>+<sp/>2]<sp/>==<sp/>U_EURO_NUM<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(letter_types[i<sp/>+<sp/>1]<sp/>==<sp/>U_EURO_NUM_SEP<sp/>||</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>letter_types[i<sp/>+<sp/>1]<sp/>==<sp/>U_COMMON_NUM_SEP))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>letter_types[i<sp/>+<sp/>1]<sp/>=<sp/>U_EURO_NUM;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>for<sp/>sequences<sp/>of<sp/>European<sp/>Number<sp/>Terminators<sp/>around<sp/>ENs<sp/>and<sp/>convert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>them<sp/>to<sp/>ENs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word_length_;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(letter_types[i]<sp/>==<sp/>U_EURO_NUM_TERM)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>word_length_<sp/>&amp;&amp;<sp/>letter_types[j]<sp/>==<sp/>U_EURO_NUM_TERM)<sp/>{<sp/>j++;<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>word_length_<sp/>&amp;&amp;<sp/>letter_types[j]<sp/>==<sp/>U_EURO_NUM)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>sequence<sp/>[i..j]<sp/>should<sp/>be<sp/>converted<sp/>to<sp/>all<sp/>European<sp/>Numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>i;<sp/>k<sp/>&lt;<sp/>j;<sp/>k++)<sp/>letter_types[k]<sp/>=<sp/>U_EURO_NUM;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>i<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>-1<sp/>&amp;&amp;<sp/>letter_types[j]<sp/>==<sp/>U_EURO_NUM_TERM)<sp/>{<sp/>j--;<sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>-1<sp/>&amp;&amp;<sp/>letter_types[j]<sp/>==<sp/>U_EURO_NUM)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>sequence<sp/>[j..i]<sp/>should<sp/>be<sp/>converted<sp/>to<sp/>all<sp/>European<sp/>Numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>j;<sp/>k<sp/>&lt;=<sp/>i;<sp/>k++)<sp/>letter_types[k]<sp/>=<sp/>U_EURO_NUM;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Step<sp/>2:<sp/>Convert<sp/>all<sp/>remaining<sp/>types<sp/>to<sp/>either<sp/>L<sp/>or<sp/>R.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sequences<sp/>([:L:]|[:EN:])+<sp/>(([:CS:]|[:ON:])+<sp/>([:L:]|[:EN:])+)*<sp/>-&gt;<sp/>L.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>other<sp/>are<sp/>R.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>word_length_;)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ti<sp/>=<sp/>letter_types[i];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ti<sp/>==<sp/>U_LTR<sp/>||<sp/>ti<sp/>==<sp/>U_EURO_NUM)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Left<sp/>to<sp/>right<sp/>sequence;<sp/>scan<sp/>to<sp/>the<sp/>end<sp/>of<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_good<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>word_length_;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tj<sp/>=<sp/>letter_types[j];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tj<sp/>==<sp/>U_LTR<sp/>||<sp/>tj<sp/>==<sp/>U_EURO_NUM)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_good<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tj<sp/>==<sp/>U_COMMON_NUM_SEP<sp/>||<sp/>tj<sp/>==<sp/>U_OTHER_NEUTRAL)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[i..last_good]<sp/>is<sp/>the<sp/>L<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>i;<sp/>k<sp/>&lt;=<sp/>last_good;<sp/>k++)<sp/>letter_types[k]<sp/>=<sp/>U_LTR;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>last_good<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>letter_types[i]<sp/>=<sp/>U_RTL;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>point,<sp/>letter_types<sp/>is<sp/>entirely<sp/>U_LTR<sp/>or<sp/>U_RTL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>word_length_<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(letter_types[i]<sp/>==<sp/>U_RTL)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob_indices-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(i);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>to<sp/>right<sp/>sequence.<sp/><sp/>scan<sp/>to<sp/>the<sp/>beginning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>letter_types[j]<sp/>!=<sp/>U_RTL;<sp/>j--)<sp/>{<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>(j,<sp/>i]<sp/>is<sp/>LTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>j<sp/>+<sp/>1;<sp/>k<sp/>&lt;=<sp/>i;<sp/>k++)<sp/>blob_indices-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(k);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(blob_indices-&gt;<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>==<sp/>word_length_);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PrintScriptDirs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;StrongScriptDirection&gt;</ref><sp/>&amp;dirs)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dirs.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(dirs[i])<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaaacc5ec7fd402a8806e78fba831045aae" kindref="member">DIR_NEUTRAL</ref>:<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;N<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa5978cd698552a6106db1bf6528617317" kindref="member">DIR_LEFT_TO_RIGHT</ref>:<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;L<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa3c6da23f98ab8ac48598c21583d9297e" kindref="member">DIR_RIGHT_TO_LEFT</ref>:<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;R<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa252615b6d7ebef9293183f6e94488cc1" kindref="member">DIR_MIX</ref>:<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Z<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;?<sp/>&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::CalculateTextlineOrder(</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paragraph_is_ltr,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LTRResultIterator<sp/>&amp;resit,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>*word_indices)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;StrongScriptDirection&gt;</ref><sp/>directions;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>CalculateTextlineOrder(paragraph_is_ltr,<sp/>resit,<sp/>&amp;directions,<sp/>word_indices);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::CalculateTextlineOrder(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paragraph_is_ltr,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LTRResultIterator<sp/>&amp;resit,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;StrongScriptDirection&gt;</ref><sp/>*dirs_arg,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>*word_indices)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;StrongScriptDirection&gt;</ref><sp/>dirs;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;StrongScriptDirection&gt;</ref><sp/>*directions;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>directions<sp/>=<sp/>(dirs_arg<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>dirs_arg<sp/>:<sp/>&amp;dirs;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>directions-&gt;<ref refid="class_generic_vector_1af1793745c45178626c9afe48c7a1e140" kindref="member">truncate</ref>(0);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>LTRResultIterator<sp/>goes<sp/>strictly<sp/>left-to-right<sp/>word<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>LTRResultIterator<sp/>ltr_it(resit);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>ltr_it.RestartRow();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ltr_it.Empty(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>directions-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(ltr_it.WordDirection());</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ltr_it.Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>)<sp/>&amp;&amp;<sp/>!ltr_it.IsAtBeginningOf(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3123e62cc5c3e33f975ff196193f8d53" kindref="member">RIL_TEXTLINE</ref>));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>word_indices-&gt;<ref refid="class_generic_vector_1af1793745c45178626c9afe48c7a1e140" kindref="member">truncate</ref>(0);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>CalculateTextlineOrder(paragraph_is_ltr,<sp/>*directions,<sp/>word_indices);</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::CalculateTextlineOrder(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>paragraph_is_ltr,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;StrongScriptDirection&gt;</ref><sp/>&amp;word_dirs,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>*reading_order)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>reading_order-&gt;<ref refid="class_generic_vector_1af1793745c45178626c9afe48c7a1e140" kindref="member">truncate</ref>(0);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_dirs.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>all<sp/>of<sp/>the<sp/>runs<sp/>of<sp/>minor<sp/>direction<sp/>words<sp/>and<sp/>insert<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>reverse<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minor_direction,<sp/>major_direction,<sp/>major_step,<sp/>start,<sp/>end;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(paragraph_is_ltr)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>word_dirs.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>major_step<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>major_direction<sp/>=<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa5978cd698552a6106db1bf6528617317" kindref="member">DIR_LEFT_TO_RIGHT</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>minor_direction<sp/>=<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa3c6da23f98ab8ac48598c21583d9297e" kindref="member">DIR_RIGHT_TO_LEFT</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>start<sp/>=<sp/>word_dirs.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>major_step<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>major_direction<sp/>=<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa3c6da23f98ab8ac48598c21583d9297e" kindref="member">DIR_RIGHT_TO_LEFT</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>minor_direction<sp/>=<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa5978cd698552a6106db1bf6528617317" kindref="member">DIR_LEFT_TO_RIGHT</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>rule:<sp/>if<sp/>there<sp/>are<sp/>neutral<sp/>words<sp/>at<sp/>the<sp/>right<sp/>most<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>of<sp/>a<sp/>line<sp/>adjacent<sp/>to<sp/>a<sp/>left-to-right<sp/>word<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>line,<sp/>we<sp/>interpret<sp/>the<sp/>end<sp/>of<sp/>the<sp/>line<sp/>as<sp/>a<sp/>single<sp/>LTR<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_dirs[start]<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaaacc5ec7fd402a8806e78fba831045aae" kindref="member">DIR_NEUTRAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neutral_end<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(neutral_end<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>word_dirs[neutral_end]<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaaacc5ec7fd402a8806e78fba831045aae" kindref="member">DIR_NEUTRAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neutral_end--;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neutral_end<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>word_dirs[neutral_end]<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa5978cd698552a6106db1bf6528617317" kindref="member">DIR_LEFT_TO_RIGHT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LTR<sp/>followed<sp/>by<sp/>neutrals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>for<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>minor<sp/>left-to-right<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>neutral_end;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>left;<sp/>i<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>word_dirs[i]<sp/>!=<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa3c6da23f98ab8ac48598c21583d9297e" kindref="member">DIR_RIGHT_TO_LEFT</ref>;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_dirs[i]<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa5978cd698552a6106db1bf6528617317" kindref="member">DIR_LEFT_TO_RIGHT</ref>)<sp/>left<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(kMinorRunStart);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>left;<sp/>i<sp/>&lt;<sp/>word_dirs.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(i);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_dirs[i]<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa252615b6d7ebef9293183f6e94488cc1" kindref="member">DIR_MIX</ref>)<sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(kComplexWord);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(kMinorRunEnd);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>left<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>start;<sp/>i<sp/>!=<sp/>end;)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_dirs[i]<sp/>==<sp/>minor_direction)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>end<sp/>&amp;&amp;<sp/>word_dirs[j]<sp/>!=<sp/>major_direction)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>major_step;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>end)<sp/>j<sp/>-=<sp/>major_step;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>!=<sp/>i<sp/>&amp;&amp;<sp/>word_dirs[j]<sp/>!=<sp/>minor_direction)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>-=<sp/>major_step;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>[j..i]<sp/>is<sp/>a<sp/>minor<sp/>direction<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(kMinorRunStart);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>j;<sp/>k<sp/>!=<sp/>i;<sp/>k<sp/>-=<sp/>major_step)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(k);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(i);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(kMinorRunEnd);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>j<sp/>+<sp/>major_step;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(i);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_dirs[i]<sp/>==<sp/><ref refid="unichar_8h_1abc3119a959ecd5cffc1d9b9d57479dbaa252615b6d7ebef9293183f6e94488cc1" kindref="member">DIR_MIX</ref>)<sp/>reading_order-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(kComplexWord);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>major_step;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ResultIterator::LTRWordIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>this_word_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>LTRResultIterator<sp/>textline(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/>textline.RestartRow();</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!textline.PositionedAtSameWord(it_))<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>this_word_index++;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>textline.Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this_word_index;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::MoveToLogicalStartOfWord()<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_length_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>BeginWord(0);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>blob_order;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>CalculateBlobOrder(&amp;blob_order);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_order.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>==<sp/>0<sp/>||<sp/>blob_order[0]<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>BeginWord(blob_order[0]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ResultIterator::IsAtFinalSymbolOfWord()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it_-&gt;word())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>blob_order;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>CalculateBlobOrder(&amp;blob_order);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blob_order.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>==<sp/>0<sp/>||<sp/>blob_order.<ref refid="class_generic_vector_1a6e6d6497a6f7dd999b6d591c15354167" kindref="member">back</ref>()<sp/>==<sp/>blob_index_;</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ResultIterator::IsAtFirstSymbolOfWord()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it_-&gt;word())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>blob_order;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/>CalculateBlobOrder(&amp;blob_order);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>blob_order.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>==<sp/>0<sp/>||<sp/>blob_order[0]<sp/>==<sp/>blob_index_;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::AppendSuffixMarks(<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>*text)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it_-&gt;word())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reading_direction_is_ltr<sp/>=</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_paragraph_is_ltr_<sp/>^<sp/>in_minor_direction_;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>scan<sp/>forward<sp/>to<sp/>see<sp/>what<sp/>meta-information<sp/>the<sp/>word<sp/>ordering<sp/>algorithm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>us.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>word<sp/>is<sp/>at<sp/>the<sp/><sp/>*end*<sp/>of<sp/>a<sp/>minor<sp/>run,<sp/>insert<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>direction&apos;s<sp/>mark;<sp/><sp/>else<sp/>if<sp/>this<sp/>was<sp/>a<sp/>complex<sp/>word,<sp/>insert<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>reading<sp/>order&apos;s<sp/>mark.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>textline_order;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>CalculateTextlineOrder(current_paragraph_is_ltr_,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;textline_order);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>this_word_index<sp/>=<sp/>LTRWordIndex();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>textline_order.<ref refid="class_generic_vector_1a0a62e2c80254bad72fb8aa37fed3af33" kindref="member">get_index</ref>(this_word_index);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_non_word_mark<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i++;<sp/>i<sp/>&lt;<sp/>textline_order.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>&amp;&amp;<sp/>textline_order[i]<sp/>&lt;<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>last_non_word_mark<sp/>=<sp/>textline_order[i];</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_non_word_mark<sp/>==<sp/>kComplexWord)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>*text<sp/>+=<sp/>reading_direction_is_ltr<sp/>?<sp/><ref refid="namespacetesseract_1aa393f17e77d059739f005ada9a805c69" kindref="member">kLRM</ref><sp/>:<sp/><ref refid="namespacetesseract_1a8aa0e462f167f686ef463b5a5b266f04" kindref="member">kRLM</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_non_word_mark<sp/>==<sp/>kMinorRunEnd)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current_paragraph_is_ltr_)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*text<sp/>+=<sp/><ref refid="namespacetesseract_1a8aa0e462f167f686ef463b5a5b266f04" kindref="member">kRLM</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*text<sp/>+=<sp/><ref refid="namespacetesseract_1aa393f17e77d059739f005ada9a805c69" kindref="member">kLRM</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*text<sp/>+=<sp/><ref refid="namespacetesseract_1a8aa0e462f167f686ef463b5a5b266f04" kindref="member">kRLM</ref>;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*text<sp/>+=<sp/><ref refid="namespacetesseract_1aa393f17e77d059739f005ada9a805c69" kindref="member">kLRM</ref>;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::MoveToLogicalStartOfTextline()<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>word_indices;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>RestartRow();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>CalculateTextlineOrder(current_paragraph_is_ltr_,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamic_cast&lt;const<sp/>LTRResultIterator&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;word_indices);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>i<sp/>&lt;<sp/>word_indices.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>&amp;&amp;<sp/>word_indices[i]<sp/>&lt;<sp/>0;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_indices[i]<sp/>==<sp/>kMinorRunStart)<sp/>in_minor_direction_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_indices[i]<sp/>==<sp/>kMinorRunEnd)<sp/>in_minor_direction_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(in_minor_direction_)<sp/>at_beginning_of_minor_run_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>word_indices.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first_word_index<sp/>=<sp/>word_indices[i];</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>first_word_index;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>PageIterator::Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>MoveToLogicalStartOfWord();</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::Begin()<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>LTRResultIterator::Begin();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>current_paragraph_is_ltr_<sp/>=<sp/>CurrentParagraphIsLtr();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>in_minor_direction_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>at_beginning_of_minor_run_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>MoveToLogicalStartOfTextline();</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ResultIterator::Next(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_-&gt;block()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>already<sp/>at<sp/>end!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(level)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca9bc822ad314c59c2a89d81a77c07fe15" kindref="member">RIL_BLOCK</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>explicit<sp/>fall-through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3c0c2835849e110ba0a6ae414f90f2f0" kindref="member">RIL_PARA</ref>:<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>explicit<sp/>fall-through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3123e62cc5c3e33f975ff196193f8d53" kindref="member">RIL_TEXTLINE</ref>:</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PageIterator::Next(level))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsWithinFirstTextlineOfParagraph())<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;ve<sp/>advanced<sp/>to<sp/>a<sp/>new<sp/>paragraph,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>recalculate<sp/>current_paragraph_is_ltr_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_paragraph_is_ltr_<sp/>=<sp/>CurrentParagraphIsLtr();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in_minor_direction_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MoveToLogicalStartOfTextline();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it_-&gt;block()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cafb5fa54b3867fb5e774f2443e3abdd75" kindref="member">RIL_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>blob_order;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CalculateBlobOrder(&amp;blob_order);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_blob<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(next_blob<sp/>&lt;<sp/>blob_order.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_index_<sp/>!=<sp/>blob_order[next_blob])</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_blob++;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_blob++;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_blob<sp/>&lt;<sp/>blob_order.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;re<sp/>in<sp/>the<sp/>same<sp/>word;<sp/>simply<sp/>advance<sp/>one<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BeginWord(blob_order[next_blob]);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at_beginning_of_minor_run_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>level<sp/>=<sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>fallen<sp/>through<sp/>to<sp/>the<sp/>next<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>explicit<sp/>fall-through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_-&gt;word()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca9bc822ad314c59c2a89d81a77c07fe15" kindref="member">RIL_BLOCK</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>word_indices;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>this_word_index<sp/>=<sp/>LTRWordIndex();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CalculateTextlineOrder(current_paragraph_is_ltr_,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;word_indices);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>final_real_index<sp/>=<sp/>word_indices.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(final_real_index<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>word_indices[final_real_index]<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>final_real_index--;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>final_real_index;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_indices[i]<sp/>==<sp/>this_word_index)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>&lt;<sp/>final_real_index<sp/>&amp;&amp;<sp/>word_indices[j]<sp/>&lt;<sp/>0;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_indices[j]<sp/>==<sp/>kMinorRunStart)<sp/>in_minor_direction_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_indices[j]<sp/>==<sp/>kMinorRunEnd)<sp/>in_minor_direction_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>at_beginning_of_minor_run_<sp/>=<sp/>(word_indices[j<sp/>-<sp/>1]<sp/>==<sp/>kMinorRunStart);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>awesome,<sp/>we<sp/>move<sp/>to<sp/>word_indices[j]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BidiDebug(3))<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Next(RIL_WORD):<sp/>%d<sp/>-&gt;<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_word_index,<sp/>word_indices[j]);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PageIterator::RestartRow();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>word_indices[j];<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PageIterator::Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MoveToLogicalStartOfWord();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BidiDebug(3))<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Next(RIL_WORD):<sp/>%d<sp/>-&gt;<sp/>EOL\n&quot;</highlight><highlight class="normal">,<sp/>this_word_index);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;re<sp/>going<sp/>off<sp/>the<sp/>end<sp/>of<sp/>the<sp/>text<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3123e62cc5c3e33f975ff196193f8d53" kindref="member">RIL_TEXTLINE</ref>);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>happen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ResultIterator::IsAtBeginningOf(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_-&gt;block()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>at<sp/>the<sp/>end!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_-&gt;word()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>an<sp/>image<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cafb5fa54b3867fb5e774f2443e3abdd75" kindref="member">RIL_SYMBOL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>at<sp/>beginning<sp/>of<sp/>a<sp/>symbol.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>at_word_start<sp/>=<sp/>IsAtFirstSymbolOfWord();</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at_word_start;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>ResultIterator<sp/>line_start(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>to<sp/>the<sp/>first<sp/>word<sp/>in<sp/>the<sp/>line...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>line_start.MoveToLogicalStartOfTextline();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>at_textline_start<sp/>=<sp/>at_word_start<sp/>&amp;&amp;<sp/>*line_start.it_<sp/>==<sp/>*it_;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3123e62cc5c3e33f975ff196193f8d53" kindref="member">RIL_TEXTLINE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at_textline_start;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>move<sp/>to<sp/>the<sp/>left-most<sp/>word...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>line_start.RestartRow();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>at_block_start<sp/>=<sp/>at_textline_start<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>line_start.it_-&gt;block()<sp/>!=<sp/>line_start.it_-&gt;prev_block();</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca9bc822ad314c59c2a89d81a77c07fe15" kindref="member">RIL_BLOCK</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at_block_start;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>at_para_start<sp/>=<sp/>at_block_start<sp/>||</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(at_textline_start<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_start.it_-&gt;row()-&gt;row-&gt;para()<sp/>!=</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_start.it_-&gt;prev_row()-&gt;row-&gt;para());</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>==<sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3c0c2835849e110ba0a6ae414f90f2f0" kindref="member">RIL_PARA</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>at_para_start;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>happen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ResultIterator::IsAtFinalElement(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>element)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Empty(element))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>at<sp/>the<sp/>end!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>is<sp/>true<sp/>if<sp/>we<sp/>step<sp/>forward<sp/>by<sp/>element<sp/>and<sp/>find<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>the<sp/>end<sp/>of<sp/>the<sp/>page<sp/>or<sp/>at<sp/>beginning<sp/>of<sp/>*all*<sp/>levels<sp/>in:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>[level,<sp/>element).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>there<sp/>is<sp/>more<sp/>than<sp/>one<sp/>level<sp/>difference<sp/>between<sp/>element<sp/>and<sp/>level,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>could<sp/>for<sp/>instance<sp/>move<sp/>forward<sp/>one<sp/>symbol<sp/>and<sp/>still<sp/>be<sp/>at<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>on<sp/>a<sp/>line,<sp/>so<sp/>we<sp/>also<sp/>have<sp/>to<sp/>be<sp/>at<sp/>the<sp/>first<sp/>symbol<sp/>in<sp/>a<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>ResultIterator<sp/>next(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>next.Next(element);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next.Empty(element))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Reached<sp/>the<sp/>end<sp/>of<sp/>the<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(element<sp/>&gt;<sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>element<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(element<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!next.IsAtBeginningOf(element))</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ResultIterator::GetUTF8Text(<ref refid="namespacetesseract_1aa26c22b65cc9765a0e747120f4287fd7" kindref="member">PageIteratorLevel</ref><sp/>level)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_-&gt;word()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>at<sp/>the<sp/>end!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>text;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(level)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca9bc822ad314c59c2a89d81a77c07fe15" kindref="member">RIL_BLOCK</ref>:</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResultIterator<sp/>pp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp.AppendUTF8ParagraphText(&amp;text);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pp.Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3c0c2835849e110ba0a6ae414f90f2f0" kindref="member">RIL_PARA</ref>)<sp/>&amp;&amp;<sp/>pp.it_-&gt;block()<sp/>==<sp/>it_-&gt;block());</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3c0c2835849e110ba0a6ae414f90f2f0" kindref="member">RIL_PARA</ref>:</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AppendUTF8ParagraphText(&amp;text);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3123e62cc5c3e33f975ff196193f8d53" kindref="member">RIL_TEXTLINE</ref>:</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResultIterator<sp/>it(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.MoveToLogicalStartOfTextline();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.IterateAndAppendUTF8TextlineText(&amp;text);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>:</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AppendUTF8WordText(&amp;text);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cafb5fa54b3867fb5e774f2443e3abdd75" kindref="member">RIL_SYMBOL</ref>:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reading_direction_is_ltr<sp/>=</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_paragraph_is_ltr_<sp/>^<sp/>in_minor_direction_;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(at_beginning_of_minor_run_)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>+=<sp/>reading_direction_is_ltr<sp/>?<sp/><ref refid="namespacetesseract_1aa393f17e77d059739f005ada9a805c69" kindref="member">kLRM</ref><sp/>:<sp/><ref refid="namespacetesseract_1a8aa0e462f167f686ef463b5a5b266f04" kindref="member">kRLM</ref>;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>it_-&gt;word()-&gt;BestUTF8(blob_index_,<sp/>!reading_direction_is_ltr);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsAtFinalSymbolOfWord())<sp/>AppendSuffixMarks(&amp;text);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>text.<ref refid="class_s_t_r_i_n_g_1a168505a533eda60219c93e25adf4cdc5" kindref="member">length</ref>()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[length];</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>strncpy(result,<sp/>text.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>length);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::AppendUTF8WordText(<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>*text)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it_-&gt;word())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(it_-&gt;word()-&gt;best_choice<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reading_direction_is_ltr<sp/>=</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>current_paragraph_is_ltr_<sp/>^<sp/>in_minor_direction_;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(at_beginning_of_minor_run_)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>*text<sp/>+=<sp/>reading_direction_is_ltr<sp/>?<sp/><ref refid="namespacetesseract_1aa393f17e77d059739f005ada9a805c69" kindref="member">kLRM</ref><sp/>:<sp/><ref refid="namespacetesseract_1a8aa0e462f167f686ef463b5a5b266f04" kindref="member">kRLM</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>blob_order;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>CalculateBlobOrder(&amp;blob_order);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blob_order.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>*text<sp/>+=<sp/>it_-&gt;word()-&gt;BestUTF8(blob_order[i],<sp/>!reading_direction_is_ltr);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/>AppendSuffixMarks(text);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::IterateAndAppendUTF8TextlineText(<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>*text)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Empty(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>))<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BidiDebug(1))<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq&lt;int&gt;</ref><sp/>textline_order;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;StrongScriptDirection&gt;</ref><sp/>dirs;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>CalculateTextlineOrder(current_paragraph_is_ltr_,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;dirs,<sp/>&amp;textline_order);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Strong<sp/>Script<sp/>dirs<sp/><sp/><sp/><sp/><sp/>[%p/P=%s]:<sp/>&quot;</highlight><highlight class="normal">,<sp/>it_-&gt;row(),</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_paragraph_is_ltr_<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;ltr&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;rtl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintScriptDirs(dirs);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Logical<sp/>textline<sp/>order<sp/>[%p/P=%s]:<sp/>&quot;</highlight><highlight class="normal">,<sp/>it_-&gt;row(),</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_paragraph_is_ltr_<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;ltr&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;rtl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>textline_order.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>textline_order[i]);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>words_appended<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>AppendUTF8WordText(text);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>words_appended++;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>*text<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Next(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>)<sp/>&amp;&amp;<sp/>!IsAtBeginningOf(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3123e62cc5c3e33f975ff196193f8d53" kindref="member">RIL_TEXTLINE</ref>));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BidiDebug(1))<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>words<sp/>printed\n&quot;</highlight><highlight class="normal">,<sp/>words_appended);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>text-&gt;<ref refid="class_s_t_r_i_n_g_1a0d5a6c456f8e3ef4b4a5077031573df8" kindref="member">truncate_at</ref>(text-&gt;<ref refid="class_s_t_r_i_n_g_1a168505a533eda60219c93e25adf4cdc5" kindref="member">length</ref>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>*text<sp/>+=<sp/>line_separator_;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>just<sp/>finished<sp/>a<sp/>paragraph,<sp/>add<sp/>an<sp/>extra<sp/>newline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_-&gt;block()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>IsAtBeginningOf(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3c0c2835849e110ba0a6ae414f90f2f0" kindref="member">RIL_PARA</ref>))</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>*text<sp/>+=<sp/>paragraph_separator_;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ResultIterator::AppendUTF8ParagraphText(<ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>*text)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>ResultIterator<sp/>it(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>it.RestartParagraph();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>it.MoveToLogicalStartOfTextline();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.Empty(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98cadf7d71a201bf1549dccfc7a594dfbf84" kindref="member">RIL_WORD</ref>))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>it.IterateAndAppendUTF8TextlineText(text);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it.it_-&gt;block()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!it.IsAtBeginningOf(<ref refid="capi_8h_1aec47a81606272a1a7b914d862feae98ca3c0c2835849e110ba0a6ae414f90f2f0" kindref="member">RIL_PARA</ref>));</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ResultIterator::BidiDebug(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_level)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug_level<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>IntParam<sp/>*p<sp/>=<sp/>ParamUtils::FindParam&lt;IntParam&gt;(</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bidi_debug&quot;</highlight><highlight class="normal">,<sp/><ref refid="params_8cpp_1a71a3243019391d3a438fd279c07cef87" kindref="member">GlobalParams</ref>()-&gt;<ref refid="structtesseract_1_1_params_vectors_1a22c42b48d2c626d2f3f3b0abd21bc902" kindref="member">int_params</ref>,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tesseract_-&gt;params()-&gt;int_params);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>debug_level<sp/>=<sp/>(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>)(*p);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>debug_level<sp/>&gt;=<sp/>min_level;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccmain/resultiterator.cpp"/>
  </compounddef>
</doxygen>
