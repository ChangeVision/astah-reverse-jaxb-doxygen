<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="genericvector_8h" kind="file">
    <compoundname>genericvector.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="tesscallback_8h" local="yes">tesscallback.h</includes>
    <includes refid="errcode_8h" local="yes">errcode.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includedby refid="tesseractclass_8h" local="yes">ccmain/tesseractclass.h</includedby>
    <includedby refid="applybox_8cpp" local="yes">ccmain/applybox.cpp</includedby>
    <includedby refid="equationdetect_8h" local="yes">ccmain/equationdetect.h</includedby>
    <includedby refid="resultiterator_8h" local="yes">ccmain/resultiterator.h</includedby>
    <includedby refid="paragraphs_8cpp" local="yes">ccmain/paragraphs.cpp</includedby>
    <includedby refid="paragraphs_8h" local="yes">ccmain/paragraphs.h</includedby>
    <includedby refid="boxword_8h" local="yes">ccstruct/boxword.h</includedby>
    <includedby refid="pageres_8h" local="yes">ccstruct/pageres.h</includedby>
    <includedby refid="params__training__featdef_8h" local="yes">ccstruct/params_training_featdef.h</includedby>
    <includedby refid="ratngs_8h" local="yes">ccstruct/ratngs.h</includedby>
    <includedby refid="fontinfo_8h" local="yes">ccstruct/fontinfo.h</includedby>
    <includedby refid="ratngs_8cpp" local="yes">ccstruct/ratngs.cpp</includedby>
    <includedby refid="params_8h" local="yes">ccutil/params.h</includedby>
    <includedby refid="ambigs_8h" local="yes">ccutil/ambigs.h</includedby>
    <includedby refid="indexmapbidi_8h" local="yes">ccutil/indexmapbidi.h</includedby>
    <includedby refid="params_8cpp" local="yes">ccutil/params.cpp</includedby>
    <includedby refid="sorthelper_8h" local="yes">ccutil/sorthelper.h</includedby>
    <includedby refid="strngs_8cpp" local="yes">ccutil/strngs.cpp</includedby>
    <includedby refid="unicity__table_8h" local="yes">ccutil/unicity_table.h</includedby>
    <includedby refid="intproto_8h" local="yes">classify/intproto.h</includedby>
    <includedby refid="shapetable_8h" local="yes">classify/shapetable.h</includedby>
    <includedby refid="adaptmatch_8cpp" local="yes">classify/adaptmatch.cpp</includedby>
    <includedby refid="errorcounter_8h" local="yes">classify/errorcounter.h</includedby>
    <includedby refid="trainingsampleset_8h" local="yes">classify/trainingsampleset.h</includedby>
    <includedby refid="intfeaturedist_8h" local="yes">classify/intfeaturedist.h</includedby>
    <includedby refid="intfeaturespace_8h" local="yes">classify/intfeaturespace.h</includedby>
    <includedby refid="intproto_8cpp" local="yes">classify/intproto.cpp</includedby>
    <includedby refid="stopper_8h" local="yes">dict/stopper.h</includedby>
    <includedby refid="trie_8h" local="yes">dict/trie.h</includedby>
    <includedby refid="trie_8cpp" local="yes">dict/trie.cpp</includedby>
    <includedby refid="colpartitionset_8h" local="yes">textord/colpartitionset.h</includedby>
    <includedby refid="cjkpitch_8cpp" local="yes">textord/cjkpitch.cpp</includedby>
    <includedby refid="tablerecog_8h" local="yes">textord/tablerecog.h</includedby>
    <includedby refid="mftraining_8cpp" local="yes">training/mftraining.cpp</includedby>
    <incdepgraph>
      <node id="15828">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="15820">
        <label>stdlib.h</label>
      </node>
      <node id="15823">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="15824" relation="include">
        </childnode>
      </node>
      <node id="15825">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="15822" relation="include">
        </childnode>
      </node>
      <node id="15824">
        <label>limits.h</label>
      </node>
      <node id="15827">
        <label>string.h</label>
      </node>
      <node id="15821">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="15822" relation="include">
        </childnode>
      </node>
      <node id="15818">
        <label>ccutil/genericvector.h</label>
        <link refid="genericvector.h"/>
        <childnode refid="15819" relation="include">
        </childnode>
        <childnode refid="15820" relation="include">
        </childnode>
        <childnode refid="15821" relation="include">
        </childnode>
        <childnode refid="15825" relation="include">
        </childnode>
        <childnode refid="15826" relation="include">
        </childnode>
        <childnode refid="15828" relation="include">
        </childnode>
      </node>
      <node id="15822">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="15823" relation="include">
        </childnode>
      </node>
      <node id="15819">
        <label>stdio.h</label>
      </node>
      <node id="15826">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="15819" relation="include">
        </childnode>
        <childnode refid="15827" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="15979">
        <label>ccstruct/blobbox.cpp</label>
        <link refid="blobbox_8cpp"/>
      </node>
      <node id="16109">
        <label>classify/intfeaturedist.cpp</label>
        <link refid="intfeaturedist_8cpp"/>
      </node>
      <node id="15972">
        <label>wordrec/matchtab.h</label>
        <link refid="matchtab_8h"/>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15973" relation="include">
        </childnode>
        <childnode refid="15900" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
        <childnode refid="15903" relation="include">
        </childnode>
      </node>
      <node id="16145">
        <label>ccstruct/dppoint.cpp</label>
        <link refid="dppoint_8cpp"/>
      </node>
      <node id="15842">
        <label>ccmain/cube_control.cpp</label>
        <link refid="cube__control_8cpp"/>
      </node>
      <node id="16119">
        <label>classify/extract.h</label>
        <link refid="extract_8h"/>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16120" relation="include">
        </childnode>
      </node>
      <node id="16153">
        <label>cutil/cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="16154" relation="include">
        </childnode>
        <childnode refid="16171" relation="include">
        </childnode>
      </node>
      <node id="15874">
        <label>ccmain/paragraphs.cpp</label>
        <link refid="paragraphs_8cpp"/>
      </node>
      <node id="15942">
        <label>classify/protos.cpp</label>
        <link refid="protos_8cpp"/>
      </node>
      <node id="15881">
        <label>ccmain/docqual.h</label>
        <link refid="docqual_8h"/>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15845" relation="include">
        </childnode>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15857" relation="include">
        </childnode>
      </node>
      <node id="15873">
        <label>ccmain/mutableiterator.h</label>
        <link refid="mutableiterator_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
      </node>
      <node id="16017">
        <label>textord/oldbasel.cpp</label>
        <link refid="oldbasel_8cpp"/>
      </node>
      <node id="16081">
        <label>wordrec/render.cpp</label>
        <link refid="render_8cpp"/>
      </node>
      <node id="15835">
        <label>ccmain/fixspace.cpp</label>
        <link refid="fixspace_8cpp"/>
      </node>
      <node id="15987">
        <label>textord/ccnontextdetect.cpp</label>
        <link refid="ccnontextdetect_8cpp"/>
      </node>
      <node id="16202">
        <label>cube/char_samp.cpp</label>
        <link refid="char__samp_8cpp"/>
      </node>
      <node id="16088">
        <label>wordrec/makechop.h</label>
        <link refid="makechop_8h"/>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="16089" relation="include">
        </childnode>
      </node>
      <node id="15959">
        <label>dict/context.cpp</label>
        <link refid="context_8cpp"/>
      </node>
      <node id="15918">
        <label>classify/sampleiterator.cpp</label>
        <link refid="sampleiterator_8cpp"/>
      </node>
      <node id="15927">
        <label>ccmain/tfacep.h</label>
        <link refid="tfacep_8h"/>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15845" relation="include">
        </childnode>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15857" relation="include">
        </childnode>
        <childnode refid="15836" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15860" relation="include">
        </childnode>
      </node>
      <node id="15884">
        <label>ccmain/werdit.cpp</label>
        <link refid="werdit_8cpp"/>
      </node>
      <node id="15841">
        <label>ccmain/tessedit.h</label>
        <link refid="tessedit_8h"/>
        <childnode refid="15840" relation="include">
        </childnode>
      </node>
      <node id="16238">
        <label>ccutil/sorthelper.h</label>
        <link refid="sorthelper_8h"/>
        <childnode refid="15834" relation="include">
        </childnode>
      </node>
      <node id="15986">
        <label>textord/strokewidth.h</label>
        <link refid="strokewidth_8h"/>
        <childnode refid="15987" relation="include">
        </childnode>
        <childnode refid="15988" relation="include">
        </childnode>
        <childnode refid="15989" relation="include">
        </childnode>
      </node>
      <node id="16101">
        <label>classify/mfx.cpp</label>
        <link refid="mfx_8cpp"/>
      </node>
      <node id="15948">
        <label>cube/tess_lang_mod_edge.h</label>
        <link refid="tess__lang__mod__edge_8h"/>
        <childnode refid="15949" relation="include">
        </childnode>
        <childnode refid="15956" relation="include">
        </childnode>
        <childnode refid="15957" relation="include">
        </childnode>
      </node>
      <node id="16042">
        <label>ccstruct/blobs.cpp</label>
        <link refid="blobs_8cpp"/>
      </node>
      <node id="15990">
        <label>textord/colfind.h</label>
        <link refid="colfind_8h"/>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15988" relation="include">
        </childnode>
        <childnode refid="15991" relation="include">
        </childnode>
      </node>
      <node id="16091">
        <label>ccstruct/split.cpp</label>
        <link refid="split_8cpp"/>
      </node>
      <node id="15893">
        <label>wordrec/wordrec.h</label>
        <link refid="wordrec_8h"/>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15894" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
        <childnode refid="15897" relation="include">
        </childnode>
        <childnode refid="15898" relation="include">
        </childnode>
        <childnode refid="15899" relation="include">
        </childnode>
        <childnode refid="15900" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
        <childnode refid="15903" relation="include">
        </childnode>
        <childnode refid="15904" relation="include">
        </childnode>
      </node>
      <node id="16175">
        <label>ccmain/cube_reco_context.h</label>
        <link refid="cube__reco__context_8h"/>
        <childnode refid="15842" relation="include">
        </childnode>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15844" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15862" relation="include">
        </childnode>
        <childnode refid="16176" relation="include">
        </childnode>
        <childnode refid="16177" relation="include">
        </childnode>
        <childnode refid="16181" relation="include">
        </childnode>
        <childnode refid="16178" relation="include">
        </childnode>
        <childnode refid="15949" relation="include">
        </childnode>
        <childnode refid="15948" relation="include">
        </childnode>
        <childnode refid="15952" relation="include">
        </childnode>
        <childnode refid="16182" relation="include">
        </childnode>
        <childnode refid="15951" relation="include">
        </childnode>
        <childnode refid="16184" relation="include">
        </childnode>
        <childnode refid="15956" relation="include">
        </childnode>
      </node>
      <node id="15978">
        <label>ccstruct/blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="15866" relation="include">
        </childnode>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15979" relation="include">
        </childnode>
        <childnode refid="15980" relation="include">
        </childnode>
        <childnode refid="15981" relation="include">
        </childnode>
        <childnode refid="16006" relation="include">
        </childnode>
        <childnode refid="16011" relation="include">
        </childnode>
        <childnode refid="16024" relation="include">
        </childnode>
        <childnode refid="16012" relation="include">
        </childnode>
        <childnode refid="15986" relation="include">
        </childnode>
        <childnode refid="15984" relation="include">
        </childnode>
        <childnode refid="16025" relation="include">
        </childnode>
        <childnode refid="16027" relation="include">
        </childnode>
        <childnode refid="15988" relation="include">
        </childnode>
        <childnode refid="16002" relation="include">
        </childnode>
        <childnode refid="16028" relation="include">
        </childnode>
        <childnode refid="16030" relation="include">
        </childnode>
        <childnode refid="16015" relation="include">
        </childnode>
        <childnode refid="16031" relation="include">
        </childnode>
        <childnode refid="16034" relation="include">
        </childnode>
        <childnode refid="16005" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16038" relation="include">
        </childnode>
        <childnode refid="16036" relation="include">
        </childnode>
        <childnode refid="16039" relation="include">
        </childnode>
        <childnode refid="15989" relation="include">
        </childnode>
        <childnode refid="15998" relation="include">
        </childnode>
        <childnode refid="15991" relation="include">
        </childnode>
        <childnode refid="16004" relation="include">
        </childnode>
        <childnode refid="16037" relation="include">
        </childnode>
        <childnode refid="16018" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="15850">
        <label>ccmain/output.cpp</label>
        <link refid="output_8cpp"/>
      </node>
      <node id="16230">
        <label>cutil/tessarray.cpp</label>
        <link refid="tessarray_8cpp"/>
      </node>
      <node id="16007">
        <label>textord/tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15981" relation="include">
        </childnode>
        <childnode refid="15983" relation="include">
        </childnode>
        <childnode refid="15984" relation="include">
        </childnode>
        <childnode refid="16001" relation="include">
        </childnode>
        <childnode refid="16005" relation="include">
        </childnode>
        <childnode refid="15991" relation="include">
        </childnode>
      </node>
      <node id="16229">
        <label>cutil/emalloc.cpp</label>
        <link refid="emalloc_8cpp"/>
      </node>
      <node id="16049">
        <label>textord/edgblob.h</label>
        <link refid="edgblob_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15862" relation="include">
        </childnode>
        <childnode refid="16050" relation="include">
        </childnode>
        <childnode refid="16005" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
      </node>
      <node id="15898">
        <label>wordrec/heuristic.cpp</label>
        <link refid="heuristic_8cpp"/>
      </node>
      <node id="16165">
        <label>cutil/structures.h</label>
        <link refid="structures_8h"/>
        <childnode refid="15927" relation="include">
        </childnode>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="16083" relation="include">
        </childnode>
        <childnode refid="16091" relation="include">
        </childnode>
        <childnode refid="16164" relation="include">
        </childnode>
        <childnode refid="16166" relation="include">
        </childnode>
        <childnode refid="16167" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="16089" relation="include">
        </childnode>
        <childnode refid="16141" relation="include">
        </childnode>
      </node>
      <node id="16190">
        <label>cube/word_altlist.cpp</label>
        <link refid="word__altlist_8cpp"/>
      </node>
      <node id="15830">
        <label>ccmain/tesseractclass.h</label>
        <link refid="tesseractclass_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15832" relation="include">
        </childnode>
        <childnode refid="15833" relation="include">
        </childnode>
        <childnode refid="15837" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15842" relation="include">
        </childnode>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15844" relation="include">
        </childnode>
        <childnode refid="15845" relation="include">
        </childnode>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15835" relation="include">
        </childnode>
        <childnode refid="15847" relation="include">
        </childnode>
        <childnode refid="15848" relation="include">
        </childnode>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15851" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15853" relation="include">
        </childnode>
        <childnode refid="15854" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
        <childnode refid="15856" relation="include">
        </childnode>
        <childnode refid="15857" relation="include">
        </childnode>
        <childnode refid="15858" relation="include">
        </childnode>
        <childnode refid="15859" relation="include">
        </childnode>
        <childnode refid="15836" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15862" relation="include">
        </childnode>
        <childnode refid="15860" relation="include">
        </childnode>
        <childnode refid="15863" relation="include">
        </childnode>
        <childnode refid="15864" relation="include">
        </childnode>
        <childnode refid="15865" relation="include">
        </childnode>
      </node>
      <node id="15845">
        <label>ccmain/docqual.cpp</label>
        <link refid="docqual_8cpp"/>
      </node>
      <node id="15932">
        <label>classify/classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15933" relation="include">
        </childnode>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15934" relation="include">
        </childnode>
        <childnode refid="15935" relation="include">
        </childnode>
        <childnode refid="15936" relation="include">
        </childnode>
        <childnode refid="15937" relation="include">
        </childnode>
        <childnode refid="15938" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="15914" relation="include">
        </childnode>
        <childnode refid="15939" relation="include">
        </childnode>
        <childnode refid="15940" relation="include">
        </childnode>
        <childnode refid="15941" relation="include">
        </childnode>
        <childnode refid="15921" relation="include">
        </childnode>
        <childnode refid="15942" relation="include">
        </childnode>
        <childnode refid="15922" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
        <childnode refid="15943" relation="include">
        </childnode>
        <childnode refid="15893" relation="include">
        </childnode>
      </node>
      <node id="15849">
        <label>ccmain/osdetect.cpp</label>
        <link refid="osdetect_8cpp"/>
      </node>
      <node id="16217">
        <label>ccutil/globaloc.cpp</label>
        <link refid="globaloc_8cpp"/>
      </node>
      <node id="16158">
        <label>cutil/cutil.cpp</label>
        <link refid="cutil_8cpp"/>
      </node>
      <node id="16099">
        <label>classify/intfeaturemap.cpp</label>
        <link refid="intfeaturemap_8cpp"/>
      </node>
      <node id="15968">
        <label>training/dawg2wordlist.cpp</label>
        <link refid="dawg2wordlist_8cpp"/>
      </node>
      <node id="15943">
        <label>training/wordlist2dawg.cpp</label>
        <link refid="wordlist2dawg_8cpp"/>
      </node>
      <node id="16067">
        <label>textord/bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15981" relation="include">
        </childnode>
        <childnode refid="16006" relation="include">
        </childnode>
        <childnode refid="16007" relation="include">
        </childnode>
        <childnode refid="16047" relation="include">
        </childnode>
        <childnode refid="15985" relation="include">
        </childnode>
        <childnode refid="15984" relation="include">
        </childnode>
        <childnode refid="16004" relation="include">
        </childnode>
      </node>
      <node id="16053">
        <label>ccstruct/rejctmap.h</label>
        <link refid="rejctmap_8h"/>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="16054" relation="include">
        </childnode>
      </node>
      <node id="16063">
        <label>ccstruct/genblob.cpp</label>
        <link refid="genblob_8cpp"/>
      </node>
      <node id="16054">
        <label>ccstruct/rejctmap.cpp</label>
        <link refid="rejctmap_8cpp"/>
      </node>
      <node id="16234">
        <label>textord/tovars.cpp</label>
        <link refid="tovars_8cpp"/>
      </node>
      <node id="16057">
        <label>ccstruct/polyaprx.cpp</label>
        <link refid="polyaprx_8cpp"/>
      </node>
      <node id="15914">
        <label>classify/mastertrainer.cpp</label>
        <link refid="mastertrainer_8cpp"/>
      </node>
      <node id="16089">
        <label>wordrec/makechop.cpp</label>
        <link refid="makechop_8cpp"/>
      </node>
      <node id="15966">
        <label>dict/trie.cpp</label>
        <link refid="trie_8cpp"/>
      </node>
      <node id="16102">
        <label>classify/normfeat.cpp</label>
        <link refid="normfeat_8cpp"/>
      </node>
      <node id="15870">
        <label>api/capi.cpp</label>
        <link refid="capi_8cpp"/>
      </node>
      <node id="15833">
        <label>ccmain/adaptions.cpp</label>
        <link refid="adaptions_8cpp"/>
      </node>
      <node id="16167">
        <label>dict/states.cpp</label>
        <link refid="states_8cpp"/>
      </node>
      <node id="16048">
        <label>textord/devanagari_processing.h</label>
        <link refid="devanagari__processing_8h"/>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="16029" relation="include">
        </childnode>
      </node>
      <node id="16235">
        <label>wordrec/drawfx.h</label>
        <link refid="drawfx_8h"/>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="16052" relation="include">
        </childnode>
      </node>
      <node id="15944">
        <label>classify/speckle.h</label>
        <link refid="speckle_8h"/>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15945" relation="include">
        </childnode>
      </node>
      <node id="16192">
        <label>cube/lang_model.h</label>
        <link refid="lang__model_8h"/>
        <childnode refid="16175" relation="include">
        </childnode>
        <childnode refid="16178" relation="include">
        </childnode>
        <childnode refid="16193" relation="include">
        </childnode>
        <childnode refid="16194" relation="include">
        </childnode>
        <childnode refid="16196" relation="include">
        </childnode>
        <childnode refid="16197" relation="include">
        </childnode>
        <childnode refid="15949" relation="include">
        </childnode>
        <childnode refid="15956" relation="include">
        </childnode>
        <childnode refid="16198" relation="include">
        </childnode>
      </node>
      <node id="15843">
        <label>ccmain/cube_reco_context.cpp</label>
        <link refid="cube__reco__context_8cpp"/>
      </node>
      <node id="16179">
        <label>cube/search_column.cpp</label>
        <link refid="search__column_8cpp"/>
      </node>
      <node id="15980">
        <label>ccstruct/ocrrow.cpp</label>
        <link refid="ocrrow_8cpp"/>
      </node>
      <node id="16166">
        <label>cutil/structures.cpp</label>
        <link refid="structures_8cpp"/>
      </node>
      <node id="15952">
        <label>cube/cube_line_object.h</label>
        <link refid="cube__line__object_8h"/>
        <childnode refid="15953" relation="include">
        </childnode>
      </node>
      <node id="16132">
        <label>classify/cluster.h</label>
        <link refid="cluster_8h"/>
        <childnode refid="15924" relation="include">
        </childnode>
        <childnode refid="16133" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="16110" relation="include">
        </childnode>
        <childnode refid="16111" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="16128" relation="include">
        </childnode>
        <childnode refid="16112" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="15899">
        <label>wordrec/outlines.cpp</label>
        <link refid="outlines_8cpp"/>
      </node>
      <node id="15992">
        <label>textord/tablefind.h</label>
        <link refid="tablefind_8h"/>
        <childnode refid="15988" relation="include">
        </childnode>
        <childnode refid="15993" relation="include">
        </childnode>
        <childnode refid="15994" relation="include">
        </childnode>
      </node>
      <node id="16084">
        <label>wordrec/gradechop.h</label>
        <link refid="gradechop_8h"/>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
        <childnode refid="15897" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
      </node>
      <node id="16207">
        <label>cube/feature_chebyshev.cpp</label>
        <link refid="feature__chebyshev_8cpp"/>
      </node>
      <node id="15909">
        <label>ccstruct/matrix.cpp</label>
        <link refid="matrix_8cpp"/>
      </node>
      <node id="15848">
        <label>ccmain/ltrresultiterator.cpp</label>
        <link refid="ltrresultiterator_8cpp"/>
      </node>
      <node id="15887">
        <label>ccmain/tesseract_cube_combiner.h</label>
        <link refid="tesseract__cube__combiner_8h"/>
        <childnode refid="15842" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15862" relation="include">
        </childnode>
      </node>
      <node id="16027">
        <label>textord/topitch.h</label>
        <link refid="topitch_8h"/>
        <childnode refid="16026" relation="include">
        </childnode>
        <childnode refid="16014" relation="include">
        </childnode>
        <childnode refid="16015" relation="include">
        </childnode>
        <childnode refid="16022" relation="include">
        </childnode>
        <childnode refid="16018" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="16100">
        <label>classify/intfeaturespace.cpp</label>
        <link refid="intfeaturespace_8cpp"/>
      </node>
      <node id="16066">
        <label>ccstruct/coutln.cpp</label>
        <link refid="coutln_8cpp"/>
      </node>
      <node id="16221">
        <label>cutil/bitvec.cpp</label>
        <link refid="bitvec_8cpp"/>
      </node>
      <node id="16208">
        <label>cube/feature_hybrid.cpp</label>
        <link refid="feature__hybrid_8cpp"/>
      </node>
      <node id="16184">
        <label>cube/cube_line_segmenter.h</label>
        <link refid="cube__line__segmenter_8h"/>
        <childnode refid="16185" relation="include">
        </childnode>
      </node>
      <node id="15953">
        <label>cube/cube_line_object.cpp</label>
        <link refid="cube__line__object_8cpp"/>
      </node>
      <node id="15915">
        <label>training/commontraining.cpp</label>
        <link refid="commontraining_8cpp"/>
      </node>
      <node id="16171">
        <label>cutil/cutil_class.cpp</label>
        <link refid="cutil__class_8cpp"/>
      </node>
      <node id="15928">
        <label>wordrec/associate.cpp</label>
        <link refid="associate_8cpp"/>
      </node>
      <node id="15939">
        <label>classify/mfoutline.cpp</label>
        <link refid="mfoutline_8cpp"/>
      </node>
      <node id="16072">
        <label>ccstruct/quspline.cpp</label>
        <link refid="quspline_8cpp"/>
      </node>
      <node id="15999">
        <label>textord/tablerecog.h</label>
        <link refid="tablerecog_8h"/>
        <childnode refid="15994" relation="include">
        </childnode>
        <childnode refid="16000" relation="include">
        </childnode>
      </node>
      <node id="16128">
        <label>training/mergenf.h</label>
        <link refid="mergenf_8h"/>
        <childnode refid="16112" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="16038">
        <label>textord/oldbasel.h</label>
        <link refid="oldbasel_8h"/>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16017" relation="include">
        </childnode>
      </node>
      <node id="16149">
        <label>ccutil/ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="16150" relation="include">
        </childnode>
        <childnode refid="16151" relation="include">
        </childnode>
        <childnode refid="16152" relation="include">
        </childnode>
        <childnode refid="15920" relation="include">
        </childnode>
        <childnode refid="16153" relation="include">
        </childnode>
        <childnode refid="15964" relation="include">
        </childnode>
        <childnode refid="15965" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
      </node>
      <node id="16124">
        <label>classify/fxdefs.h</label>
        <link refid="fxdefs_8h"/>
        <childnode refid="16114" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
      </node>
      <node id="15923">
        <label>classify/trainingsample.cpp</label>
        <link refid="trainingsample_8cpp"/>
      </node>
      <node id="16012">
        <label>textord/drawtord.h</label>
        <link refid="drawtord_8h"/>
        <childnode refid="16013" relation="include">
        </childnode>
        <childnode refid="16014" relation="include">
        </childnode>
        <childnode refid="16015" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16017" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
        <childnode refid="16018" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
        <childnode refid="16020" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="16218">
        <label>ccutil/params.cpp</label>
        <link refid="params_8cpp"/>
      </node>
      <node id="16037">
        <label>textord/wordseg.h</label>
        <link refid="wordseg_8h"/>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
        <childnode refid="16018" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="16173">
        <label>ccutil/tessdatamanager.cpp</label>
        <link refid="tessdatamanager_8cpp"/>
      </node>
      <node id="16213">
        <label>cube/char_samp_set.cpp</label>
        <link refid="char__samp__set_8cpp"/>
      </node>
      <node id="15847">
        <label>ccmain/fixxht.cpp</label>
        <link refid="fixxht_8cpp"/>
      </node>
      <node id="15946">
        <label>cube/word_list_lang_model.cpp</label>
        <link refid="word__list__lang__model_8cpp"/>
      </node>
      <node id="16212">
        <label>cube/char_samp_set.h</label>
        <link refid="char__samp__set_8h"/>
        <childnode refid="16213" relation="include">
        </childnode>
      </node>
      <node id="16150">
        <label>ccutil/ccutil.cpp</label>
        <link refid="ccutil_8cpp"/>
      </node>
      <node id="15895">
        <label>wordrec/chopper.cpp</label>
        <link refid="chopper_8cpp"/>
      </node>
      <node id="16224">
        <label>image/imgs.cpp</label>
        <link refid="imgs_8cpp"/>
      </node>
      <node id="16065">
        <label>ccstruct/polyaprx.h</label>
        <link refid="polyaprx_8h"/>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="16057" relation="include">
        </childnode>
      </node>
      <node id="15934">
        <label>classify/classify.cpp</label>
        <link refid="classify_8cpp"/>
      </node>
      <node id="16024">
        <label>textord/pithsync.h</label>
        <link refid="pithsync_8h"/>
        <childnode refid="16011" relation="include">
        </childnode>
        <childnode refid="16014" relation="include">
        </childnode>
        <childnode refid="16022" relation="include">
        </childnode>
        <childnode refid="16018" relation="include">
        </childnode>
      </node>
      <node id="15863">
        <label>cube/beam_search.cpp</label>
        <link refid="beam__search_8cpp"/>
      </node>
      <node id="15867">
        <label>ccmain/resultiterator.h</label>
        <link refid="resultiterator_8h"/>
        <childnode refid="15868" relation="include">
        </childnode>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15869" relation="include">
        </childnode>
        <childnode refid="15873" relation="include">
        </childnode>
        <childnode refid="15858" relation="include">
        </childnode>
      </node>
      <node id="16075">
        <label>ccstruct/pdblock.cpp</label>
        <link refid="pdblock_8cpp"/>
      </node>
      <node id="15936">
        <label>classify/float2int.cpp</label>
        <link refid="float2int_8cpp"/>
      </node>
      <node id="16019">
        <label>textord/tordmain.cpp</label>
        <link refid="tordmain_8cpp"/>
      </node>
      <node id="16199">
        <label>cube/word_unigrams.cpp</label>
        <link refid="word__unigrams_8cpp"/>
      </node>
      <node id="16125">
        <label>classify/mf.cpp</label>
        <link refid="mf_8cpp"/>
      </node>
      <node id="16164">
        <label>cutil/oldlist.cpp</label>
        <link refid="oldlist_8cpp"/>
      </node>
      <node id="16231">
        <label>image/imgs.h</label>
        <link refid="imgs_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15833" relation="include">
        </childnode>
        <childnode refid="15857" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="16224" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
      </node>
      <node id="16043">
        <label>ccstruct/blread.h</label>
        <link refid="blread_8h"/>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
        <childnode refid="16044" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
      </node>
      <node id="16016">
        <label>textord/makerow.cpp</label>
        <link refid="makerow_8cpp"/>
      </node>
      <node id="16094">
        <label>classify/baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="16095" relation="include">
        </childnode>
        <childnode refid="15944" relation="include">
        </childnode>
        <childnode refid="15928" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15898" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
      </node>
      <node id="15956">
        <label>cube/word_list_lang_model.h</label>
        <link refid="word__list__lang__model_8h"/>
        <childnode refid="15954" relation="include">
        </childnode>
        <childnode refid="15946" relation="include">
        </childnode>
      </node>
      <node id="15997">
        <label>textord/imagefind.cpp</label>
        <link refid="imagefind_8cpp"/>
      </node>
      <node id="16126">
        <label>classify/normfeat.h</label>
        <link refid="normfeat_8h"/>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="16114" relation="include">
        </childnode>
        <childnode refid="16102" relation="include">
        </childnode>
        <childnode refid="15940" relation="include">
        </childnode>
        <childnode refid="15923" relation="include">
        </childnode>
      </node>
      <node id="16130">
        <label>classify/mf.h</label>
        <link refid="mf_8h"/>
        <childnode refid="15910" relation="include">
        </childnode>
        <childnode refid="16114" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="16122">
        <label>classify/flexfx.cpp</label>
        <link refid="flexfx_8cpp"/>
      </node>
      <node id="15994">
        <label>textord/tablefind.cpp</label>
        <link refid="tablefind_8cpp"/>
      </node>
      <node id="15964">
        <label>dict/permute.cpp</label>
        <link refid="permute_8cpp"/>
      </node>
      <node id="16106">
        <label>classify/shapetable.cpp</label>
        <link refid="shapetable_8cpp"/>
      </node>
      <node id="15911">
        <label>classify/errorcounter.cpp</label>
        <link refid="errorcounter_8cpp"/>
      </node>
      <node id="15890">
        <label>textord/textord.cpp</label>
        <link refid="textord_8cpp"/>
      </node>
      <node id="16155">
        <label>ccstruct/ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="16156" relation="include">
        </childnode>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16036" relation="include">
        </childnode>
        <childnode refid="16017" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
      </node>
      <node id="16107">
        <label>classify/intfeaturespace.h</label>
        <link refid="intfeaturespace_8h"/>
        <childnode refid="16108" relation="include">
        </childnode>
        <childnode refid="16099" relation="include">
        </childnode>
        <childnode refid="16100" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="16106" relation="include">
        </childnode>
        <childnode refid="15919" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
      </node>
      <node id="15868">
        <label>api/baseapi.h</label>
        <link refid="baseapi_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15869" relation="include">
        </childnode>
        <childnode refid="15871" relation="include">
        </childnode>
        <childnode refid="15865" relation="include">
        </childnode>
        <childnode refid="15872" relation="include">
        </childnode>
      </node>
      <node id="16196">
        <label>cube/conv_net_classifier.h</label>
        <link refid="conv__net__classifier_8h"/>
        <childnode refid="16195" relation="include">
        </childnode>
        <childnode refid="15950" relation="include">
        </childnode>
        <childnode refid="16182" relation="include">
        </childnode>
        <childnode refid="15955" relation="include">
        </childnode>
      </node>
      <node id="16062">
        <label>ccstruct/stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="15977" relation="include">
        </childnode>
        <childnode refid="16063" relation="include">
        </childnode>
        <childnode refid="16046" relation="include">
        </childnode>
        <childnode refid="16064" relation="include">
        </childnode>
      </node>
      <node id="15967">
        <label>dict/trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="15946" relation="include">
        </childnode>
        <childnode refid="15958" relation="include">
        </childnode>
        <childnode refid="15964" relation="include">
        </childnode>
        <childnode refid="15966" relation="include">
        </childnode>
        <childnode refid="15968" relation="include">
        </childnode>
        <childnode refid="15943" relation="include">
        </childnode>
      </node>
      <node id="16152">
        <label>ccutil/tprintf.cpp</label>
        <link refid="tprintf_8cpp"/>
      </node>
      <node id="15907">
        <label>ccstruct/ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="15832" relation="include">
        </childnode>
        <childnode refid="15880" relation="include">
        </childnode>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
        <childnode refid="15856" relation="include">
        </childnode>
        <childnode refid="15859" relation="include">
        </childnode>
        <childnode refid="15860" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="15908" relation="include">
        </childnode>
        <childnode refid="15909" relation="include">
        </childnode>
        <childnode refid="15931" relation="include">
        </childnode>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="15944" relation="include">
        </childnode>
        <childnode refid="15945" relation="include">
        </childnode>
        <childnode refid="15946" relation="include">
        </childnode>
        <childnode refid="15947" relation="include">
        </childnode>
        <childnode refid="15958" relation="include">
        </childnode>
        <childnode refid="15969" relation="include">
        </childnode>
        <childnode refid="15970" relation="include">
        </childnode>
        <childnode refid="15964" relation="include">
        </childnode>
        <childnode refid="15965" relation="include">
        </childnode>
        <childnode refid="15929" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15971" relation="include">
        </childnode>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15972" relation="include">
        </childnode>
        <childnode refid="15898" relation="include">
        </childnode>
        <childnode refid="15973" relation="include">
        </childnode>
        <childnode refid="15900" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
      </node>
      <node id="16022">
        <label>textord/pithsync.cpp</label>
        <link refid="pithsync_8cpp"/>
      </node>
      <node id="15876">
        <label>ccmain/paragraphs_internal.h</label>
        <link refid="paragraphs__internal_8h"/>
        <childnode refid="15874" relation="include">
        </childnode>
      </node>
      <node id="16015">
        <label>textord/fpchop.cpp</label>
        <link refid="fpchop_8cpp"/>
      </node>
      <node id="15941">
        <label>classify/outfeat.cpp</label>
        <link refid="outfeat_8cpp"/>
      </node>
      <node id="16021">
        <label>textord/wordseg.cpp</label>
        <link refid="wordseg_8cpp"/>
      </node>
      <node id="15857">
        <label>ccmain/reject.cpp</label>
        <link refid="reject_8cpp"/>
      </node>
      <node id="16206">
        <label>cube/feature_bmp.cpp</label>
        <link refid="feature__bmp_8cpp"/>
      </node>
      <node id="16176">
        <label>cube/search_node.h</label>
        <link refid="search__node_8h"/>
        <childnode refid="16177" relation="include">
        </childnode>
        <childnode refid="16180" relation="include">
        </childnode>
      </node>
      <node id="15903">
        <label>wordrec/wordclass.cpp</label>
        <link refid="wordclass_8cpp"/>
      </node>
      <node id="15831">
        <label>api/baseapi.cpp</label>
        <link refid="baseapi_8cpp"/>
      </node>
      <node id="16137">
        <label>wordrec/render.h</label>
        <link refid="render_8h"/>
        <childnode refid="16138" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="16089" relation="include">
        </childnode>
        <childnode refid="16093" relation="include">
        </childnode>
        <childnode refid="16081" relation="include">
        </childnode>
        <childnode refid="15903" relation="include">
        </childnode>
      </node>
      <node id="16200">
        <label>cube/char_altlist.cpp</label>
        <link refid="char__altlist_8cpp"/>
      </node>
      <node id="16146">
        <label>ccstruct/statistc.cpp</label>
        <link refid="statistc_8cpp"/>
      </node>
      <node id="16070">
        <label>textord/scanedg.cpp</label>
        <link refid="scanedg_8cpp"/>
      </node>
      <node id="16227">
        <label>cutil/callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15909" relation="include">
        </childnode>
        <childnode refid="15931" relation="include">
        </childnode>
        <childnode refid="16083" relation="include">
        </childnode>
        <childnode refid="16091" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="15937" relation="include">
        </childnode>
        <childnode refid="16136" relation="include">
        </childnode>
        <childnode refid="15942" relation="include">
        </childnode>
        <childnode refid="16228" relation="include">
        </childnode>
        <childnode refid="16222" relation="include">
        </childnode>
        <childnode refid="16158" relation="include">
        </childnode>
        <childnode refid="16230" relation="include">
        </childnode>
        <childnode refid="15964" relation="include">
        </childnode>
        <childnode refid="16167" relation="include">
        </childnode>
        <childnode refid="15965" relation="include">
        </childnode>
        <childnode refid="15966" relation="include">
        </childnode>
        <childnode refid="16128" relation="include">
        </childnode>
        <childnode refid="16137" relation="include">
        </childnode>
        <childnode refid="15971" relation="include">
        </childnode>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15894" relation="include">
        </childnode>
        <childnode refid="16092" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="16170" relation="include">
        </childnode>
        <childnode refid="15973" relation="include">
        </childnode>
        <childnode refid="16139" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
        <childnode refid="15903" relation="include">
        </childnode>
      </node>
      <node id="15853">
        <label>ccmain/pagewalk.cpp</label>
        <link refid="pagewalk_8cpp"/>
      </node>
      <node id="16189">
        <label>cube/word_altlist.h</label>
        <link refid="word__altlist_8h"/>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="16178" relation="include">
        </childnode>
        <childnode refid="15951" relation="include">
        </childnode>
        <childnode refid="16190" relation="include">
        </childnode>
      </node>
      <node id="16203">
        <label>cube/char_set.cpp</label>
        <link refid="char__set_8cpp"/>
      </node>
      <node id="16232">
        <label>textord/blkocc.h</label>
        <link refid="blkocc_8h"/>
        <childnode refid="16013" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
      </node>
      <node id="16204">
        <label>cube/cube_tuning_params.cpp</label>
        <link refid="cube__tuning__params_8cpp"/>
      </node>
      <node id="15834">
        <label>ccmain/control.cpp</label>
        <link refid="control_8cpp"/>
      </node>
      <node id="16162">
        <label>cutil/listio.h</label>
        <link refid="listio_8h"/>
        <childnode refid="16163" relation="include">
        </childnode>
      </node>
      <node id="16076">
        <label>textord/scanedg.h</label>
        <link refid="scanedg_8h"/>
        <childnode refid="16050" relation="include">
        </childnode>
        <childnode refid="16069" relation="include">
        </childnode>
        <childnode refid="16070" relation="include">
        </childnode>
      </node>
      <node id="16073">
        <label>ccstruct/polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="16074" relation="include">
        </childnode>
        <childnode refid="16077" relation="include">
        </childnode>
      </node>
      <node id="16129">
        <label>classify/normmatch.h</label>
        <link refid="normmatch_8h"/>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15936" relation="include">
        </childnode>
        <childnode refid="15940" relation="include">
        </childnode>
      </node>
      <node id="16211">
        <label>cube/char_bigrams.h</label>
        <link refid="char__bigrams_8h"/>
        <childnode refid="16175" relation="include">
        </childnode>
        <childnode refid="16201" relation="include">
        </childnode>
      </node>
      <node id="16133">
        <label>classify/clusttool.h</label>
        <link refid="clusttool_8h"/>
        <childnode refid="16134" relation="include">
        </childnode>
        <childnode refid="15939" relation="include">
        </childnode>
        <childnode refid="16101" relation="include">
        </childnode>
        <childnode refid="15940" relation="include">
        </childnode>
        <childnode refid="16111" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="16112" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="15993">
        <label>textord/colpartitionset.cpp</label>
        <link refid="colpartitionset_8cpp"/>
      </node>
      <node id="16163">
        <label>cutil/listio.cpp</label>
        <link refid="listio_8cpp"/>
      </node>
      <node id="16000">
        <label>textord/tablerecog.cpp</label>
        <link refid="tablerecog_8cpp"/>
      </node>
      <node id="15960">
        <label>dict/dawg.cpp</label>
        <link refid="dawg_8cpp"/>
      </node>
      <node id="15904">
        <label>wordrec/wordrec.cpp</label>
        <link refid="wordrec_8cpp"/>
      </node>
      <node id="16222">
        <label>cutil/callcpp.cpp</label>
        <link refid="callcpp_8cpp"/>
      </node>
      <node id="16170">
        <label>wordrec/closed.cpp</label>
        <link refid="closed_8cpp"/>
      </node>
      <node id="16193">
        <label>cube/classifier_base.h</label>
        <link refid="classifier__base_8h"/>
        <childnode refid="16175" relation="include">
        </childnode>
        <childnode refid="16194" relation="include">
        </childnode>
        <childnode refid="16196" relation="include">
        </childnode>
        <childnode refid="16197" relation="include">
        </childnode>
        <childnode refid="15950" relation="include">
        </childnode>
        <childnode refid="15955" relation="include">
        </childnode>
      </node>
      <node id="16131">
        <label>classify/kdtree.h</label>
        <link refid="kdtree_8h"/>
        <childnode refid="16132" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
      </node>
      <node id="16105">
        <label>classify/shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15910" relation="include">
        </childnode>
        <childnode refid="15934" relation="include">
        </childnode>
        <childnode refid="15911" relation="include">
        </childnode>
        <childnode refid="15912" relation="include">
        </childnode>
        <childnode refid="15937" relation="include">
        </childnode>
        <childnode refid="15938" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="15914" relation="include">
        </childnode>
        <childnode refid="15918" relation="include">
        </childnode>
        <childnode refid="16106" relation="include">
        </childnode>
        <childnode refid="15923" relation="include">
        </childnode>
        <childnode refid="15919" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="16118">
        <label>classify/blobclass.cpp</label>
        <link refid="blobclass_8cpp"/>
      </node>
      <node id="16098">
        <label>classify/intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15910" relation="include">
        </childnode>
        <childnode refid="16099" relation="include">
        </childnode>
        <childnode refid="16100" relation="include">
        </childnode>
        <childnode refid="15920" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="16101" relation="include">
        </childnode>
        <childnode refid="16102" relation="include">
        </childnode>
      </node>
      <node id="16086">
        <label>wordrec/chop.h</label>
        <link refid="chop_8h"/>
        <childnode refid="15927" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="16085" relation="include">
        </childnode>
        <childnode refid="15894" relation="include">
        </childnode>
        <childnode refid="16087" relation="include">
        </childnode>
        <childnode refid="16088" relation="include">
        </childnode>
        <childnode refid="15897" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
      </node>
      <node id="16077">
        <label>ccstruct/polyblk.cpp</label>
        <link refid="polyblk_8cpp"/>
      </node>
      <node id="16008">
        <label>textord/blobgrid.cpp</label>
        <link refid="blobgrid_8cpp"/>
      </node>
      <node id="15926">
        <label>wordrec/associate.h</label>
        <link refid="associate_8h"/>
        <childnode refid="15927" relation="include">
        </childnode>
        <childnode refid="15928" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15929" relation="include">
        </childnode>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15898" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
        <childnode refid="15903" relation="include">
        </childnode>
      </node>
      <node id="15896">
        <label>wordrec/findseam.cpp</label>
        <link refid="findseam_8cpp"/>
      </node>
      <node id="15931">
        <label>ccstruct/ratngs.cpp</label>
        <link refid="ratngs_8cpp"/>
      </node>
      <node id="15851">
        <label>ccmain/pageiterator.cpp</label>
        <link refid="pageiterator_8cpp"/>
      </node>
      <node id="15973">
        <label>wordrec/matchtab.cpp</label>
        <link refid="matchtab_8cpp"/>
      </node>
      <node id="15852">
        <label>ccmain/pagesegmain.cpp</label>
        <link refid="pagesegmain_8cpp"/>
      </node>
      <node id="15906">
        <label>ccstruct/params_training_featdef.h</label>
        <link refid="params__training__featdef_8h"/>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="15905" relation="include">
        </childnode>
      </node>
      <node id="16039">
        <label>textord/makerow.h</label>
        <link refid="makerow_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16017" relation="include">
        </childnode>
        <childnode refid="16022" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
        <childnode refid="16018" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="15940">
        <label>classify/normmatch.cpp</label>
        <link refid="normmatch_8cpp"/>
      </node>
      <node id="15975">
        <label>ccstruct/fontinfo.cpp</label>
        <link refid="fontinfo_8cpp"/>
      </node>
      <node id="15905">
        <label>wordrec/language_model.cpp</label>
        <link refid="language__model_8cpp"/>
      </node>
      <node id="16225">
        <label>ccutil/nwmain.h</label>
        <link refid="nwmain_8h"/>
        <childnode refid="15840" relation="include">
        </childnode>
      </node>
      <node id="15957">
        <label>cube/tess_lang_mod_edge.cpp</label>
        <link refid="tess__lang__mod__edge_8cpp"/>
      </node>
      <node id="15860">
        <label>ccmain/tfacepp.cpp</label>
        <link refid="tfacepp_8cpp"/>
      </node>
      <node id="15871">
        <label>api/tesseractmain.cpp</label>
        <link refid="tesseractmain_8cpp"/>
      </node>
      <node id="15935">
        <label>classify/cutoffs.cpp</label>
        <link refid="cutoffs_8cpp"/>
      </node>
      <node id="15878">
        <label>ccstruct/boxword.cpp</label>
        <link refid="boxword_8cpp"/>
      </node>
      <node id="15958">
        <label>dict/dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15949" relation="include">
        </childnode>
        <childnode refid="15864" relation="include">
        </childnode>
        <childnode refid="15959" relation="include">
        </childnode>
        <childnode refid="15960" relation="include">
        </childnode>
        <childnode refid="15961" relation="include">
        </childnode>
        <childnode refid="15962" relation="include">
        </childnode>
        <childnode refid="15963" relation="include">
        </childnode>
        <childnode refid="15964" relation="include">
        </childnode>
        <childnode refid="15965" relation="include">
        </childnode>
        <childnode refid="15966" relation="include">
        </childnode>
        <childnode refid="15865" relation="include">
        </childnode>
        <childnode refid="15943" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
      </node>
      <node id="16201">
        <label>cube/char_bigrams.cpp</label>
        <link refid="char__bigrams_8cpp"/>
      </node>
      <node id="16056">
        <label>ccstruct/linlsq.cpp</label>
        <link refid="linlsq_8cpp"/>
      </node>
      <node id="15866">
        <label>ccmain/equationdetect.h</label>
        <link refid="equationdetect_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15862" relation="include">
        </childnode>
      </node>
      <node id="16080">
        <label>ccstruct/vecfuncs.cpp</label>
        <link refid="vecfuncs_8cpp"/>
      </node>
      <node id="16050">
        <label>textord/edgblob.cpp</label>
        <link refid="edgblob_8cpp"/>
      </node>
      <node id="15855">
        <label>ccmain/paramsd.cpp</label>
        <link refid="paramsd_8cpp"/>
      </node>
      <node id="16011">
        <label>textord/pitsync1.h</label>
        <link refid="pitsync1_8h"/>
        <childnode refid="16012" relation="include">
        </childnode>
        <childnode refid="16022" relation="include">
        </childnode>
        <childnode refid="16023" relation="include">
        </childnode>
        <childnode refid="16018" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="16025">
        <label>textord/cjkpitch.h</label>
        <link refid="cjkpitch_8h"/>
        <childnode refid="16026" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="16194">
        <label>cube/classifier_factory.h</label>
        <link refid="classifier__factory_8h"/>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="16195" relation="include">
        </childnode>
      </node>
      <node id="16112">
        <label>training/mergenf.cpp</label>
        <link refid="mergenf_8cpp"/>
      </node>
      <node id="16033">
        <label>textord/underlin.cpp</label>
        <link refid="underlin_8cpp"/>
      </node>
      <node id="15922">
        <label>classify/tessclassifier.cpp</label>
        <link refid="tessclassifier_8cpp"/>
      </node>
      <node id="16138">
        <label>wordrec/plotseg.h</label>
        <link refid="plotseg_8h"/>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15900" relation="include">
        </childnode>
        <childnode refid="16139" relation="include">
        </childnode>
      </node>
      <node id="16051">
        <label>ccstruct/werd.cpp</label>
        <link refid="werd_8cpp"/>
      </node>
      <node id="15981">
        <label>textord/alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="15982" relation="include">
        </childnode>
        <childnode refid="15983" relation="include">
        </childnode>
        <childnode refid="16005" relation="include">
        </childnode>
        <childnode refid="15998" relation="include">
        </childnode>
      </node>
      <node id="15988">
        <label>textord/colfind.cpp</label>
        <link refid="colfind_8cpp"/>
      </node>
      <node id="15837">
        <label>ccmain/applybox.cpp</label>
        <link refid="applybox_8cpp"/>
      </node>
      <node id="16120">
        <label>classify/extract.cpp</label>
        <link refid="extract_8cpp"/>
      </node>
      <node id="16197">
        <label>cube/hybrid_neural_net_classifier.h</label>
        <link refid="hybrid__neural__net__classifier_8h"/>
        <childnode refid="16195" relation="include">
        </childnode>
        <childnode refid="15955" relation="include">
        </childnode>
      </node>
      <node id="16068">
        <label>textord/edgloop.h</label>
        <link refid="edgloop_8h"/>
        <childnode refid="16050" relation="include">
        </childnode>
        <childnode refid="16069" relation="include">
        </childnode>
        <childnode refid="16070" relation="include">
        </childnode>
      </node>
      <node id="16108">
        <label>classify/intfeaturemap.h</label>
        <link refid="intfeaturemap_8h"/>
        <childnode refid="16109" relation="include">
        </childnode>
        <childnode refid="16099" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="15923" relation="include">
        </childnode>
        <childnode refid="15919" relation="include">
        </childnode>
      </node>
      <node id="15998">
        <label>textord/tabfind.cpp</label>
        <link refid="tabfind_8cpp"/>
      </node>
      <node id="16215">
        <label>training/combine_tessdata.cpp</label>
        <link refid="combine__tessdata_8cpp"/>
      </node>
      <node id="16169">
        <label>cutil/oldheap.cpp</label>
        <link refid="oldheap_8cpp"/>
      </node>
      <node id="16174">
        <label>cube/char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="16175" relation="include">
        </childnode>
        <childnode refid="15844" relation="include">
        </childnode>
        <childnode refid="16186" relation="include">
        </childnode>
        <childnode refid="16210" relation="include">
        </childnode>
        <childnode refid="16191" relation="include">
        </childnode>
        <childnode refid="16192" relation="include">
        </childnode>
        <childnode refid="16211" relation="include">
        </childnode>
        <childnode refid="16212" relation="include">
        </childnode>
        <childnode refid="16203" relation="include">
        </childnode>
        <childnode refid="16193" relation="include">
        </childnode>
        <childnode refid="16196" relation="include">
        </childnode>
        <childnode refid="16197" relation="include">
        </childnode>
        <childnode refid="15950" relation="include">
        </childnode>
        <childnode refid="15948" relation="include">
        </childnode>
        <childnode refid="16205" relation="include">
        </childnode>
        <childnode refid="15955" relation="include">
        </childnode>
        <childnode refid="16214" relation="include">
        </childnode>
        <childnode refid="16198" relation="include">
        </childnode>
      </node>
      <node id="16009">
        <label>textord/ccnontextdetect.h</label>
        <link refid="ccnontextdetect_8h"/>
        <childnode refid="15987" relation="include">
        </childnode>
        <childnode refid="15988" relation="include">
        </childnode>
      </node>
      <node id="15901">
        <label>wordrec/segsearch.cpp</label>
        <link refid="segsearch_8cpp"/>
      </node>
      <node id="15938">
        <label>classify/intproto.cpp</label>
        <link refid="intproto_8cpp"/>
      </node>
      <node id="15840">
        <label>ccmain/tessedit.cpp</label>
        <link refid="tessedit_8cpp"/>
      </node>
      <node id="15838">
        <label>ccmain/pgedit.h</label>
        <link refid="pgedit_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15841" relation="include">
        </childnode>
      </node>
      <node id="15951">
        <label>cube/cube_object.h</label>
        <link refid="cube__object_8h"/>
        <childnode refid="15842" relation="include">
        </childnode>
        <childnode refid="15844" relation="include">
        </childnode>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="15952" relation="include">
        </childnode>
        <childnode refid="15954" relation="include">
        </childnode>
      </node>
      <node id="15925">
        <label>classify/errorcounter.h</label>
        <link refid="errorcounter_8h"/>
        <childnode refid="15911" relation="include">
        </childnode>
        <childnode refid="15914" relation="include">
        </childnode>
      </node>
      <node id="16143">
        <label>ccstruct/rect.cpp</label>
        <link refid="rect_8cpp"/>
      </node>
      <node id="16010">
        <label>textord/textlineprojection.h</label>
        <link refid="textlineprojection_8h"/>
        <childnode refid="15986" relation="include">
        </childnode>
        <childnode refid="15990" relation="include">
        </childnode>
        <childnode refid="15989" relation="include">
        </childnode>
        <childnode refid="16004" relation="include">
        </childnode>
      </node>
      <node id="15954">
        <label>cube/cube_object.cpp</label>
        <link refid="cube__object_8cpp"/>
      </node>
      <node id="15916">
        <label>training/mftraining.cpp</label>
        <link refid="mftraining_8cpp"/>
      </node>
      <node id="15877">
        <label>ccstruct/boxword.h</label>
        <link refid="boxword_8h"/>
        <childnode refid="15878" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
      </node>
      <node id="16014">
        <label>textord/drawtord.cpp</label>
        <link refid="drawtord_8cpp"/>
      </node>
      <node id="16111">
        <label>training/cntraining.cpp</label>
        <link refid="cntraining_8cpp"/>
      </node>
      <node id="16003">
        <label>textord/workingpartset.cpp</label>
        <link refid="workingpartset_8cpp"/>
      </node>
      <node id="15995">
        <label>textord/colpartition.cpp</label>
        <link refid="colpartition_8cpp"/>
      </node>
      <node id="15945">
        <label>classify/speckle.cpp</label>
        <link refid="speckle_8cpp"/>
      </node>
      <node id="16209">
        <label>cube/word_size_model.cpp</label>
        <link refid="word__size__model_8cpp"/>
      </node>
      <node id="15989">
        <label>textord/strokewidth.cpp</label>
        <link refid="strokewidth_8cpp"/>
      </node>
      <node id="16154">
        <label>cutil/cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="15856" relation="include">
        </childnode>
        <childnode refid="16155" relation="include">
        </childnode>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="16157" relation="include">
        </childnode>
        <childnode refid="16131" relation="include">
        </childnode>
        <childnode refid="16158" relation="include">
        </childnode>
        <childnode refid="16159" relation="include">
        </childnode>
        <childnode refid="16168" relation="include">
        </childnode>
        <childnode refid="15967" relation="include">
        </childnode>
        <childnode refid="15960" relation="include">
        </childnode>
        <childnode refid="15963" relation="include">
        </childnode>
        <childnode refid="15930" relation="include">
        </childnode>
        <childnode refid="16170" relation="include">
        </childnode>
      </node>
      <node id="16121">
        <label>classify/flexfx.h</label>
        <link refid="flexfx_8h"/>
        <childnode refid="16120" relation="include">
        </childnode>
        <childnode refid="16122" relation="include">
        </childnode>
      </node>
      <node id="16183">
        <label>cube/cube_search_object.cpp</label>
        <link refid="cube__search__object_8cpp"/>
      </node>
      <node id="16220">
        <label>ccutil/unicharset.cpp</label>
        <link refid="unicharset_8cpp"/>
      </node>
      <node id="16156">
        <label>ccstruct/ccstruct.cpp</label>
        <link refid="ccstruct_8cpp"/>
      </node>
      <node id="15883">
        <label>ccmain/werdit.h</label>
        <link refid="werdit_8h"/>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15884" relation="include">
        </childnode>
      </node>
      <node id="15861">
        <label>ccmain/tesseract_cube_combiner.cpp</label>
        <link refid="tesseract__cube__combiner_8cpp"/>
      </node>
      <node id="16045">
        <label>ccstruct/normalis.cpp</label>
        <link refid="normalis_8cpp"/>
      </node>
      <node id="16032">
        <label>textord/underlin.h</label>
        <link refid="underlin_8h"/>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16033" relation="include">
        </childnode>
      </node>
      <node id="15891">
        <label>wordrec/bestfirst.cpp</label>
        <link refid="bestfirst_8cpp"/>
      </node>
      <node id="16186">
        <label>cube/cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="15861" relation="include">
        </childnode>
        <childnode refid="16187" relation="include">
        </childnode>
        <childnode refid="16178" relation="include">
        </childnode>
        <childnode refid="16201" relation="include">
        </childnode>
        <childnode refid="16202" relation="include">
        </childnode>
        <childnode refid="16203" relation="include">
        </childnode>
        <childnode refid="15950" relation="include">
        </childnode>
        <childnode refid="15948" relation="include">
        </childnode>
        <childnode refid="15954" relation="include">
        </childnode>
        <childnode refid="16183" relation="include">
        </childnode>
        <childnode refid="16204" relation="include">
        </childnode>
        <childnode refid="16205" relation="include">
        </childnode>
        <childnode refid="16206" relation="include">
        </childnode>
        <childnode refid="16207" relation="include">
        </childnode>
        <childnode refid="16208" relation="include">
        </childnode>
        <childnode refid="15955" relation="include">
        </childnode>
        <childnode refid="15864" relation="include">
        </childnode>
        <childnode refid="15946" relation="include">
        </childnode>
        <childnode refid="16209" relation="include">
        </childnode>
        <childnode refid="16199" relation="include">
        </childnode>
      </node>
      <node id="16177">
        <label>cube/search_column.h</label>
        <link refid="search__column_8h"/>
        <childnode refid="16178" relation="include">
        </childnode>
        <childnode refid="16179" relation="include">
        </childnode>
      </node>
      <node id="15963">
        <label>dict/permdawg.cpp</label>
        <link refid="permdawg_8cpp"/>
      </node>
      <node id="15950">
        <label>cube/conv_net_classifier.cpp</label>
        <link refid="conv__net__classifier_8cpp"/>
      </node>
      <node id="16085">
        <label>wordrec/findseam.h</label>
        <link refid="findseam_8h"/>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
      </node>
      <node id="16060">
        <label>ccstruct/rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15875" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
        <childnode refid="16061" relation="include">
        </childnode>
        <childnode refid="16062" relation="include">
        </childnode>
        <childnode refid="16071" relation="include">
        </childnode>
        <childnode refid="16073" relation="include">
        </childnode>
        <childnode refid="16078" relation="include">
        </childnode>
        <childnode refid="16142" relation="include">
        </childnode>
        <childnode refid="15877" relation="include">
        </childnode>
        <childnode refid="16143" relation="include">
        </childnode>
        <childnode refid="16067" relation="include">
        </childnode>
        <childnode refid="16007" relation="include">
        </childnode>
        <childnode refid="15984" relation="include">
        </childnode>
        <childnode refid="16001" relation="include">
        </childnode>
        <childnode refid="15992" relation="include">
        </childnode>
        <childnode refid="16144" relation="include">
        </childnode>
      </node>
      <node id="16134">
        <label>classify/clusttool.cpp</label>
        <link refid="clusttool_8cpp"/>
      </node>
      <node id="15886">
        <label>ccmain/output.h</label>
        <link refid="output_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15850" relation="include">
        </childnode>
      </node>
      <node id="16093">
        <label>wordrec/plotedges.cpp</label>
        <link refid="plotedges_8cpp"/>
      </node>
      <node id="16046">
        <label>ccstruct/ocrblock.cpp</label>
        <link refid="ocrblock_8cpp"/>
      </node>
      <node id="16142">
        <label>ccstruct/boxread.cpp</label>
        <link refid="boxread_8cpp"/>
      </node>
      <node id="15991">
        <label>textord/tabvector.cpp</label>
        <link refid="tabvector_8cpp"/>
      </node>
      <node id="16148">
        <label>ccutil/ambigs.cpp</label>
        <link refid="ambigs_8cpp"/>
      </node>
      <node id="16180">
        <label>cube/search_node.cpp</label>
        <link refid="search__node_8cpp"/>
      </node>
      <node id="15933">
        <label>classify/adaptive.cpp</label>
        <link refid="adaptive_8cpp"/>
      </node>
      <node id="15985">
        <label>textord/colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15986" relation="include">
        </childnode>
        <childnode refid="15990" relation="include">
        </childnode>
        <childnode refid="15992" relation="include">
        </childnode>
        <childnode refid="15995" relation="include">
        </childnode>
        <childnode refid="15996" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="15989" relation="include">
        </childnode>
        <childnode refid="15998" relation="include">
        </childnode>
        <childnode refid="15999" relation="include">
        </childnode>
      </node>
      <node id="16087">
        <label>wordrec/outlines.h</label>
        <link refid="outlines_8h"/>
        <childnode refid="15894" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
        <childnode refid="15899" relation="include">
        </childnode>
      </node>
      <node id="16002">
        <label>textord/workingpartset.h</label>
        <link refid="workingpartset_8h"/>
        <childnode refid="15988" relation="include">
        </childnode>
        <childnode refid="15995" relation="include">
        </childnode>
        <childnode refid="15993" relation="include">
        </childnode>
        <childnode refid="16003" relation="include">
        </childnode>
      </node>
      <node id="16123">
        <label>classify/featdefs.cpp</label>
        <link refid="featdefs_8cpp"/>
      </node>
      <node id="16216">
        <label>ccutil/errcode.cpp</label>
        <link refid="errcode_8cpp"/>
      </node>
      <node id="16061">
        <label>ccstruct/coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="16062" relation="include">
        </childnode>
        <childnode refid="16065" relation="include">
        </childnode>
        <childnode refid="16066" relation="include">
        </childnode>
        <childnode refid="16067" relation="include">
        </childnode>
        <childnode refid="16068" relation="include">
        </childnode>
        <childnode refid="16049" relation="include">
        </childnode>
      </node>
      <node id="15977">
        <label>ccstruct/werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15860" relation="include">
        </childnode>
        <childnode refid="15978" relation="include">
        </childnode>
        <childnode refid="16040" relation="include">
        </childnode>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="15907" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="16045" relation="include">
        </childnode>
        <childnode refid="16051" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="16052" relation="include">
        </childnode>
      </node>
      <node id="16233">
        <label>textord/tovars.h</label>
        <link refid="tovars_8h"/>
        <childnode refid="16026" relation="include">
        </childnode>
        <childnode refid="16015" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16018" relation="include">
        </childnode>
        <childnode refid="16020" relation="include">
        </childnode>
        <childnode refid="16234" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="16178">
        <label>cube/beam_search.h</label>
        <link refid="beam__search_8h"/>
        <childnode refid="15863" relation="include">
        </childnode>
        <childnode refid="15951" relation="include">
        </childnode>
      </node>
      <node id="15897">
        <label>wordrec/gradechop.cpp</label>
        <link refid="gradechop_8cpp"/>
      </node>
      <node id="16005">
        <label>textord/linefind.cpp</label>
        <link refid="linefind_8cpp"/>
      </node>
      <node id="15929">
        <label>wordrec/bestfirst.h</label>
        <link refid="bestfirst_8h"/>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15898" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
      </node>
      <node id="15920">
        <label>classify/intfx.cpp</label>
        <link refid="intfx_8cpp"/>
      </node>
      <node id="16104">
        <label>classify/float2int.h</label>
        <link refid="float2int_8h"/>
        <childnode refid="15847" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15936" relation="include">
        </childnode>
        <childnode refid="15937" relation="include">
        </childnode>
      </node>
      <node id="16052">
        <label>wordrec/drawfx.cpp</label>
        <link refid="drawfx_8cpp"/>
      </node>
      <node id="16040">
        <label>ccstruct/ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15977" relation="include">
        </childnode>
        <childnode refid="16041" relation="include">
        </childnode>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="15980" relation="include">
        </childnode>
      </node>
      <node id="15919">
        <label>classify/trainingsampleset.cpp</label>
        <link refid="trainingsampleset_8cpp"/>
      </node>
      <node id="15865">
        <label>training/ambiguous_words.cpp</label>
        <link refid="ambiguous__words_8cpp"/>
      </node>
      <node id="16055">
        <label>ccstruct/linlsq.h</label>
        <link refid="linlsq_8h"/>
        <childnode refid="16056" relation="include">
        </childnode>
        <childnode refid="16051" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="15989" relation="include">
        </childnode>
      </node>
      <node id="15864">
        <label>cube/tess_lang_model.cpp</label>
        <link refid="tess__lang__model_8cpp"/>
      </node>
      <node id="16095">
        <label>classify/mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="15836" relation="include">
        </childnode>
        <childnode refid="16096" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="16113" relation="include">
        </childnode>
        <childnode refid="15934" relation="include">
        </childnode>
        <childnode refid="15936" relation="include">
        </childnode>
        <childnode refid="15938" relation="include">
        </childnode>
        <childnode refid="15939" relation="include">
        </childnode>
        <childnode refid="16101" relation="include">
        </childnode>
        <childnode refid="16102" relation="include">
        </childnode>
        <childnode refid="15941" relation="include">
        </childnode>
        <childnode refid="15921" relation="include">
        </childnode>
      </node>
      <node id="16141">
        <label>wordrec/olutil.cpp</label>
        <link refid="olutil_8cpp"/>
      </node>
      <node id="16147">
        <label>ccutil/ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="16148" relation="include">
        </childnode>
        <childnode refid="16149" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15958" relation="include">
        </childnode>
        <childnode refid="15965" relation="include">
        </childnode>
      </node>
      <node id="16035">
        <label>textord/gap_map.cpp</label>
        <link refid="gap__map_8cpp"/>
      </node>
      <node id="15889">
        <label>classify/adaptmatch.cpp</label>
        <link refid="adaptmatch_8cpp"/>
      </node>
      <node id="16226">
        <label>classify/mfx.h</label>
        <link refid="mfx_8h"/>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="15939" relation="include">
        </childnode>
      </node>
      <node id="16239">
        <label>ccutil/unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="16157" relation="include">
        </childnode>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="15934" relation="include">
        </childnode>
        <childnode refid="15911" relation="include">
        </childnode>
        <childnode refid="15919" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="15983">
        <label>textord/tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="15984" relation="include">
        </childnode>
        <childnode refid="15990" relation="include">
        </childnode>
        <childnode refid="15989" relation="include">
        </childnode>
        <childnode refid="15998" relation="include">
        </childnode>
      </node>
      <node id="15844">
        <label>ccmain/cubeclassifier.cpp</label>
        <link refid="cubeclassifier_8cpp"/>
      </node>
      <node id="16185">
        <label>cube/cube_line_segmenter.cpp</label>
        <link refid="cube__line__segmenter_8cpp"/>
      </node>
      <node id="16139">
        <label>wordrec/plotseg.cpp</label>
        <link refid="plotseg_8cpp"/>
      </node>
      <node id="15854">
        <label>ccmain/paramsd.h</label>
        <link refid="paramsd_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15855" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
      </node>
      <node id="15965">
        <label>dict/stopper.cpp</label>
        <link refid="stopper_8cpp"/>
      </node>
      <node id="15921">
        <label>classify/picofeat.cpp</label>
        <link refid="picofeat_8cpp"/>
      </node>
      <node id="16090">
        <label>ccstruct/split.h</label>
        <link refid="split_8h"/>
        <childnode refid="16082" relation="include">
        </childnode>
        <childnode refid="16091" relation="include">
        </childnode>
        <childnode refid="15926" relation="include">
        </childnode>
        <childnode refid="16092" relation="include">
        </childnode>
        <childnode refid="16093" relation="include">
        </childnode>
      </node>
      <node id="15996">
        <label>textord/colpartitiongrid.cpp</label>
        <link refid="colpartitiongrid_8cpp"/>
      </node>
      <node id="16136">
        <label>classify/ocrfeatures.cpp</label>
        <link refid="ocrfeatures_8cpp"/>
      </node>
      <node id="16028">
        <label>textord/tordmain.h</label>
        <link refid="tordmain_8h"/>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
        <childnode refid="16029" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="15989" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
      </node>
      <node id="15912">
        <label>classify/trainingsampleset.h</label>
        <link refid="trainingsampleset_8h"/>
        <childnode refid="15911" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="15918" relation="include">
        </childnode>
        <childnode refid="15919" relation="include">
        </childnode>
      </node>
      <node id="16044">
        <label>ccstruct/blread.cpp</label>
        <link refid="blread_8cpp"/>
      </node>
      <node id="15869">
        <label>api/capi.h</label>
        <link refid="capi_8h"/>
        <childnode refid="15870" relation="include">
        </childnode>
      </node>
      <node id="16127">
        <label>classify/picofeat.h</label>
        <link refid="picofeat_8h"/>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15910" relation="include">
        </childnode>
        <childnode refid="15936" relation="include">
        </childnode>
        <childnode refid="16114" relation="include">
        </childnode>
        <childnode refid="15938" relation="include">
        </childnode>
        <childnode refid="15921" relation="include">
        </childnode>
        <childnode refid="16128" relation="include">
        </childnode>
      </node>
      <node id="16031">
        <label>textord/fpchop.h</label>
        <link refid="fpchop_8h"/>
        <childnode refid="16015" relation="include">
        </childnode>
        <childnode refid="16032" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="15846">
        <label>ccmain/equationdetect.cpp</label>
        <link refid="equationdetect_8cpp"/>
      </node>
      <node id="15885">
        <label>ccmain/fixspace.h</label>
        <link refid="fixspace_8h"/>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15835" relation="include">
        </childnode>
      </node>
      <node id="16228">
        <label>cutil/emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="15933" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15924" relation="include">
        </childnode>
        <childnode refid="16134" relation="include">
        </childnode>
        <childnode refid="16123" relation="include">
        </childnode>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="15938" relation="include">
        </childnode>
        <childnode refid="16135" relation="include">
        </childnode>
        <childnode refid="16161" relation="include">
        </childnode>
        <childnode refid="15939" relation="include">
        </childnode>
        <childnode refid="15940" relation="include">
        </childnode>
        <childnode refid="16136" relation="include">
        </childnode>
        <childnode refid="15942" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16229" relation="include">
        </childnode>
        <childnode refid="16169" relation="include">
        </childnode>
        <childnode refid="15960" relation="include">
        </childnode>
        <childnode refid="16111" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
        <childnode refid="15943" relation="include">
        </childnode>
      </node>
      <node id="16079">
        <label>ccstruct/vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="16078" relation="include">
        </childnode>
        <childnode refid="16080" relation="include">
        </childnode>
        <childnode refid="16081" relation="include">
        </childnode>
      </node>
      <node id="16210">
        <label>cube/lang_mod_edge.h</label>
        <link refid="lang__mod__edge_8h"/>
        <childnode refid="16176" relation="include">
        </childnode>
        <childnode refid="16177" relation="include">
        </childnode>
        <childnode refid="16192" relation="include">
        </childnode>
        <childnode refid="15948" relation="include">
        </childnode>
      </node>
      <node id="16159">
        <label>cutil/oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="15927" relation="include">
        </childnode>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="16090" relation="include">
        </childnode>
        <childnode refid="16097" relation="include">
        </childnode>
        <childnode refid="16095" relation="include">
        </childnode>
        <childnode refid="16117" relation="include">
        </childnode>
        <childnode refid="16132" relation="include">
        </childnode>
        <childnode refid="16160" relation="include">
        </childnode>
        <childnode refid="16162" relation="include">
        </childnode>
        <childnode refid="16164" relation="include">
        </childnode>
        <childnode refid="16165" relation="include">
        </childnode>
        <childnode refid="15958" relation="include">
        </childnode>
        <childnode refid="16110" relation="include">
        </childnode>
        <childnode refid="16111" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="16112" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
        <childnode refid="16092" relation="include">
        </childnode>
      </node>
      <node id="16115">
        <label>classify/ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="16116" relation="include">
        </childnode>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="16126" relation="include">
        </childnode>
        <childnode refid="16127" relation="include">
        </childnode>
        <childnode refid="16104" relation="include">
        </childnode>
        <childnode refid="16113" relation="include">
        </childnode>
        <childnode refid="16129" relation="include">
        </childnode>
        <childnode refid="16130" relation="include">
        </childnode>
        <childnode refid="16131" relation="include">
        </childnode>
        <childnode refid="16136" relation="include">
        </childnode>
        <childnode refid="15941" relation="include">
        </childnode>
        <childnode refid="15921" relation="include">
        </childnode>
        <childnode refid="16111" relation="include">
        </childnode>
        <childnode refid="16128" relation="include">
        </childnode>
        <childnode refid="16112" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="16029">
        <label>textord/devanagari_processing.cpp</label>
        <link refid="devanagari__processing_8cpp"/>
      </node>
      <node id="16069">
        <label>textord/edgloop.cpp</label>
        <link refid="edgloop_8cpp"/>
      </node>
      <node id="15900">
        <label>wordrec/pieces.cpp</label>
        <link refid="pieces_8cpp"/>
      </node>
      <node id="15937">
        <label>classify/intmatcher.cpp</label>
        <link refid="intmatcher_8cpp"/>
      </node>
      <node id="15875">
        <label>ccmain/paragraphs.h</label>
        <link refid="paragraphs_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
        <childnode refid="15876" relation="include">
        </childnode>
      </node>
      <node id="16034">
        <label>textord/gap_map.h</label>
        <link refid="gap__map_8h"/>
        <childnode refid="16035" relation="include">
        </childnode>
        <childnode refid="16036" relation="include">
        </childnode>
      </node>
      <node id="16041">
        <label>ccstruct/ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="15880" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15978" relation="include">
        </childnode>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="16043" relation="include">
        </childnode>
        <childnode refid="15878" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="16045" relation="include">
        </childnode>
        <childnode refid="16046" relation="include">
        </childnode>
        <childnode refid="16047" relation="include">
        </childnode>
        <childnode refid="15984" relation="include">
        </childnode>
        <childnode refid="15990" relation="include">
        </childnode>
        <childnode refid="16048" relation="include">
        </childnode>
        <childnode refid="16028" relation="include">
        </childnode>
        <childnode refid="16049" relation="include">
        </childnode>
        <childnode refid="16039" relation="include">
        </childnode>
      </node>
      <node id="15976">
        <label>ccutil/params.h</label>
        <link refid="params_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15880" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15882" relation="include">
        </childnode>
        <childnode refid="15838" relation="include">
        </childnode>
        <childnode refid="15885" relation="include">
        </childnode>
        <childnode refid="15886" relation="include">
        </childnode>
        <childnode refid="15847" relation="include">
        </childnode>
        <childnode refid="15854" relation="include">
        </childnode>
        <childnode refid="15855" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15977" relation="include">
        </childnode>
        <childnode refid="16043" relation="include">
        </childnode>
        <childnode refid="16053" relation="include">
        </childnode>
        <childnode refid="16055" relation="include">
        </childnode>
        <childnode refid="16057" relation="include">
        </childnode>
        <childnode refid="16054" relation="include">
        </childnode>
        <childnode refid="16058" relation="include">
        </childnode>
        <childnode refid="16149" relation="include">
        </childnode>
        <childnode refid="16225" relation="include">
        </childnode>
        <childnode refid="16218" relation="include">
        </childnode>
        <childnode refid="16173" relation="include">
        </childnode>
        <childnode refid="16152" relation="include">
        </childnode>
        <childnode refid="16220" relation="include">
        </childnode>
        <childnode refid="16094" relation="include">
        </childnode>
        <childnode refid="16095" relation="include">
        </childnode>
        <childnode refid="16157" relation="include">
        </childnode>
        <childnode refid="16103" relation="include">
        </childnode>
        <childnode refid="16127" relation="include">
        </childnode>
        <childnode refid="16129" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="16226" relation="include">
        </childnode>
        <childnode refid="15939" relation="include">
        </childnode>
        <childnode refid="16101" relation="include">
        </childnode>
        <childnode refid="15940" relation="include">
        </childnode>
        <childnode refid="15921" relation="include">
        </childnode>
        <childnode refid="15942" relation="include">
        </childnode>
        <childnode refid="15945" relation="include">
        </childnode>
        <childnode refid="16227" relation="include">
        </childnode>
        <childnode refid="16222" relation="include">
        </childnode>
        <childnode refid="15947" relation="include">
        </childnode>
        <childnode refid="15969" relation="include">
        </childnode>
        <childnode refid="15970" relation="include">
        </childnode>
        <childnode refid="15963" relation="include">
        </childnode>
        <childnode refid="15964" relation="include">
        </childnode>
        <childnode refid="15965" relation="include">
        </childnode>
        <childnode refid="16231" relation="include">
        </childnode>
        <childnode refid="16012" relation="include">
        </childnode>
        <childnode refid="16011" relation="include">
        </childnode>
        <childnode refid="16024" relation="include">
        </childnode>
        <childnode refid="16232" relation="include">
        </childnode>
        <childnode refid="16233" relation="include">
        </childnode>
        <childnode refid="15988" relation="include">
        </childnode>
        <childnode refid="16048" relation="include">
        </childnode>
        <childnode refid="16028" relation="include">
        </childnode>
        <childnode refid="16076" relation="include">
        </childnode>
        <childnode refid="16068" relation="include">
        </childnode>
        <childnode refid="16049" relation="include">
        </childnode>
        <childnode refid="16031" relation="include">
        </childnode>
        <childnode refid="15997" relation="include">
        </childnode>
        <childnode refid="16038" relation="include">
        </childnode>
        <childnode refid="16039" relation="include">
        </childnode>
        <childnode refid="16037" relation="include">
        </childnode>
        <childnode refid="16234" relation="include">
        </childnode>
        <childnode refid="15872" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="16112" relation="include">
        </childnode>
        <childnode refid="15917" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
        <childnode refid="16235" relation="include">
        </childnode>
        <childnode refid="15905" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
        <childnode refid="15904" relation="include">
        </childnode>
      </node>
      <node id="15829">
        <label>ccutil/genericvector.h</label>
        <link refid="genericvector.h"/>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15837" relation="include">
        </childnode>
        <childnode refid="15866" relation="include">
        </childnode>
        <childnode refid="15867" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
        <childnode refid="15875" relation="include">
        </childnode>
        <childnode refid="15877" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="15906" relation="include">
        </childnode>
        <childnode refid="15907" relation="include">
        </childnode>
        <childnode refid="15974" relation="include">
        </childnode>
        <childnode refid="15931" relation="include">
        </childnode>
        <childnode refid="15976" relation="include">
        </childnode>
        <childnode refid="16147" relation="include">
        </childnode>
        <childnode refid="16236" relation="include">
        </childnode>
        <childnode refid="16218" relation="include">
        </childnode>
        <childnode refid="16238" relation="include">
        </childnode>
        <childnode refid="16219" relation="include">
        </childnode>
        <childnode refid="16239" relation="include">
        </childnode>
        <childnode refid="16096" relation="include">
        </childnode>
        <childnode refid="16105" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15925" relation="include">
        </childnode>
        <childnode refid="15912" relation="include">
        </childnode>
        <childnode refid="16240" relation="include">
        </childnode>
        <childnode refid="16107" relation="include">
        </childnode>
        <childnode refid="15938" relation="include">
        </childnode>
        <childnode refid="15969" relation="include">
        </childnode>
        <childnode refid="15967" relation="include">
        </childnode>
        <childnode refid="15966" relation="include">
        </childnode>
        <childnode refid="16001" relation="include">
        </childnode>
        <childnode refid="16026" relation="include">
        </childnode>
        <childnode refid="15999" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="15969">
        <label>dict/stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="15833" relation="include">
        </childnode>
        <childnode refid="15927" relation="include">
        </childnode>
        <childnode refid="15856" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15958" relation="include">
        </childnode>
        <childnode refid="15963" relation="include">
        </childnode>
        <childnode refid="15964" relation="include">
        </childnode>
        <childnode refid="15965" relation="include">
        </childnode>
        <childnode refid="15929" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15930" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
      </node>
      <node id="16188">
        <label>cube/altlist.cpp</label>
        <link refid="altlist_8cpp"/>
      </node>
      <node id="16036">
        <label>textord/textord.h</label>
        <link refid="textord_8h"/>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15852" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16017" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
        <childnode refid="16037" relation="include">
        </childnode>
        <childnode refid="16019" relation="include">
        </childnode>
        <childnode refid="16020" relation="include">
        </childnode>
        <childnode refid="16021" relation="include">
        </childnode>
      </node>
      <node id="16223">
        <label>cutil/danerror.cpp</label>
        <link refid="danerror_8cpp"/>
      </node>
      <node id="16157">
        <label>classify/protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="16096" relation="include">
        </childnode>
        <childnode refid="15942" relation="include">
        </childnode>
        <childnode refid="16128" relation="include">
        </childnode>
        <childnode refid="16112" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="16198">
        <label>cube/word_unigrams.h</label>
        <link refid="word__unigrams_8h"/>
        <childnode refid="16175" relation="include">
        </childnode>
        <childnode refid="16199" relation="include">
        </childnode>
      </node>
      <node id="16144">
        <label>training/unicharset_extractor.cpp</label>
        <link refid="unicharset__extractor_8cpp"/>
      </node>
      <node id="15879">
        <label>ccstruct/pageres.h</label>
        <link refid="pageres_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15880" relation="include">
        </childnode>
        <childnode refid="15882" relation="include">
        </childnode>
        <childnode refid="15837" relation="include">
        </childnode>
        <childnode refid="15883" relation="include">
        </childnode>
        <childnode refid="15885" relation="include">
        </childnode>
        <childnode refid="15886" relation="include">
        </childnode>
        <childnode refid="15887" relation="include">
        </childnode>
        <childnode refid="15848" relation="include">
        </childnode>
        <childnode refid="15851" relation="include">
        </childnode>
        <childnode refid="15853" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
        <childnode refid="15858" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15878" relation="include">
        </childnode>
        <childnode refid="15888" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15890" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
      </node>
      <node id="16013">
        <label>textord/blkocc.cpp</label>
        <link refid="blkocc_8cpp"/>
      </node>
      <node id="15910">
        <label>classify/trainingsample.h</label>
        <link refid="trainingsample_8h"/>
        <childnode refid="15844" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15911" relation="include">
        </childnode>
        <childnode refid="15912" relation="include">
        </childnode>
        <childnode refid="15920" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="15921" relation="include">
        </childnode>
        <childnode refid="15918" relation="include">
        </childnode>
        <childnode refid="15922" relation="include">
        </childnode>
        <childnode refid="15923" relation="include">
        </childnode>
        <childnode refid="15919" relation="include">
        </childnode>
      </node>
      <node id="15892">
        <label>wordrec/language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15905" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
        <childnode refid="15904" relation="include">
        </childnode>
      </node>
      <node id="15894">
        <label>wordrec/chop.cpp</label>
        <link refid="chop_8cpp"/>
      </node>
      <node id="16116">
        <label>classify/featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="16117" relation="include">
        </childnode>
        <childnode refid="15910" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="16119" relation="include">
        </childnode>
        <childnode refid="16118" relation="include">
        </childnode>
        <childnode refid="16121" relation="include">
        </childnode>
        <childnode refid="16123" relation="include">
        </childnode>
        <childnode refid="16122" relation="include">
        </childnode>
        <childnode refid="16124" relation="include">
        </childnode>
        <childnode refid="16114" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="15914" relation="include">
        </childnode>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16102" relation="include">
        </childnode>
        <childnode refid="15941" relation="include">
        </childnode>
        <childnode refid="15921" relation="include">
        </childnode>
        <childnode refid="16110" relation="include">
        </childnode>
        <childnode refid="16111" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="16112" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
      </node>
      <node id="16006">
        <label>textord/blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="16007" relation="include">
        </childnode>
        <childnode refid="16008" relation="include">
        </childnode>
        <childnode refid="16009" relation="include">
        </childnode>
        <childnode refid="15986" relation="include">
        </childnode>
        <childnode refid="16010" relation="include">
        </childnode>
      </node>
      <node id="16237">
        <label>ccutil/indexmapbidi.cpp</label>
        <link refid="indexmapbidi_8cpp"/>
      </node>
      <node id="16191">
        <label>cube/char_altlist.h</label>
        <link refid="char__altlist_8h"/>
        <childnode refid="15844" relation="include">
        </childnode>
        <childnode refid="16181" relation="include">
        </childnode>
        <childnode refid="16192" relation="include">
        </childnode>
        <childnode refid="16200" relation="include">
        </childnode>
        <childnode refid="16193" relation="include">
        </childnode>
        <childnode refid="16196" relation="include">
        </childnode>
        <childnode refid="16197" relation="include">
        </childnode>
        <childnode refid="15949" relation="include">
        </childnode>
      </node>
      <node id="15917">
        <label>training/shapeclustering.cpp</label>
        <link refid="shapeclustering_8cpp"/>
      </node>
      <node id="15862">
        <label>ccmain/tesseractclass.cpp</label>
        <link refid="tesseractclass_8cpp"/>
      </node>
      <node id="15982">
        <label>textord/alignedblob.cpp</label>
        <link refid="alignedblob_8cpp"/>
      </node>
      <node id="16082">
        <label>ccstruct/seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="16083" relation="include">
        </childnode>
        <childnode refid="15926" relation="include">
        </childnode>
        <childnode refid="15929" relation="include">
        </childnode>
        <childnode refid="16084" relation="include">
        </childnode>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="16085" relation="include">
        </childnode>
        <childnode refid="16086" relation="include">
        </childnode>
        <childnode refid="15930" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
        <childnode refid="15898" relation="include">
        </childnode>
        <childnode refid="15900" relation="include">
        </childnode>
      </node>
      <node id="15872">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="15880">
        <label>ccmain/control.h</label>
        <link refid="control_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15830" relation="include">
        </childnode>
        <childnode refid="15881" relation="include">
        </childnode>
        <childnode refid="15833" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15835" relation="include">
        </childnode>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15839" relation="include">
        </childnode>
        <childnode refid="15856" relation="include">
        </childnode>
        <childnode refid="15857" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
      </node>
      <node id="16030">
        <label>textord/equationdetectbase.cpp</label>
        <link refid="equationdetectbase_8cpp"/>
      </node>
      <node id="15984">
        <label>textord/colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15985" relation="include">
        </childnode>
        <childnode refid="16001" relation="include">
        </childnode>
        <childnode refid="15988" relation="include">
        </childnode>
        <childnode refid="16002" relation="include">
        </childnode>
        <childnode refid="15995" relation="include">
        </childnode>
        <childnode refid="15989" relation="include">
        </childnode>
        <childnode refid="16004" relation="include">
        </childnode>
        <childnode refid="16003" relation="include">
        </childnode>
      </node>
      <node id="15836">
        <label>ccmain/tessbox.cpp</label>
        <link refid="tessbox_8cpp"/>
      </node>
      <node id="15858">
        <label>ccmain/resultiterator.cpp</label>
        <link refid="resultiterator_8cpp"/>
      </node>
      <node id="15961">
        <label>dict/dict.cpp</label>
        <link refid="dict_8cpp"/>
      </node>
      <node id="16240">
        <label>classify/intfeaturedist.h</label>
        <link refid="intfeaturedist_8h"/>
        <childnode refid="16109" relation="include">
        </childnode>
        <childnode refid="15919" relation="include">
        </childnode>
      </node>
      <node id="16140">
        <label>wordrec/olutil.h</label>
        <link refid="olutil_8h"/>
        <childnode refid="15894" relation="include">
        </childnode>
        <childnode refid="16088" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
        <childnode refid="15897" relation="include">
        </childnode>
        <childnode refid="16141" relation="include">
        </childnode>
      </node>
      <node id="16161">
        <label>classify/mfdefs.cpp</label>
        <link refid="mfdefs_8cpp"/>
      </node>
      <node id="16168">
        <label>cutil/oldheap.h</label>
        <link refid="oldheap_8h"/>
        <childnode refid="15924" relation="include">
        </childnode>
        <childnode refid="16169" relation="include">
        </childnode>
        <childnode refid="15929" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="16085" relation="include">
        </childnode>
        <childnode refid="16086" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
      </node>
      <node id="16110">
        <label>training/commontraining.h</label>
        <link refid="commontraining_8h"/>
        <childnode refid="15872" relation="include">
        </childnode>
        <childnode refid="16111" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
        <childnode refid="15917" relation="include">
        </childnode>
      </node>
      <node id="15947">
        <label>dict/dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="15948" relation="include">
        </childnode>
        <childnode refid="15958" relation="include">
        </childnode>
        <childnode refid="15967" relation="include">
        </childnode>
        <childnode refid="15960" relation="include">
        </childnode>
        <childnode refid="15963" relation="include">
        </childnode>
        <childnode refid="15966" relation="include">
        </childnode>
        <childnode refid="15968" relation="include">
        </childnode>
        <childnode refid="15943" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
        <childnode refid="15905" relation="include">
        </childnode>
      </node>
      <node id="15974">
        <label>ccstruct/fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="15849" relation="include">
        </childnode>
        <childnode refid="15975" relation="include">
        </childnode>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="15934" relation="include">
        </childnode>
        <childnode refid="15911" relation="include">
        </childnode>
        <childnode refid="15938" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="15919" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
      </node>
      <node id="16083">
        <label>ccstruct/seam.cpp</label>
        <link refid="seam_8cpp"/>
      </node>
      <node id="16064">
        <label>ccstruct/stepblob.cpp</label>
        <link refid="stepblob_8cpp"/>
      </node>
      <node id="16097">
        <label>classify/adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="15933" relation="include">
        </childnode>
        <childnode refid="15932" relation="include">
        </childnode>
      </node>
      <node id="16026">
        <label>textord/cjkpitch.cpp</label>
        <link refid="cjkpitch_8cpp"/>
      </node>
      <node id="16092">
        <label>wordrec/plotedges.h</label>
        <link refid="plotedges_8h"/>
        <childnode refid="15894" relation="include">
        </childnode>
        <childnode refid="15896" relation="include">
        </childnode>
        <childnode refid="16093" relation="include">
        </childnode>
      </node>
      <node id="16058">
        <label>ccutil/tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="15871" relation="include">
        </childnode>
        <childnode refid="15874" relation="include">
        </childnode>
        <childnode refid="16059" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="16060" relation="include">
        </childnode>
        <childnode refid="16142" relation="include">
        </childnode>
        <childnode refid="16145" relation="include">
        </childnode>
        <childnode refid="15909" relation="include">
        </childnode>
        <childnode refid="16046" relation="include">
        </childnode>
        <childnode refid="16057" relation="include">
        </childnode>
        <childnode refid="16146" relation="include">
        </childnode>
        <childnode refid="16147" relation="include">
        </childnode>
        <childnode refid="16172" relation="include">
        </childnode>
        <childnode refid="16216" relation="include">
        </childnode>
        <childnode refid="16217" relation="include">
        </childnode>
        <childnode refid="16218" relation="include">
        </childnode>
        <childnode refid="16219" relation="include">
        </childnode>
        <childnode refid="16173" relation="include">
        </childnode>
        <childnode refid="16152" relation="include">
        </childnode>
        <childnode refid="16220" relation="include">
        </childnode>
        <childnode refid="15924" relation="include">
        </childnode>
        <childnode refid="15942" relation="include">
        </childnode>
        <childnode refid="16221" relation="include">
        </childnode>
        <childnode refid="16222" relation="include">
        </childnode>
        <childnode refid="16154" relation="include">
        </childnode>
        <childnode refid="16158" relation="include">
        </childnode>
        <childnode refid="16223" relation="include">
        </childnode>
        <childnode refid="15959" relation="include">
        </childnode>
        <childnode refid="15960" relation="include">
        </childnode>
        <childnode refid="15961" relation="include">
        </childnode>
        <childnode refid="15963" relation="include">
        </childnode>
        <childnode refid="15964" relation="include">
        </childnode>
        <childnode refid="16224" relation="include">
        </childnode>
        <childnode refid="16016" relation="include">
        </childnode>
        <childnode refid="16017" relation="include">
        </childnode>
        <childnode refid="16022" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="16103">
        <label>classify/intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15932" relation="include">
        </childnode>
        <childnode refid="16104" relation="include">
        </childnode>
        <childnode refid="16105" relation="include">
        </childnode>
        <childnode refid="15910" relation="include">
        </childnode>
        <childnode refid="15920" relation="include">
        </childnode>
        <childnode refid="15937" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
      </node>
      <node id="15902">
        <label>wordrec/tface.cpp</label>
        <link refid="tface_8cpp"/>
      </node>
      <node id="16023">
        <label>textord/pitsync1.cpp</label>
        <link refid="pitsync1_8cpp"/>
      </node>
      <node id="15962">
        <label>dict/hyphen.cpp</label>
        <link refid="hyphen_8cpp"/>
      </node>
      <node id="15832">
        <label>ccmain/tessbox.h</label>
        <link refid="tessbox_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15833" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15835" relation="include">
        </childnode>
        <childnode refid="15836" relation="include">
        </childnode>
      </node>
      <node id="16182">
        <label>cube/cube_search_object.h</label>
        <link refid="cube__search__object_8h"/>
        <childnode refid="15951" relation="include">
        </childnode>
        <childnode refid="16183" relation="include">
        </childnode>
      </node>
      <node id="16214">
        <label>cube/word_size_model.h</label>
        <link refid="word__size__model_8h"/>
        <childnode refid="16175" relation="include">
        </childnode>
        <childnode refid="16209" relation="include">
        </childnode>
      </node>
      <node id="16018">
        <label>textord/topitch.cpp</label>
        <link refid="topitch_8cpp"/>
      </node>
      <node id="16074">
        <label>ccstruct/pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="16041" relation="include">
        </childnode>
        <childnode refid="16075" relation="include">
        </childnode>
        <childnode refid="16076" relation="include">
        </childnode>
        <childnode refid="16068" relation="include">
        </childnode>
      </node>
      <node id="15971">
        <label>wordrec/wordclass.h</label>
        <link refid="wordclass_8h"/>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15900" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
        <childnode refid="15903" relation="include">
        </childnode>
      </node>
      <node id="15859">
        <label>ccmain/tfacepp.h</label>
        <link refid="tfacepp_8h"/>
        <childnode refid="15836" relation="include">
        </childnode>
        <childnode refid="15860" relation="include">
        </childnode>
      </node>
      <node id="15882">
        <label>ccmain/reject.h</label>
        <link refid="reject_8h"/>
        <childnode refid="15833" relation="include">
        </childnode>
        <childnode refid="15834" relation="include">
        </childnode>
        <childnode refid="15845" relation="include">
        </childnode>
        <childnode refid="15835" relation="include">
        </childnode>
        <childnode refid="15850" relation="include">
        </childnode>
        <childnode refid="15856" relation="include">
        </childnode>
        <childnode refid="15857" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15860" relation="include">
        </childnode>
      </node>
      <node id="16114">
        <label>classify/fxdefs.cpp</label>
        <link refid="fxdefs_8cpp"/>
      </node>
      <node id="16001">
        <label>textord/colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="15846" relation="include">
        </childnode>
        <childnode refid="15985" relation="include">
        </childnode>
        <childnode refid="15990" relation="include">
        </childnode>
        <childnode refid="15988" relation="include">
        </childnode>
        <childnode refid="15995" relation="include">
        </childnode>
        <childnode refid="15996" relation="include">
        </childnode>
        <childnode refid="15993" relation="include">
        </childnode>
        <childnode refid="15994" relation="include">
        </childnode>
        <childnode refid="15991" relation="include">
        </childnode>
      </node>
      <node id="15924">
        <label>classify/cluster.cpp</label>
        <link refid="cluster_8cpp"/>
      </node>
      <node id="15949">
        <label>cube/tess_lang_model.h</label>
        <link refid="tess__lang__model_8h"/>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="15950" relation="include">
        </childnode>
        <childnode refid="15951" relation="include">
        </childnode>
        <childnode refid="15955" relation="include">
        </childnode>
        <childnode refid="15864" relation="include">
        </childnode>
      </node>
      <node id="16236">
        <label>ccutil/indexmapbidi.h</label>
        <link refid="indexmapbidi_8h"/>
        <childnode refid="16237" relation="include">
        </childnode>
        <childnode refid="15912" relation="include">
        </childnode>
        <childnode refid="16108" relation="include">
        </childnode>
        <childnode refid="15913" relation="include">
        </childnode>
        <childnode refid="15918" relation="include">
        </childnode>
        <childnode refid="15919" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
      </node>
      <node id="16151">
        <label>ccutil/mainblk.cpp</label>
        <link refid="mainblk_8cpp"/>
      </node>
      <node id="15839">
        <label>ccmain/pgedit.cpp</label>
        <link refid="pgedit_8cpp"/>
      </node>
      <node id="16160">
        <label>classify/mfdefs.h</label>
        <link refid="mfdefs_8h"/>
        <childnode refid="16125" relation="include">
        </childnode>
        <childnode refid="16161" relation="include">
        </childnode>
        <childnode refid="16101" relation="include">
        </childnode>
      </node>
      <node id="15908">
        <label>ccstruct/matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="15909" relation="include">
        </childnode>
        <childnode refid="15910" relation="include">
        </childnode>
        <childnode refid="15924" relation="include">
        </childnode>
        <childnode refid="15925" relation="include">
        </childnode>
        <childnode refid="15912" relation="include">
        </childnode>
        <childnode refid="15926" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
        <childnode refid="15893" relation="include">
        </childnode>
        <childnode refid="15930" relation="include">
        </childnode>
        <childnode refid="15905" relation="include">
        </childnode>
        <childnode refid="15900" relation="include">
        </childnode>
        <childnode refid="15901" relation="include">
        </childnode>
      </node>
      <node id="16135">
        <label>classify/kdtree.cpp</label>
        <link refid="kdtree_8cpp"/>
      </node>
      <node id="16096">
        <label>classify/intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="16097" relation="include">
        </childnode>
        <childnode refid="16098" relation="include">
        </childnode>
        <childnode refid="16103" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15934" relation="include">
        </childnode>
        <childnode refid="16107" relation="include">
        </childnode>
        <childnode refid="16108" relation="include">
        </childnode>
        <childnode refid="15937" relation="include">
        </childnode>
        <childnode refid="15938" relation="include">
        </childnode>
        <childnode refid="16110" relation="include">
        </childnode>
        <childnode refid="16112" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
        <childnode refid="15892" relation="include">
        </childnode>
        <childnode refid="15905" relation="include">
        </childnode>
      </node>
      <node id="15955">
        <label>cube/hybrid_neural_net_classifier.cpp</label>
        <link refid="hybrid__neural__net__classifier_8cpp"/>
      </node>
      <node id="16181">
        <label>cube/search_object.h</label>
        <link refid="search__object_8h"/>
        <childnode refid="16178" relation="include">
        </childnode>
        <childnode refid="16182" relation="include">
        </childnode>
      </node>
      <node id="15930">
        <label>wordrec/chopper.h</label>
        <link refid="chopper_8h"/>
        <childnode refid="15837" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
      </node>
      <node id="16205">
        <label>cube/cube_utils.cpp</label>
        <link refid="cube__utils_8cpp"/>
      </node>
      <node id="16219">
        <label>ccutil/strngs.cpp</label>
        <link refid="strngs_8cpp"/>
      </node>
      <node id="16195">
        <label>cube/classifier_factory.cpp</label>
        <link refid="classifier__factory_8cpp"/>
      </node>
      <node id="16004">
        <label>textord/textlineprojection.cpp</label>
        <link refid="textlineprojection_8cpp"/>
      </node>
      <node id="16172">
        <label>ccutil/tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="15843" relation="include">
        </childnode>
        <childnode refid="16149" relation="include">
        </childnode>
        <childnode refid="16173" relation="include">
        </childnode>
        <childnode refid="16174" relation="include">
        </childnode>
        <childnode refid="16203" relation="include">
        </childnode>
        <childnode refid="15949" relation="include">
        </childnode>
        <childnode refid="15864" relation="include">
        </childnode>
        <childnode refid="16215" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
      </node>
      <node id="15913">
        <label>classify/mastertrainer.h</label>
        <link refid="mastertrainer_8h"/>
        <childnode refid="15914" relation="include">
        </childnode>
        <childnode refid="15872" relation="include">
        </childnode>
        <childnode refid="15915" relation="include">
        </childnode>
        <childnode refid="15916" relation="include">
        </childnode>
        <childnode refid="15917" relation="include">
        </childnode>
      </node>
      <node id="15888">
        <label>ccstruct/pageres.cpp</label>
        <link refid="pageres_8cpp"/>
      </node>
      <node id="16059">
        <label>ccmain/scaleimg.cpp</label>
        <link refid="scaleimg_8cpp"/>
      </node>
      <node id="16187">
        <label>cube/altlist.h</label>
        <link refid="altlist_8h"/>
        <childnode refid="16188" relation="include">
        </childnode>
        <childnode refid="16189" relation="include">
        </childnode>
        <childnode refid="16191" relation="include">
        </childnode>
      </node>
      <node id="16113">
        <label>classify/outfeat.h</label>
        <link refid="outfeat_8h"/>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="16114" relation="include">
        </childnode>
        <childnode refid="15941" relation="include">
        </childnode>
      </node>
      <node id="16117">
        <label>classify/blobclass.h</label>
        <link refid="blobclass_8h"/>
        <childnode refid="15927" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="16118" relation="include">
        </childnode>
      </node>
      <node id="16078">
        <label>ccstruct/blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="15927" relation="include">
        </childnode>
        <childnode refid="15859" relation="include">
        </childnode>
        <childnode refid="15841" relation="include">
        </childnode>
        <childnode refid="16042" relation="include">
        </childnode>
        <childnode refid="16079" relation="include">
        </childnode>
        <childnode refid="16065" relation="include">
        </childnode>
        <childnode refid="15878" relation="include">
        </childnode>
        <childnode refid="15879" relation="include">
        </childnode>
        <childnode refid="16082" relation="include">
        </childnode>
        <childnode refid="16090" relation="include">
        </childnode>
        <childnode refid="16045" relation="include">
        </childnode>
        <childnode refid="15888" relation="include">
        </childnode>
        <childnode refid="16083" relation="include">
        </childnode>
        <childnode refid="16094" relation="include">
        </childnode>
        <childnode refid="16115" relation="include">
        </childnode>
        <childnode refid="16098" relation="include">
        </childnode>
        <childnode refid="16117" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="16130" relation="include">
        </childnode>
        <childnode refid="15939" relation="include">
        </childnode>
        <childnode refid="15945" relation="include">
        </childnode>
        <childnode refid="16028" relation="include">
        </childnode>
        <childnode refid="16039" relation="include">
        </childnode>
        <childnode refid="16004" relation="include">
        </childnode>
        <childnode refid="15926" relation="include">
        </childnode>
        <childnode refid="15929" relation="include">
        </childnode>
        <childnode refid="16137" relation="include">
        </childnode>
        <childnode refid="15971" relation="include">
        </childnode>
        <childnode refid="15972" relation="include">
        </childnode>
        <childnode refid="16087" relation="include">
        </childnode>
        <childnode refid="16140" relation="include">
        </childnode>
        <childnode refid="16092" relation="include">
        </childnode>
        <childnode refid="16089" relation="include">
        </childnode>
        <childnode refid="15973" relation="include">
        </childnode>
        <childnode refid="16141" relation="include">
        </childnode>
        <childnode refid="15900" relation="include">
        </childnode>
        <childnode refid="16139" relation="include">
        </childnode>
        <childnode refid="16081" relation="include">
        </childnode>
      </node>
      <node id="15970">
        <label>dict/permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="15831" relation="include">
        </childnode>
        <childnode refid="15927" relation="include">
        </childnode>
        <childnode refid="15856" relation="include">
        </childnode>
        <childnode refid="15840" relation="include">
        </childnode>
        <childnode refid="15889" relation="include">
        </childnode>
        <childnode refid="15958" relation="include">
        </childnode>
        <childnode refid="15963" relation="include">
        </childnode>
        <childnode refid="15964" relation="include">
        </childnode>
        <childnode refid="15965" relation="include">
        </childnode>
        <childnode refid="15891" relation="include">
        </childnode>
        <childnode refid="15895" relation="include">
        </childnode>
        <childnode refid="15902" relation="include">
        </childnode>
        <childnode refid="15903" relation="include">
        </childnode>
      </node>
      <node id="16020">
        <label>textord/tospace.cpp</label>
        <link refid="tospace_8cpp"/>
      </node>
      <node id="15856">
        <label>ccmain/recogtraining.cpp</label>
        <link refid="recogtraining_8cpp"/>
      </node>
      <node id="16071">
        <label>ccstruct/quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="16040" relation="include">
        </childnode>
        <childnode refid="16072" relation="include">
        </childnode>
      </node>
      <node id="16047">
        <label>textord/bbgrid.cpp</label>
        <link refid="bbgrid_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_generic_vector" prot="public">GenericVector</innerclass>
    <innerclass refid="classtesseract_1_1_pointer_vector" prot="public">tesseract::PointerVector</innerclass>
    <innerclass refid="class_generic_vector_eq_eq" prot="public">GenericVectorEqEq</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genericvector.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Generic<sp/>vector<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Daria<sp/>Antonova</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Jun<sp/>23<sp/>11:26:43<sp/>PDT<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_CCUTIL_GENERICVECTOR_H_</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_CCUTIL_GENERICVECTOR_H_</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tesscallback_8h" kindref="compound">tesscallback.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="errcode_8h" kindref="compound">errcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>PointerVector&lt;T&gt;<sp/>below<sp/>in<sp/>preference<sp/>to<sp/>GenericVector&lt;T*&gt;,<sp/>as<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provides<sp/>automatic<sp/>deletion<sp/>of<sp/>pointers,<sp/>[De]Serialize<sp/>that<sp/>works,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sort<sp/>that<sp/>works.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_vector" kindref="compound">GenericVector</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="class_generic_vector_1a60d42eebf02708482a8b506edd417990" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_1a60d42eebf02708482a8b506edd417990" kindref="member">GenericVector</ref>()<sp/>{<sp/>this-&gt;<ref refid="class_generic_vector_1a5b010723588fe15f303e4f3474d8479e" kindref="member">init</ref>(<ref refid="class_generic_vector_1a17604861454b13965d7e2cb8c0c5b59a" kindref="member">kDefaultVectorSize</ref>);<sp/>}</highlight></codeline>
<codeline lineno="38" refid="class_generic_vector_1a23c207b5077ea514bc5ec813649140d1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a23c207b5077ea514bc5ec813649140d1" kindref="member">GenericVector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>)<sp/>{<sp/>this-&gt;<ref refid="class_generic_vector_1a5b010723588fe15f303e4f3474d8479e" kindref="member">init</ref>(size);<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_generic_vector_1a2b61cd1cd756770518f5ac30f817a9bf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_1a2b61cd1cd756770518f5ac30f817a9bf" kindref="member">GenericVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_generic_vector_1a5b010723588fe15f303e4f3474d8479e" kindref="member">init</ref>(other.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_generic_vector_1af73fadcdb08f0a12a5615f2bcf6fa6a8" kindref="member">operator+=</ref>(other);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T&gt;</ref><sp/>&amp;<ref refid="class_generic_vector_1af73fadcdb08f0a12a5615f2bcf6fa6a8" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T&gt;</ref><sp/>&amp;<ref refid="class_generic_vector_1af6fd5b3891b276c10add96f9411bec05" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&amp;<sp/>other);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a49840c8743a063b87839baef7e19b968" kindref="member">~GenericVector</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>some<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1aa225ea3fc9374961482bc804028317eb" kindref="member">reserve</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Double<sp/>the<sp/>size<sp/>of<sp/>the<sp/>internal<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1af0214c8c21da9eb57dfebc78611d0cd6" kindref="member">double_the_size</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Resizes<sp/>to<sp/>size<sp/>and<sp/>sets<sp/>all<sp/>values<sp/>to<sp/>t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a6751521fd3eb461d81fc83ef93a0def3" kindref="member">init_to_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>,<sp/>T<sp/>t);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>size<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref><sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>object<sp/>from<sp/>an<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>T<sp/>&amp;</highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>T<sp/>&amp;<ref refid="class_generic_vector_1a6e6d6497a6f7dd999b6d591c15354167" kindref="member">back</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>T<sp/>&amp;<ref refid="class_generic_vector_1af6a96287d98d4b6581cad4d4bb27e5aa" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>index<sp/>of<sp/>the<sp/>T<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>NEEDS<sp/>a<sp/>compare_callback<sp/>to<sp/>be<sp/>passed<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set_compare_callback.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a0a62e2c80254bad72fb8aa37fed3af33" kindref="member">get_index</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>T<sp/>is<sp/>in<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a135efb0c3d9bb58fa7538f137567c9c5" kindref="member">contains</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>the<sp/>index<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_generic_vector_1aa7a4692f87d6418d782c3261ed11a952" kindref="member">contains_index</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>an<sp/>element<sp/>in<sp/>the<sp/>end<sp/>of<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1af73fadcdb08f0a12a5615f2bcf6fa6a8" kindref="member">operator+=</ref>(T<sp/>t);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>an<sp/>element<sp/>in<sp/>the<sp/>end<sp/>of<sp/>the<sp/>array<sp/>if<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>element<sp/>is<sp/>not<sp/>already<sp/>contained<sp/>in<sp/>the<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a393f9f8dcc55ad759a5c7fbdc4840a89" kindref="member">push_back_new</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Push<sp/>an<sp/>element<sp/>in<sp/>the<sp/>front<sp/>of<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>This<sp/>function<sp/>is<sp/>O(n)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1ae08e7cece0097ad356b5e565cbb2cf0b" kindref="member">push_front</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>value<sp/>at<sp/>the<sp/>given<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a067b7833ee66238b7b5e230404525fcb" kindref="member">set</ref>(T<sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>t<sp/>at<sp/>the<sp/>given<sp/>index,<sp/>push<sp/>other<sp/>elements<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a57ca5259541548a97bcfd4d0925a27ff" kindref="member">insert</ref>(T<sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Removes<sp/>an<sp/>element<sp/>at<sp/>the<sp/>given<sp/>index<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shifts<sp/>the<sp/>remaining<sp/>elements<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truncates<sp/>the<sp/>array<sp/>to<sp/>the<sp/>given<sp/>size<sp/>by<sp/>removing<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>current<sp/>size<sp/>is<sp/>less,<sp/>the<sp/>array<sp/>is<sp/>not<sp/>expanded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_generic_vector_1af1793745c45178626c9afe48c7a1e140" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1af1793745c45178626c9afe48c7a1e140" kindref="member">truncate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&lt;<sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref><sp/>=<sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>callback<sp/>to<sp/>be<sp/>called<sp/>to<sp/>delete<sp/>the<sp/>elements<sp/>when<sp/>the<sp/>array<sp/>took</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>their<sp/>ownership.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1af2bbca5b3258035a333b62679835a253" kindref="member">set_clear_callback</ref>(<ref refid="class_tess_callback1" kindref="compound">TessCallback1&lt;T&gt;</ref>*<sp/>cb);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>callback<sp/>to<sp/>be<sp/>called<sp/>to<sp/>compare<sp/>the<sp/>elements<sp/>when<sp/>needed<sp/>(contains,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get_id,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a5fb7cbde5178b72ff3637e8c91e739b7" kindref="member">set_compare_callback</ref>(<ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;bool, T const &amp;, T const &amp;&gt;</ref>*<sp/>cb);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>array,<sp/>calling<sp/>the<sp/>clear<sp/>callback<sp/>function<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>owned<sp/>callbacks<sp/>are<sp/>also<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>don&apos;t<sp/>want<sp/>the<sp/>callbacks<sp/>to<sp/>be<sp/>deleted,<sp/>before<sp/>calling<sp/>clear,<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>callback<sp/>to<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>objects<sp/>pointed<sp/>to<sp/>by<sp/>data_[i]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>clears<sp/>the<sp/>current<sp/>object,<sp/>then,<sp/>does<sp/>a<sp/>shallow<sp/>copy<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>its<sp/>argument,<sp/>and<sp/>finally<sp/>invalidates<sp/>its<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Callbacks<sp/>are<sp/>moved<sp/>to<sp/>the<sp/>current<sp/>object;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1abae057ce589be25aae9b80958f84e34c" kindref="member">move</ref>(<ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T&gt;</ref>*<sp/>from);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Read/Write<sp/>the<sp/>array<sp/>to<sp/>a<sp/>file.<sp/>This<sp/>does<sp/>_NOT_<sp/>read/write<sp/>the<sp/>callbacks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>callback<sp/>given<sp/>must<sp/>be<sp/>permanent<sp/>since<sp/>they<sp/>will<sp/>be<sp/>called<sp/>more<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>once.<sp/>The<sp/>given<sp/>callback<sp/>will<sp/>be<sp/>deleted<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>callbacks<sp/>are<sp/>NULL,<sp/>then<sp/>the<sp/>data<sp/>is<sp/>simply<sp/>read/written<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fread<sp/>(and<sp/>swapping)/fwrite.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>on<sp/>error<sp/>or<sp/>if<sp/>the<sp/>callback<sp/>returns<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>DEPRECATED.<sp/>Use<sp/>[De]Serialize[Classes]<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a9fa53a15945a79e1dbfc7aad3d5875e9" kindref="member">write</ref>(FILE*<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;bool, FILE*, T const &amp;&gt;</ref>*<sp/>cb)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1aa0efce3eef59f7b96d7058f114c49387" kindref="member">read</ref>(FILE*<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/><ref refid="class_tess_result_callback3" kindref="compound">TessResultCallback3&lt;bool, FILE*, T*, bool&gt;</ref>*<sp/>cb,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>a<sp/>vector<sp/>of<sp/>simple<sp/>types<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>that<sp/>bitwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read/write<sp/>of<sp/>T<sp/>will<sp/>work.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a51aeec27092537323abc7174af1c16ef" kindref="member">Serialize</ref>(FILE*<sp/>fp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>a<sp/>vector<sp/>of<sp/>simple<sp/>types<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>that<sp/>bitwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read/write<sp/>will<sp/>work<sp/>with<sp/>ReverseN<sp/>according<sp/>to<sp/>sizeof(T).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1aa4f5b1bc0d044fbd1fc77363b798c39c" kindref="member">DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>a<sp/>vector<sp/>of<sp/>classes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>the<sp/>existence<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>T::Serialize(FILE*<sp/>fp)<sp/>const<sp/>that<sp/>returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a42e50cf68bb453fc11de039ca2ed81c8" kindref="member">SerializeClasses</ref>(FILE*<sp/>fp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>a<sp/>vector<sp/>of<sp/>classes<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>the<sp/>existence<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>T::Deserialize(bool<sp/>swap,<sp/>FILE*<sp/>fp)<sp/>that<sp/>returns<sp/>false<sp/>in<sp/>case<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>error.<sp/>Also<sp/>needs<sp/>T::T()<sp/>and<sp/>T::T(constT&amp;),<sp/>as<sp/>init_to_size<sp/>is<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>function.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a698ebd328d22f1edc114053ca2eba48e" kindref="member">DeSerializeClasses</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocates<sp/>a<sp/>new<sp/>array<sp/>of<sp/>double<sp/>the<sp/>current_size,<sp/>copies<sp/>over<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>information<sp/>from<sp/>data<sp/>to<sp/>the<sp/>new<sp/>location,<sp/>deletes<sp/>data<sp/>and<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>pointed<sp/>to<sp/>the<sp/>new<sp/>larger<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>uses<sp/>memcpy<sp/>to<sp/>copy<sp/>the<sp/>data,<sp/>instead<sp/>of<sp/>invoking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>operator=()<sp/>for<sp/>each<sp/>element<sp/>like<sp/>double_the_size()<sp/>does.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_generic_vector_1a85308b8287bcb7924d64175cbc681f89" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="class_generic_vector_1a85308b8287bcb7924d64175cbc681f89" kindref="member">double_the_size_memcpy</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_size,<sp/>T<sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*data_new<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[current_size<sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(data_new,<sp/>data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>*<sp/>current_size);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>data;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_new;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sorts<sp/>the<sp/>members<sp/>of<sp/>this<sp/>vector<sp/>using<sp/>the<sp/>less<sp/>than<sp/>comparator<sp/>(cmp_lt),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>compares<sp/>the<sp/>values.<sp/>Useful<sp/>for<sp/>GenericVectors<sp/>to<sp/>primitive<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Will<sp/>not<sp/>work<sp/>so<sp/>great<sp/>for<sp/>pointers<sp/>(unless<sp/>you<sp/>just<sp/>want<sp/>to<sp/>sort<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers).<sp/>You<sp/>need<sp/>to<sp/>provide<sp/>a<sp/>specialization<sp/>to<sp/>sort_cmp<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>your<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">sort</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>the<sp/>array<sp/>into<sp/>the<sp/>order<sp/>defined<sp/>by<sp/>the<sp/>qsort<sp/>function<sp/>comparator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>comparator<sp/>function<sp/>is<sp/>as<sp/>defined<sp/>by<sp/>qsort,<sp/>ie.<sp/>it<sp/>receives<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>two<sp/>Ts<sp/>and<sp/>returns<sp/>negative<sp/>if<sp/>the<sp/>first<sp/>element<sp/>is<sp/>to<sp/>appear<sp/>earlier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>result<sp/>and<sp/>positive<sp/>if<sp/>it<sp/>is<sp/>to<sp/>appear<sp/>later,<sp/>with<sp/>0<sp/>for<sp/>equal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_generic_vector_1a461142d4ff7c61f22119552b7c0b2755" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a461142d4ff7c61f22119552b7c0b2755" kindref="member">sort</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*comparator)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort(<ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>,<sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*<ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>),<sp/>comparator);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Searches<sp/>the<sp/>array<sp/>(assuming<sp/>sorted<sp/>in<sp/>ascending<sp/>order,<sp/>using<sp/>sort())<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>element<sp/>equal<sp/>to<sp/>target<sp/>and<sp/>returns<sp/>true<sp/>if<sp/>it<sp/>is<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>binary_search<sp/>to<sp/>get<sp/>the<sp/>index<sp/>of<sp/>target,<sp/>or<sp/>its<sp/>nearest<sp/>candidate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_generic_vector_1a56b47b53976101ce26410fea5be3cdd2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a56b47b53976101ce26410fea5be3cdd2" kindref="member">bool_binary_search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>target)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/><ref refid="class_generic_vector_1a2eaa0df35abb2c00571bb1d6e5d73377" kindref="member">binary_search</ref>(target);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[index]<sp/>==<sp/>target;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Searches<sp/>the<sp/>array<sp/>(assuming<sp/>sorted<sp/>in<sp/>ascending<sp/>order,<sp/>using<sp/>sort())<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>element<sp/>equal<sp/>to<sp/>target<sp/>and<sp/>returns<sp/>the<sp/>index<sp/>of<sp/>the<sp/>best<sp/>candidate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>return<sp/>value<sp/>is<sp/>conceptually<sp/>the<sp/>largest<sp/>index<sp/>i<sp/>such<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>data_[i]<sp/>&lt;=<sp/>target<sp/>or<sp/>0<sp/>if<sp/>target<sp/>&lt;<sp/>the<sp/>whole<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE<sp/>that<sp/>this<sp/>function<sp/>uses<sp/>operator&gt;<sp/>so<sp/>really<sp/>the<sp/>return<sp/>value<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>largest<sp/>index<sp/>i<sp/>such<sp/>that<sp/>data_[i]<sp/>&gt;<sp/>target<sp/>is<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_generic_vector_1a2eaa0df35abb2c00571bb1d6e5d73377" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a2eaa0df35abb2c00571bb1d6e5d73377" kindref="member">binary_search</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>target)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>middle<sp/>=<sp/>(bottom<sp/>+<sp/>top)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[middle]<sp/>&gt;<sp/>target)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>=<sp/>middle;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>middle;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(top<sp/>-<sp/>bottom<sp/>&gt;<sp/>1);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bottom;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compact<sp/>the<sp/>vector<sp/>by<sp/>deleting<sp/>elements<sp/>using<sp/>operator!=<sp/>on<sp/>basic<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>vector<sp/>must<sp/>be<sp/>sorted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_generic_vector_1a8cb22ff55d6dd125d93cd03fd73bf8ad" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a8cb22ff55d6dd125d93cd03fd73bf8ad" kindref="member">compact_sorted</ref>()<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>element<sp/>is<sp/>in<sp/>no<sp/>matter<sp/>what,<sp/>hence<sp/>the<sp/>i<sp/>=<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_write<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>next<sp/>unique<sp/>item<sp/>and<sp/>writes<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[last_write]<sp/>!=<sp/><ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[i])</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[++last_write]<sp/>=<sp/><ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[i];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>last_write<sp/>is<sp/>the<sp/>index<sp/>of<sp/>a<sp/>valid<sp/>data<sp/>cell,<sp/>so<sp/>add<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>size_used_<sp/>=<sp/>last_write<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compact<sp/>the<sp/>vector<sp/>by<sp/>deleting<sp/>elements<sp/>for<sp/>which<sp/>delete_cb<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>true.<sp/>delete_cb<sp/>is<sp/>a<sp/>permanent<sp/>callback<sp/>and<sp/>will<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="class_generic_vector_1a080f7786e007523bcaa3f69913a82882" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a080f7786e007523bcaa3f69913a82882" kindref="member">compact</ref>(<ref refid="class_tess_result_callback1" kindref="compound">TessResultCallback1&lt;bool, int&gt;</ref>*<sp/>delete_cb)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Until<sp/>the<sp/>callback<sp/>returns<sp/>true,<sp/>the<sp/>elements<sp/>stay<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(old_index<sp/>&lt;<sp/>size_used_<sp/>&amp;&amp;<sp/>!delete_cb-&gt;Run(old_index++))</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++new_size;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>just<sp/>copy<sp/>anything<sp/>else<sp/>that<sp/>gets<sp/>false<sp/>from<sp/>delete_cb.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>old_index<sp/>&lt;<sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>;<sp/>++old_index)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!delete_cb-&gt;<ref refid="class_tess_result_callback1_1a15949cddc2970f837e3eef7e7dc84fce" kindref="member">Run</ref>(old_index))<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[new_size++]<sp/>=<sp/><ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[old_index];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>size_used_<sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>delete_cb;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="class_generic_vector_1aea840b1a4c4275a944c46e0f09d2851f" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_generic_vector_1aea840b1a4c4275a944c46e0f09d2851f" kindref="member">dot_product</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T&gt;</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(<ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>,<sp/>other.<ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>)<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[i]<sp/>*<sp/>other.<ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[i];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>the<sp/>object,<sp/>allocating<sp/>size<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a5b010723588fe15f303e4f3474d8479e" kindref="member">init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>assuming<sp/>that<sp/>the<sp/>object<sp/>generally<sp/>placed<sp/>in<sp/>thie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>vector<sp/>are<sp/>small<sp/>enough<sp/>that<sp/>for<sp/>efficiency<sp/>it<sp/>makes<sp/>sence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>start<sp/>with<sp/>a<sp/>larger<sp/>initial<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="class_generic_vector_1a17604861454b13965d7e2cb8c0c5b59a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a17604861454b13965d7e2cb8c0c5b59a" kindref="member">kDefaultVectorSize</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="274" refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><sp/><sp/><ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>;</highlight></codeline>
<codeline lineno="275" refid="class_generic_vector_1a651ead7f279fb6ed4bfb683989d573de" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><sp/><sp/><ref refid="class_generic_vector_1a651ead7f279fb6ed4bfb683989d573de" kindref="member">size_reserved_</ref>;</highlight></codeline>
<codeline lineno="276" refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" refkind="member"><highlight class="normal"><sp/><sp/>T*<sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="277" refid="class_generic_vector_1a57a833bdcc07a53e9a7b57d07cac2131" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_tess_callback1" kindref="compound">TessCallback1&lt;T&gt;</ref>*<sp/><ref refid="class_generic_vector_1a57a833bdcc07a53e9a7b57d07cac2131" kindref="member">clear_cb_</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mutable<sp/>because<sp/>Run<sp/>method<sp/>is<sp/>not<sp/>const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="class_generic_vector_1acd69761952fb39cbe7d7b43a6b06a432" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;bool, T const &amp;, T const &amp;&gt;</ref>*<sp/><ref refid="class_generic_vector_1acd69761952fb39cbe7d7b43a6b06a432" kindref="member">compare_cb_</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="285" refid="namespacetesseract_1a212c25895ae2269d47fab33e233b408f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a212c25895ae2269d47fab33e233b408f" kindref="member">cmp_eq</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t1,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>t2)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t1<sp/>==<sp/>t2;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>by<sp/>sort()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>&lt;<sp/>0<sp/>if<sp/>t1<sp/>&lt;<sp/>t2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>0<sp/>if<sp/>t1<sp/>==<sp/>t2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>&gt;<sp/>0<sp/>if<sp/>t1<sp/>&gt;<sp/>t2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="294" refid="namespacetesseract_1a80ac7a7c78e68d061ee45ae3e2cff93b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a80ac7a7c78e68d061ee45ae3e2cff93b" kindref="member">sort_cmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>t2)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>a<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(t1);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>b<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">T<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(t2);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*a<sp/>&lt;<sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*b<sp/>&lt;<sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Used<sp/>by<sp/>PointerVector::sort()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>&lt;<sp/>0<sp/>if<sp/>t1<sp/>&lt;<sp/>t2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>0<sp/>if<sp/>t1<sp/>==<sp/>t2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>&gt;<sp/>0<sp/>if<sp/>t1<sp/>&gt;<sp/>t2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="311" refid="namespacetesseract_1af2ffd2bbd2b0d128ead8c9a4ff2535bc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1af2ffd2bbd2b0d128ead8c9a4ff2535bc" kindref="member">sort_ptr_cmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>t1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>t2)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>a<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T<sp/>*<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t1);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>b<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">T<sp/>*<sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t2);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*a<sp/>&lt;<sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*b<sp/>&lt;<sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Subclass<sp/>for<sp/>a<sp/>vector<sp/>of<sp/>pointers.<sp/>Use<sp/>in<sp/>preference<sp/>to<sp/>GenericVector&lt;T*&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>it<sp/>provides<sp/>automatic<sp/>deletion<sp/>and<sp/>correct<sp/>serialization,<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>corollary<sp/>that<sp/>all<sp/>copy<sp/>operations<sp/>are<sp/>deep<sp/>copies<sp/>of<sp/>the<sp/>pointed-to<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="327" refid="classtesseract_1_1_pointer_vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_pointer_vector" kindref="compound">PointerVector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt;T*&gt;<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329" refid="classtesseract_1_1_pointer_vector_1a022d9a96e0d6c359284232387db109f3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_pointer_vector_1a022d9a96e0d6c359284232387db109f3" kindref="member">PointerVector</ref>()<sp/>:<sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt;T*&gt;()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="330" refid="classtesseract_1_1_pointer_vector_1ada50f92a05337f4f193de0179fae226c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector_1ada50f92a05337f4f193de0179fae226c" kindref="member">PointerVector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>)<sp/>:<sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt;T*&gt;(size)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="331" refid="classtesseract_1_1_pointer_vector_1a1c540ed4a9c7083ab999f6df7b3b580e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector_1a1c540ed4a9c7083ab999f6df7b3b580e" kindref="member">~PointerVector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>must<sp/>be<sp/>called<sp/>here,<sp/>even<sp/>though<sp/>it<sp/>is<sp/>called<sp/>again<sp/>by<sp/>the<sp/>base,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>base<sp/>will<sp/>call<sp/>the<sp/>wrong<sp/>clear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_pointer_vector_1adf340a1a717d01c8109bdcf22218eeec" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>must<sp/>be<sp/>deep,<sp/>as<sp/>the<sp/>pointers<sp/>will<sp/>be<sp/>automatically<sp/>deleted<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>destruction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="classtesseract_1_1_pointer_vector_1a9fb21553c3e9d1c7582deebc3be62d9c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_pointer_vector_1a9fb21553c3e9d1c7582deebc3be62d9c" kindref="member">PointerVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector" kindref="compound">PointerVector</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_generic_vector_1a5b010723588fe15f303e4f3474d8479e" kindref="member">init</ref>(other.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_pointer_vector_1ac614c7655bbef9b646df3775b1109711" kindref="member">operator+=</ref>(other);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="342" refid="classtesseract_1_1_pointer_vector_1ac614c7655bbef9b646df3775b1109711" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_pointer_vector" kindref="compound">PointerVector&lt;T&gt;</ref>&amp;<sp/><ref refid="classtesseract_1_1_pointer_vector_1ac614c7655bbef9b646df3775b1109711" kindref="member">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector" kindref="compound">PointerVector</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_generic_vector_1aa225ea3fc9374961482bc804028317eb" kindref="member">reserve</ref>(this-&gt;<ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref><sp/>+<sp/>other.<ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>other.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T(*other.<ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[i]));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="classtesseract_1_1_pointer_vector_1ab90a746ca4c2b6db744af7e8eae2b31e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_pointer_vector" kindref="compound">PointerVector&lt;T&gt;</ref>&amp;<sp/><ref refid="classtesseract_1_1_pointer_vector_1ab90a746ca4c2b6db744af7e8eae2b31e" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector" kindref="compound">PointerVector</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_pointer_vector_1aa38ca98856fb4ca4d521786a77e2b4ce" kindref="member">truncate</ref>(0);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classtesseract_1_1_pointer_vector_1ac614c7655bbef9b646df3775b1109711" kindref="member">operator+=</ref>(other);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Removes<sp/>an<sp/>element<sp/>at<sp/>the<sp/>given<sp/>index<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shifts<sp/>the<sp/>remaining<sp/>elements<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="classtesseract_1_1_pointer_vector_1a36e300beddeffc06af243e2b278e8f70" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">remove</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::data_</ref>[index];</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1a3fd37a240a42f1c3052e8d28614d3702" kindref="member">GenericVector&lt;T*&gt;::remove</ref>(index);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Truncates<sp/>the<sp/>array<sp/>to<sp/>the<sp/>given<sp/>size<sp/>by<sp/>removing<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>current<sp/>size<sp/>is<sp/>less,<sp/>the<sp/>array<sp/>is<sp/>not<sp/>expanded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="classtesseract_1_1_pointer_vector_1aa38ca98856fb4ca4d521786a77e2b4ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector_1aa38ca98856fb4ca4d521786a77e2b4ce" kindref="member">truncate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>size;<sp/>i<sp/>&lt;<sp/>GenericVector&lt;T*&gt;::size_used_;<sp/>++i)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::data_</ref>[i];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1af1793745c45178626c9afe48c7a1e140" kindref="member">GenericVector&lt;T*&gt;::truncate</ref>(size);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compact<sp/>the<sp/>vector<sp/>by<sp/>deleting<sp/>elements<sp/>for<sp/>which<sp/>delete_cb<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>true.<sp/>delete_cb<sp/>is<sp/>a<sp/>permanent<sp/>callback<sp/>and<sp/>will<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="classtesseract_1_1_pointer_vector_1a41f83a9b780f76b5f7fc3fd9f4c595d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector_1a41f83a9b780f76b5f7fc3fd9f4c595d3" kindref="member">compact</ref>(<ref refid="class_tess_result_callback1" kindref="compound">TessResultCallback1&lt;bool, const T*&gt;</ref>*<sp/>delete_cb)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>old_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Until<sp/>the<sp/>callback<sp/>returns<sp/>true,<sp/>the<sp/>elements<sp/>stay<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(old_index<sp/>&lt;<sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::size_used_</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!delete_cb-&gt;<ref refid="class_tess_result_callback1_1a15949cddc2970f837e3eef7e7dc84fce" kindref="member">Run</ref>(<ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::data_</ref>[old_index++]))</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++new_size;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>just<sp/>copy<sp/>anything<sp/>else<sp/>that<sp/>gets<sp/>false<sp/>from<sp/>delete_cb.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>old_index<sp/>&lt;<sp/>GenericVector&lt;T*&gt;::size_used_;<sp/>++old_index)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!delete_cb-&gt;<ref refid="class_tess_result_callback1_1a15949cddc2970f837e3eef7e7dc84fce" kindref="member">Run</ref>(<ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::data_</ref>[old_index]))<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::data_</ref>[new_size++]<sp/>=</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::data_</ref>[old_index];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::data_</ref>[old_index];</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::size_used_</ref><sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>delete_cb;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>array,<sp/>calling<sp/>the<sp/>clear<sp/>callback<sp/>function<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>owned<sp/>callbacks<sp/>are<sp/>also<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>don&apos;t<sp/>want<sp/>the<sp/>callbacks<sp/>to<sp/>be<sp/>deleted,<sp/>before<sp/>calling<sp/>clear,<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>callback<sp/>to<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="classtesseract_1_1_pointer_vector_1adf340a1a717d01c8109bdcf22218eeec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector_1adf340a1a717d01c8109bdcf22218eeec" kindref="member">clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">GenericVector&lt;T*&gt;::delete_data_pointers</ref>();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">GenericVector&lt;T*&gt;::clear</ref>();</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>a<sp/>vector<sp/>of<sp/>simple<sp/>types<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>that<sp/>bitwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read/write<sp/>of<sp/>T<sp/>will<sp/>work.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="classtesseract_1_1_pointer_vector_1aea7ac16752260e06f7c996343b17d876" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector_1aea7ac16752260e06f7c996343b17d876" kindref="member">Serialize</ref>(FILE*<sp/>fp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>used<sp/>=<sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::size_used_</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;used,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(used),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>used;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>non_null<sp/>=<sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::data_</ref>[i]<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;non_null,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(non_null),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(non_null<sp/>&amp;&amp;<sp/>!<ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T*&gt;::data_</ref>[i]-&gt;<ref refid="classtesseract_1_1_pointer_vector_1aea7ac16752260e06f7c996343b17d876" kindref="member">Serialize</ref>(fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>a<sp/>vector<sp/>of<sp/>simple<sp/>types<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>that<sp/>bitwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read/write<sp/>will<sp/>work<sp/>with<sp/>ReverseN<sp/>according<sp/>to<sp/>sizeof(T).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>needs<sp/>T::T(),<sp/>as<sp/>new<sp/>T<sp/>is<sp/>used<sp/>in<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="classtesseract_1_1_pointer_vector_1af324f722c7188f7ffc6ae3ff5eecd95a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector_1af324f722c7188f7ffc6ae3ff5eecd95a" kindref="member">DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>reserved;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;reserved,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(reserved),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;reserved);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1aa225ea3fc9374961482bc804028317eb" kindref="member">GenericVector&lt;T*&gt;::reserve</ref>(reserved);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>reserved;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>non_null;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;non_null,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(non_null),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T*<sp/>item<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(non_null)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!item-&gt;DeSerialize(swap,<sp/>fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(item);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sorts<sp/>the<sp/>items<sp/>pointed<sp/>to<sp/>by<sp/>the<sp/>members<sp/>of<sp/>this<sp/>vector<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>t::operator&lt;().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="classtesseract_1_1_pointer_vector_1a0b7159bc7b422f32b1f26d7f1d067fce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pointer_vector_1a0b7159bc7b422f32b1f26d7f1d067fce" kindref="member">sort</ref>()<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_pointer_vector_1a0b7159bc7b422f32b1f26d7f1d067fce" kindref="member">sort</ref>(&amp;sort_ptr_cmp&lt;T&gt;);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal">};</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>useful<sp/>vector<sp/>that<sp/>uses<sp/>operator==<sp/>to<sp/>do<sp/>comparisons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="448" refid="class_generic_vector_eq_eq" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450" refid="class_generic_vector_eq_eq_1aa4940b5052a40842f265ca3f4ba0c36a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_eq_eq_1aa4940b5052a40842f265ca3f4ba0c36a" kindref="member">GenericVectorEqEq</ref>()<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1a5fb7cbde5178b72ff3637e8c91e739b7" kindref="member">GenericVector&lt;T&gt;::set_compare_callback</ref>(</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(tesseract::cmp_eq&lt;T&gt;));</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="454" refid="class_generic_vector_eq_eq_1a5efa50f0693b50e7e9866ad42887ac04" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector_eq_eq_1a5efa50f0693b50e7e9866ad42887ac04" kindref="member">GenericVectorEqEq</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>)<sp/>:<sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt;T&gt;(size)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector_1a5fb7cbde5178b72ff3637e8c91e739b7" kindref="member">GenericVector&lt;T&gt;::set_compare_callback</ref>(</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tesscallback_8h_1ad000c6729bae0f97075ca10a0b5bf7d6" kindref="member">NewPermanentTessCallback</ref>(tesseract::cmp_eq&lt;T&gt;));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal">};</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="461" refid="class_generic_vector_1a5b010723588fe15f303e4f3474d8479e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a5b010723588fe15f303e4f3474d8479e" kindref="member">GenericVector&lt;T&gt;::init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>size_used_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>size_reserved_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>data_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>clear_cb_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>compare_cb_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>reserve(size);</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="471" refid="class_generic_vector_1a49840c8743a063b87839baef7e19b968" refkind="member"><highlight class="normal"><ref refid="class_generic_vector_1a49840c8743a063b87839baef7e19b968" kindref="member">GenericVector&lt;T&gt;::~GenericVector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="473"><highlight class="normal">}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reserve<sp/>some<sp/>memory.<sp/>If<sp/>the<sp/>internal<sp/>array<sp/>contains<sp/>elements,<sp/>they<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="478" refid="class_generic_vector_1aa225ea3fc9374961482bc804028317eb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1aa225ea3fc9374961482bc804028317eb" kindref="member">GenericVector&lt;T&gt;::reserve</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_reserved_<sp/>&gt;=<sp/>size<sp/>||<sp/>size<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>T*<sp/>new_array<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[size];</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used_;<sp/>++i)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>new_array[i]<sp/>=<sp/>data_[i];</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>data_;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/>data_<sp/>=<sp/>new_array;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>size_reserved_<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="490" refid="class_generic_vector_1af0214c8c21da9eb57dfebc78611d0cd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1af0214c8c21da9eb57dfebc78611d0cd6" kindref="member">GenericVector&lt;T&gt;::double_the_size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_reserved_<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>reserve(kDefaultVectorSize);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>reserve(2<sp/>*<sp/>size_reserved_);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Resizes<sp/>to<sp/>size<sp/>and<sp/>sets<sp/>all<sp/>values<sp/>to<sp/>t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="501" refid="class_generic_vector_1a6751521fd3eb461d81fc83ef93a0def3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a6751521fd3eb461d81fc83ef93a0def3" kindref="member">GenericVector&lt;T&gt;::init_to_size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/>T<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>reserve(size);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>size_used_<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>++i)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>data_[i]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>object<sp/>from<sp/>an<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="511" refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" refkind="member"><highlight class="normal">T<sp/>&amp;<ref refid="class_generic_vector_1a33070cfea2a16a20c6b30bbcfecd8ecc" kindref="member">GenericVector&lt;T&gt;::get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>size_used_);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[index];</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="517" refid="class_generic_vector_1af6a96287d98d4b6581cad4d4bb27e5aa" refkind="member"><highlight class="normal">T<sp/>&amp;<ref refid="class_generic_vector_1af6a96287d98d4b6581cad4d4bb27e5aa" kindref="member">GenericVector&lt;T&gt;::operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[index];</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="522" refid="class_generic_vector_1a6e6d6497a6f7dd999b6d591c15354167" refkind="member"><highlight class="normal">T<sp/>&amp;<ref refid="class_generic_vector_1a6e6d6497a6f7dd999b6d591c15354167" kindref="member">GenericVector&lt;T&gt;::back</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(size_used_<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[size_used_<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>object<sp/>from<sp/>an<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="529" refid="class_generic_vector_1a067b7833ee66238b7b5e230404525fcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a067b7833ee66238b7b5e230404525fcb" kindref="member">GenericVector&lt;T&gt;::set</ref>(T<sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>size_used_);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>data_[index]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Shifts<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>elements<sp/>to<sp/>the<sp/>right<sp/>to<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">//<sp/>space<sp/>for<sp/>the<sp/>new<sp/>elements<sp/>and<sp/>inserts<sp/>the<sp/>given<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>specified<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="538" refid="class_generic_vector_1a57ca5259541548a97bcfd4d0925a27ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a57ca5259541548a97bcfd4d0925a27ff" kindref="member">GenericVector&lt;T&gt;::insert</ref>(T<sp/>t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>size_used_);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_reserved_<sp/>==<sp/>size_used_)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>double_the_size();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>size_used_;<sp/>i<sp/>&gt;<sp/>index;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>data_[i]<sp/>=<sp/>data_[i-1];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>data_[index]<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>size_used_++;</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Removes<sp/>an<sp/>element<sp/>at<sp/>the<sp/>given<sp/>index<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shifts<sp/>the<sp/>remaining<sp/>elements<sp/>to<sp/>the<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="552" refid="class_generic_vector_1a3fd37a240a42f1c3052e8d28614d3702" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a3fd37a240a42f1c3052e8d28614d3702" kindref="member">GenericVector&lt;T&gt;::remove</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>size_used_);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>index;<sp/>i<sp/>&lt;<sp/>size_used_<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>data_[i]<sp/>=<sp/>data_[i+1];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>size_used_--;</highlight></codeline>
<codeline lineno="558"><highlight class="normal">}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>the<sp/>index<sp/>is<sp/>valindex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="562" refid="class_generic_vector_1aa7a4692f87d6418d782c3261ed11a952" refkind="member"><highlight class="normal">T<sp/><ref refid="class_generic_vector_1aa7a4692f87d6418d782c3261ed11a952" kindref="member">GenericVector&lt;T&gt;::contains_index</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>size_used_;</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>index<sp/>of<sp/>the<sp/>T<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="568" refid="class_generic_vector_1a0a62e2c80254bad72fb8aa37fed3af33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a0a62e2c80254bad72fb8aa37fed3af33" kindref="member">GenericVector&lt;T&gt;::get_index</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(compare_cb_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare_cb_-&gt;Run(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>data_[i]))</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>T<sp/>is<sp/>in<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="579" refid="class_generic_vector_1a135efb0c3d9bb58fa7538f137567c9c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a135efb0c3d9bb58fa7538f137567c9c5" kindref="member">GenericVector&lt;T&gt;::contains</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_index(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>!=<sp/>-1;</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>element<sp/>in<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="585" refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">GenericVector&lt;T&gt;::push_back</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_used_<sp/>==<sp/>size_reserved_)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>double_the_size();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>index<sp/>=<sp/>size_used_++;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>data_[index]<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="595" refid="class_generic_vector_1a393f9f8dcc55ad759a5c7fbdc4840a89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a393f9f8dcc55ad759a5c7fbdc4840a89" kindref="member">GenericVector&lt;T&gt;::push_back_new</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>get_index(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>push_back(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>an<sp/>element<sp/>in<sp/>the<sp/>array<sp/>(front)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="604" refid="class_generic_vector_1ae08e7cece0097ad356b5e565cbb2cf0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1ae08e7cece0097ad356b5e565cbb2cf0b" kindref="member">GenericVector&lt;T&gt;::push_front</ref>(T<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_used_<sp/>==<sp/>size_reserved_)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>double_the_size();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>size_used_;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>data_[i]<sp/>=<sp/>data_[i-1];</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/>data_[0]<sp/>=<sp/>object;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>++size_used_;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal">}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="615" refid="class_generic_vector_1acc7df2256174b32632e4d5b6c8d05d29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1af73fadcdb08f0a12a5615f2bcf6fa6a8" kindref="member">GenericVector&lt;T&gt;::operator+=</ref>(T<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>push_back(t);</highlight></codeline>
<codeline lineno="617"><highlight class="normal">}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="620" refid="class_generic_vector_1af73fadcdb08f0a12a5615f2bcf6fa6a8" refkind="member"><highlight class="normal"><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T&gt;</ref><sp/>&amp;<ref refid="class_generic_vector_1af73fadcdb08f0a12a5615f2bcf6fa6a8" kindref="member">GenericVector&lt;T&gt;::operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>this-&gt;reserve(size_used_<sp/>+<sp/>other.<ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>other.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="ipoints_8h_1a7bdc2726e11ac29db02c5152d33ed9bd" kindref="member">operator+=</ref>(other.<ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>[i]);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="629" refid="class_generic_vector_1af6fd5b3891b276c10add96f9411bec05" refkind="member"><highlight class="normal"><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T&gt;</ref><sp/>&amp;<ref refid="class_generic_vector_1af6fd5b3891b276c10add96f9411bec05" kindref="member">GenericVector&lt;T&gt;::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>this-&gt;truncate(0);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="ipoints_8h_1a7bdc2726e11ac29db02c5152d33ed9bd" kindref="member">operator+=</ref>(other);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>callback<sp/>to<sp/>be<sp/>called<sp/>to<sp/>delete<sp/>the<sp/>elements<sp/>when<sp/>the<sp/>array<sp/>took</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="comment">//<sp/>their<sp/>ownership.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="638" refid="class_generic_vector_1af2bbca5b3258035a333b62679835a253" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1af2bbca5b3258035a333b62679835a253" kindref="member">GenericVector&lt;T&gt;::set_clear_callback</ref>(<ref refid="class_tess_callback1" kindref="compound">TessCallback1&lt;T&gt;</ref>*<sp/>cb)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>clear_cb_<sp/>=<sp/>cb;</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>callback<sp/>to<sp/>be<sp/>called<sp/>to<sp/>delete<sp/>the<sp/>elements<sp/>when<sp/>the<sp/>array<sp/>took</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">//<sp/>their<sp/>ownership.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="645" refid="class_generic_vector_1a5fb7cbde5178b72ff3637e8c91e739b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a5fb7cbde5178b72ff3637e8c91e739b7" kindref="member">GenericVector&lt;T&gt;::set_compare_callback</ref>(<ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;bool, T const &amp;, T const &amp;&gt;</ref>*<sp/>cb)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>compare_cb_<sp/>=<sp/>cb;</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>array,<sp/>calling<sp/>the<sp/>callback<sp/>function<sp/>if<sp/>any.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="651" refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">GenericVector&lt;T&gt;::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_reserved_<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clear_cb_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used_;<sp/>++i)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clear_cb_-&gt;Run(data_[i]);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>data_;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>data_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>size_used_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>size_reserved_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clear_cb_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clear_cb_;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_cb_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compare_cb_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>compare_cb_;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>compare_cb_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="672" refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a98f62dccd75224a60437c2761bd215cd" kindref="member">GenericVector&lt;T&gt;::delete_data_pointers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used_;<sp/>++i)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_[i])<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>data_[i];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal">}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="681" refid="class_generic_vector_1a9fa53a15945a79e1dbfc7aad3d5875e9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a9fa53a15945a79e1dbfc7aad3d5875e9" kindref="member">GenericVector&lt;T&gt;::write</ref>(</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/><ref refid="class_tess_result_callback2" kindref="compound">TessResultCallback2&lt;bool, FILE*, T const &amp;&gt;</ref>*<sp/>cb)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;size_reserved_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_reserved_),<sp/>1,<sp/>f)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;size_used_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_used_),<sp/>1,<sp/>f)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb-&gt;<ref refid="class_tess_result_callback2_1a61bd799697bce338fc064326a7b764e3" kindref="member">Run</ref>(f,<sp/>data_[i]))<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cb;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cb;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(data_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>size_used_,<sp/>f)<sp/>!=<sp/>size_used_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="700" refid="class_generic_vector_1aa0efce3eef59f7b96d7058f114c49387" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1aa0efce3eef59f7b96d7058f114c49387" kindref="member">GenericVector&lt;T&gt;::read</ref>(FILE*<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tess_result_callback3" kindref="compound">TessResultCallback3&lt;bool, FILE*, T*, bool&gt;</ref>*<sp/>cb,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap)<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>reserved;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;reserved,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(reserved),<sp/>1,<sp/>f)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;reserved);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>reserve(reserved);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;size_used_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_used_),<sp/>1,<sp/>f)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;size_used_);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cb<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cb-&gt;<ref refid="class_tess_result_callback3_1ae717c653a51e735080121a2f6fb0b4d3" kindref="member">Run</ref>(f,<sp/>data_<sp/>+<sp/>i,<sp/>swap))<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cb;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cb;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(data_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>size_used_,<sp/>f)<sp/>!=<sp/>size_used_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used_;<sp/>++i)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1ae7eeeca49954d4b13d269729f2fecd5a" kindref="member">ReverseN</ref>(&amp;data_[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writes<sp/>a<sp/>vector<sp/>of<sp/>simple<sp/>types<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>that<sp/>bitwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="comment">//<sp/>read/write<sp/>of<sp/>T<sp/>will<sp/>work.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="730" refid="class_generic_vector_1a51aeec27092537323abc7174af1c16ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a51aeec27092537323abc7174af1c16ef" kindref="member">GenericVector&lt;T&gt;::Serialize</ref>(FILE*<sp/>fp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;size_used_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_used_),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(data_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*data_),<sp/>size_used_,<sp/>fp)<sp/>!=<sp/>size_used_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reads<sp/>a<sp/>vector<sp/>of<sp/>simple<sp/>types<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>that<sp/>bitwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="comment">//<sp/>read/write<sp/>will<sp/>work<sp/>with<sp/>ReverseN<sp/>according<sp/>to<sp/>sizeof(T).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="741" refid="class_generic_vector_1aa4f5b1bc0d044fbd1fc77363b798c39c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1aa4f5b1bc0d044fbd1fc77363b798c39c" kindref="member">GenericVector&lt;T&gt;::DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>reserved;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;reserved,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(reserved),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;reserved);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>reserve(reserved);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>size_used_<sp/>=<sp/>reserved;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(data_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>size_used_,<sp/>fp)<sp/>!=<sp/>size_used_)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used_;<sp/>++i)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1ae7eeeca49954d4b13d269729f2fecd5a" kindref="member">ReverseN</ref>(&amp;data_[i],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data_[i]));</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Writes<sp/>a<sp/>vector<sp/>of<sp/>classes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>the<sp/>existence<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bool<sp/>T::Serialize(FILE*<sp/>fp)<sp/>const<sp/>that<sp/>returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="759" refid="class_generic_vector_1a42e50cf68bb453fc11de039ca2ed81c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a42e50cf68bb453fc11de039ca2ed81c8" kindref="member">GenericVector&lt;T&gt;::SerializeClasses</ref>(FILE*<sp/>fp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;size_used_,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(size_used_),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size_used_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data_[i].Serialize(fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal">}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reads<sp/>a<sp/>vector<sp/>of<sp/>classes<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Assumes<sp/>the<sp/>existence<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bool<sp/>T::Deserialize(bool<sp/>swap,<sp/>FILE*<sp/>fp)<sp/>that<sp/>returns<sp/>false<sp/>in<sp/>case<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="comment">//<sp/>error.<sp/>Alse<sp/>needs<sp/>T::T()<sp/>and<sp/>T::T(constT&amp;),<sp/>as<sp/>init_to_size<sp/>is<sp/>used<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>function.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="773" refid="class_generic_vector_1a698ebd328d22f1edc114053ca2eba48e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a698ebd328d22f1edc114053ca2eba48e" kindref="member">GenericVector&lt;T&gt;::DeSerializeClasses</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp)<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref><sp/>reserved;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;reserved,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(reserved),<sp/>1,<sp/>fp)<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(swap)<sp/><ref refid="helpers_8h_1a7bb3b6a97c833fe8630a7b129917b985" kindref="member">Reverse32</ref>(&amp;reserved);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/>T<sp/>empty;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>init_to_size(reserved,<sp/>empty);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>reserved;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data_[i].DeSerialize(swap,<sp/>fp))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>clear<sp/>the<sp/>current<sp/>object,<sp/>then,<sp/>does<sp/>a<sp/>shallow<sp/>copy<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="comment">//<sp/>its<sp/>argument,<sp/>and<sp/>finally<sp/>invalidates<sp/>its<sp/>argument.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="788" refid="class_generic_vector_1abae057ce589be25aae9b80958f84e34c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1abae057ce589be25aae9b80958f84e34c" kindref="member">GenericVector&lt;T&gt;::move</ref>(<ref refid="class_generic_vector" kindref="compound">GenericVector&lt;T&gt;</ref>*<sp/>from)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>this-&gt;clear();</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/>this-&gt;data_<sp/>=<sp/>from-&gt;<ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/>this-&gt;size_reserved_<sp/>=<sp/>from-&gt;<ref refid="class_generic_vector_1a651ead7f279fb6ed4bfb683989d573de" kindref="member">size_reserved_</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/>this-&gt;size_used_<sp/>=<sp/>from-&gt;<ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/>this-&gt;compare_cb_<sp/>=<sp/>from-&gt;<ref refid="class_generic_vector_1acd69761952fb39cbe7d7b43a6b06a432" kindref="member">compare_cb_</ref>;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>this-&gt;clear_cb_<sp/>=<sp/>from-&gt;<ref refid="class_generic_vector_1a57a833bdcc07a53e9a7b57d07cac2131" kindref="member">clear_cb_</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/>from-&gt;<ref refid="class_generic_vector_1ab88657a46d06c175dcfc76c0fcdaac7d" kindref="member">data_</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>from-&gt;<ref refid="class_generic_vector_1a57a833bdcc07a53e9a7b57d07cac2131" kindref="member">clear_cb_</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>from-&gt;<ref refid="class_generic_vector_1acd69761952fb39cbe7d7b43a6b06a432" kindref="member">compare_cb_</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/>from-&gt;<ref refid="class_generic_vector_1ae7cf6cba62f831b6d56c7d03e9eff3bc" kindref="member">size_used_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/>from-&gt;<ref refid="class_generic_vector_1a651ead7f279fb6ed4bfb683989d573de" kindref="member">size_reserved_</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="800"><highlight class="normal">}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="803" refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector_1a999bbd8ff336c81fe1198ea714c7936d" kindref="member">GenericVector&lt;T&gt;::sort</ref>()<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>sort(&amp;tesseract::sort_cmp&lt;T&gt;);</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_CCUTIL_GENERICVECTOR_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccutil/genericvector.h"/>
  </compounddef>
</doxygen>
