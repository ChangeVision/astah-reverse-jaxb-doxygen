<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="xform2d_8cpp" kind="file">
    <compoundname>xform2d.cpp</compoundname>
    <includes refid="xform2d_8h" local="yes">xform2d.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="28225">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="28226" relation="include">
        </childnode>
      </node>
      <node id="28222">
        <label>xform2d.h</label>
        <link refid="xform2d_8h"/>
        <childnode refid="28223" relation="include">
        </childnode>
      </node>
      <node id="28223">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="28224" relation="include">
        </childnode>
        <childnode refid="28227" relation="include">
        </childnode>
        <childnode refid="28228" relation="include">
        </childnode>
      </node>
      <node id="28226">
        <label>limits.h</label>
      </node>
      <node id="28228">
        <label>math.h</label>
      </node>
      <node id="28224">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="28225" relation="include">
        </childnode>
      </node>
      <node id="28227">
        <label>stdio.h</label>
      </node>
      <node id="28221">
        <label>classify/xform2d.cpp</label>
        <link refid="xform2d.cpp"/>
        <childnode refid="28222" relation="include">
        </childnode>
        <childnode refid="28228" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="xform2d_8cpp_1a983dca2167a3fa13a47ce8f8afc9874c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void InitMatrix</definition>
        <argsstring>(MATRIX_2D *M)</argsstring>
        <name>InitMatrix</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <heading level="2">Include Files and Type Defines </heading>
</para><para><heading level="2">Public Code </heading>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="28" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1afb01a96226aa54c553816939a46f71d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CopyMatrix</definition>
        <argsstring>(MATRIX_2D *A, MATRIX_2D *B)</argsstring>
        <name>CopyMatrix</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1a5dfdad913065e96e4120269d50b11b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TranslateMatrix</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 X, FLOAT32 Y)</argsstring>
        <name>TranslateMatrix</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1aad60f36ecc3638874dbc7cb9ee9d5122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ScaleMatrix</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 X, FLOAT32 Y)</argsstring>
        <name>ScaleMatrix</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1aa7a4efa6ff84f08eef1d5d3c1b170e7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MirrorMatrixInX</definition>
        <argsstring>(MATRIX_2D *M)</argsstring>
        <name>MirrorMatrixInX</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1a6cf55b08d011b62177650fb98c19de00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MirrorMatrixInY</definition>
        <argsstring>(MATRIX_2D *M)</argsstring>
        <name>MirrorMatrixInY</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1ae04e670396a293337ac3b845536e1e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MirrorMatrixInXY</definition>
        <argsstring>(MATRIX_2D *M)</argsstring>
        <name>MirrorMatrixInXY</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="60" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1a1335bb880128d6e360a5702c677ed480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 MapX</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 X, FLOAT32 Y)</argsstring>
        <name>MapX</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="62" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1a451bbe41416d7c3bcf8bb965089895b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 MapY</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 X, FLOAT32 Y)</argsstring>
        <name>MapY</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>X</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="66" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1ab61886eb17eda2b07ae28bc9e6b556d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MapPoint</definition>
        <argsstring>(MATRIX_2D *M, const FPOINT &amp;A, FPOINT *B)</argsstring>
        <name>MapPoint</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type>const <ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref> &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref> *</type>
          <declname>B</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="70" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1a031c1472c778a7612699d81493bc71de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 MapDx</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 DX, FLOAT32 DY)</argsstring>
        <name>MapDx</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>DX</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>DY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="75" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1aaebe54a22135fbb4b43ec263928eafb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 MapDy</definition>
        <argsstring>(MATRIX_2D *M, FLOAT32 DX, FLOAT32 DY)</argsstring>
        <name>MapDy</name>
        <param>
          <type><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref> *</type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>DX</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>DY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="79" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="xform2d_8cpp_1aecb8f8611c656f76de3067fec1320ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void RotateMatrix</definition>
        <argsstring>(MATRIX_2D_PTR Matrix, FLOAT32 Angle)</argsstring>
        <name>RotateMatrix</name>
        <param>
          <type><ref refid="xform2d_8h_1a114c96e6deaff153d976d3375cc8d699" kindref="member">MATRIX_2D_PTR</ref></type>
          <declname>Matrix</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" line="85" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/xform2d.cpp" bodystart="85" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/><sp/>xform2d.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/><sp/>Library<sp/>routines<sp/>for<sp/>performing<sp/>2D<sp/>point<sp/>transformations</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Sep<sp/>22<sp/>09:54:17<sp/>1989,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xform2d_8h" kindref="compound">xform2d.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1a983dca2167a3fa13a47ce8f8afc9874c" kindref="member">InitMatrix</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a60a43a7c446fdb8166ee92d7d96c3270" kindref="member">c</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a81707dd66d385bf25653b80437b77e60" kindref="member">tx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a180cad12b203f13c2f1a3af3253eaddb" kindref="member">ty</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1afb01a96226aa54c553816939a46f71d9" kindref="member">CopyMatrix</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*A,<sp/><ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*B)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>B-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref><sp/>=<sp/>A-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>B-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref><sp/>=<sp/>A-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>B-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a60a43a7c446fdb8166ee92d7d96c3270" kindref="member">c</ref><sp/>=<sp/>A-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a60a43a7c446fdb8166ee92d7d96c3270" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>B-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref><sp/>=<sp/>A-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>B-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a81707dd66d385bf25653b80437b77e60" kindref="member">tx</ref><sp/>=<sp/>A-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a81707dd66d385bf25653b80437b77e60" kindref="member">tx</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>B-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a180cad12b203f13c2f1a3af3253eaddb" kindref="member">ty</ref><sp/>=<sp/>A-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a180cad12b203f13c2f1a3af3253eaddb" kindref="member">ty</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1a5dfdad913065e96e4120269d50b11b57" kindref="member">TranslateMatrix</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Y)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a81707dd66d385bf25653b80437b77e60" kindref="member">tx</ref><sp/>+=<sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref><sp/>*<sp/>X<sp/>+<sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a60a43a7c446fdb8166ee92d7d96c3270" kindref="member">c</ref><sp/>*<sp/>Y;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a180cad12b203f13c2f1a3af3253eaddb" kindref="member">ty</ref><sp/>+=<sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref><sp/>*<sp/>X<sp/>+<sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref><sp/>*<sp/>Y;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1aad60f36ecc3638874dbc7cb9ee9d5122" kindref="member">ScaleMatrix</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Y)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref><sp/>*=<sp/>X;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref><sp/>*=<sp/>X;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a60a43a7c446fdb8166ee92d7d96c3270" kindref="member">c</ref><sp/>*=<sp/>Y;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref><sp/>*=<sp/>Y;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1aa7a4efa6ff84f08eef1d5d3c1b170e7b" kindref="member">MirrorMatrixInX</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M)<sp/><sp/>{<ref refid="xform2d_8cpp_1aad60f36ecc3638874dbc7cb9ee9d5122" kindref="member">ScaleMatrix</ref>(M,<sp/>-1,<sp/>1);}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1a6cf55b08d011b62177650fb98c19de00" kindref="member">MirrorMatrixInY</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M)<sp/><sp/>{<ref refid="xform2d_8cpp_1aad60f36ecc3638874dbc7cb9ee9d5122" kindref="member">ScaleMatrix</ref>(M,<sp/>1,<sp/>-1);}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1ae04e670396a293337ac3b845536e1e65" kindref="member">MirrorMatrixInXY</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M)<sp/>{<ref refid="xform2d_8cpp_1aad60f36ecc3638874dbc7cb9ee9d5122" kindref="member">ScaleMatrix</ref>(M,<sp/>-1,<sp/>-1);}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="xform2d_8cpp_1a1335bb880128d6e360a5702c677ed480" kindref="member">MapX</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Y)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref><sp/>*<sp/>(X)<sp/>+<sp/>(M)-&gt;c<sp/>*<sp/>(Y)<sp/>+<sp/>(M)-&gt;tx;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="xform2d_8cpp_1a451bbe41416d7c3bcf8bb965089895b4" kindref="member">MapY</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>X,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Y)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref><sp/>*<sp/>X<sp/>+<sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref><sp/>*<sp/>Y<sp/>+<sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a180cad12b203f13c2f1a3af3253eaddb" kindref="member">ty</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1ab61886eb17eda2b07ae28bc9e6b556d6" kindref="member">MapPoint</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref><sp/>&amp;A,<sp/><ref refid="struct_f_p_o_i_n_t" kindref="compound">FPOINT</ref>*<sp/>B)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>B-&gt;<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref><sp/>=<sp/><ref refid="xform2d_8cpp_1a1335bb880128d6e360a5702c677ed480" kindref="member">MapX</ref>(M,<sp/>A.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>A.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>B-&gt;<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref><sp/>=<sp/><ref refid="xform2d_8cpp_1a451bbe41416d7c3bcf8bb965089895b4" kindref="member">MapY</ref>(M,<sp/>A.<ref refid="struct_f_p_o_i_n_t_1a96c1f94ff16244b06cb59b79152dc8ae" kindref="member">x</ref>,<sp/>A.<ref refid="struct_f_p_o_i_n_t_1a119bd5a9f0b29cabb3987fd94c5d4ca8" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="xform2d_8cpp_1a031c1472c778a7612699d81493bc71de" kindref="member">MapDx</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>DX,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>DY)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref><sp/>*<sp/>DX<sp/>+<sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a60a43a7c446fdb8166ee92d7d96c3270" kindref="member">c</ref><sp/>*<sp/>DY;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="xform2d_8cpp_1aaebe54a22135fbb4b43ec263928eafb2" kindref="member">MapDy</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D</ref><sp/>*M,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>DX,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>DY)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref><sp/>*<sp/>DX<sp/>+<sp/>M-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref><sp/>*<sp/>DY;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xform2d_8cpp_1aecb8f8611c656f76de3067fec1320ba4" kindref="member">RotateMatrix</ref>(<ref refid="struct_m_a_t_r_i_x__2_d" kindref="compound">MATRIX_2D_PTR</ref><sp/>Matrix,<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Angle)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Matrix<sp/><sp/><sp/><sp/>transformation<sp/>matrix<sp/>to<sp/>rotate</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Angle<sp/><sp/><sp/>angle<sp/>to<sp/>rotate<sp/>matrix</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>**<sp/><sp/><sp/>Rotate<sp/>the<sp/>coordinate<sp/>system<sp/>(as<sp/>specified<sp/>by<sp/>Matrix)<sp/>about</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>**<sp/><sp/><sp/>its<sp/>origin<sp/>by<sp/>Angle<sp/>radians.<sp/><sp/>In<sp/>matrix<sp/>notation<sp/>the</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>**<sp/><sp/><sp/>effect<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Matrix<sp/>=<sp/>R<sp/>X<sp/>Matrix</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>**<sp/><sp/><sp/>where<sp/>R<sp/>is<sp/>the<sp/>following<sp/>matrix</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>cos<sp/>Angle<sp/>sin<sp/>Angle<sp/>0</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>-sin<sp/>Angle<sp/><sp/>cos<sp/>Angle<sp/>0</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>**<sp/>History:<sp/>7/27/89,<sp/>DSJ,<sp/>Create.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>Cos,<sp/>Sin;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>NewA,<sp/>NewB;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>Cos<sp/>=<sp/>cos<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>Angle);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>Sin<sp/>=<sp/>sin<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>Angle);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>NewA<sp/>=<sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref><sp/>*<sp/>Cos<sp/>+<sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a60a43a7c446fdb8166ee92d7d96c3270" kindref="member">c</ref><sp/>*<sp/>Sin;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>NewB<sp/>=<sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref><sp/>*<sp/>Cos<sp/>+<sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref><sp/>*<sp/>Sin;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a60a43a7c446fdb8166ee92d7d96c3270" kindref="member">c</ref><sp/>=<sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref><sp/>*<sp/>-Sin<sp/>+<sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a60a43a7c446fdb8166ee92d7d96c3270" kindref="member">c</ref><sp/>*<sp/>Cos;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref><sp/>=<sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref><sp/>*<sp/>-Sin<sp/>+<sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23cc385f006cb32880b7619c549f8df1" kindref="member">d</ref><sp/>*<sp/>Cos;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a3d940195088d8529b14c9d5384f60dff" kindref="member">a</ref><sp/>=<sp/>NewA;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>Matrix-&gt;<ref refid="struct_m_a_t_r_i_x__2_d_1a23f5a728f4f0d3fe18e7023d3be705ac" kindref="member">b</ref><sp/>=<sp/>NewB;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RotateMatrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/xform2d.cpp"/>
  </compounddef>
</doxygen>
