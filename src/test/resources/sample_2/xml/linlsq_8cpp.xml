<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="linlsq_8cpp" kind="file">
    <compoundname>linlsq.cpp</compoundname>
    <includes refid="mfcpch_8h" local="yes">mfcpch.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="errcode_8h" local="yes">errcode.h</includes>
    <includes refid="linlsq_8h" local="yes">linlsq.h</includes>
    <incdepgraph>
      <node id="8083">
        <label>mfcpch.h</label>
        <link refid="mfcpch_8h"/>
      </node>
      <node id="8105">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="8094">
        <label>stdlib.h</label>
      </node>
      <node id="8088">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="8089" relation="include">
        </childnode>
      </node>
      <node id="8093">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8095" relation="include">
        </childnode>
        <childnode refid="8084" relation="include">
        </childnode>
        <childnode refid="8096" relation="include">
        </childnode>
        <childnode refid="8086" relation="include">
        </childnode>
        <childnode refid="8098" relation="include">
        </childnode>
      </node>
      <node id="8097">
        <label>stddef.h</label>
      </node>
      <node id="8086">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="8087" relation="include">
        </childnode>
      </node>
      <node id="8089">
        <label>limits.h</label>
      </node>
      <node id="8082">
        <label>ccstruct/linlsq.cpp</label>
        <link refid="linlsq.cpp"/>
        <childnode refid="8083" relation="include">
        </childnode>
        <childnode refid="8084" relation="include">
        </childnode>
        <childnode refid="8085" relation="include">
        </childnode>
        <childnode refid="8086" relation="include">
        </childnode>
        <childnode refid="8090" relation="include">
        </childnode>
      </node>
      <node id="8100">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="8085" relation="include">
        </childnode>
      </node>
      <node id="8095">
        <label>string.h</label>
      </node>
      <node id="8103">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="8087" relation="include">
        </childnode>
      </node>
      <node id="8098">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="8086" relation="include">
        </childnode>
      </node>
      <node id="8090">
        <label>linlsq.h</label>
        <link refid="linlsq_8h"/>
        <childnode refid="8091" relation="include">
        </childnode>
        <childnode refid="8101" relation="include">
        </childnode>
      </node>
      <node id="8085">
        <label>math.h</label>
      </node>
      <node id="8099">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="8086" relation="include">
        </childnode>
      </node>
      <node id="8101">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="8084" relation="include">
        </childnode>
        <childnode refid="8102" relation="include">
        </childnode>
        <childnode refid="8106" relation="include">
        </childnode>
      </node>
      <node id="8102">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="8084" relation="include">
        </childnode>
        <childnode refid="8094" relation="include">
        </childnode>
        <childnode refid="8103" relation="include">
        </childnode>
        <childnode refid="8086" relation="include">
        </childnode>
        <childnode refid="8104" relation="include">
        </childnode>
        <childnode refid="8105" relation="include">
        </childnode>
      </node>
      <node id="8096">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="8097" relation="include">
        </childnode>
        <childnode refid="8087" relation="include">
        </childnode>
      </node>
      <node id="8092">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="8084" relation="include">
        </childnode>
        <childnode refid="8087" relation="include">
        </childnode>
        <childnode refid="8093" relation="include">
        </childnode>
        <childnode refid="8099" relation="include">
        </childnode>
      </node>
      <node id="8091">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="8084" relation="include">
        </childnode>
        <childnode refid="8085" relation="include">
        </childnode>
        <childnode refid="8092" relation="include">
        </childnode>
        <childnode refid="8100" relation="include">
        </childnode>
      </node>
      <node id="8087">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="8088" relation="include">
        </childnode>
      </node>
      <node id="8084">
        <label>stdio.h</label>
      </node>
      <node id="8106">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="8084" relation="include">
        </childnode>
        <childnode refid="8095" relation="include">
        </childnode>
        <childnode refid="8088" relation="include">
        </childnode>
        <childnode refid="8096" relation="include">
        </childnode>
      </node>
      <node id="8104">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="8084" relation="include">
        </childnode>
        <childnode refid="8095" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="linlsq_8cpp_1a39d4e21e57d29d2cbd0031886ba5822a" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_e_r_r_c_o_d_e" kindref="compound">ERRCODE</ref></type>
        <definition>const ERRCODE EMPTY_LLSQ</definition>
        <argsstring></argsstring>
        <name>EMPTY_LLSQ</name>
        <initializer>= &quot;Can&apos;t delete from an empty <ref refid="class_l_l_s_q" kindref="compound">LLSQ</ref>&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/linlsq.cpp" line="26" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/linlsq.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linlsq.cpp<sp/><sp/>(Formerly<sp/>llsq.c)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Linear<sp/>Least<sp/>squares<sp/>fitting<sp/>code.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Sep<sp/>12<sp/>08:44:51<sp/>BST<sp/>1991</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>1991,<sp/>Hewlett-Packard<sp/>Ltd.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfcpch_8h" kindref="compound">mfcpch.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>first<sp/>include<sp/>for<sp/>windows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<ref refid="errcode_8h" kindref="compound">errcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<ref refid="linlsq_8h" kindref="compound">linlsq.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_e_r_r_c_o_d_e" kindref="compound">ERRCODE</ref><sp/><ref refid="linlsq_8cpp_1a39d4e21e57d29d2cbd0031886ba5822a" kindref="member">EMPTY_LLSQ</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>delete<sp/>from<sp/>an<sp/>empty<sp/>LLSQ&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>LLSQ::clear</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>Function<sp/>to<sp/>initialize<sp/>a<sp/>LLSQ.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q_1a9f7b92005193802bc03539a6ae48a27a" kindref="member">LLSQ::clear</ref>()<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>initialize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>total_weight<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>sigx<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>accumulators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>sigy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>sigxx<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>sigxy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>sigyy<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>LLSQ::add</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>Add<sp/>an<sp/>element<sp/>to<sp/>the<sp/>accumulator.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q_1aa439294be0539828cf042f8941125b3c" kindref="member">LLSQ::add</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>an<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>total_weight++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>sigx<sp/>+=<sp/>x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>accumulators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>sigy<sp/>+=<sp/>y;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>sigxx<sp/>+=<sp/>x<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>sigxy<sp/>+=<sp/>x<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>sigyy<sp/>+=<sp/>y<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>an<sp/>element<sp/>with<sp/>a<sp/>specified<sp/>weight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q_1aa439294be0539828cf042f8941125b3c" kindref="member">LLSQ::add</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>total_weight<sp/>+=<sp/>weight;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>sigx<sp/>+=<sp/>x<sp/>*<sp/>weight;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>accumulators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>sigy<sp/>+=<sp/>y<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>sigxx<sp/>+=<sp/>x<sp/>*<sp/>x<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>sigxy<sp/>+=<sp/>x<sp/>*<sp/>y<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>sigyy<sp/>+=<sp/>y<sp/>*<sp/>y<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>whole<sp/>LLSQ.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q_1aa439294be0539828cf042f8941125b3c" kindref="member">LLSQ::add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q" kindref="compound">LLSQ</ref>&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>total_weight<sp/>+=<sp/>other.total_weight;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>sigx<sp/>+=<sp/>other.sigx;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>accumulators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>sigy<sp/>+=<sp/>other.sigy;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>sigxx<sp/>+=<sp/>other.sigxx;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>sigxy<sp/>+=<sp/>other.sigxy;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>sigyy<sp/>+=<sp/>other.sigyy;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>LLSQ::remove</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>Delete<sp/>an<sp/>element<sp/>from<sp/>the<sp/>acculuator.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q_1a2fc29873c4ec3ae881a26c54813d36ff" kindref="member">LLSQ::remove</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>an<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_weight<sp/>&lt;=<sp/>0.0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>illegal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>EMPTY_LLSQ.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;LLSQ::remove&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>total_weight--;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>sigx<sp/>-=<sp/>x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>accumulators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>sigy<sp/>-=<sp/>y;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>sigxx<sp/>-=<sp/>x<sp/>*<sp/>x;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>sigxy<sp/>-=<sp/>x<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>sigyy<sp/>-=<sp/>y<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>LLSQ::m</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>gradient<sp/>of<sp/>the<sp/>line<sp/>fit.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q_1ad3aed3a5a46cf180dd80893c1034aa9e" kindref="member">LLSQ::m</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>gradient</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>covar<sp/>=<sp/><ref refid="class_l_l_s_q_1a36d6bf1e469425fc4f9b97521aee481e" kindref="member">covariance</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_var<sp/>=<sp/><ref refid="class_l_l_s_q_1a27994b02b1ea16d8e3a6c951c90205dd" kindref="member">x_variance</ref>();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_var<sp/>!=<sp/>0.0)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>covar<sp/>/<sp/>x_var;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>little</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>LLSQ::c</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>constant<sp/>of<sp/>the<sp/>line<sp/>fit.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q_1af66af81c0276216acfa659178189019f" kindref="member">LLSQ::c</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_weight<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sigy<sp/>-<sp/>m<sp/>*<sp/>sigx)<sp/>/<sp/>total_weight;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>little</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>LLSQ::rms</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>rms<sp/>error<sp/>of<sp/>the<sp/>fit.</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q_1adb169c39429f6f206130e463c557af67" kindref="member">LLSQ::rms</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>error;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_weight<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>sigyy<sp/>+<sp/>m<sp/>*<sp/>(m<sp/>*<sp/>sigxx<sp/>+<sp/>2<sp/>*<sp/>(c<sp/>*<sp/>sigx<sp/>-<sp/>sigxy))<sp/>+<sp/>c<sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(total_weight<sp/>*<sp/>c<sp/>-<sp/>2<sp/>*<sp/>sigy);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>sqrt(error<sp/>/<sp/>total_weight);<sp/><sp/></highlight><highlight class="comment">//<sp/>sqrt<sp/>of<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>little</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>LLSQ::pearson</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>Return<sp/>the<sp/>pearson<sp/>product<sp/>moment<sp/>correlation<sp/>coefficient.</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_l_l_s_q_1a8537176180a1cd3ff9c3b1f97d1ffb78" kindref="member">LLSQ::pearson</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>correlation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correlation<sp/>is<sp/>0<sp/>if<sp/>insufficent<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>covar<sp/>=<sp/><ref refid="class_l_l_s_q_1a36d6bf1e469425fc4f9b97521aee481e" kindref="member">covariance</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(covar<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>var_product<sp/>=<sp/><ref refid="class_l_l_s_q_1a27994b02b1ea16d8e3a6c951c90205dd" kindref="member">x_variance</ref>()<sp/><sp/>*<sp/><ref refid="class_l_l_s_q_1a3e386f3db4343cca32ac4a4f028c6ea4" kindref="member">y_variance</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(var_product<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>covar<sp/>/<sp/>sqrt(var_product);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>x,y<sp/>means<sp/>as<sp/>an<sp/>FCOORD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/><ref refid="class_l_l_s_q_1ac786685f62b271ca20aa719a8a03aa3d" kindref="member">LLSQ::mean_point</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_weight<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>(sigx<sp/>/<sp/>total_weight,<sp/>sigy<sp/>/<sp/>total_weight);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>(0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>direction<sp/>of<sp/>the<sp/>fitted<sp/>line<sp/>as<sp/>a<sp/>unit<sp/>vector,<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>least<sp/>mean<sp/>squared<sp/>perpendicular<sp/>distance.<sp/>The<sp/>line<sp/>runs<sp/>through<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mean_point,<sp/>i.e.<sp/>a<sp/>point<sp/>p<sp/>on<sp/>the<sp/>line<sp/>is<sp/>given<sp/>by:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>p<sp/>=<sp/>mean_point()<sp/>+<sp/>lambda<sp/>*<sp/>vector_fit()<sp/>for<sp/>some<sp/>real<sp/>number<sp/>lambda.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>result<sp/>(0&lt;=x&lt;=1,<sp/>-1&lt;=y&lt;=-1)<sp/>is<sp/>directionally<sp/>ambiguous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>may<sp/>be<sp/>negated<sp/>without<sp/>changing<sp/>its<sp/>meaning.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/><ref refid="class_l_l_s_q_1a1e15590443e86960c79ae5785f850d6d" kindref="member">LLSQ::vector_fit</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x_var<sp/>=<sp/><ref refid="class_l_l_s_q_1a27994b02b1ea16d8e3a6c951c90205dd" kindref="member">x_variance</ref>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y_var<sp/>=<sp/><ref refid="class_l_l_s_q_1a3e386f3db4343cca32ac4a4f028c6ea4" kindref="member">y_variance</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>covar<sp/>=<sp/><ref refid="class_l_l_s_q_1a36d6bf1e469425fc4f9b97521aee481e" kindref="member">covariance</ref>();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>result;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_var<sp/>&gt;=<sp/>y_var)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_var<sp/>==<sp/>0.0)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>(0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" kindref="member" tooltip="rewrite function ">set_x</ref>(x_var<sp/>/<sp/>sqrt(x_var<sp/>*<sp/>x_var<sp/>+<sp/>covar<sp/>*<sp/>covar));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(sqrt(1.0<sp/>-<sp/>result.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>*<sp/>result.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(y_var<sp/>/<sp/>sqrt(y_var<sp/>*<sp/>y_var<sp/>+<sp/>covar<sp/>*<sp/>covar));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" kindref="member" tooltip="rewrite function ">set_x</ref>(sqrt(1.0<sp/>-<sp/>result.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>()<sp/>*<sp/>result.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>()));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(covar<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" kindref="member" tooltip="rewrite function ">set_y</ref>(-result.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/linlsq.cpp"/>
  </compounddef>
</doxygen>
