<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="language__model_8cpp" kind="file">
    <compoundname>language_model.cpp</compoundname>
    <includes local="no">math.h</includes>
    <includes refid="language__model_8h" local="yes">language_model.h</includes>
    <includes refid="dawg_8h" local="yes">dawg.h</includes>
    <includes refid="intproto_8h" local="yes">intproto.h</includes>
    <includes refid="matrix_8h" local="yes">matrix.h</includes>
    <includes refid="params_8h" local="yes">params.h</includes>
    <includes refid="params__training__featdef_8h" local="yes">params_training_featdef.h</includes>
    <incdepgraph>
      <node id="43777">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="43778" relation="include">
        </childnode>
        <childnode refid="43783" relation="include">
        </childnode>
        <childnode refid="43752" relation="include">
        </childnode>
      </node>
      <node id="43788">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="43785">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43752" relation="include">
        </childnode>
      </node>
      <node id="43756">
        <label>assert.h</label>
      </node>
      <node id="43745">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="43813">
        <label>rejctmap.h</label>
        <link refid="rejctmap_8h"/>
        <childnode refid="43736" relation="include">
        </childnode>
        <childnode refid="43763" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
        <childnode refid="43757" relation="include">
        </childnode>
      </node>
      <node id="43783">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="43734">
        <label>stdlib.h</label>
      </node>
      <node id="43731">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="43732" relation="include">
        </childnode>
      </node>
      <node id="43799">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
      </node>
      <node id="43765">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="43738" relation="include">
        </childnode>
      </node>
      <node id="43778">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="43779" relation="include">
        </childnode>
        <childnode refid="43738" relation="include">
        </childnode>
        <childnode refid="43752" relation="include">
        </childnode>
        <childnode refid="43780" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
        <childnode refid="43760" relation="include">
        </childnode>
        <childnode refid="43781" relation="include">
        </childnode>
        <childnode refid="43782" relation="include">
        </childnode>
      </node>
      <node id="43746">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
      </node>
      <node id="43733">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="43734" relation="include">
        </childnode>
        <childnode refid="43735" relation="include">
        </childnode>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43736" relation="include">
        </childnode>
        <childnode refid="43738" relation="include">
        </childnode>
        <childnode refid="43739" relation="include">
        </childnode>
      </node>
      <node id="43784">
        <label>tessarray.h</label>
        <link refid="tessarray_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
      </node>
      <node id="43728">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43733" relation="include">
        </childnode>
        <childnode refid="43740" relation="include">
        </childnode>
      </node>
      <node id="43797">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43727" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
      </node>
      <node id="43766">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="43767" relation="include">
        </childnode>
        <childnode refid="43741" relation="include">
        </childnode>
      </node>
      <node id="43790">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="43786" relation="include">
        </childnode>
        <childnode refid="43776" relation="include">
        </childnode>
        <childnode refid="43749" relation="include">
        </childnode>
      </node>
      <node id="43755">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="43756" relation="include">
        </childnode>
        <childnode refid="43728" relation="include">
        </childnode>
        <childnode refid="43749" relation="include">
        </childnode>
        <childnode refid="43757" relation="include">
        </childnode>
        <childnode refid="43758" relation="include">
        </childnode>
        <childnode refid="43760" relation="include">
        </childnode>
        <childnode refid="43762" relation="include">
        </childnode>
      </node>
      <node id="43737">
        <label>stddef.h</label>
      </node>
      <node id="43759">
        <label>memory.h</label>
      </node>
      <node id="43796">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43724" relation="include">
        </childnode>
      </node>
      <node id="43738">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
      </node>
      <node id="43794">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43758" relation="include">
        </childnode>
      </node>
      <node id="43810">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="43808" relation="include">
        </childnode>
        <childnode refid="43743" relation="include">
        </childnode>
        <childnode refid="43742" relation="include">
        </childnode>
        <childnode refid="43741" relation="include">
        </childnode>
        <childnode refid="43746" relation="include">
        </childnode>
        <childnode refid="43811" relation="include">
        </childnode>
      </node>
      <node id="43732">
        <label>limits.h</label>
      </node>
      <node id="43726">
        <label>associate.h</label>
        <link refid="associate_8h"/>
        <childnode refid="43727" relation="include">
        </childnode>
        <childnode refid="43743" relation="include">
        </childnode>
        <childnode refid="43754" relation="include">
        </childnode>
        <childnode refid="43773" relation="include">
        </childnode>
        <childnode refid="43774" relation="include">
        </childnode>
        <childnode refid="43785" relation="include">
        </childnode>
      </node>
      <node id="43812">
        <label>params_training_featdef.h</label>
        <link refid="params__training__featdef_8h"/>
        <childnode refid="43749" relation="include">
        </childnode>
        <childnode refid="43752" relation="include">
        </childnode>
      </node>
      <node id="43723">
        <label>wordrec/language_model.cpp</label>
        <link refid="language_model.cpp"/>
        <childnode refid="43724" relation="include">
        </childnode>
        <childnode refid="43725" relation="include">
        </childnode>
        <childnode refid="43786" relation="include">
        </childnode>
        <childnode refid="43793" relation="include">
        </childnode>
        <childnode refid="43754" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
        <childnode refid="43812" relation="include">
        </childnode>
      </node>
      <node id="43787">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="43779" relation="include">
        </childnode>
        <childnode refid="43786" relation="include">
        </childnode>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43788" relation="include">
        </childnode>
        <childnode refid="43775" relation="include">
        </childnode>
        <childnode refid="43755" relation="include">
        </childnode>
        <childnode refid="43789" relation="include">
        </childnode>
        <childnode refid="43790" relation="include">
        </childnode>
        <childnode refid="43760" relation="include">
        </childnode>
        <childnode refid="43791" relation="include">
        </childnode>
      </node>
      <node id="43744">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="43724" relation="include">
        </childnode>
      </node>
      <node id="43769">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="43742" relation="include">
        </childnode>
      </node>
      <node id="43764">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43733" relation="include">
        </childnode>
        <childnode refid="43740" relation="include">
        </childnode>
      </node>
      <node id="43781">
        <label>pthread.h</label>
      </node>
      <node id="43735">
        <label>string.h</label>
      </node>
      <node id="43761">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="43758" relation="include">
        </childnode>
      </node>
      <node id="43803">
        <label>boxword.h</label>
        <link refid="boxword_8h"/>
        <childnode refid="43749" relation="include">
        </childnode>
        <childnode refid="43741" relation="include">
        </childnode>
      </node>
      <node id="43758">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="43759" relation="include">
        </childnode>
        <childnode refid="43735" relation="include">
        </childnode>
      </node>
      <node id="43776">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43735" relation="include">
        </childnode>
        <childnode refid="43734" relation="include">
        </childnode>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43747" relation="include">
        </childnode>
        <childnode refid="43777" relation="include">
        </childnode>
      </node>
      <node id="43741">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="43724" relation="include">
        </childnode>
        <childnode refid="43742" relation="include">
        </childnode>
        <childnode refid="43745" relation="include">
        </childnode>
        <childnode refid="43746" relation="include">
        </childnode>
        <childnode refid="43747" relation="include">
        </childnode>
      </node>
      <node id="43763">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
      </node>
      <node id="43750">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
      </node>
      <node id="43782">
        <label>semaphore.h</label>
      </node>
      <node id="43767">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="43768" relation="include">
        </childnode>
        <childnode refid="43769" relation="include">
        </childnode>
        <childnode refid="43763" relation="include">
        </childnode>
        <childnode refid="43741" relation="include">
        </childnode>
        <childnode refid="43765" relation="include">
        </childnode>
        <childnode refid="43746" relation="include">
        </childnode>
      </node>
      <node id="43762">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="43748" relation="include">
        </childnode>
        <childnode refid="43763" relation="include">
        </childnode>
        <childnode refid="43764" relation="include">
        </childnode>
        <childnode refid="43752" relation="include">
        </childnode>
        <childnode refid="43765" relation="include">
        </childnode>
        <childnode refid="43766" relation="include">
        </childnode>
        <childnode refid="43770" relation="include">
        </childnode>
      </node>
      <node id="43770">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43771" relation="include">
        </childnode>
        <childnode refid="43762" relation="include">
        </childnode>
      </node>
      <node id="43739">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="43738" relation="include">
        </childnode>
      </node>
      <node id="43795">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43775" relation="include">
        </childnode>
        <childnode refid="43796" relation="include">
        </childnode>
        <childnode refid="43797" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
      </node>
      <node id="43779">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="43743" relation="include">
        </childnode>
        <childnode refid="43747" relation="include">
        </childnode>
        <childnode refid="43758" relation="include">
        </childnode>
        <childnode refid="43760" relation="include">
        </childnode>
        <childnode refid="43749" relation="include">
        </childnode>
      </node>
      <node id="43800">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="43750" relation="include">
        </childnode>
        <childnode refid="43738" relation="include">
        </childnode>
        <childnode refid="43749" relation="include">
        </childnode>
      </node>
      <node id="43768">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="43742" relation="include">
        </childnode>
        <childnode refid="43769" relation="include">
        </childnode>
      </node>
      <node id="43724">
        <label>math.h</label>
      </node>
      <node id="43774">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="43727" relation="include">
        </childnode>
        <childnode refid="43775" relation="include">
        </childnode>
      </node>
      <node id="43740">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="43738" relation="include">
        </childnode>
      </node>
      <node id="43772">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="43742" relation="include">
        </childnode>
      </node>
      <node id="43753">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="43724" relation="include">
        </childnode>
        <childnode refid="43727" relation="include">
        </childnode>
      </node>
      <node id="43808">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="43775">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="43776" relation="include">
        </childnode>
        <childnode refid="43750" relation="include">
        </childnode>
      </node>
      <node id="43805">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="43806" relation="include">
        </childnode>
        <childnode refid="43807" relation="include">
        </childnode>
        <childnode refid="43770" relation="include">
        </childnode>
        <childnode refid="43809" relation="include">
        </childnode>
      </node>
      <node id="43748">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43749" relation="include">
        </childnode>
        <childnode refid="43752" relation="include">
        </childnode>
      </node>
      <node id="43749">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43734" relation="include">
        </childnode>
        <childnode refid="43750" relation="include">
        </childnode>
        <childnode refid="43738" relation="include">
        </childnode>
        <childnode refid="43751" relation="include">
        </childnode>
        <childnode refid="43745" relation="include">
        </childnode>
      </node>
      <node id="43789">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="43749" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
        <childnode refid="43755" relation="include">
        </childnode>
        <childnode refid="43785" relation="include">
        </childnode>
        <childnode refid="43758" relation="include">
        </childnode>
      </node>
      <node id="43736">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="43737" relation="include">
        </childnode>
        <childnode refid="43730" relation="include">
        </childnode>
      </node>
      <node id="43798">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="43799" relation="include">
        </childnode>
        <childnode refid="43776" relation="include">
        </childnode>
        <childnode refid="43758" relation="include">
        </childnode>
        <childnode refid="43800" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
      </node>
      <node id="43802">
        <label>pageres.h</label>
        <link refid="pageres_8h"/>
        <childnode refid="43727" relation="include">
        </childnode>
        <childnode refid="43803" relation="include">
        </childnode>
        <childnode refid="43743" relation="include">
        </childnode>
        <childnode refid="43749" relation="include">
        </childnode>
        <childnode refid="43804" relation="include">
        </childnode>
        <childnode refid="43805" relation="include">
        </childnode>
        <childnode refid="43770" relation="include">
        </childnode>
        <childnode refid="43812" relation="include">
        </childnode>
        <childnode refid="43755" relation="include">
        </childnode>
        <childnode refid="43813" relation="include">
        </childnode>
        <childnode refid="43773" relation="include">
        </childnode>
        <childnode refid="43762" relation="include">
        </childnode>
      </node>
      <node id="43725">
        <label>language_model.h</label>
        <link refid="language__model_8h"/>
        <childnode refid="43726" relation="include">
        </childnode>
        <childnode refid="43786" relation="include">
        </childnode>
        <childnode refid="43787" relation="include">
        </childnode>
        <childnode refid="43792" relation="include">
        </childnode>
        <childnode refid="43793" relation="include">
        </childnode>
        <childnode refid="43754" relation="include">
        </childnode>
        <childnode refid="43801" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
        <childnode refid="43802" relation="include">
        </childnode>
      </node>
      <node id="43807">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="43808" relation="include">
        </childnode>
        <childnode refid="43743" relation="include">
        </childnode>
        <childnode refid="43752" relation="include">
        </childnode>
      </node>
      <node id="43743">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43733" relation="include">
        </childnode>
        <childnode refid="43740" relation="include">
        </childnode>
      </node>
      <node id="43760">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="43738" relation="include">
        </childnode>
        <childnode refid="43751" relation="include">
        </childnode>
        <childnode refid="43752" relation="include">
        </childnode>
        <childnode refid="43750" relation="include">
        </childnode>
        <childnode refid="43758" relation="include">
        </childnode>
        <childnode refid="43761" relation="include">
        </childnode>
      </node>
      <node id="43773">
        <label>seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="43727" relation="include">
        </childnode>
        <childnode refid="43774" relation="include">
        </childnode>
        <childnode refid="43784" relation="include">
        </childnode>
      </node>
      <node id="43801">
        <label>oldheap.h</label>
        <link refid="oldheap_8h"/>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43776" relation="include">
        </childnode>
      </node>
      <node id="43786">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="43743" relation="include">
        </childnode>
        <childnode refid="43755" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
        <childnode refid="43750" relation="include">
        </childnode>
      </node>
      <node id="43792">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="43749" relation="include">
        </childnode>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43758" relation="include">
        </childnode>
      </node>
      <node id="43742">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43724" relation="include">
        </childnode>
        <childnode refid="43743" relation="include">
        </childnode>
        <childnode refid="43744" relation="include">
        </childnode>
      </node>
      <node id="43757">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="43806">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="43736" relation="include">
        </childnode>
      </node>
      <node id="43747">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="43748" relation="include">
        </childnode>
      </node>
      <node id="43811">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="43730">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="43731" relation="include">
        </childnode>
      </node>
      <node id="43809">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="43728" relation="include">
        </childnode>
        <childnode refid="43806" relation="include">
        </childnode>
        <childnode refid="43752" relation="include">
        </childnode>
        <childnode refid="43810" relation="include">
        </childnode>
        <childnode refid="43811" relation="include">
        </childnode>
      </node>
      <node id="43729">
        <label>stdio.h</label>
      </node>
      <node id="43754">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="43755" relation="include">
        </childnode>
        <childnode refid="43760" relation="include">
        </childnode>
      </node>
      <node id="43793">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="43749" relation="include">
        </childnode>
        <childnode refid="43794" relation="include">
        </childnode>
        <childnode refid="43795" relation="include">
        </childnode>
        <childnode refid="43798" relation="include">
        </childnode>
        <childnode refid="43746" relation="include">
        </childnode>
        <childnode refid="43760" relation="include">
        </childnode>
      </node>
      <node id="43780">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43730" relation="include">
        </childnode>
        <childnode refid="43747" relation="include">
        </childnode>
      </node>
      <node id="43804">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43730" relation="include">
        </childnode>
      </node>
      <node id="43752">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43735" relation="include">
        </childnode>
        <childnode refid="43731" relation="include">
        </childnode>
        <childnode refid="43736" relation="include">
        </childnode>
      </node>
      <node id="43727">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="43728" relation="include">
        </childnode>
        <childnode refid="43741" relation="include">
        </childnode>
        <childnode refid="43753" relation="include">
        </childnode>
      </node>
      <node id="43751">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="43729" relation="include">
        </childnode>
        <childnode refid="43735" relation="include">
        </childnode>
      </node>
      <node id="43791">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="43755" relation="include">
        </childnode>
        <childnode refid="43748" relation="include">
        </childnode>
        <childnode refid="43760" relation="include">
        </childnode>
      </node>
      <node id="43771">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="43772" relation="include">
        </childnode>
        <childnode refid="43733" relation="include">
        </childnode>
        <childnode refid="43736" relation="include">
        </childnode>
        <childnode refid="43741" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language_model.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Functions<sp/>that<sp/>utilize<sp/>the<sp/>knowledge<sp/>about<sp/>the<sp/>properties,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>structure<sp/>and<sp/>statistics<sp/>of<sp/>the<sp/>language<sp/>to<sp/>help<sp/>recognition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Daria<sp/>Antonova</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Nov<sp/>11<sp/>11:26:43<sp/>PST<sp/>2009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2009,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="language__model_8h" kindref="compound">language_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dawg_8h" kindref="compound">dawg.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intproto_8h" kindref="compound">intproto.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matrix_8h" kindref="compound">matrix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params__training__featdef_8h" kindref="compound">params_training_featdef.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="namespacetesseract_1a3b71ccfcd667bca92d2e6435845a4c9b" kindref="member">ELISTIZE</ref>(ViterbiStateEntry);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_language_model_1a21861bc8d1d02cf8ea67f2b64136459e" kindref="member">LanguageModel::kInitialPainPointPriorityAdjustment</ref><sp/>=<sp/>5.0f;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_language_model_1a12daeb85f9376498fb478497ef501dc4" kindref="member">LanguageModel::kDefaultPainPointPriorityAdjustment</ref><sp/>=<sp/>2.0f;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_language_model_1ac514086c0819ead38b9eb304f9e401f3" kindref="member">LanguageModel::kBestChoicePainPointPriorityAdjustment</ref><sp/>=<sp/>0.5f;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_language_model_1a6a7d7189f9cbdebc127c70b018a36010" kindref="member">LanguageModel::kCriticalPainPointPriorityAdjustment</ref><sp/>=<sp/>0.1f;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_language_model_1a94f3c78f8a231538513e4a47387072fc" kindref="member">LanguageModel::kMaxAvgNgramCost</ref><sp/>=<sp/>25.0f;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_language_model_1aded535788a84e534bc8511f2dc1a2b44" kindref="member">LanguageModel::kMinFixedLengthDawgLength</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_language_model_1a2b5a3fcb550fc71a4f969f1a25d8dc8c" kindref="member">LanguageModel::kLooseMaxCharWhRatio</ref><sp/>=<sp/>2.5f;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="classtesseract_1_1_language_model_1af68acd65ef84e197eef48131bfc6e9e1" kindref="member">LanguageModel::LanguageModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_unicity_table" kindref="compound">UnicityTable&lt;FontInfo&gt;</ref><sp/>*fontinfo_table,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dict<sp/>*dict)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(language_model_debug_level,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Language<sp/>model<sp/>debug<sp/>level&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1a94f2ea32cb5774190157d971d56734df" kindref="member">BOOL_INIT_MEMBER</ref>(language_model_ngram_on,<sp/>false,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Turn<sp/>on/off<sp/>the<sp/>use<sp/>of<sp/>character<sp/>ngram<sp/>model&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(language_model_ngram_order,<sp/>8,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>order<sp/>of<sp/>the<sp/>character<sp/>ngram<sp/>model&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(language_model_viterbi_list_max_num_prunable,<sp/>10,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>number<sp/>of<sp/>prunable<sp/>(those<sp/>for<sp/>which&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>PrunablePath()<sp/>is<sp/>true)<sp/>entries<sp/>in<sp/>each<sp/>viterbi<sp/>list&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>recorded<sp/>in<sp/>BLOB_CHOICEs&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(language_model_viterbi_list_max_size,<sp/>500,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Maximum<sp/>size<sp/>of<sp/>viterbi<sp/>lists<sp/>recorded<sp/>in<sp/>BLOB_CHOICEs&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_ngram_small_prob,<sp/>0.000001,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;To<sp/>avoid<sp/>overly<sp/>small<sp/>denominators<sp/>use<sp/>this<sp/>as<sp/>the<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;floor<sp/>of<sp/>the<sp/>probability<sp/>returned<sp/>by<sp/>the<sp/>ngram<sp/>model.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_ngram_nonmatch_score,<sp/>-40.0,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Average<sp/>classifier<sp/>score<sp/>of<sp/>a<sp/>non-matching<sp/>unichar.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(language_model_ngram_use_only_first_uft8_step,<sp/>false,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>only<sp/>the<sp/>first<sp/>UTF8<sp/>step<sp/>of<sp/>the<sp/>given<sp/>string&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>when<sp/>computing<sp/>log<sp/>probabilities.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_ngram_scale_factor,<sp/>0.03,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Strength<sp/>of<sp/>the<sp/>character<sp/>ngram<sp/>model<sp/>relative<sp/>to<sp/>the&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>character<sp/>classifier<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1afe1760253f2b6e3b14c1bf275d8531d4" kindref="member">BOOL_MEMBER</ref>(language_model_ngram_space_delimited_language,<sp/>true,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Words<sp/>are<sp/>delimited<sp/>by<sp/>space&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(language_model_min_compound_length,<sp/>3,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Minimum<sp/>length<sp/>of<sp/>compound<sp/>words&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1a05d4e03af9e317d4201155efa15d4d4a" kindref="member">INT_MEMBER</ref>(language_model_fixed_length_choices_depth,<sp/>3,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Depth<sp/>of<sp/>blob<sp/>choice<sp/>lists<sp/>to<sp/>explore&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>when<sp/>fixed<sp/>length<sp/>dawgs<sp/>are<sp/>on&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_penalty_non_freq_dict_word,<sp/>0.1,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Penalty<sp/>for<sp/>words<sp/>not<sp/>in<sp/>the<sp/>frequent<sp/>word<sp/>dictionary&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_penalty_non_dict_word,<sp/>0.15,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Penalty<sp/>for<sp/>non-dictionary<sp/>words&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_penalty_punc,<sp/>0.2,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Penalty<sp/>for<sp/>inconsistent<sp/>punctuation&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_penalty_case,<sp/>0.1,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Penalty<sp/>for<sp/>inconsistent<sp/>case&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_penalty_script,<sp/>0.5,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Penalty<sp/>for<sp/>inconsistent<sp/>script&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_penalty_chartype,<sp/>0.3,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Penalty<sp/>for<sp/>inconsistent<sp/>character<sp/>type&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(daria,<sp/>rays):<sp/>enable<sp/>font<sp/>consistency<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>improving<sp/>font<sp/>analysis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_penalty_font,<sp/>0.00,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Penalty<sp/>for<sp/>inconsistent<sp/>font&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_penalty_spacing,<sp/>0.05,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Penalty<sp/>for<sp/>inconsistent<sp/>spacing&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1abc29757c0b64587fef3aa7556e2fd7b9" kindref="member">double_MEMBER</ref>(language_model_penalty_increment,<sp/>0.01,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Penalty<sp/>increment&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="params_8h_1a94f2ea32cb5774190157d971d56734df" kindref="member">BOOL_INIT_MEMBER</ref>(language_model_use_sigmoidal_certainty,<sp/>false,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Use<sp/>sigmoidal<sp/>score<sp/>for<sp/>certainty&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict-&gt;getImage()-&gt;getCCUtil()-&gt;params()),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>fontinfo_table_(fontinfo_table),<sp/>dict_(dict),</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>fixed_pitch_(false),<sp/>max_char_wh_ratio_(0.0),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>acceptable_choice_found_(false)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(dict_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>dawg_args_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DawgArgs(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DawgInfoVector(),</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DawgInfoVector(),</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>NO_PERM,<sp/>kAnyWordLength,<sp/>-1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>beginning_active_dawgs_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DawgInfoVector();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>beginning_constraints_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DawgInfoVector();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>fixed_length_beginning_active_dawgs_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DawgInfoVector();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>empty_dawg_info_vec_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DawgInfoVector();</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">LanguageModel::~LanguageModel()<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>beginning_active_dawgs_;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>beginning_constraints_;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fixed_length_beginning_active_dawgs_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>empty_dawg_info_vec_;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dawg_args_-&gt;updated_active_dawgs;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dawg_args_-&gt;updated_constraints;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dawg_args_;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::InitForWord(</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*prev_word,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fixed_pitch,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>best_choice_cert,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_char_wh_ratio,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rating_cert_scale,<sp/><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*pain_points,<sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref><sp/>*blamer_bundle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug_blamer)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>fixed_pitch_<sp/>=<sp/>fixed_pitch;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>max_char_wh_ratio_<sp/>=<sp/>max_char_wh_ratio;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>rating_cert_scale_<sp/>=<sp/>rating_cert_scale;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>acceptable_choice_found_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>correct_segmentation_explored_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>cell,<sp/>generate<sp/>a<sp/>&quot;pain<sp/>point&quot;<sp/>if<sp/>the<sp/>cell<sp/>is<sp/>not<sp/>classified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>has<sp/>a<sp/>left<sp/>or<sp/>right<sp/>neighbor<sp/>that<sp/>was<sp/>classified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref><sp/>*ratings<sp/>=<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>ratings-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>();<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>col+1;<sp/>row<sp/>&lt;<sp/>ratings-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>();<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((row<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>ratings-&gt;<ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y_1ac2361d09d80314d64330578d8e162566" kindref="member">get</ref>(col,<sp/>row-1)<sp/>!=<sp/><ref refid="matrix_8h_1a5c21a86b19e78482e6c7384c47c2457d" kindref="member">NOT_CLASSIFIED</ref>)<sp/>||</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(col+1<sp/>&lt;<sp/>ratings-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratings-&gt;<ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y_1ac2361d09d80314d64330578d8e162566" kindref="member">get</ref>(col+1,<sp/>row)<sp/>!=<sp/><ref refid="matrix_8h_1a5c21a86b19e78482e6c7384c47c2457d" kindref="member">NOT_CLASSIFIED</ref>))<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worst_piece_cert;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fragmented;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWorstPieceCertainty(col,<sp/>row,<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;worst_piece_cert,<sp/>&amp;fragmented);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(col,<sp/>row,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>kInitialPainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_piece_cert,<sp/>fragmented,<sp/>best_choice_cert,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>vectors<sp/>with<sp/>beginning<sp/>DawgInfos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>beginning_active_dawgs_-&gt;clear();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>dict_-&gt;init_active_dawgs(kAnyWordLength,<sp/>beginning_active_dawgs_,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>beginning_constraints_-&gt;clear();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>dict_-&gt;init_constraints(beginning_constraints_);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;GetMaxFixedLengthDawgIndex()<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>fixed_length_beginning_active_dawgs_-&gt;clear();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>beginning_active_dawgs_-&gt;size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dawg_index<sp/>=<sp/>(*beginning_active_dawgs_)[i].dawg_index;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_index<sp/>&lt;=<sp/>dict_-&gt;GetMaxFixedLengthDawgIndex()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_index<sp/>&gt;=<sp/>kMinFixedLengthDawgLength)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fixed_length_beginning_active_dawgs_<sp/>+=<sp/>(*beginning_active_dawgs_)[i];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>max_penalty_adjust_<sp/>=<sp/>(dict_-&gt;segment_penalty_dict_nonword<sp/>-</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;segment_penalty_dict_case_ok);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>prev_word_str_<sp/>with<sp/>the<sp/>last<sp/>language_model_ngram_order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>unichars<sp/>from<sp/>prev_word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_ngram_on)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_word<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>prev_word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a41d740f0accccdfb245d34d554122116" kindref="member">unichar_string</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_word_str_<sp/>=<sp/>prev_word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a41d740f0accccdfb245d34d554122116" kindref="member">unichar_string</ref>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_ngram_space_delimited_language)<sp/>prev_word_str_<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_word_str_<sp/>+=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_ptr<sp/>=<sp/>prev_word_str_.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_end<sp/>=<sp/>str_ptr<sp/>+<sp/>prev_word_str_.length();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_word_unichar_step_len_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str_ptr<sp/>!=<sp/>str_end<sp/>&amp;&amp;<sp/>(step<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_1a8182a4663f6c1df9f097700f1009ab22" kindref="member">UNICHAR::utf8_step</ref>(str_ptr)))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_ptr<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++prev_word_unichar_step_len_;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(str_ptr<sp/>==<sp/>str_end);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>blamer-related<sp/>information:<sp/>map<sp/>character<sp/>boxes<sp/>recorded<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blamer_bundle-&gt;norm_truth_word<sp/>to<sp/>the<sp/>corresponding<sp/>i,j<sp/>indices<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ratings<sp/>matrix.<sp/>We<sp/>expect<sp/>this<sp/>step<sp/>to<sp/>succeed,<sp/>since<sp/>when<sp/>running<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>chopper<sp/>we<sp/>checked<sp/>that<sp/>the<sp/>correct<sp/>chops<sp/>are<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blamer_bundle<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a2c84b31d55ab290a9247201cdb46752c" kindref="member">incorrect_result_reason</ref><sp/>==<sp/><ref refid="pageres_8h_1a8faf52e106c04bfdc9898ffa90b821e1a4f5ff200b61e6226eb6d74aec188e769" kindref="member">IRR_CORRECT</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1ad7dc9029fe6de5f5554046773cb15854" kindref="member">truth_has_char_boxes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>blamer_debug;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>blamer_debug<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Blamer<sp/>computing<sp/>correct_segmentation_cols\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_box_col<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_box_col<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob<sp/>=<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a953645d7dbb5789cf5feb918df3e914e" kindref="member">chunks</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>next_box_x<sp/>=<sp/>(blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>truth_idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>truth_idx<sp/>&lt;<sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a0fac62f7f13e3e684c5ef433bfcf3158" kindref="member">norm_truth_word</ref>.<ref refid="classtesseract_1_1_box_word_1afe001fe8fb7f2d3725b2ac2f542e9878" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++next_box_col;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>curr_box_x<sp/>=<sp/>next_box_x;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>next_box_x<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>truth_x<sp/>=<sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a0fac62f7f13e3e684c5ef433bfcf3158" kindref="member">norm_truth_word</ref>.<ref refid="classtesseract_1_1_box_word_1a022cfe52a644e9e800595f014b1fbcf5" kindref="member">BlobBox</ref>(truth_idx).<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug.<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;Box<sp/>x<sp/>coord<sp/>vs.<sp/>truth:<sp/>&quot;</highlight><highlight class="normal">,<sp/>curr_box_x);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug.<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>truth_x);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_box_x<sp/>&gt;<sp/>(truth_x<sp/>+<sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a4df5a4ea5a4ba6f973b3c987c95a8a39" kindref="member">norm_box_tolerance</ref>))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>failed<sp/>to<sp/>find<sp/>a<sp/>matching<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_box_x<sp/>&gt;=</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(truth_x<sp/>-<sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a4df5a4ea5a4ba6f973b3c987c95a8a39" kindref="member">norm_box_tolerance</ref>)<sp/>&amp;&amp;<sp/><sp/></highlight><highlight class="comment">//<sp/>matched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/><sp/></highlight><highlight class="comment">//<sp/>next<sp/>box<sp/>can&apos;t<sp/>be<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_box_x<sp/>&gt;<sp/>truth_x<sp/>+<sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a4df5a4ea5a4ba6f973b3c987c95a8a39" kindref="member">norm_box_tolerance</ref>))<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1abd75250b96b712d4849cf860f4351166" kindref="member">correct_segmentation_cols</ref>.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(curr_box_col);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a7c72b769992bbd6fd8ae5bac480f62b3" kindref="member">correct_segmentation_rows</ref>.<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(next_box_col-1);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++truth_idx;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug.<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;col=&quot;</highlight><highlight class="normal">,<sp/>curr_box_col);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug.<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>row=&quot;</highlight><highlight class="normal">,<sp/>next_box_col-1);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_box_col<sp/>=<sp/>next_box_col;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/><sp/></highlight><highlight class="comment">//<sp/>trailing<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1abd75250b96b712d4849cf860f4351166" kindref="member">correct_segmentation_cols</ref>.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>()<sp/>!=</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a0fac62f7f13e3e684c5ef433bfcf3158" kindref="member">norm_truth_word</ref>.<ref refid="classtesseract_1_1_box_word_1afe001fe8fb7f2d3725b2ac2f542e9878" kindref="member">length</ref>())<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug.<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;Blamer<sp/>failed<sp/>to<sp/>find<sp/>correct<sp/>segmentation&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(tolerance=&quot;</highlight><highlight class="normal">,<sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a4df5a4ea5a4ba6f973b3c987c95a8a39" kindref="member">norm_box_tolerance</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>blamer_debug<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>blob<sp/>==<sp/>NULL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug.<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>path<sp/>length<sp/>&quot;</highlight><highlight class="normal">,<sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1abd75250b96b712d4849cf860f4351166" kindref="member">correct_segmentation_cols</ref>.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug.<ref refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" kindref="member">add_str_int</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>vs.<sp/>truth<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a0fac62f7f13e3e684c5ef433bfcf3158" kindref="member">norm_truth_word</ref>.<ref refid="classtesseract_1_1_box_word_1afe001fe8fb7f2d3725b2ac2f542e9878" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_debug<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a51b9a55eb8acc439f5ade8e97c92da8f" kindref="member">SetBlame</ref>(<ref refid="pageres_8h_1a8faf52e106c04bfdc9898ffa90b821e1abf247997ab473968746db80274036078" kindref="member">IRR_UNKNOWN</ref>,<sp/>blamer_debug,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>debug_blamer);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1abd75250b96b712d4849cf860f4351166" kindref="member">correct_segmentation_cols</ref>.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a7c72b769992bbd6fd8ae5bac480f62b3" kindref="member">correct_segmentation_rows</ref>.<ref refid="class_generic_vector_1a9cdbff49b186574b83e43afba606fdd9" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>if<sp/>(blamer_bundle<sp/>!=<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>a<sp/>new<sp/>hypothesis<sp/>list<sp/>for<sp/>this<sp/>run<sp/>of<sp/>segmentation<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blamer_bundle<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a9a15ffb5fc2615b1adec28e9c92ba454" kindref="member">params_training_bundle</ref>.<ref refid="classtesseract_1_1_params_training_bundle_1a60a524854331fa85661fd74f0350b193" kindref="member">StartHypothesisList</ref>();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::CleanUp()<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>updated_flags_.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>*(updated_flags_[i])<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>updated_flags_.clear();</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::DeleteState(BLOB_CHOICE_LIST<sp/>*choices)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>b_it(choices);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b_it.mark_cycle_pt();<sp/>!b_it.cycled_list();<sp/>b_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b_it.data()-&gt;language_model_state()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LanguageModelState<sp/>*state<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_it.data()-&gt;language_model_state());</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b_it.data()-&gt;set_language_model_state(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>LanguageModel::UpdateState(</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>changed,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_row,</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOB_CHOICE_LIST<sp/>*curr_list,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOB_CHOICE_LIST<sp/>*parent_list,</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*pain_points,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>BestPathByColumn<sp/>*best_path_by_column[],</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>BestChoiceBundle<sp/>*best_choice_bundle,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref><sp/>*blamer_bundle)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nUpdateState:<sp/>col=%d<sp/>row=%d<sp/>(changed=0x%x<sp/>parent=%p)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_col,<sp/>curr_row,<sp/>changed,<sp/>parent_list);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>helper<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end<sp/>=<sp/>(curr_row+1<sp/>&gt;=<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>just_classified<sp/>=<sp/>(changed<sp/>&amp;<sp/>kJustClassifiedFlag);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>new_changed<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>(language_model_ngram_on)<sp/>?<sp/>ComputeDenom(curr_list)<sp/>:<sp/>1.0f;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>AddViterbiStateEntry()<sp/>for<sp/>each<sp/>parent+child<sp/>ViterbiStateEntry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>ViterbiStateEntry_IT<sp/>vit;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>c_it(curr_list);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c_it_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first_iteration<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*first_lower<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*first_upper<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>GetTopChoiceLowerUpper(changed,<sp/>curr_list,<sp/>&amp;first_lower,<sp/>&amp;first_upper);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c_it.mark_cycle_pt();<sp/>!c_it.cycled_list();<sp/>c_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;GetMaxFixedLengthDawgIndex()<sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_it_counter++<sp/>&gt;=<sp/>language_model_fixed_length_choices_depth)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>NULL<sp/>unichars<sp/>unless<sp/>it<sp/>is<sp/>the<sp/>only<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!curr_list-&gt;singleton()<sp/>&amp;&amp;<sp/>c_it.data()-&gt;unichar_id()<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;getUnicharset().get_fragment(c_it.data()-&gt;unichar_id()))<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>fragments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>top<sp/>choice<sp/>flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>top_choice_flags<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_iteration<sp/>&amp;&amp;<sp/>(changed<sp/>|<sp/>kSmallestRatingFlag))<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>top_choice_flags<sp/>|=<sp/>kSmallestRatingFlag;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_lower<sp/>==<sp/>c_it.data())<sp/>top_choice_flags<sp/>|=<sp/>kLowerCaseFlag;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_upper<sp/>==<sp/>c_it.data())<sp/>top_choice_flags<sp/>|=<sp/>kUpperCaseFlag;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_list<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>process<sp/>the<sp/>beginning<sp/>of<sp/>a<sp/>word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_changed<sp/>|=<sp/>AddViterbiStateEntry(</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_choice_flags,<sp/>denom,<sp/>word_end,<sp/>curr_col,<sp/>curr_row,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_it.data(),<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>pain_points,<sp/>best_path_by_column,</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>best_choice_bundle,<sp/>blamer_bundle);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>viterbi<sp/>entries<sp/>from<sp/>each<sp/>of<sp/>the<sp/>parent<sp/>BLOB_CHOICEs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BLOB_CHOICE_IT<sp/>p_it(parent_list);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p_it.mark_cycle_pt();<sp/>!p_it.cycled_list();<sp/>p_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LanguageModelState<sp/>*parent_lms<sp/>=</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_it.data()-&gt;language_model_state());</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_lms<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>parent_lms-&gt;viterbi_state_entries.empty())<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vit.set_to_list(&amp;(parent_lms-&gt;viterbi_state_entries));</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vit_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vit.mark_cycle_pt();<sp/>!vit.cycled_list();<sp/>vit.forward())<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>pruned<sp/>entries<sp/>and<sp/>do<sp/>not<sp/>look<sp/>at<sp/>prunable<sp/>entries<sp/>if<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>examined<sp/>language_model_viterbi_list_max_num_prunable<sp/>of<sp/>those.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PrunablePath(vit.data()-&gt;top_choice_flags,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vit.data()-&gt;dawg_info)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(++vit_counter<sp/>&gt;<sp/>language_model_viterbi_list_max_num_prunable<sp/>||</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(language_model_ngram_on<sp/>&amp;&amp;<sp/>vit.data()-&gt;ngram_info-&gt;pruned)))<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>consider<sp/>the<sp/>parent<sp/>if<sp/>it<sp/>has<sp/>been<sp/>updated<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>current<sp/>ratings<sp/>cell<sp/>has<sp/>just<sp/>been<sp/>classified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!just_classified<sp/>&amp;&amp;<sp/>!vit.data()-&gt;updated)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>new<sp/>ViterbiStateEntry<sp/>if<sp/>BLOB_CHOICE<sp/>in<sp/>c_it.data()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>looks<sp/>good<sp/>according<sp/>to<sp/>the<sp/>Dawgs<sp/>or<sp/>character<sp/>ngram<sp/>model.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_changed<sp/>|=<sp/>AddViterbiStateEntry(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_choice_flags,<sp/>denom,<sp/>word_end,<sp/>curr_col,<sp/>curr_row,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_it.data(),<sp/>p_it.data(),<sp/>vit.data(),<sp/>pain_points,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_path_by_column,<sp/>chunks_record,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle,<sp/>blamer_bundle);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>looking<sp/>at<sp/>parents<sp/>for<sp/>this<sp/>c_it.data()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>first_iteration<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_changed;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LanguageModel::ProblematicPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViterbiStateEntry<sp/>&amp;vse,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>path<sp/>is<sp/>problematic<sp/>if<sp/>it<sp/>is<sp/>inconsistent<sp/>and<sp/>has<sp/>a<sp/>parent<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>consistent<sp/>(or<sp/>a<sp/>NULL<sp/>parent).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vse.Consistent()<sp/>&amp;&amp;<sp/>(vse.parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse.parent_vse-&gt;Consistent()))<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;ProblematicPath:<sp/>inconsistent\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>path<sp/>is<sp/>problematic<sp/>if<sp/>it<sp/>does<sp/>not<sp/>represent<sp/>a<sp/>dictionary<sp/>word,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>while<sp/>its<sp/>parent<sp/>does.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse.dawg_info<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(vse.parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>vse.parent_vse-&gt;dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;ProblematicPath:<sp/>dict<sp/>word<sp/>terminated\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>path<sp/>is<sp/>problematic<sp/>if<sp/>ngram<sp/>info<sp/>indicates<sp/>that<sp/>this<sp/>path<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>unlikely<sp/>sequence<sp/>of<sp/>character,<sp/>while<sp/>its<sp/>parent<sp/>is<sp/>does<sp/>not<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>extreme<sp/>dips<sp/>in<sp/>ngram<sp/>probabilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse.ngram_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>vse.ngram_info-&gt;pruned<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(vse.parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>!vse.parent_vse-&gt;ngram_info-&gt;pruned))<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;ProblematicPath:<sp/>small<sp/>ngram<sp/>prob\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>path<sp/>is<sp/>problematic<sp/>if<sp/>there<sp/>is<sp/>a<sp/>non-alpha<sp/>character<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>middle<sp/>of<sp/>the<sp/>path<sp/>(unless<sp/>it<sp/>is<sp/>a<sp/>digit<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>a<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>represents<sp/>a<sp/>number).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((vse.parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&amp;&amp;<sp/>!word_end<sp/>&amp;&amp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>middle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!(dict_-&gt;getUnicharset().get_isalpha(unichar_id)<sp/>||<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dict_-&gt;getUnicharset().get_isdigit(unichar_id)<sp/>&amp;&amp;<sp/><sp/></highlight><highlight class="comment">//<sp/>ok<sp/>digit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse.dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>vse.dawg_info-&gt;permuter<sp/>==<sp/>NUMBER_PERM)))<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;ProblematicPath:<sp/>non-alpha<sp/>middle\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::GetTopChoiceLowerUpper(<ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>changed,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOB_CHOICE_LIST<sp/>*curr_list,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>**first_lower,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>**first_upper)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(changed<sp/>&amp;<sp/>kLowerCaseFlag<sp/>||<sp/>changed<sp/>&amp;<sp/>kUpperCaseFlag))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>c_it(curr_list);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset<sp/>=<sp/>dict_-&gt;getUnicharset();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*first_unichar<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c_it.mark_cycle_pt();<sp/>!c_it.cycled_list();<sp/>c_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id<sp/>=<sp/>c_it.data()-&gt;unichar_id();</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af08440927e3b87f99bd3a3fbd8e126dc" kindref="member">get_fragment</ref>(unichar_id))<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>fragments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_unichar<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>first_unichar<sp/>=<sp/>c_it.data();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first_lower<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a074096c823dd5b9bc02c02a59784bf34" kindref="member">get_islower</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*first_lower<sp/>=<sp/>c_it.data();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first_upper<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a482a94b3e6fcd4e5b9b9363bb9e0ee59" kindref="member">get_isupper</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*first_upper<sp/>=<sp/>c_it.data();</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(first_unichar<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first_lower<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>*first_lower<sp/>=<sp/>first_unichar;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first_upper<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>*first_upper<sp/>=<sp/>first_unichar;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>LanguageModel::AddViterbiStateEntry(</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>top_choice_flags,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denom,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_row,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*b,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*parent_b,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>ViterbiStateEntry<sp/>*parent_vse,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*pain_points,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>BestPathByColumn<sp/>*best_path_by_column[],</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>BestChoiceBundle<sp/>*best_choice_bundle,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref><sp/>*blamer_bundle)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>ViterbiStateEntry_IT<sp/>vit;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nAddViterbiStateEntry<sp/>for<sp/>unichar<sp/>%s<sp/>rating=%.4f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>certainty=%.4f<sp/>top_choice_flags=0x%x<sp/>parent_vse=%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;getUnicharset().id_to_unichar(b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>()),</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a7fbd2d505bf5b55beee424096fb1e9bc" kindref="member">rating</ref>(),<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1af53d45b718c562ea7209b583c77ac14e" kindref="member">certainty</ref>(),<sp/>top_choice_flags,<sp/>parent_vse);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>3<sp/>&amp;&amp;<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Existing<sp/>viterbi<sp/>list:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vit.set_to_list(&amp;(reinterpret_cast&lt;LanguageModelState<sp/>*&gt;(</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>())-&gt;viterbi_state_entries));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vit.mark_cycle_pt();<sp/>!vit.cycled_list();<sp/>vit.forward())<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintViterbiStateEntry(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>vit.data(),<sp/>b,<sp/>chunks_record);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>the<sp/>list<sp/>is<sp/>full.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>())-&gt;viterbi_state_entries_length<sp/>&gt;=</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language_model_viterbi_list_max_size))<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;AddViterbiStateEntry:<sp/>viterbi<sp/>list<sp/>is<sp/>full!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x0;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>changed<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>optimistic_cost<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!language_model_ngram_on)<sp/>optimistic_cost<sp/>+=<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a7fbd2d505bf5b55beee424096fb1e9bc" kindref="member">rating</ref>();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>optimistic_cost<sp/>+=<sp/>parent_vse-&gt;cost;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>this<sp/>entry<sp/>if<sp/>it<sp/>will<sp/>not<sp/>beat<sp/>best<sp/>choice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(optimistic_cost<sp/>&gt;=<sp/>best_choice_bundle-&gt;best_choice-&gt;rating())<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Discarded<sp/>ViterbiEntry<sp/>with<sp/>high<sp/>cost<sp/>%.4f&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>best_choice-&gt;rating()=%.4f\n&quot;</highlight><highlight class="normal">,<sp/>optimistic_cost,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_choice-&gt;rating());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>consistency<sp/>of<sp/>the<sp/>path<sp/>and<sp/>set<sp/>the<sp/>relevant<sp/>consistency_info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>LanguageModelConsistencyInfo<sp/>consistency_info;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>FillConsistencyInfo(curr_col,<sp/>word_end,<sp/>b,<sp/>parent_vse,<sp/>parent_b,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>&amp;consistency_info);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Invoke<sp/>Dawg<sp/>language<sp/>model<sp/>component.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>LanguageModelDawgInfo<sp/>*dawg_info<sp/>=</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateDawgInfo(word_end,<sp/>consistency_info.script_id,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_col,<sp/>curr_row,<sp/>*b,<sp/>parent_vse,<sp/>&amp;changed);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Invoke<sp/>TopChoice<sp/>language<sp/>model<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ratings_sum<sp/>=<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a7fbd2d505bf5b55beee424096fb1e9bc" kindref="member">rating</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>ratings_sum<sp/>+=<sp/>parent_vse-&gt;ratings_sum;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>GenerateTopChoiceInfo(ratings_sum,<sp/>dawg_info,<sp/>consistency_info,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_vse,<sp/>b,<sp/>&amp;top_choice_flags,<sp/>&amp;changed);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Invoke<sp/>Ngram<sp/>language<sp/>model<sp/>component.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>LanguageModelNgramInfo<sp/>*ngram_info<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_ngram_on)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_info<sp/>=<sp/>GenerateNgramInfo(</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;getUnicharset().id_to_unichar(b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>()),<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1af53d45b718c562ea7209b583c77ac14e" kindref="member">certainty</ref>(),</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denom,<sp/>curr_col,<sp/>curr_row,<sp/>parent_vse,<sp/>parent_b,<sp/>&amp;changed);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(ngram_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prune<sp/>non-top<sp/>choice<sp/>paths<sp/>with<sp/>inconsistent<sp/>scripts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consistency_info.inconsistent_script)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(top_choice_flags<sp/>&amp;<sp/>kSmallestRatingFlag))<sp/>changed<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ngram_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>ngram_info-&gt;pruned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>language<sp/>model<sp/>components<sp/>did<sp/>not<sp/>like<sp/>this<sp/>unichar<sp/>-<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!changed)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Language<sp/>model<sp/>components<sp/>did<sp/>not<sp/>like<sp/>this<sp/>entry\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dawg_info;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ngram_info;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x0;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>cost<sp/>of<sp/>associating<sp/>the<sp/>blobs<sp/>that<sp/>represent<sp/>the<sp/>current<sp/>unichar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>AssociateStats<sp/>associate_stats;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>ComputeAssociateStats(curr_col,<sp/>curr_row,<sp/>max_char_wh_ratio_,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_vse,<sp/>chunks_record,<sp/>&amp;associate_stats);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>associate_stats.shape_cost<sp/>+=<sp/>parent_vse-&gt;associate_stats.shape_cost;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>associate_stats.bad_shape<sp/>|=<sp/>parent_vse-&gt;associate_stats.bad_shape;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>aggregate<sp/>cost<sp/>(adjusted<sp/>ratings<sp/>sum).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/>ComputeAdjustedPathCost(</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ratings_sum,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>1<sp/>:<sp/>(parent_vse-&gt;length+1),</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(dawg_info<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>0.0f<sp/>:<sp/>1.0f,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg_info,<sp/>ngram_info,<sp/>consistency_info,<sp/>associate_stats,<sp/>parent_vse);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a7966f1dfc4ea7b8febbf057fe8d67dee" kindref="member">set_language_model_state</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LanguageModelState(curr_col,<sp/>curr_row));</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>LanguageModelState<sp/>*lms<sp/>=</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>());</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>this<sp/>entry<sp/>if<sp/>it<sp/>represents<sp/>a<sp/>prunable<sp/>path<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>language_model_viterbi_list_max_num_prunable<sp/>such<sp/>entries<sp/>with<sp/>a<sp/>lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cost<sp/>have<sp/>already<sp/>been<sp/>recorded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PrunablePath(top_choice_flags,<sp/>dawg_info)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(lms-&gt;viterbi_state_entries_prunable_length<sp/>&gt;=</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language_model_viterbi_list_max_num_prunable)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cost<sp/>&gt;=<sp/>lms-&gt;viterbi_state_entries_prunable_max_cost)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Discarded<sp/>ViterbiEntry<sp/>with<sp/>high<sp/>cost<sp/>%g<sp/>max<sp/>cost<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cost,<sp/>lms-&gt;viterbi_state_entries_prunable_max_cost);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dawg_info;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ngram_info;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0x0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>new<sp/>ViterbiStateEntry<sp/>and<sp/>add<sp/>it<sp/>to<sp/>lms-&gt;viterbi_state_entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>ViterbiStateEntry<sp/>*new_vse<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ViterbiStateEntry(</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent_b,<sp/>parent_vse,<sp/>b,<sp/>cost,<sp/>ComputeOutlineLength(b),<sp/>consistency_info,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>associate_stats,<sp/>top_choice_flags,<sp/>dawg_info,<sp/>ngram_info);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>updated_flags_.push_back(&amp;(new_vse-&gt;updated));</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/>lms-&gt;viterbi_state_entries.add_sorted(ViterbiStateEntry::Compare,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>new_vse);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>lms-&gt;viterbi_state_entries_length++;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PrunablePath(top_choice_flags,<sp/>dawg_info))<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>lms-&gt;viterbi_state_entries_prunable_length++;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>lms-&gt;viterbi_state_entries_prunable_max_cost<sp/>and<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>top_choice_flags<sp/>of<sp/>entries<sp/>with<sp/>ratings_sum<sp/>than<sp/>new_vse-&gt;ratings_sum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((lms-&gt;viterbi_state_entries_prunable_length<sp/>&gt;=</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language_model_viterbi_list_max_num_prunable)<sp/>||<sp/>top_choice_flags)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!lms-&gt;viterbi_state_entries.empty());</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prunable_counter<sp/>=<sp/>language_model_viterbi_list_max_num_prunable;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>vit.set_to_list(&amp;(lms-&gt;viterbi_state_entries));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vit.mark_cycle_pt();<sp/>!vit.cycled_list();<sp/>vit.forward())<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ViterbiStateEntry<sp/>*curr_vse<sp/>=<sp/>vit.data();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>appropriate<sp/>top<sp/>choice<sp/>flags<sp/>of<sp/>the<sp/>entries<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>that<sp/>have<sp/>ratings_sum<sp/>higher<sp/>thank<sp/>new_entry-&gt;ratings_sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(since<sp/>they<sp/>will<sp/>not<sp/>be<sp/>top<sp/>choices<sp/>any<sp/>more).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_vse-&gt;top_choice_flags<sp/>&amp;&amp;<sp/>curr_vse<sp/>!=<sp/>new_vse<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ComputeConsistencyAdjustedRatingsSum(</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_vse-&gt;ratings_sum,<sp/>curr_vse-&gt;dawg_info,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_vse-&gt;consistency_info)<sp/>&gt;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ComputeConsistencyAdjustedRatingsSum(</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_vse-&gt;ratings_sum,<sp/>new_vse-&gt;dawg_info,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_vse-&gt;consistency_info))<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_vse-&gt;top_choice_flags<sp/>&amp;=<sp/>~(top_choice_flags);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prunable_counter<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrunablePath(curr_vse-&gt;top_choice_flags,<sp/>curr_vse-&gt;dawg_info))<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--prunable_counter;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>lms-&gt;viterbi_state_entries_prunable_max_cost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prunable_counter<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lms-&gt;viterbi_state_entries_prunable_max_cost<sp/>=<sp/>vit.data()-&gt;cost;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>viterbi_state_entries_prunable_max_cost<sp/>to<sp/>%.4f\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lms-&gt;viterbi_state_entries_prunable_max_cost);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prunable_counter<sp/>=<sp/>-1;<sp/><sp/></highlight><highlight class="comment">//<sp/>stop<sp/>counting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>newly<sp/>created<sp/>ViterbiStateEntry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>PrintViterbiStateEntry(</highlight><highlight class="stringliteral">&quot;New&quot;</highlight><highlight class="normal">,<sp/>new_vse,<sp/>b,<sp/>chunks_record);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Updated<sp/>viterbi<sp/>list<sp/>(max<sp/>cost<sp/>%g):\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lms-&gt;viterbi_state_entries_prunable_max_cost);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vit.set_to_list(&amp;(lms-&gt;viterbi_state_entries));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vit.mark_cycle_pt();<sp/>!vit.cycled_list();<sp/>vit.forward())<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PrintViterbiStateEntry(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>vit.data(),<sp/>b,<sp/>chunks_record);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>best<sp/>choice<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_end)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>UpdateBestChoice(b,<sp/>new_vse,<sp/>pain_points,<sp/>chunks_record,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle,<sp/>blamer_bundle);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>stats<sp/>in<sp/>best_path_by_column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_vse-&gt;Consistent()<sp/>||<sp/>new_vse-&gt;dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(new_vse-&gt;ngram_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!new_vse-&gt;ngram_info-&gt;pruned))<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>avg_cost<sp/>=<sp/>new_vse-&gt;cost<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(curr_row+1);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>curr_col;<sp/>c<sp/>&lt;=<sp/>curr_row;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(avg_cost<sp/>&lt;<sp/>(*best_path_by_column)[c].avg_cost)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*best_path_by_column)[c].avg_cost<sp/>=<sp/>avg_cost;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*best_path_by_column)[c].best_vse<sp/>=<sp/>new_vse;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*best_path_by_column)[c].best_b<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Set<sp/>best_path_by_column[%d]=(%g<sp/>%p)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c,<sp/>avg_cost,<sp/>new_vse);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>changed;</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::PrintViterbiStateEntry(</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/>ViterbiStateEntry<sp/>*vse,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*b,<sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>ViterbiStateEntry<sp/>%p<sp/>with<sp/>ratings_sum=%.4f<sp/>length=%d<sp/>cost=%.4f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg,<sp/>vse,<sp/>vse-&gt;ratings_sum,<sp/>vse-&gt;length,<sp/>vse-&gt;cost);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;top_choice_flags)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>top_choice_flags=0x%x&quot;</highlight><highlight class="normal">,<sp/>vse-&gt;top_choice_flags);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vse-&gt;Consistent())<sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>inconsistent=(punc<sp/>%d<sp/>case<sp/>%d<sp/>chartype<sp/>%d<sp/>script<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;consistency_info.NumInconsistentPunc(),</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;consistency_info.NumInconsistentCase(),</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;consistency_info.NumInconsistentChartype(),</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;consistency_info.inconsistent_script);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;dawg_info)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>permuter=%d&quot;</highlight><highlight class="normal">,<sp/>vse-&gt;dawg_info-&gt;permuter);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;ngram_info)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>ngram_cost=%g<sp/>context=%s<sp/>ngram<sp/>pruned=%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;ngram_info-&gt;ngram_cost,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;ngram_info-&gt;context.string(),</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;ngram_info-&gt;pruned);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;associate_stats.shape_cost<sp/>&gt;<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>shape_cost=%g&quot;</highlight><highlight class="normal">,<sp/>vse-&gt;associate_stats.shape_cost);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>wd_str;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*wd<sp/>=<sp/>ConstructWord(b,<sp/>vse,<sp/>chunks_record,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>wd-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1acea958562bc7123b36f0089be7b8388e" kindref="member">string_and_lengths</ref>(&amp;wd_str,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>wd;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>str=%s&quot;</highlight><highlight class="normal">,<sp/>wd_str.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::GenerateTopChoiceInfo(</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ratings_sum,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LanguageModelDawgInfo<sp/>*dawg_info,</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LanguageModelConsistencyInfo<sp/>&amp;consistency_info,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViterbiStateEntry<sp/>*parent_vse,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*b,</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>*top_choice_flags,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>*changed)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/>ratings_sum<sp/>=<sp/>ComputeConsistencyAdjustedRatingsSum(</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ratings_sum,<sp/>dawg_info,<sp/>consistency_info);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>flags<sp/>that<sp/>do<sp/>not<sp/>agree<sp/>with<sp/>parent_vse-&gt;top_choice_flags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>*top_choice_flags<sp/>&amp;=<sp/>parent_vse-&gt;top_choice_flags;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consistency_info.Consistent())<sp/>*top_choice_flags<sp/>|=<sp/>kConsistentFlag;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*top_choice_flags<sp/>==<sp/>0x0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/>LanguageModelState<sp/>*lms<sp/>=</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>());</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lms<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!lms-&gt;viterbi_state_entries.empty())<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>ViterbiStateEntry_IT<sp/>vit(&amp;(lms-&gt;viterbi_state_entries));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vit.mark_cycle_pt();<sp/>!vit.cycled_list();<sp/>vit.forward())<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ratings_sum<sp/>&gt;=<sp/>ComputeConsistencyAdjustedRatingsSum(</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vit.data()-&gt;ratings_sum,<sp/>vit.data()-&gt;dawg_info,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vit.data()-&gt;consistency_info))<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>appropriate<sp/>flags<sp/>if<sp/>the<sp/>list<sp/>already<sp/>contains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>top<sp/>choice<sp/>entry<sp/>with<sp/>a<sp/>lower<sp/>cost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*top_choice_flags<sp/>&amp;=<sp/>~(vit.data()-&gt;top_choice_flags);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;GenerateTopChoiceInfo:<sp/>top_choice_flags=0x%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*top_choice_flags);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/>*changed<sp/>|=<sp/>*top_choice_flags;</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal">LanguageModelDawgInfo<sp/>*LanguageModel::GenerateDawgInfo(</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>script_id,</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_row,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>&amp;b,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViterbiStateEntry<sp/>*parent_vse,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>*changed)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_fixed_length_dawgs<sp/>=<sp/>!fixed_length_beginning_active_dawgs_-&gt;empty();</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>active_dawgs<sp/>and<sp/>constraints<sp/>from<sp/>parent_vse<sp/>if<sp/>it<sp/>is<sp/>not<sp/>NULL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>use<sp/>beginning_active_dawgs_<sp/>and<sp/>beginning_constraints_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(use_fixed_length_dawgs<sp/>&amp;&amp;<sp/>parent_vse-&gt;dawg_info<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_args_-&gt;active_dawgs<sp/>=<sp/>beginning_active_dawgs_;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_args_-&gt;constraints<sp/>=<sp/>beginning_constraints_;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_args_-&gt;permuter<sp/>=<sp/>NO_PERM;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse-&gt;dawg_info<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>a<sp/>dict<sp/>word<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_args_-&gt;active_dawgs<sp/>=<sp/>parent_vse-&gt;dawg_info-&gt;active_dawgs;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_args_-&gt;constraints<sp/>=<sp/>parent_vse-&gt;dawg_info-&gt;constraints;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_args_-&gt;permuter<sp/>=<sp/>parent_vse-&gt;dawg_info-&gt;permuter;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deal<sp/>with<sp/>hyphenated<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!use_fixed_length_dawgs<sp/>&amp;&amp;<sp/>word_end<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;has_hyphen_end(b.<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>(),<sp/>curr_col<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Hyphenated<sp/>word<sp/>found\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>*changed<sp/>|=<sp/>kDawgFlag;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LanguageModelDawgInfo(dawg_args_-&gt;active_dawgs,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args_-&gt;constraints,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPOUND_PERM);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deal<sp/>with<sp/>compound<sp/>words.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!use_fixed_length_dawgs<sp/>&amp;&amp;<sp/>dict_-&gt;compound_marker(b.<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>parent_vse-&gt;dawg_info-&gt;permuter<sp/>!=<sp/>NUMBER_PERM))<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>compound<sp/>marker&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>allow<sp/>compound<sp/>operators<sp/>at<sp/>the<sp/>beginning<sp/>and<sp/>end<sp/>of<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>allow<sp/>more<sp/>than<sp/>one<sp/>compound<sp/>operator<sp/>per<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>allow<sp/>compounding<sp/>of<sp/>words<sp/>with<sp/>lengths<sp/>shorter<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>language_model_min_compound_length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>word_end<sp/>||</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args_-&gt;permuter<sp/>==<sp/>COMPOUND_PERM<sp/>||</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_vse-&gt;length<sp/>&lt;<sp/>language_model_min_compound_length)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>a<sp/>that<sp/>the<sp/>path<sp/>terminated<sp/>before<sp/>the<sp/>current<sp/>character<sp/>is<sp/>a<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_word_ending<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parent_vse-&gt;dawg_info-&gt;active_dawgs-&gt;size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DawgInfo<sp/>&amp;info<sp/>=<sp/>(*parent_vse-&gt;dawg_info-&gt;active_dawgs)[i];</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*pdawg<sp/>=<sp/>dict_-&gt;GetDawg(info.dawg_index);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(pdawg<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pdawg-&gt;type()<sp/>==<sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref><sp/>&amp;&amp;<sp/>info.ref<sp/>!=<sp/>NO_EDGE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdawg-&gt;end_of_word(info.ref))<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_word_ending<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_word_ending)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>LanguageModelDawgInfo<sp/>with<sp/>active_dawgs<sp/>set<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>beginning<sp/>dawgs<sp/>of<sp/>type<sp/>DAWG_TYPE_WORD.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Compound<sp/>word<sp/>found\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>DawgInfoVector<sp/>beginning_word_dawgs;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>beginning_active_dawgs_-&gt;size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*bdawg<sp/>=</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;GetDawg((*beginning_active_dawgs_)[i].dawg_index);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bdawg-&gt;type()<sp/>==<sp/><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151a9c67e397ff6d57a705cd4cd4524a2b34" kindref="member">DAWG_TYPE_WORD</ref>)<sp/>{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginning_word_dawgs<sp/>+=<sp/>(*beginning_active_dawgs_)[i];</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>*changed<sp/>|=<sp/>kDawgFlag;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LanguageModelDawgInfo(&amp;(beginning_word_dawgs),</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args_-&gt;constraints,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPOUND_PERM);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>dealing<sp/>with<sp/>compound<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/>LanguageModelDawgInfo<sp/>*dawg_info<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>LetterIsOkay().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>dict_-&gt;LetterIsOkay(dawg_args_,<sp/>b.<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>(),<sp/>word_end);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_args_-&gt;permuter<sp/>!=<sp/>NO_PERM)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>*changed<sp/>|=<sp/>kDawgFlag;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>dawg_info<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LanguageModelDawgInfo(dawg_args_-&gt;updated_active_dawgs,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args_-&gt;updated_constraints,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_args_-&gt;permuter);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>non-space<sp/>delimited<sp/>languages:<sp/>since<sp/>every<sp/>letter<sp/>could<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>valid<sp/>word,<sp/>a<sp/>new<sp/>word<sp/>could<sp/>start<sp/>at<sp/>every<sp/>unichar.<sp/>Thus<sp/>append</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed_length_beginning_active_dawgs_<sp/>to<sp/>dawg_info-&gt;active_dawgs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_fixed_length_dawgs)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_info<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*changed<sp/>|=<sp/>kDawgFlag;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg_info<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LanguageModelDawgInfo(</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixed_length_beginning_active_dawgs_,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>empty_dawg_info_vec_,<sp/>SYSTEM_DAWG_PERM);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(dawg_info-&gt;active_dawgs)<sp/>+=<sp/>*(fixed_length_beginning_active_dawgs_);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>done<sp/>dealing<sp/>with<sp/>fixed-length<sp/>dawgs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dawg_info;</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal">LanguageModelNgramInfo<sp/>*LanguageModel::GenerateNgramInfo(</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*unichar,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>certainty,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denom,</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_row,</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViterbiStateEntry<sp/>*parent_vse,</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*parent_b,</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a87cc64ed462a40c9c210a8bab7cb9b87" kindref="member">LanguageModelFlagsType</ref><sp/>*changed)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>parent<sp/>context.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pcontext_ptr<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pcontext_unichar_step_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>pcontext_ptr<sp/>=<sp/>prev_word_str_.string();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>pcontext_unichar_step_len<sp/>=<sp/>prev_word_unichar_step_len_;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>pcontext_ptr<sp/>=<sp/>parent_vse-&gt;ngram_info-&gt;context.string();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>pcontext_unichar_step_len<sp/>=</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent_vse-&gt;ngram_info-&gt;context_unichar_step_len;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>p(unichar<sp/>|<sp/>parent<sp/>context).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_step_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>pruned<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ngram_prob;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ngram_cost<sp/>=<sp/>ComputeNgramCost(unichar,<sp/>certainty,<sp/>denom,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcontext_ptr,<sp/>&amp;unichar_step_len,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pruned,<sp/>&amp;ngram_prob);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>attempt<sp/>to<sp/>normalize<sp/>ngram_cost<sp/>for<sp/>strings<sp/>of<sp/>different</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>lengths<sp/>-<sp/>we<sp/>multiply<sp/>ngram_cost<sp/>by<sp/>P(char<sp/>|<sp/>context)<sp/>as<sp/>many<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>number<sp/>of<sp/>chunks<sp/>occupied<sp/>by<sp/>char.<sp/>This<sp/>makes<sp/>the<sp/>ngram<sp/>costs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>all<sp/>the<sp/>paths<sp/>ending<sp/>at<sp/>the<sp/>current<sp/>BLOB_CHOICE<sp/>comparable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(daria):<sp/>it<sp/>would<sp/>be<sp/>worth<sp/>looking<sp/>at<sp/>different<sp/>ways<sp/>of<sp/>normalization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_row<sp/>&gt;<sp/>curr_col)<sp/>{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_cost<sp/>+=<sp/>(curr_row<sp/>-<sp/>curr_col)<sp/>*<sp/>ngram_cost;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_prob<sp/>+=<sp/>(curr_row<sp/>-<sp/>curr_col)<sp/>*<sp/>ngram_prob;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>ngram_cost<sp/>of<sp/>the<sp/>parent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_cost<sp/>+=<sp/>parent_vse-&gt;ngram_info-&gt;ngram_cost;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>ngram_prob<sp/>+=<sp/>parent_vse-&gt;ngram_info-&gt;ngram_prob;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Shorten<sp/>parent<sp/>context<sp/>string<sp/>by<sp/>unichar_step_len<sp/>unichars.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_remove<sp/>=<sp/>(unichar_step_len<sp/>+<sp/>pcontext_unichar_step_len<sp/>-</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language_model_ngram_order);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_remove<sp/>&gt;<sp/>0)<sp/>pcontext_unichar_step_len<sp/>-=<sp/>num_remove;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_remove<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>*pcontext_ptr<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>pcontext_ptr<sp/>+=<sp/><ref refid="class_u_n_i_c_h_a_r_1a8182a4663f6c1df9f097700f1009ab22" kindref="member">UNICHAR::utf8_step</ref>(pcontext_ptr);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>--num_remove;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Decide<sp/>whether<sp/>to<sp/>prune<sp/>this<sp/>ngram<sp/>path<sp/>and<sp/>update<sp/>changed<sp/>accordingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>parent_vse-&gt;ngram_info-&gt;pruned)<sp/>pruned<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pruned)<sp/>*changed<sp/>|=<sp/>kNgramFlag;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>and<sp/>return<sp/>the<sp/>new<sp/>LanguageModelNgramInfo.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>LanguageModelNgramInfo<sp/>*ngram_info<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LanguageModelNgramInfo(</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pcontext_ptr,<sp/>pcontext_unichar_step_len,<sp/>pruned,<sp/>ngram_prob,<sp/>ngram_cost);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>ngram_info-&gt;context<sp/>+=<sp/>unichar;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>ngram_info-&gt;context_unichar_step_len<sp/>+=<sp/>unichar_step_len;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>assert(ngram_info-&gt;context_unichar_step_len<sp/>&lt;=<sp/>language_model_ngram_order);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngram_info;</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>LanguageModel::ComputeNgramCost(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*unichar,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>certainty,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denom,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*context,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*unichar_step_len,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*found_small_prob,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ngram_prob)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*context_ptr<sp/>=<sp/>context;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*modified_context<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*modified_context_end<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*unichar_ptr<sp/>=<sp/>unichar;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*unichar_end<sp/>=<sp/>unichar_ptr<sp/>+<sp/>strlen(unichar_ptr);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>prob<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(unichar_ptr<sp/>&lt;<sp/>unichar_end<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(step<sp/>=<sp/><ref refid="class_u_n_i_c_h_a_r_1a8182a4663f6c1df9f097700f1009ab22" kindref="member">UNICHAR::utf8_step</ref>(unichar_ptr))<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;prob(%s<sp/>|<sp/>%s)=%g\n&quot;</highlight><highlight class="normal">,<sp/>unichar_ptr,<sp/>context_ptr,</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;ProbabilityInContext(context_ptr,<sp/>-1,<sp/>unichar_ptr,<sp/>step));</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>prob<sp/>+=<sp/>dict_-&gt;ProbabilityInContext(context_ptr,<sp/>-1,<sp/>unichar_ptr,<sp/>step);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>++(*unichar_step_len);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_ngram_use_only_first_uft8_step)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>unichar_ptr<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>multiple<sp/>UTF8<sp/>characters<sp/>present<sp/>in<sp/>unichar,<sp/>context<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>updated<sp/>to<sp/>include<sp/>the<sp/>previously<sp/>examined<sp/>characters<sp/>from<sp/>str,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unless<sp/>use_only_first_uft8_step<sp/>is<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unichar_ptr<sp/>&lt;<sp/>unichar_end)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modified_context<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>context_len<sp/>=<sp/>strlen(context);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified_context<sp/>=</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[context_len<sp/>+<sp/>strlen(unichar_ptr)<sp/>+<sp/>step<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(modified_context,<sp/>context,<sp/>context_len);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modified_context_end<sp/>=<sp/>modified_context<sp/>+<sp/>context_len;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context_ptr<sp/>=<sp/>modified_context;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(modified_context_end,<sp/>unichar_ptr<sp/>-<sp/>step,<sp/>step);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modified_context_end<sp/>+=<sp/>step;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*modified_context_end<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>prob<sp/>/=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*unichar_step_len);<sp/><sp/></highlight><highlight class="comment">//<sp/>normalize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prob<sp/>&lt;<sp/>language_model_ngram_small_prob)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Found<sp/>small<sp/>prob<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>prob);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>*found_small_prob<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>*ngram_prob<sp/>=<sp/>-1.0*log(prob);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/>-1.0*log(CertaintyScore(certainty)/denom)<sp/>+</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ngram_prob<sp/>*<sp/>language_model_ngram_scale_factor;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;-log<sp/>[<sp/>p(%s)<sp/>*<sp/>p(%s<sp/>|<sp/>%s)<sp/>]<sp/>=<sp/>-log(%g*%g)<sp/>=<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>unichar,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar,<sp/>context_ptr,<sp/>CertaintyScore(certainty)/denom,<sp/>prob,<sp/>cost);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(modified_context<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>modified_context;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cost;</highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>LanguageModel::ComputeDenom(BLOB_CHOICE_LIST<sp/>*curr_list)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_list-&gt;empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>c_it(curr_list);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c_it.mark_cycle_pt();<sp/>!c_it.cycled_list();<sp/>c_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(c_it.data()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>++len;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>denom<sp/>+=<sp/>CertaintyScore(c_it.data()-&gt;certainty());</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/>assert(len<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ideal<sp/>situation<sp/>would<sp/>be<sp/>to<sp/>have<sp/>the<sp/>classifier<sp/>scores<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>classifying<sp/>each<sp/>position<sp/>as<sp/>each<sp/>of<sp/>the<sp/>characters<sp/>in<sp/>the<sp/>unicharset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>we<sp/>can<sp/>not<sp/>do<sp/>this<sp/>because<sp/>of<sp/>speed,<sp/>we<sp/>add<sp/>a<sp/>very<sp/>crude<sp/>estimate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>what<sp/>these<sp/>scores<sp/>for<sp/>the<sp/>&quot;missing&quot;<sp/>classifications<sp/>would<sp/>sum<sp/>up<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/>denom<sp/>+=<sp/>(dict_-&gt;getUnicharset().size()<sp/>-<sp/>len)<sp/>*</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>CertaintyScore(language_model_ngram_nonmatch_score);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>denom;</highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::FillConsistencyInfo(</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curr_col,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>word_end,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*b,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>ViterbiStateEntry<sp/>*parent_vse,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*parent_b,</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>LanguageModelConsistencyInfo<sp/>*consistency_info)<sp/>{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>&amp;unicharset<sp/>=<sp/>dict_-&gt;getUnicharset();</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>unichar_id<sp/>=<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>();</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>*consistency_info<sp/>=<sp/>parent_vse-&gt;consistency_info;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>punctuation<sp/>validity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a57f82c4777d39c923cb9ec27cac9bcb6" kindref="member">get_ispunctuation</ref>(unichar_id))<sp/>consistency_info-&gt;num_punc++;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>if<sp/>(dict_-&gt;GetPuncDawg()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!consistency_info-&gt;invalid_punc)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;compound_marker(unichar_id)<sp/>&amp;&amp;<sp/>parent_b<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>())<sp/>||</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>())))<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>punc_ref<sp/>for<sp/>compound<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;punc_ref<sp/>=<sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref><sp/>pattern_unichar_id<sp/>=</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(unichar_id)<sp/>||</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(unichar_id))<sp/>?</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dawg::kPatternUnicharID<sp/>:<sp/>unichar_id;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consistency_info-&gt;punc_ref<sp/>==<sp/>NO_EDGE<sp/>||</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pattern_unichar_id<sp/>!=<sp/>Dawg::kPatternUnicharID<sp/>||</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;GetPuncDawg()-&gt;edge_letter(consistency_info-&gt;punc_ref)<sp/>!=</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Dawg::kPatternUnicharID)<sp/>{</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref><sp/>node<sp/>=<sp/>Dict::GetStartingNode(dict_-&gt;GetPuncDawg(),</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;punc_ref);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;punc_ref<sp/>=</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(node<sp/>!=<sp/>NO_EDGE)<sp/>?<sp/>dict_-&gt;GetPuncDawg()-&gt;edge_char_of(</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node,<sp/>pattern_unichar_id,<sp/>word_end)<sp/>:<sp/>NO_EDGE;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consistency_info-&gt;punc_ref<sp/>==<sp/>NO_EDGE)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;invalid_punc<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>case<sp/>related<sp/>counters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!word_end<sp/>&amp;&amp;<sp/>dict_-&gt;compound_marker(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>counters<sp/>if<sp/>we<sp/>are<sp/>dealing<sp/>with<sp/>a<sp/>compound<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/>consistency_info-&gt;num_lower<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/>consistency_info-&gt;num_non_first_upper<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a074096c823dd5b9bc02c02a59784bf34" kindref="member">get_islower</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>consistency_info-&gt;num_lower++;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((parent_b<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>&amp;&amp;<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a482a94b3e6fcd4e5b9b9363bb9e0ee59" kindref="member">get_isupper</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a482a94b3e6fcd4e5b9b9363bb9e0ee59" kindref="member">get_isupper</ref>(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>())<sp/>||</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;num_lower<sp/>&gt;<sp/>0<sp/>||</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;num_non_first_upper<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;num_non_first_upper++;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>consistency_info-&gt;script_id<sp/>(use<sp/>script<sp/>of<sp/>unichar_id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>is<sp/>not<sp/>Common,<sp/>use<sp/>script<sp/>id<sp/>recorded<sp/>by<sp/>the<sp/>parent<sp/>otherwise).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>inconsistent_script<sp/>to<sp/>true<sp/>if<sp/>the<sp/>script<sp/>of<sp/>the<sp/>current<sp/>unichar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>not<sp/>consistent<sp/>with<sp/>that<sp/>of<sp/>the<sp/>parent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/>consistency_info-&gt;script_id<sp/>=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a77cdfcf9338d6565e6321a583392d5a1" kindref="member">get_script</ref>(unichar_id);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Hiragana<sp/>and<sp/>Katakana<sp/>can<sp/>mix<sp/>with<sp/>Han.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;getUnicharset().han_sid()<sp/>!=<sp/>dict_-&gt;getUnicharset().null_sid())<sp/>{</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1acb42b72a86cd0c1285a2a769b54eebbd" kindref="member">hiragana_sid</ref>()<sp/>!=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a126914ee29131685037c122375169a62" kindref="member">null_sid</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;script_id<sp/>==<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1acb42b72a86cd0c1285a2a769b54eebbd" kindref="member">hiragana_sid</ref>())<sp/>||</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1adc40797ac6843aeef70069b051266226" kindref="member">katakana_sid</ref>()<sp/>!=<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a126914ee29131685037c122375169a62" kindref="member">null_sid</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;script_id<sp/>==<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1adc40797ac6843aeef70069b051266226" kindref="member">katakana_sid</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;script_id<sp/>=<sp/>dict_-&gt;getUnicharset().han_sid();</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(parent_vse-&gt;consistency_info.script_id<sp/>!=</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;getUnicharset().common_sid()))<sp/>{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parent_script_id<sp/>=<sp/>parent_vse-&gt;consistency_info.script_id;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>script_id<sp/>is<sp/>Common,<sp/>use<sp/>script<sp/>id<sp/>of<sp/>the<sp/>parent<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consistency_info-&gt;script_id<sp/>==<sp/>dict_-&gt;getUnicharset().common_sid())<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;script_id<sp/>=<sp/>parent_script_id;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(consistency_info-&gt;script_id<sp/>!=<sp/>parent_script_id)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;inconsistent_script<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>chartype<sp/>related<sp/>counters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ad1dd0929edfb0e9e4905cc2fbeff42c2" kindref="member">get_isalpha</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/>consistency_info-&gt;num_alphas++;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a5951dde3ab90c12c309d776570a10725" kindref="member">get_isdigit</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>consistency_info-&gt;num_digits++;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a57f82c4777d39c923cb9ec27cac9bcb6" kindref="member">get_ispunctuation</ref>(unichar_id))<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>consistency_info-&gt;num_other++;</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>font<sp/>and<sp/>spacing<sp/>consistency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_b<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontinfo_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>()<sp/>==<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>()<sp/>||</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a22193fee2f759262aa5ce68e4b288192" kindref="member">fontinfo_id2</ref>()<sp/>==<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id<sp/>=<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>()<sp/>==<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a22193fee2f759262aa5ce68e4b288192" kindref="member">fontinfo_id2</ref>()<sp/>||</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a22193fee2f759262aa5ce68e4b288192" kindref="member">fontinfo_id2</ref>()<sp/>==<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a22193fee2f759262aa5ce68e4b288192" kindref="member">fontinfo_id2</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id<sp/>=<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a22193fee2f759262aa5ce68e4b288192" kindref="member">fontinfo_id2</ref>();</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(language_model_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;pfont<sp/>%s<sp/>pfont<sp/>%s<sp/>font<sp/>%s<sp/>font2<sp/>%s<sp/>common<sp/>%s(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>()<sp/>&gt;=<sp/>0)<sp/>?</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_table_-&gt;get(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>()).name<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a22193fee2f759262aa5ce68e4b288192" kindref="member">fontinfo_id2</ref>()<sp/>&gt;=<sp/>0)<sp/>?</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_table_-&gt;get(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a22193fee2f759262aa5ce68e4b288192" kindref="member">fontinfo_id2</ref>()).name<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>()<sp/>&gt;=<sp/>0)<sp/>?</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_table_-&gt;get(b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>()).name<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fontinfo_id<sp/>&gt;=<sp/>0)<sp/>?<sp/>fontinfo_table_-&gt;get(fontinfo_id).name<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(fontinfo_id<sp/>&gt;=<sp/>0)<sp/>?<sp/>fontinfo_table_-&gt;get(fontinfo_id).name<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fontinfo_id);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expected_gap_found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>expected_gap;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_gap;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fontinfo_id<sp/>&gt;=<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>a<sp/>common<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fontinfo_table_-&gt;get(fontinfo_id).get_spacing(</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>(),<sp/>unichar_id,<sp/>&amp;temp_gap))<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_gap<sp/>=<sp/>temp_gap;</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_gap_found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;inconsistent_font<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>an<sp/>average<sp/>of<sp/>the<sp/>expected<sp/>gaps<sp/>in<sp/>each<sp/>font</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_addends<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected_gap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp_fid;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_fid<sp/>=<sp/>parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>();</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_fid<sp/>=<sp/>parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a22193fee2f759262aa5ce68e4b288192" kindref="member">fontinfo_id2</ref>();</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_fid<sp/>=<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a3594e34861be86d775724f5f91fba3be" kindref="member">fontinfo_id</ref>();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_fid<sp/>=<sp/>b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1a22193fee2f759262aa5ce68e4b288192" kindref="member">fontinfo_id2</ref>();</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_fid<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>fontinfo_table_-&gt;get(temp_fid).get_spacing(</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>(),<sp/>unichar_id,<sp/>&amp;temp_gap))<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected_gap<sp/>+=<sp/>temp_gap;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_addends++;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>expected_gap_found<sp/>=<sp/>(num_addends<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_addends<sp/>&gt;<sp/>0)<sp/>expected_gap<sp/>/=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(num_addends);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expected_gap_found)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>actual_gap<sp/>=</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(AssociateUtils::GetChunksGap(</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a3ac3e771d771818dff8eed190d11d50f" kindref="member">chunk_widths</ref>,<sp/>curr_col-1));</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>gap_ratio<sp/>=<sp/>expected_gap<sp/>/<sp/>actual_gap;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(daria):<sp/>find<sp/>a<sp/>good<sp/>way<sp/>to<sp/>tune<sp/>this<sp/>heuristic<sp/>estimate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gap_ratio<sp/>&lt;<sp/>1/2<sp/>||<sp/>gap_ratio<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>consistency_info-&gt;num_inconsistent_spaces++;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(language_model_debug_level<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;spacing<sp/>for<sp/>%s(%d)<sp/>%s(%d)<sp/>col<sp/>%d:<sp/>expected<sp/>%g<sp/>actual<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>()),</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>(),<sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a421c0b6ebcbbe7547490252fb688c961" kindref="member">id_to_unichar</ref>(unichar_id),</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unichar_id,<sp/>curr_col,<sp/>expected_gap,<sp/>actual_gap);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>LanguageModel::ComputeAdjustedPathCost(</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ratings_sum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dawg_score,</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LanguageModelDawgInfo<sp/>*dawg_info,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LanguageModelNgramInfo<sp/>*ngram_info,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LanguageModelConsistencyInfo<sp/>&amp;consistency_info,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AssociateStats<sp/>&amp;associate_stats,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/>ViterbiStateEntry<sp/>*parent_vse)<sp/>{</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>adjustment<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_info<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>dawg_info-&gt;permuter<sp/>!=<sp/>FREQ_DAWG_PERM)<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/>adjustment<sp/>+=<sp/>language_model_penalty_non_freq_dict_word;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_score<sp/>==<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>adjustment<sp/>+=<sp/>language_model_penalty_non_dict_word;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>language_model_min_compound_length)<sp/>{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>adjustment<sp/>+=<sp/>((length<sp/>-<sp/>language_model_min_compound_length)<sp/>*</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>language_model_penalty_increment);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_score<sp/>&lt;<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>adjustment<sp/>+=<sp/>(1.0f<sp/>-<sp/>dawg_score)<sp/>*<sp/>language_model_penalty_non_dict_word;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(associate_stats.shape_cost<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/>adjustment<sp/>+=<sp/>associate_stats.shape_cost<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(length);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_ngram_on)<sp/>{</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(ngram_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ngram_info-&gt;ngram_cost<sp/>*<sp/>adjustment;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/>adjustment<sp/>+=<sp/>ComputeConsistencyAdjustment(dawg_info,<sp/>consistency_info);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ratings_sum<sp/>*<sp/>adjustment;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::UpdateBestChoice(</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*b,</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>ViterbiStateEntry<sp/>*vse,</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*pain_points,</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record,</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>BestChoiceBundle<sp/>*best_choice_bundle,</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref><sp/>*blamer_bundle)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>temp_best_char_choices(vse-&gt;length);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vse-&gt;length;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_best_char_choices.push_back(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*certainties<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[vse-&gt;length];</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>temp_state;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>fraction<sp/>of<sp/>letters<sp/>in<sp/>the<sp/>path<sp/>that<sp/>are<sp/>&quot;covered&quot;<sp/>by<sp/>dawgs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>space<sp/>delimited<sp/>languages<sp/>this<sp/>number<sp/>will<sp/>be<sp/>0.0<sp/>for<sp/>nonwords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>1.0<sp/>for<sp/>dictionary<sp/>words.<sp/>For<sp/>non-space<sp/>delimited<sp/>languages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>number<sp/>will<sp/>be<sp/>in<sp/>the<sp/>[0.0,<sp/>1.0]<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dawg_score;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>truth_path;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*word<sp/>=<sp/>ConstructWord(b,<sp/>vse,<sp/>chunks_record,</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;temp_best_char_choices,<sp/>certainties,</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dawg_score,<sp/>&amp;temp_state,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle,<sp/>&amp;truth_path);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(word<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>not_blaming<sp/>=</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(blamer_bundle<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>!blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1ab02f7b4dc4711eef44a5891efb707b3b" kindref="member">segsearch_is_looking_for_blame</ref>);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Log<sp/>new<sp/>segmentation<sp/>(for<sp/>dict_-&gt;LogNewChoice()).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(not_blaming)<sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="states_8h_1a0839f350416466cdb1b5d7df4c5f99d4" kindref="member">PIECES_STATE</ref><sp/>pieces_widths;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="states_8cpp_1acd6fd8bb4f29a8f5674ec05b47e63466" kindref="member">bin_to_pieces</ref>(&amp;temp_state,<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>()<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pieces_widths);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>dict_-&gt;LogNewSegmentation(pieces_widths);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>word_str;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1acea958562bc7123b36f0089be7b8388e" kindref="member">string_and_lengths</ref>(&amp;word_str,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;UpdateBestChoice()<sp/>constructed<sp/>word<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>word_str.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>2)<sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aa27589343655d5843a6482dbb3731d5a" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>raw_choice<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((vse-&gt;top_choice_flags<sp/>&amp;<sp/>kSmallestRatingFlag)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>()<sp/>&lt;<sp/>best_choice_bundle-&gt;raw_choice-&gt;rating()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>not_blaming)<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>dict_-&gt;LogNewChoice(1.0,<sp/>certainties,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>word,<sp/>temp_best_char_choices);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>*(best_choice_bundle-&gt;raw_choice)<sp/>=<sp/>*word;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;raw_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a162d90ae016fbf55256591bbf01c0c03" kindref="member">set_permuter</ref>(TOP_CHOICE_PERM);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Updated<sp/>raw<sp/>choice\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>working<sp/>with<sp/>non-space<sp/>delimited<sp/>languages<sp/>we<sp/>re-adjust<sp/>the<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>taking<sp/>into<sp/>account<sp/>the<sp/>final<sp/>dawg_score<sp/>and<sp/>a<sp/>more<sp/>precise<sp/>shape<sp/>cost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>While<sp/>constructing<sp/>the<sp/>paths<sp/>we<sp/>assume<sp/>that<sp/>they<sp/>are<sp/>all<sp/>dictionary<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(since<sp/>a<sp/>single<sp/>character<sp/>would<sp/>be<sp/>a<sp/>valid<sp/>dictionary<sp/>word).<sp/>At<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>compute<sp/>dawg_score<sp/>which<sp/>reflects<sp/>how<sp/>many<sp/>characters<sp/>on<sp/>the<sp/>path<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;covered&quot;<sp/>by<sp/>dictionary<sp/>words<sp/>of<sp/>length<sp/>&gt;<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;associate_stats.full_wh_ratio_var<sp/>!=<sp/>0.0f<sp/>||</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(dict_-&gt;GetMaxFixedLengthDawgIndex()<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>dawg_score<sp/>&lt;<sp/>1.0f))<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/>vse-&gt;cost<sp/>=<sp/>ComputeAdjustedPathCost(</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;ratings_sum,<sp/>vse-&gt;length,<sp/>dawg_score,<sp/>vse-&gt;dawg_info,</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;ngram_info,<sp/>vse-&gt;consistency_info,<sp/>vse-&gt;associate_stats,</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_vse);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Updated<sp/>vse<sp/>cost<sp/>to<sp/>%g<sp/>(dawg_score<sp/>%g<sp/>full_wh_ratio_var<sp/>%g)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;cost,<sp/>dawg_score,<sp/>vse-&gt;associate_stats.full_wh_ratio_var);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>best<sp/>choice<sp/>and<sp/>best<sp/>char<sp/>choices<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(daria):<sp/>re-write<sp/>AcceptableChoice()<sp/>and<sp/>NoDangerousAmbig()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>fit<sp/>better<sp/>into<sp/>the<sp/>new<sp/>segmentation<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8536420fe62adffbfda94a08796db533" kindref="member">set_rating</ref>(vse-&gt;cost);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>()<sp/>&lt;<sp/>best_choice_bundle-&gt;best_choice-&gt;rating()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>not_blaming)<sp/>{</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>dict_-&gt;LogNewChoice(vse-&gt;cost<sp/>/<sp/>(language_model_ngram_on<sp/>?</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;ngram_info-&gt;ngram_cost<sp/>:</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;ratings_sum),</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>certainties,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>word,<sp/>temp_best_char_choices);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>rating<sp/>of<sp/>the<sp/>word<sp/>could<sp/>have<sp/>been<sp/>modified<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Dict::LogNewChoice()<sp/>-<sp/>check<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>()<sp/>&lt;<sp/>best_choice_bundle-&gt;best_choice-&gt;rating())<sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>modified_blobs;<sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">DANGERR</ref><sp/>fixpt;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;AcceptableChoice(&amp;temp_best_char_choices,<sp/>word,<sp/>&amp;fixpt,</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stopper_8h_1a1902ef46a46c64df98f9a99f6368e4f6ab3ee8ad8499dfa102c04e8cb8cb41cdc" kindref="member">ASSOCIATOR_CALLER</ref>,<sp/>&amp;modified_blobs)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AcceptablePath(*vse))<sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acceptable_choice_found_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>best_choice_bundle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*(best_choice_bundle-&gt;best_choice)<sp/>=<sp/>*word;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;updated<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_char_choices-&gt;delete_data_pointers();</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_char_choices-&gt;clear();</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>temp_best_char_choices.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOB_CHOICE_LIST<sp/>*cc_list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BLOB_CHOICE_LIST();</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_list-&gt;deep_copy(temp_best_char_choices[i],<sp/>&amp;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1af3f12ffe754a76bf2abbb82a001336f9" kindref="member">BLOB_CHOICE::deep_copy</ref>);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_char_choices-&gt;push_back(cc_list);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_state-&gt;part2<sp/>=<sp/>temp_state.<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref>;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_state-&gt;part1<sp/>=<sp/>temp_state.<ref refid="struct_s_t_a_t_e_1a2099a72d99d2ba5f828ad8538d328f4b" kindref="member">part1</ref>;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Updated<sp/>best<sp/>choice\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="states_8cpp_1acb25e4d3e4da45c03f24fa3fcada7a98" kindref="member">print_state</ref>(</highlight><highlight class="stringliteral">&quot;New<sp/>state<sp/>&quot;</highlight><highlight class="normal">,<sp/>best_choice_bundle-&gt;best_state,</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>()-1);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>hyphen<sp/>state<sp/>if<sp/>we<sp/>are<sp/>dealing<sp/>with<sp/>a<sp/>dictionary<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>dict_-&gt;GetMaxFixedLengthDawgIndex()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;has_hyphen_end(*word))<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;set_hyphen_word(*word,<sp/>*(dawg_args_-&gt;active_dawgs),</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(dawg_args_-&gt;constraints));</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;reset_hyphen_vars(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_vse<sp/>=<sp/>vse;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_b<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;fixpt<sp/>=<sp/>fixpt;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blamer_bundle<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a16968ea622a20067f95506256929ed4b" kindref="member">best_choice_is_dict_and_top_choice</ref><sp/>=</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(vse-&gt;dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;GetMaxFixedLengthDawgIndex()<sp/>&lt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(vse-&gt;top_choice_flags));</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blamer_bundle<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>the<sp/>current<sp/>hypothesis<sp/>in<sp/>params_training_bundle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>ParamsTrainingHypothesis<sp/>&amp;hyp<sp/>=</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a9a15ffb5fc2615b1adec28e9c92ba454" kindref="member">params_training_bundle</ref>.<ref refid="classtesseract_1_1_params_training_bundle_1a21f93637afcb15dca1c65b52377242b1" kindref="member">AddHypothesis</ref>();</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1acea958562bc7123b36f0089be7b8388e" kindref="member">string_and_lengths</ref>(&amp;(hyp.str),<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>ExtractRawFeaturesFromPath(*vse,<sp/>hyp.features);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(truth_path<sp/>&amp;&amp;<sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>best<sp/>truth<sp/>path<sp/>rating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>()<sp/>&lt;<sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1ab0e0f1f12423cd918ff0b9ff87f9f79c" kindref="member">best_correctly_segmented_rating</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1ab0e0f1f12423cd918ff0b9ff87f9f79c" kindref="member">best_correctly_segmented_rating</ref><sp/>=<sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a52ea24dcb5ff15ad8aee3fd774622216" kindref="member">rating</ref>();</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>certainties;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>word;</highlight></codeline>
<codeline lineno="1328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::ExtractRawFeaturesFromPath(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViterbiStateEntry<sp/>&amp;vse,</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*features)<sp/>{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>=<sp/>0;<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&lt;<sp/><ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da27e18c8c402b13298ff918b89d124de7" kindref="member">PTRAIN_NUM_RAW_FEATURE_TYPES</ref>;<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>features[<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Dictionary-related<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse.dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201dacd140429d67d9693f3fda1f6a825a884" kindref="member">PTRAIN_RAW_FEATURE_DICT_MATCH_TYPE</ref>]<sp/>=<sp/>vse.dawg_info-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a161ac137df2d063a6421728e6aa08fcb" kindref="member">permuter</ref>;</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>as<sp/>unambiguous<sp/>if<sp/>unambig_dawg<sp/>is<sp/>found<sp/>among<sp/>active<sp/>dawgs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>vse.dawg_info-&gt;active_dawgs-&gt;size();<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;GetDawg(vse.dawg_info-&gt;active_dawgs-&gt;get(d).dawg_index)<sp/>==</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;GetUnambigDawg())<sp/>{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da08e0de66071fb1ba4f2d3f912004c6f8" kindref="member">PTRAIN_RAW_FEATURE_UNAMBIG_DICT_MATCH</ref>]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse.associate_stats.shape_cost<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201daa46c926f4a2c65322a00a66e951add14" kindref="member">PTRAIN_RAW_FEATURE_SHAPE_COST</ref>]<sp/>=<sp/>vse.associate_stats.shape_cost;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_ngram_on)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(vse.ngram_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da01c7e571e706110832d5cd5f78bc81cc" kindref="member">PTRAIN_RAW_FEATURE_NGRAM_PROB</ref>]<sp/>=<sp/>vse.ngram_info-&gt;ngram_prob;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Consistency-related<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da176875b762342c79ad8ffc309060b4cf" kindref="member">PTRAIN_RAW_FEATURE_NUM_BAD_PUNC</ref>]<sp/>=</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vse.consistency_info.NumInconsistentPunc();</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da8e423948ec64f3e4dd2caacc51ff314a" kindref="member">PTRAIN_RAW_FEATURE_NUM_BAD_CASE</ref>]<sp/>=</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vse.consistency_info.NumInconsistentCase();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da3b60a17235a0e398ee7f24ab53988af3" kindref="member">PTRAIN_RAW_FEATURE_NUM_BAD_CHAR_TYPE</ref>]<sp/>=</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vse.consistency_info.NumInconsistentChartype();</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da6b9fdbe80a3187a598bd6c7d644f8372" kindref="member">PTRAIN_RAW_FEATURE_NUM_BAD_SPACING</ref>]<sp/>=</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vse.consistency_info.NumInconsistentSpaces();</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da115356a10135d2e4e0df288ce036a6f9" kindref="member">PTRAIN_RAW_FEATURE_NUM_BAD_SCRIPT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vse.consistency_info.inconsistent_script;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da5e1ad5280e13132334f8366967e9b9de" kindref="member">PTRAIN_RAW_FEATURE_NUM_BAD_FONT</ref>]<sp/>=</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vse.consistency_info.inconsistent_font;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Classifier-related<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da36fc854c77aa623c958c425fe9692aaf" kindref="member">PTRAIN_RAW_FEATURE_WORST_CERT</ref>]<sp/>=<sp/>vse.min_certainty;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da59df71be0d2cc74afd2ffd44ae1e3b7b" kindref="member">PTRAIN_RAW_FEATURE_RATING</ref>]<sp/>=<sp/>vse.ratings_sum;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da2d97330d026c3f7abe7764861755734d" kindref="member">PTRAIN_RAW_FEATURE_ADAPTED</ref>]<sp/>=<sp/>vse.adapted;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalization-related<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201dafbf18c7a9ae9c7ec2d07b74bb0c5b66b" kindref="member">PTRAIN_RAW_FEATURE_NUM_UNICHARS</ref>]<sp/>=<sp/>vse.length;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/>features[<ref refid="namespacetesseract_1aef0571cbf979bd53d4bf81882d71201da969d4c6ed75f9afc59a5bdd06e5d19bb" kindref="member">PTRAIN_RAW_FEATURE_OUTLINE_LEN</ref>]<sp/>=<sp/>vse.outline_length;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*LanguageModel::ConstructWord(</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*b,</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/>ViterbiStateEntry<sp/>*vse,</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record,</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">BLOB_CHOICE_LIST_VECTOR</ref><sp/>*best_char_choices,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>certainties[],</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dawg_score,</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>*state,</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref><sp/>*blamer_bundle,</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*truth_path)<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a7b5288262772176824620c2fb01a0abc" kindref="member">uinT64</ref><sp/>state_uint<sp/>=<sp/>0x0;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(truth_path<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/>*truth_path<sp/>=</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blamer_bundle<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1abd75250b96b712d4849cf860f4351166" kindref="member">correct_segmentation_cols</ref>.<ref refid="class_generic_vector_1afb0d8c52a603b6aa965d63bbf06a27dd" kindref="member">empty</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;length<sp/>==<sp/>blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1abd75250b96b712d4849cf860f4351166" kindref="member">correct_segmentation_cols</ref>.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>());</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a7b5288262772176824620c2fb01a0abc" kindref="member">uinT64</ref><sp/>kHighestBitOn<sp/>=<sp/>0x8000000000000000LL;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*curr_b<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/>LanguageModelState<sp/>*curr_lms<sp/>=</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>());</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/>ViterbiStateEntry<sp/>*curr_vse<sp/>=<sp/>vse;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compound<sp/>=<sp/>dict_-&gt;hyphenated();<sp/><sp/></highlight><highlight class="comment">//<sp/>treat<sp/>hyphenated<sp/>words<sp/>as<sp/>compound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>dawg_score_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_score<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>*dawg_score<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>space-delimited<sp/>languages<sp/>the<sp/>presence<sp/>of<sp/>dawg_info<sp/>in<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ViterbyStateEntry<sp/>on<sp/>the<sp/>path<sp/>means<sp/>that<sp/>the<sp/>whole<sp/>path<sp/>represents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>valid<sp/>dictionary<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;GetMaxFixedLengthDawgIndex()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>*dawg_score<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;length<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dawg_score<sp/>=<sp/>1.0f;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>one-letter<sp/>word<sp/>is<sp/>legal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_score_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>non-space<sp/>delimited<sp/>languages</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dawg_score_done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>more<sp/>work<sp/>to<sp/>compute<sp/>dawg_score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>non-space<sp/>delimited<sp/>languages<sp/>we<sp/>compute<sp/>the<sp/>fraction<sp/>of<sp/>letters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;covered&quot;<sp/>by<sp/>fixed<sp/>length<sp/>dawgs<sp/>(i.e.<sp/>words<sp/>of<sp/>length<sp/>&gt;<sp/>1<sp/>on<sp/>the<sp/>path).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>covered_by_fixed_length_dawgs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>number<sp/>of<sp/>unichars<sp/>remaining<sp/>that<sp/>should<sp/>be<sp/>skipped<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>are<sp/>covered<sp/>by<sp/>the<sp/>previous<sp/>word<sp/>from<sp/>fixed<sp/>length<sp/>dawgs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fixed_length_num_unichars_to_skip<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-compute<sp/>the<sp/>variance<sp/>of<sp/>the<sp/>width-to-height<sp/>ratios<sp/>(since<sp/>we<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>compute<sp/>the<sp/>mean<sp/>over<sp/>the<sp/>whole<sp/>word).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>full_wh_ratio_mean<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;associate_stats.full_wh_ratio_var<sp/>!=<sp/>0.0f)<sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>vse-&gt;associate_stats.shape_cost<sp/>-=<sp/>vse-&gt;associate_stats.full_wh_ratio_var;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>full_wh_ratio_mean<sp/>=<sp/>(vse-&gt;associate_stats.full_wh_ratio_total<sp/>/</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vse-&gt;length));</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>vse-&gt;associate_stats.full_wh_ratio_var<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>WERD_CHOICE<sp/>by<sp/>tracing<sp/>parent<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref><sp/>*word<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>(chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1aa3826aaf2a5a7a76b000859ace1f8602" kindref="member">word_res</ref>-&gt;<ref refid="class_w_e_r_d___r_e_s_1a053a2aeeddc26a93a41a04fa08dd688a" kindref="member">uch_set</ref>,</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;length);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1af62059b10a06634f0cdcccb07b906193" kindref="member">set_length</ref>(vse-&gt;length);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>(vse-&gt;length-1);<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blamer_bundle<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>truth_path<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>*truth_path)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1abd75250b96b712d4849cf860f4351166" kindref="member">correct_segmentation_cols</ref>[i]<sp/>!=</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_lms-&gt;contained_in_col)<sp/>||</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blamer_bundle-&gt;<ref refid="struct_blamer_bundle_1a7c72b769992bbd6fd8ae5bac480f62b3" kindref="member">correct_segmentation_rows</ref>[i]<sp/>!=</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_lms-&gt;contained_in_row))<sp/>{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*truth_path<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8238d436806c40b2e01b9659dfab5eb3" kindref="member">set_unichar_id</ref>(curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>(),<sp/>i);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1aa40016768c05f59132378a876e536541" kindref="member">set_fragment_length</ref>(1,<sp/>i);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(certainties<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>certainties[i]<sp/>=<sp/>curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1af53d45b718c562ea7209b583c77ac14e" kindref="member">certainty</ref>();</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_char_choices<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_char_choices-&gt;<ref refid="class_generic_vector_1a067b7833ee66238b7b5e230404525fcb" kindref="member">set</ref>(chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y_1ac2361d09d80314d64330578d8e162566" kindref="member">get</ref>(</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_lms-&gt;contained_in_col,<sp/>curr_lms-&gt;contained_in_row),<sp/>i);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>row<sp/>minus<sp/>col<sp/>zeroes<sp/>in<sp/>the<sp/>reverse<sp/>state<sp/>to<sp/>mark<sp/>the<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>joins<sp/>done<sp/>by<sp/>using<sp/>a<sp/>blob<sp/>from<sp/>this<sp/>cell<sp/>in<sp/>the<sp/>ratings<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state_uint<sp/>&gt;&gt;=<sp/>(curr_lms-&gt;contained_in_row<sp/>-<sp/>curr_lms-&gt;contained_in_col);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>a<sp/>one<sp/>in<sp/>the<sp/>reverse<sp/>state<sp/>to<sp/>indicate<sp/>the<sp/>split<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>blob<sp/>from<sp/>the<sp/>next<sp/>cell<sp/>in<sp/>the<sp/>ratings<sp/>matrix<sp/>(unless<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>first<sp/>cell,<sp/>in<sp/>which<sp/>case<sp/>there<sp/>is<sp/>no<sp/>next<sp/>blob).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_uint<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_uint<sp/>|=<sp/>kHighestBitOn;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>non-space<sp/>delimited<sp/>languages:<sp/>find<sp/>word<sp/>endings<sp/>recorded<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>to<sp/>separate<sp/>the<sp/>current<sp/>path<sp/>into<sp/>words<sp/>(for<sp/>words<sp/>found<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fixed<sp/>length<sp/>dawgs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dawg_score_done<sp/>&amp;&amp;<sp/>curr_vse-&gt;dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateCoveredByFixedLengthDawgs(*(curr_vse-&gt;dawg_info-&gt;active_dawgs),</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>vse-&gt;length,</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fixed_length_num_unichars_to_skip,</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;covered_by_fixed_length_dawgs,</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_score,<sp/>&amp;dawg_score_done);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>width-to-height<sp/>ratio<sp/>variance.<sp/>Useful<sp/>non-space<sp/>delimited</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>languages<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>blobs<sp/>are<sp/>of<sp/>uniform<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>leading<sp/>and<sp/>trailing<sp/>punctuation<sp/>when<sp/>computing<sp/>the<sp/>variance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((full_wh_ratio_mean<sp/>!=<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((curr_vse<sp/>!=<sp/>vse<sp/>&amp;&amp;<sp/>curr_vse-&gt;parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!dict_-&gt;getUnicharset().get_ispunctuation(curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>()))))<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;associate_stats.full_wh_ratio_var<sp/>+=</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pow(full_wh_ratio_mean<sp/>-<sp/>curr_vse-&gt;associate_stats.full_wh_ratio,<sp/>2);</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;full_wh_ratio_var<sp/>+=<sp/>(%g-%g)^2\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_wh_ratio_mean,<sp/>curr_vse-&gt;associate_stats.full_wh_ratio);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>the<sp/>word<sp/>as<sp/>compound<sp/>if<sp/>compound<sp/>permuter<sp/>was<sp/>set<sp/>for<sp/>any<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>unichars<sp/>on<sp/>the<sp/>path<sp/>(usually<sp/>this<sp/>will<sp/>happen<sp/>for<sp/>unichars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>are<sp/>compounding<sp/>operators,<sp/>like<sp/>&quot;-&quot;<sp/>and<sp/>&quot;/&quot;).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!compound<sp/>&amp;&amp;<sp/>curr_vse-&gt;dawg_info<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_vse-&gt;dawg_info-&gt;permuter<sp/>==<sp/>COMPOUND_PERM)<sp/>compound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>curr_*<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_vse-&gt;parent_b<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_b<sp/>=<sp/>curr_vse-&gt;parent_b;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_lms<sp/>=</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>());</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_vse<sp/>=<sp/>curr_vse-&gt;parent_vse;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(i<sp/>==<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>we<sp/>recorded<sp/>all<sp/>the<sp/>unichar<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-adjust<sp/>shape<sp/>cost<sp/>to<sp/>include<sp/>the<sp/>updated<sp/>width-to-height<sp/>variance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(full_wh_ratio_mean<sp/>!=<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>vse-&gt;associate_stats.shape_cost<sp/>+=<sp/>vse-&gt;associate_stats.full_wh_ratio_var;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>state_uint<sp/>&gt;&gt;=<sp/>(64<sp/>-<sp/>(chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>()-1));</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref><sp/>=<sp/>state_uint;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>state_uint<sp/>&gt;&gt;=<sp/>32;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a2099a72d99d2ba5f828ad8538d328f4b" kindref="member">part1</ref><sp/>=<sp/>state_uint;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a8536420fe62adffbfda94a08796db533" kindref="member">set_rating</ref>(vse-&gt;ratings_sum);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a0d8b3f73cb02eb5f6e492ffd1304fe85" kindref="member">set_certainty</ref>(vse-&gt;min_certainty);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>dict_-&gt;GetMaxFixedLengthDawgIndex()<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a162d90ae016fbf55256591bbf01c0c03" kindref="member">set_permuter</ref>(compound<sp/>?<sp/>COMPOUND_PERM<sp/>:<sp/>vse-&gt;dawg_info-&gt;permuter);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_ngram_on<sp/>&amp;&amp;<sp/>!vse-&gt;ngram_info-&gt;pruned)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a162d90ae016fbf55256591bbf01c0c03" kindref="member">set_permuter</ref>(NGRAM_PERM);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;top_choice_flags)<sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a162d90ae016fbf55256591bbf01c0c03" kindref="member">set_permuter</ref>(TOP_CHOICE_PERM);</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>word-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a162d90ae016fbf55256591bbf01c0c03" kindref="member">set_permuter</ref>(NO_PERM);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>word;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::UpdateCoveredByFixedLengthDawgs(</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DawgInfoVector<sp/>&amp;active_dawgs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_length,</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*skip,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*covered,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dawg_score,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*dawg_score_done)<sp/>{</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;UpdateCoveredByFixedLengthDawgs<sp/>for<sp/>index<sp/>%d<sp/>skip=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_index,<sp/>*skip,<sp/>word_length);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*skip<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/>--(*skip);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_index<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>active_dawgs.size();<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dawg_index<sp/>=<sp/>(active_dawgs[d]).dawg_index;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_index<sp/>&gt;<sp/>dict_-&gt;GetMaxFixedLengthDawgIndex())<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>active_dawgs<sp/>of<sp/>the<sp/>last<sp/>ViterbiStateEntry<sp/>on<sp/>the<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>contain<sp/>a<sp/>non-fixed<sp/>length<sp/>dawg,<sp/>this<sp/>means<sp/>that<sp/>the<sp/>whole</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>path<sp/>represents<sp/>a<sp/>word<sp/>from<sp/>a<sp/>non-fixed<sp/>length<sp/>word<sp/>dawg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_index<sp/>==<sp/>(word_length<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dawg_score<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dawg_score_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dawg_index<sp/>&gt;=<sp/>kMinFixedLengthDawgLength)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Dawg<sp/>*curr_dawg<sp/>=<sp/>dict_-&gt;GetDawg(dawg_index);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(curr_dawg<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((active_dawgs[d]).ref<sp/>!=<sp/>NO_EDGE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_dawg-&gt;end_of_word((active_dawgs[d]).ref)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dawg_index<sp/>&gt;<sp/>best_index)<sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_index<sp/>=<sp/>dawg_index;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;dawg_index<sp/>%d,<sp/>ref<sp/>%d,<sp/>eow<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>dawg_index,</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(active_dawgs[d]).ref,</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((active_dawgs[d]).ref<sp/>!=<sp/>NO_EDGE<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_dawg-&gt;end_of_word((active_dawgs[d]).ref)));</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_index<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*skip<sp/>=<sp/>best_index<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*covered<sp/>+=<sp/>best_index;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>if/else<sp/>skip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(word_index<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(*covered<sp/>&lt;=<sp/>word_length);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>*dawg_score<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(*covered)<sp/>/</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(word_length));</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>*dawg_score_done<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::GeneratePainPointsFromColumn(</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>&amp;non_empty_rows,</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>best_choice_cert,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*pain_points,</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/>BestPathByColumn<sp/>*best_path_by_column[],</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record)<sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>non_empty_rows.<ref refid="class_generic_vector_1a690cd403343d371ed7763fdaf3ed71d2" kindref="member">length</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>non_empty_rows[i];</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nLooking<sp/>for<sp/>pain<sp/>points<sp/>in<sp/>col=%d<sp/>row=%d\n&quot;</highlight><highlight class="normal">,<sp/>col,<sp/>row);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_ngram_on)<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GenerateNgramModelPainPointsFromColumn(</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col,<sp/>row,<sp/>pain_points,<sp/>chunks_record);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GenerateProblematicPathPainPointsFromColumn(</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col,<sp/>row,<sp/>best_choice_cert,<sp/>pain_points,</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_path_by_column,<sp/>chunks_record);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::GenerateNgramModelPainPointsFromColumn(</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*pain_points,<sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record)<sp/>{</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>top<sp/>choice<sp/>path<sp/>recorded<sp/>for<sp/>this<sp/>cell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>path<sp/>is<sp/>pruned<sp/>-<sp/>generate<sp/>a<sp/>pain<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y_1ac2361d09d80314d64330578d8e162566" kindref="member">get</ref>(col,<sp/>row)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>bit(chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y_1ac2361d09d80314d64330578d8e162566" kindref="member">get</ref>(col,<sp/>row));</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fragmented<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bit.mark_cycle_pt();<sp/>!bit.cycled_list();<sp/>bit.forward())<sp/>{</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_-&gt;getUnicharset().get_fragment(bit.data()-&gt;unichar_id()))<sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fragmented<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>LanguageModelState<sp/>*lms<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit.data()-&gt;language_model_state());</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lms<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/>ViterbiStateEntry_IT<sp/>vit(&amp;(lms-&gt;viterbi_state_entries));</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(vit.mark_cycle_pt();<sp/>!vit.cycled_list();<sp/>vit.forward())<sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ViterbiStateEntry<sp/>*vse<sp/>=<sp/>vit.data();</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vse-&gt;top_choice_flags)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(vse-&gt;ngram_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;ngram_info-&gt;pruned<sp/>&amp;&amp;<sp/>(vse-&gt;parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!vse-&gt;parent_vse-&gt;ngram_info-&gt;pruned))<sp/>{</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LanguageModelState<sp/>*pp_lms<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_b-&gt;language_model_state());</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(pp_lms-&gt;contained_in_col,<sp/>row,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kDefaultPainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0f,<sp/>fragmented,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_vse-&gt;parent_b,</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_vse-&gt;parent_vse,</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_vse-&gt;parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;getUnicharset().get_ispunctuation(</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_b-&gt;unichar_id()))<sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>dip<sp/>in<sp/>the<sp/>ngram<sp/>probability<sp/>is<sp/>due<sp/>to<sp/>punctuation<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>middle<sp/>of<sp/>the<sp/>word<sp/>-<sp/>go<sp/>two<sp/>unichars<sp/>back<sp/>to<sp/>combine<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>punctuation<sp/>mark<sp/>with<sp/>the<sp/>previous<sp/>character<sp/>on<sp/>the<sp/>path.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LanguageModelState<sp/>*pp_lms<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_vse-&gt;parent_b-&gt;language_model_state());</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(pp_lms-&gt;contained_in_col,<sp/>col-1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kDefaultPainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0f,<sp/>fragmented,<sp/>-1.0f,</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_vse-&gt;parent_vse-&gt;parent_b,</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_vse-&gt;parent_vse-&gt;parent_vse,</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row+1<sp/>&lt;<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(col,<sp/>row+1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kDefaultPainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>fragmented,<sp/>-1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_b,</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vse-&gt;parent_vse,</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>examined<sp/>the<sp/>lowest<sp/>cost<sp/>top<sp/>choice<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::GenerateProblematicPathPainPointsFromColumn(</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>best_choice_cert,</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*pain_points,<sp/>BestPathByColumn<sp/>*best_path_by_column[],</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record)<sp/>{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref><sp/>*ratings<sp/>=<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>best<sp/>path<sp/>from<sp/>this<sp/>matrix<sp/>cell.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_LIST<sp/>*blist<sp/>=<sp/>ratings-&gt;<ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y_1ac2361d09d80314d64330578d8e162566" kindref="member">get</ref>(col,<sp/>row);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(blist<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blist-&gt;empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>bit(blist);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fragment<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(dict_-&gt;getUnicharset().get_fragment(bit.data()-&gt;unichar_id())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!bit.at_last())<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>fragments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>fragment<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>bit.forward();</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit.data()-&gt;language_model_state()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/>ViterbiStateEntry_IT<sp/>vit(&amp;(reinterpret_cast&lt;LanguageModelState<sp/>*&gt;(</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bit.data()-&gt;language_model_state())-&gt;viterbi_state_entries));</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vit.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/>ViterbiStateEntry<sp/>*vse<sp/>=<sp/>vit.data();</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>this<sp/>path<sp/>is<sp/>promising.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>path_is_promising<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vse-&gt;parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>potential_avg_cost<sp/>=</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>((vse-&gt;parent_vse-&gt;cost<sp/>+<sp/>bit.data()-&gt;rating()*0.5f)<sp/>/</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;float&gt;(row+1));</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;potential_avg_cost<sp/>%g<sp/>best<sp/>cost<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potential_avg_cost,<sp/>(*best_path_by_column)[col].avg_cost);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(potential_avg_cost<sp/>&gt;=<sp/>(*best_path_by_column)[col].avg_cost)<sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>path_is_promising<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>best_parent_vse<sp/>to<sp/>the<sp/>best<sp/>parent<sp/>recorded<sp/>in<sp/>best_path_by_column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/>ViterbiStateEntry<sp/>*best_parent_vse<sp/>=<sp/>vse-&gt;parent_vse;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*best_parent_b<sp/>=<sp/>vse-&gt;parent_b;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(*best_path_by_column)[col-1].best_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>((*best_path_by_column)[col-1].best_b<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>LanguageModelState<sp/>*best_lms<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((*best_path_by_column)[col-1].best_b)-&gt;language_model_state());</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_lms-&gt;contained_in_row<sp/>==<sp/>col-1)<sp/>{</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_parent_vse<sp/>=<sp/>(*best_path_by_column)[col-1].best_vse;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_parent_b<sp/>=<sp/>(*best_path_by_column)[col-1].best_b;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Setting<sp/>best_parent_vse<sp/>to<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>best_parent_vse);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>whether<sp/>this<sp/>entry<sp/>terminates<sp/>the<sp/>best<sp/>parent<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>recorded<sp/>in<sp/>best_path_by_column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>best_not_prolonged<sp/>=<sp/>(best_parent_vse<sp/>!=<sp/>vse-&gt;parent_vse);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>path<sp/>is<sp/>problematic<sp/>because<sp/>of<sp/>the<sp/>last<sp/>unichar<sp/>-<sp/>generate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>pain<sp/>point<sp/>to<sp/>combine<sp/>it<sp/>with<sp/>its<sp/>left<sp/>and<sp/>right<sp/>neighbor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/>BLOB_CHOICE_IT<sp/>tmp_bit;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_not_prolonged<sp/>||</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(path_is_promising<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProblematicPath(*vse,<sp/>bit.data()-&gt;unichar_id(),</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row+1<sp/>==<sp/>ratings-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>())))<sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worst_piece_cert;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fragmented;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col-1<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetWorstPieceCertainty(col-1,<sp/>row,<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>,</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;worst_piece_cert,<sp/>&amp;fragmented);</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(col-1,<sp/>row,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kDefaultPainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_piece_cert,<sp/>fragmented,<sp/>best_choice_cert,</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,<sp/>best_parent_b,<sp/>best_parent_vse,</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row+1<sp/>&lt;<sp/>ratings-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GetWorstPieceCertainty(col,<sp/>row+1,<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>,</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;worst_piece_cert,<sp/>&amp;fragmented);</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(col,<sp/>row+1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>kDefaultPainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_piece_cert,<sp/>fragmented,<sp/>best_choice_cert,</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,<sp/>best_parent_b,<sp/>best_parent_vse,</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>for<sp/>ProblematicPath</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LanguageModel::GeneratePainPointsFromBestChoice(</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*pain_points,</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record,</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>BestChoiceBundle<sp/>*best_choice_bundle)<sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Variables<sp/>to<sp/>backtrack<sp/>best_vse<sp/>path;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/>ViterbiStateEntry<sp/>*curr_vse<sp/>=<sp/>best_choice_bundle-&gt;best_vse;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*curr_b<sp/>=<sp/>best_choice_bundle-&gt;best_b;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Begins<sp/>and<sp/>ends<sp/>in<sp/>DANGERR<sp/>vector<sp/>record<sp/>the<sp/>positions<sp/>in<sp/>the<sp/>blob<sp/>choice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>of<sp/>the<sp/>best<sp/>choice.<sp/>We<sp/>need<sp/>to<sp/>translate<sp/>these<sp/>endpoints<sp/>into<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>beginning<sp/>column<sp/>and<sp/>ending<sp/>row<sp/>for<sp/>the<sp/>pain<sp/>points.<sp/>We<sp/>maintain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>danger_begin<sp/>and<sp/>danger_end<sp/>arrays<sp/>indexed<sp/>by<sp/>the<sp/>position<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>best_choice_bundle-&gt;best_char_choices<sp/>(which<sp/>is<sp/>equal<sp/>to<sp/>the<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>best_choice_bundle-&gt;best_vse<sp/>path).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>danger_end[d]<sp/>stores<sp/>the<sp/>DANGERR_INFO<sp/>structs<sp/>with<sp/>end==d<sp/>and<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialized<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>danger_begin[d]<sp/>stores<sp/>the<sp/>DANGERR_INFO<sp/>struct<sp/>with<sp/>begin==d<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>has<sp/>end<sp/>set<sp/>to<sp/>the<sp/>row<sp/>of<sp/>the<sp/>end<sp/>of<sp/>this<sp/>ambiguity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>translation<sp/>from<sp/>end<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>best<sp/>choice<sp/>index<sp/>to<sp/>the<sp/>end<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>done<sp/>while<sp/>following<sp/>the<sp/>parents<sp/>of<sp/>best_choice_bundle-&gt;best_vse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/>assert(best_choice_bundle-&gt;best_char_choices-&gt;length()<sp/>==</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_vse-&gt;length);</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">DANGERR</ref><sp/>*danger_begin<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">DANGERR</ref><sp/>*danger_end<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!best_choice_bundle-&gt;fixpt.empty())<sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/>danger_begin<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">DANGERR</ref>[best_choice_bundle-&gt;best_vse-&gt;length];</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/>danger_end<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">DANGERR</ref>[best_choice_bundle-&gt;best_vse-&gt;length];</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>best_choice_bundle-&gt;fixpt.size();<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_a_n_g_e_r_r___i_n_f_o" kindref="compound">DANGERR_INFO</ref><sp/>&amp;danger<sp/>=<sp/>best_choice_bundle-&gt;fixpt[d];</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>use<sp/>n-&gt;1<sp/>ambiguities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(danger.<ref refid="struct_d_a_n_g_e_r_r___i_n_f_o_1adfaf65ffc0f21a2fa0cbc56817b2549a" kindref="member">end</ref><sp/>&gt;<sp/>danger.<ref refid="struct_d_a_n_g_e_r_r___i_n_f_o_1a7fb0c9a1b1a22a2b3c308011a207e2c0" kindref="member">begin</ref><sp/>&amp;&amp;<sp/>!danger.<ref refid="struct_d_a_n_g_e_r_r___i_n_f_o_1a6aa009d85760b7acc7bf50158d64a143" kindref="member">correct_is_ngram</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!language_model_ngram_on<sp/>||<sp/>danger.<ref refid="struct_d_a_n_g_e_r_r___i_n_f_o_1af8bd75c848bf8c8c43b4d6ae8350c96b" kindref="member">dangerous</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>danger_end[danger.<ref refid="struct_d_a_n_g_e_r_r___i_n_f_o_1adfaf65ffc0f21a2fa0cbc56817b2549a" kindref="member">end</ref>].<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(danger);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Variables<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>punctuation/number<sp/>streaks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>punc_streak_end_row<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>punc_streak_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>punc_streak_min_cert<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nGenerating<sp/>pain<sp/>points<sp/>for<sp/>best<sp/>path=%p\n&quot;</highlight><highlight class="normal">,<sp/>curr_vse);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_index<sp/>=<sp/>best_choice_bundle-&gt;best_vse-&gt;length;</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(curr_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/>word_index--;</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(word_index<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(curr_b<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Looking<sp/>at<sp/>unichar<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dict_-&gt;getUnicharset().id_to_unichar(curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>()));</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pp_col<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>())-&gt;contained_in_col;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pp_row<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">LanguageModelState<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1abef7562bc0c12fbf7b2a625a0be61a99" kindref="member">language_model_state</ref>())-&gt;contained_in_row;</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>pain<sp/>points<sp/>for<sp/>ambiguities<sp/>found<sp/>by<sp/>NoDangerousAmbig().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(danger_end<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Translate<sp/>end<sp/>index<sp/>of<sp/>an<sp/>ambiguity<sp/>to<sp/>an<sp/>end<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>danger_end[word_index].<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>danger_end[word_index][d].end<sp/>=<sp/>pp_row;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>danger_begin[danger_end[word_index][d].begin].<ref refid="class_generic_vector_1a0dc89fe2a365b04a61017f9d78c1a303" kindref="member">push_back</ref>(</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>danger_end[word_index][d]);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>pain<sp/>point<sp/>to<sp/>combine<sp/>unchars<sp/>in<sp/>the<sp/>&quot;wrong&quot;<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>ambiguity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(d<sp/>=<sp/>0;<sp/>d<sp/>&lt;<sp/>danger_begin[word_index].size();<sp/>++d)<sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Generating<sp/>pain<sp/>point<sp/>from<sp/>%sambiguity\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>danger_begin[word_index][d].dangerous<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;dangerous<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(pp_col,<sp/>danger_begin[word_index][d].end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>danger_begin[word_index][d].dangerous<sp/>?</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kCriticalPainPointPriorityAdjustment<sp/>:</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kBestChoicePainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_choice-&gt;certainty(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_choice-&gt;certainty(),</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kLooseMaxCharWhRatio,</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_vse-&gt;parent_b,<sp/>curr_vse-&gt;parent_vse,</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!language_model_ngram_on)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>use<sp/>further<sp/>heuristics<sp/>if<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>guided<sp/>by<sp/>the<sp/>character<sp/>ngram<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>pain<sp/>points<sp/>for<sp/>problematic<sp/>sub-paths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ProblematicPath(*curr_vse,<sp/>curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>(),</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp_row+1<sp/>==<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Generating<sp/>pain<sp/>point<sp/>from<sp/>a<sp/>problematic<sp/>sub-path\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worst_piece_cert;</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fragment;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pp_col<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWorstPieceCertainty(pp_col-1,<sp/>pp_row,<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>,</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;worst_piece_cert,<sp/>&amp;fragment);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(pp_col-1,<sp/>pp_row,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kBestChoicePainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_piece_cert,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_choice-&gt;certainty(),</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pp_row+1<sp/>&lt;<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetWorstPieceCertainty(pp_col,<sp/>pp_row+1,<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>,</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;worst_piece_cert,<sp/>&amp;fragment);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(pp_col,<sp/>pp_row+1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kBestChoicePainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_piece_cert,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_choice-&gt;certainty(),</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>pain<sp/>point<sp/>if<sp/>we<sp/>encountered<sp/>a<sp/>punctuation/number<sp/>streak<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>combine<sp/>all<sp/>punctuation<sp/>marks<sp/>into<sp/>one<sp/>blob<sp/>and<sp/>try<sp/>to<sp/>classify<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_alpha<sp/>=<sp/>dict_-&gt;getUnicharset().get_isalpha(curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1aaba6190b77c5f3dc21905fc4118afa94" kindref="member">unichar_id</ref>());</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_alpha)<sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(punc_streak_end_row<sp/>==<sp/>-1)<sp/>punc_streak_end_row<sp/>=<sp/>pp_row;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>punc_streak_length++;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1af53d45b718c562ea7209b583c77ac14e" kindref="member">certainty</ref>()<sp/>&lt;<sp/>punc_streak_min_cert)</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>punc_streak_min_cert<sp/>=<sp/>curr_b-&gt;<ref refid="class_b_l_o_b___c_h_o_i_c_e_1af53d45b718c562ea7209b583c77ac14e" kindref="member">certainty</ref>();</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_alpha<sp/>||<sp/>curr_vse-&gt;parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(punc_streak_end_row<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>punc_streak_length<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Generating<sp/>pain<sp/>point<sp/>from<sp/>a<sp/>punctuation<sp/>streak\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_alpha<sp/>||</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(curr_vse-&gt;parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>punc_streak_length<sp/>&gt;<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(pp_row+1,<sp/>punc_streak_end_row,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kBestChoicePainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>punc_streak_min_cert,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_choice-&gt;certainty(),</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,<sp/>curr_b,<sp/>curr_vse,</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>punctuation/number<sp/>streaks<sp/>starting<sp/>from<sp/>the<sp/>first<sp/>unichar.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(curr_vse-&gt;parent_vse<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GeneratePainPoint(0,<sp/>punc_streak_end_row,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kBestChoicePainPointPriorityAdjustment,</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>punc_streak_min_cert,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_choice_bundle-&gt;best_choice-&gt;certainty(),</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_char_wh_ratio_,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>pain_points);</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>punc_streak_end_row<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>punc_streak_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>punc_streak_min_cert<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>handling<sp/>punctuation<sp/>streaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_b<sp/>=<sp/>curr_vse-&gt;parent_b;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/>curr_vse<sp/>=<sp/>curr_vse-&gt;parent_vse;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>looking<sp/>at<sp/>best<sp/>choice<sp/>subpaths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(danger_end<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>danger_begin;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>danger_end;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LanguageModel::GeneratePainPoint(</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok_to_extend,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>priority,</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>worst_piece_cert,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fragmented,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>best_choice_cert,</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_char_wh_ratio,</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref><sp/>*parent_b,<sp/>ViterbiStateEntry<sp/>*parent_vse,</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref><sp/>*chunks_record,<sp/><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref><sp/>*pain_points)<sp/>{</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>&lt;<sp/>0<sp/>||<sp/>row<sp/>&gt;=<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>()<sp/>||</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y_1ac2361d09d80314d64330578d8e162566" kindref="member">get</ref>(col,<sp/>row)<sp/>!=<sp/><ref refid="matrix_8h_1a5c21a86b19e78482e6c7384c47c2457d" kindref="member">NOT_CLASSIFIED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\nGenerating<sp/>pain<sp/>point<sp/>for<sp/>col=%d<sp/>row=%d<sp/>priority=%g<sp/>parent=&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col,<sp/>row,<sp/>priority);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PrintViterbiStateEntry(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>parent_vse,<sp/>parent_b,<sp/>chunks_record);</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/>AssociateStats<sp/>associate_stats;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/>ComputeAssociateStats(col,<sp/>row,<sp/>max_char_wh_ratio,<sp/>parent_vse,</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>&amp;associate_stats);</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>fixed-pitch<sp/>fonts/languages:<sp/>if<sp/>the<sp/>current<sp/>combined<sp/>blob<sp/>overlaps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>blob<sp/>on<sp/>the<sp/>right<sp/>and<sp/>it<sp/>is<sp/>ok<sp/>to<sp/>extend<sp/>the<sp/>blob,<sp/>try<sp/>expending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>blob<sp/>until<sp/>there<sp/>is<sp/>no<sp/>overlap<sp/>with<sp/>the<sp/>next<sp/>blob<sp/>on<sp/>the<sp/>right<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>the<sp/>width-to-height<sp/>ratio<sp/>becomes<sp/>too<sp/>large.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok_to_extend)<sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(associate_stats.bad_fixed_pitch_right_gap<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row+1<sp/>&lt;<sp/>chunks_record-&gt;<ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d_1a0b28a4ba4a1c931ed994847db83e0ef5" kindref="member">ratings</ref>-&gt;<ref refid="class_g_e_n_e_r_i_c___m_a_t_r_i_x_1acaa00626e03fae7b31f5f08f7f48005b" kindref="member">dimension</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!associate_stats.bad_fixed_pitch_wh_ratio)<sp/>{</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ComputeAssociateStats(col,<sp/>++row,<sp/>max_char_wh_ratio,<sp/>parent_vse,</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunks_record,<sp/>&amp;associate_stats);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(associate_stats.bad_shape)<sp/>{</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Discarded<sp/>pain<sp/>point<sp/>with<sp/>a<sp/>bad<sp/>shape\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>pain<sp/>point<sp/>priority.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(associate_stats.shape_cost<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/>priority<sp/>*=<sp/>associate_stats.shape_cost;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(worst_piece_cert<sp/>&lt;<sp/>best_choice_cert)<sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/>worst_piece_cert<sp/>=<sp/>best_choice_cert;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/>priority<sp/>*=<sp/>CertaintyScore(worst_piece_cert);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fragmented)<sp/>priority<sp/>/=<sp/>kDefaultPainPointPriorityAdjustment;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;worst_piece_cert=%g<sp/>fragmented=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>worst_piece_cert,<sp/>fragmented);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/>priority<sp/>*=<sp/>sqrt(parent_vse-&gt;cost<sp/>/<sp/>static_cast&lt;float&gt;(col));</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse-&gt;dawg_info<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>/=<sp/>kDefaultPainPointPriorityAdjustment;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_vse-&gt;length<sp/>&gt;<sp/>language_model_min_compound_length)<sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority<sp/>/=<sp/>sqrt(static_cast&lt;double&gt;(parent_vse-&gt;length));</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><ref refid="struct_m_a_t_r_i_x___c_o_o_r_d" kindref="compound">MATRIX_COORD</ref><sp/>*pain_point<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_m_a_t_r_i_x___c_o_o_r_d" kindref="compound">MATRIX_COORD</ref>(col,<sp/>row);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="oldheap_8cpp_1a21d28375a456d5c0238134a101e0236a" kindref="member">HeapPushCheckSize</ref>(pain_points,<sp/>priority,<sp/>pain_point))<sp/>{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level)<sp/>{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Added<sp/>pain<sp/>point<sp/>with<sp/>priority<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>priority);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pain_point;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(language_model_debug_level)<sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Pain<sp/>points<sp/>heap<sp/>is<sp/>full\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/wordrec/language_model.cpp"/>
  </compounddef>
</doxygen>
