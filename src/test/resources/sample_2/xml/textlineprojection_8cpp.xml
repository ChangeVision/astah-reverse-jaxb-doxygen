<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="textlineprojection_8cpp" kind="file">
    <compoundname>textlineprojection.cpp</compoundname>
    <includes refid="textlineprojection_8h" local="yes">textlineprojection.h</includes>
    <includes local="yes">allheaders.h</includes>
    <includes refid="bbgrid_8h" local="yes">bbgrid.h</includes>
    <includes refid="blobbox_8h" local="yes">blobbox.h</includes>
    <includes refid="blobs_8h" local="yes">blobs.h</includes>
    <includes refid="colpartition_8h" local="yes">colpartition.h</includes>
    <includes refid="normalis_8h" local="yes">normalis.h</includes>
    <incdepgraph>
      <node id="39875">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="39843" relation="include">
        </childnode>
        <childnode refid="39876" relation="include">
        </childnode>
        <childnode refid="39877" relation="include">
        </childnode>
        <childnode refid="39882" relation="include">
        </childnode>
        <childnode refid="39889" relation="include">
        </childnode>
      </node>
      <node id="39895">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="39841" relation="include">
        </childnode>
        <childnode refid="39843" relation="include">
        </childnode>
        <childnode refid="39860" relation="include">
        </childnode>
        <childnode refid="39876" relation="include">
        </childnode>
        <childnode refid="39864" relation="include">
        </childnode>
        <childnode refid="39842" relation="include">
        </childnode>
      </node>
      <node id="39865">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="39842">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="39843" relation="include">
        </childnode>
        <childnode refid="39856" relation="include">
        </childnode>
        <childnode refid="39864" relation="include">
        </childnode>
        <childnode refid="39866" relation="include">
        </childnode>
        <childnode refid="39874" relation="include">
        </childnode>
      </node>
      <node id="39889">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39845" relation="include">
        </childnode>
        <childnode refid="39866" relation="include">
        </childnode>
      </node>
      <node id="39849">
        <label>stdlib.h</label>
      </node>
      <node id="39846">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="39847" relation="include">
        </childnode>
      </node>
      <node id="39873">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="39853" relation="include">
        </childnode>
      </node>
      <node id="39874">
        <label>allheaders.h</label>
      </node>
      <node id="39866">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
      </node>
      <node id="39848">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="39849" relation="include">
        </childnode>
        <childnode refid="39850" relation="include">
        </childnode>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39851" relation="include">
        </childnode>
        <childnode refid="39853" relation="include">
        </childnode>
        <childnode refid="39854" relation="include">
        </childnode>
      </node>
      <node id="39843">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39845" relation="include">
        </childnode>
        <childnode refid="39848" relation="include">
        </childnode>
        <childnode refid="39855" relation="include">
        </childnode>
      </node>
      <node id="39878">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="39856" relation="include">
        </childnode>
        <childnode refid="39864" relation="include">
        </childnode>
      </node>
      <node id="39852">
        <label>stddef.h</label>
      </node>
      <node id="39853">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="39845" relation="include">
        </childnode>
      </node>
      <node id="39887">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="39885" relation="include">
        </childnode>
        <childnode refid="39860" relation="include">
        </childnode>
        <childnode refid="39858" relation="include">
        </childnode>
        <childnode refid="39864" relation="include">
        </childnode>
        <childnode refid="39866" relation="include">
        </childnode>
        <childnode refid="39888" relation="include">
        </childnode>
      </node>
      <node id="39847">
        <label>limits.h</label>
      </node>
      <node id="39894">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="39842" relation="include">
        </childnode>
        <childnode refid="39875" relation="include">
        </childnode>
        <childnode refid="39872" relation="include">
        </childnode>
        <childnode refid="39895" relation="include">
        </childnode>
      </node>
      <node id="39861">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="39859" relation="include">
        </childnode>
      </node>
      <node id="39862">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="39858" relation="include">
        </childnode>
      </node>
      <node id="39876">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39845" relation="include">
        </childnode>
        <childnode refid="39848" relation="include">
        </childnode>
        <childnode refid="39855" relation="include">
        </childnode>
      </node>
      <node id="39850">
        <label>string.h</label>
      </node>
      <node id="39840">
        <label>textlineprojection.h</label>
        <link refid="textlineprojection_8h"/>
        <childnode refid="39841" relation="include">
        </childnode>
      </node>
      <node id="39864">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="39859" relation="include">
        </childnode>
        <childnode refid="39858" relation="include">
        </childnode>
        <childnode refid="39865" relation="include">
        </childnode>
        <childnode refid="39866" relation="include">
        </childnode>
        <childnode refid="39867" relation="include">
        </childnode>
      </node>
      <node id="39863">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="39845" relation="include">
        </childnode>
      </node>
      <node id="39896">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="39870">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="39845" relation="include">
        </childnode>
      </node>
      <node id="39856">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="39857" relation="include">
        </childnode>
        <childnode refid="39862" relation="include">
        </childnode>
        <childnode refid="39863" relation="include">
        </childnode>
        <childnode refid="39864" relation="include">
        </childnode>
        <childnode refid="39873" relation="include">
        </childnode>
        <childnode refid="39866" relation="include">
        </childnode>
      </node>
      <node id="39877">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="39868" relation="include">
        </childnode>
        <childnode refid="39863" relation="include">
        </childnode>
        <childnode refid="39876" relation="include">
        </childnode>
        <childnode refid="39872" relation="include">
        </childnode>
        <childnode refid="39873" relation="include">
        </childnode>
        <childnode refid="39878" relation="include">
        </childnode>
        <childnode refid="39879" relation="include">
        </childnode>
      </node>
      <node id="39879">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39880" relation="include">
        </childnode>
        <childnode refid="39877" relation="include">
        </childnode>
      </node>
      <node id="39854">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="39853" relation="include">
        </childnode>
      </node>
      <node id="39893">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="39894" relation="include">
        </childnode>
        <childnode refid="39870" relation="include">
        </childnode>
        <childnode refid="39895" relation="include">
        </childnode>
        <childnode refid="39896" relation="include">
        </childnode>
      </node>
      <node id="39859">
        <label>math.h</label>
      </node>
      <node id="39857">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="39858" relation="include">
        </childnode>
        <childnode refid="39862" relation="include">
        </childnode>
      </node>
      <node id="39855">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="39853" relation="include">
        </childnode>
      </node>
      <node id="39881">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="39858" relation="include">
        </childnode>
      </node>
      <node id="39891">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="39859" relation="include">
        </childnode>
        <childnode refid="39890" relation="include">
        </childnode>
      </node>
      <node id="39885">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="39882">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="39883" relation="include">
        </childnode>
        <childnode refid="39884" relation="include">
        </childnode>
        <childnode refid="39879" relation="include">
        </childnode>
        <childnode refid="39886" relation="include">
        </childnode>
      </node>
      <node id="39868">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39869" relation="include">
        </childnode>
        <childnode refid="39872" relation="include">
        </childnode>
      </node>
      <node id="39869">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39849" relation="include">
        </childnode>
        <childnode refid="39870" relation="include">
        </childnode>
        <childnode refid="39853" relation="include">
        </childnode>
        <childnode refid="39871" relation="include">
        </childnode>
        <childnode refid="39865" relation="include">
        </childnode>
      </node>
      <node id="39851">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="39852" relation="include">
        </childnode>
        <childnode refid="39845" relation="include">
        </childnode>
      </node>
      <node id="39841">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="39842" relation="include">
        </childnode>
        <childnode refid="39875" relation="include">
        </childnode>
      </node>
      <node id="39884">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="39885" relation="include">
        </childnode>
        <childnode refid="39860" relation="include">
        </childnode>
        <childnode refid="39872" relation="include">
        </childnode>
      </node>
      <node id="39860">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39845" relation="include">
        </childnode>
        <childnode refid="39848" relation="include">
        </childnode>
        <childnode refid="39855" relation="include">
        </childnode>
      </node>
      <node id="39892">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="39842" relation="include">
        </childnode>
        <childnode refid="39875" relation="include">
        </childnode>
        <childnode refid="39865" relation="include">
        </childnode>
        <childnode refid="39882" relation="include">
        </childnode>
        <childnode refid="39864" relation="include">
        </childnode>
        <childnode refid="39866" relation="include">
        </childnode>
        <childnode refid="39893" relation="include">
        </childnode>
        <childnode refid="39895" relation="include">
        </childnode>
      </node>
      <node id="39858">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39859" relation="include">
        </childnode>
        <childnode refid="39860" relation="include">
        </childnode>
        <childnode refid="39861" relation="include">
        </childnode>
      </node>
      <node id="39883">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="39851" relation="include">
        </childnode>
      </node>
      <node id="39867">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="39868" relation="include">
        </childnode>
      </node>
      <node id="39888">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="39845">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="39846" relation="include">
        </childnode>
      </node>
      <node id="39886">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="39843" relation="include">
        </childnode>
        <childnode refid="39883" relation="include">
        </childnode>
        <childnode refid="39872" relation="include">
        </childnode>
        <childnode refid="39887" relation="include">
        </childnode>
        <childnode refid="39888" relation="include">
        </childnode>
      </node>
      <node id="39844">
        <label>stdio.h</label>
      </node>
      <node id="39839">
        <label>textord/textlineprojection.cpp</label>
        <link refid="textlineprojection.cpp"/>
        <childnode refid="39840" relation="include">
        </childnode>
        <childnode refid="39874" relation="include">
        </childnode>
        <childnode refid="39842" relation="include">
        </childnode>
        <childnode refid="39875" relation="include">
        </childnode>
        <childnode refid="39890" relation="include">
        </childnode>
        <childnode refid="39892" relation="include">
        </childnode>
        <childnode refid="39897" relation="include">
        </childnode>
      </node>
      <node id="39897">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39845" relation="include">
        </childnode>
      </node>
      <node id="39872">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39850" relation="include">
        </childnode>
        <childnode refid="39846" relation="include">
        </childnode>
        <childnode refid="39851" relation="include">
        </childnode>
      </node>
      <node id="39890">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="39843" relation="include">
        </childnode>
        <childnode refid="39864" relation="include">
        </childnode>
        <childnode refid="39891" relation="include">
        </childnode>
      </node>
      <node id="39871">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="39844" relation="include">
        </childnode>
        <childnode refid="39850" relation="include">
        </childnode>
      </node>
      <node id="39880">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="39881" relation="include">
        </childnode>
        <childnode refid="39848" relation="include">
        </childnode>
        <childnode refid="39851" relation="include">
        </childnode>
        <childnode refid="39864" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="textlineprojection_8cpp_1ad44742ad860d606b8afb227717532d73" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kOrientedPadFactor</definition>
        <argsstring></argsstring>
        <name>kOrientedPadFactor</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" line="23" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="textlineprojection_8cpp_1ae4596a15ea8f66612a71bec5254c0462" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kDefaultPadFactor</definition>
        <argsstring></argsstring>
        <name>kDefaultPadFactor</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" line="25" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="textlineprojection_8cpp_1a092bd18070934c5079ce09f4cf3cf403" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kWrongWayPenalty</definition>
        <argsstring></argsstring>
        <name>kWrongWayPenalty</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" line="27" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="textlineprojection_8cpp_1a6bff85a79d3b0f4a9f27b9e290b5cd68" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kParaPerpDistRatio</definition>
        <argsstring></argsstring>
        <name>kParaPerpDistRatio</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" line="32" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="textlineprojection_8cpp_1ace97a5f2c6d12302036b0ae9630a5bcb" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kMinLineSpacingFactor</definition>
        <argsstring></argsstring>
        <name>kMinLineSpacingFactor</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" line="35" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="textlineprojection_8cpp_1a64d2e9156d75dc23cf000d5a51a87e8a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kMaxTabStopOverrun</definition>
        <argsstring></argsstring>
        <name>kMaxTabStopOverrun</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" line="37" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2011<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>rays@google.com<sp/>(Ray<sp/>Smith)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="textlineprojection_8h" kindref="compound">textlineprojection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bbgrid_8h" kindref="compound">bbgrid.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Base<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobbox_8h" kindref="compound">blobbox.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BlobNeighourDir.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobs_8h" kindref="compound">blobs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartition_8h" kindref="compound">colpartition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="normalis_8h" kindref="compound">normalis.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Padding<sp/>factor<sp/>to<sp/>use<sp/>on<sp/>definitely<sp/>oriented<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="textlineprojection_8cpp_1ad44742ad860d606b8afb227717532d73" kindref="member">kOrientedPadFactor</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Padding<sp/>factor<sp/>to<sp/>use<sp/>on<sp/>not<sp/>definitely<sp/>oriented<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="textlineprojection_8cpp_1ae4596a15ea8f66612a71bec5254c0462" kindref="member">kDefaultPadFactor</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Penalty<sp/>factor<sp/>for<sp/>going<sp/>away<sp/>from<sp/>the<sp/>line<sp/>center.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="textlineprojection_8cpp_1a092bd18070934c5079ce09f4cf3cf403" kindref="member">kWrongWayPenalty</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ratio<sp/>between<sp/>parallel<sp/>gap<sp/>and<sp/>perpendicular<sp/>gap<sp/>used<sp/>to<sp/>measure<sp/>total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distance<sp/>of<sp/>a<sp/>box<sp/>from<sp/>a<sp/>target<sp/>box<sp/>in<sp/>curved<sp/>textline<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parallel-gap<sp/>is<sp/>treated<sp/>more<sp/>favorably<sp/>by<sp/>this<sp/>factor<sp/>to<sp/>allow<sp/>catching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>quotes<sp/>and<sp/>elipsis<sp/>at<sp/>the<sp/>end<sp/>of<sp/>textlines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="textlineprojection_8cpp_1a6bff85a79d3b0f4a9f27b9e290b5cd68" kindref="member">kParaPerpDistRatio</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiple<sp/>of<sp/>scale_factor_<sp/>that<sp/>the<sp/>inter-line<sp/>gap<sp/>must<sp/>be<sp/>before<sp/>we<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>padding<sp/>the<sp/>increment<sp/>box<sp/>perpendicular<sp/>to<sp/>the<sp/>text<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="textlineprojection_8cpp_1ace97a5f2c6d12302036b0ae9630a5bcb" kindref="member">kMinLineSpacingFactor</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>tab-stop<sp/>overrun<sp/>for<sp/>horizontal<sp/>padding,<sp/>in<sp/>projection<sp/>pixels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="textlineprojection_8cpp_1a64d2e9156d75dc23cf000d5a51a87e8a" kindref="member">kMaxTabStopOverrun</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="classtesseract_1_1_textline_projection_1a5f31df35a173c0549f13ee7d5654912e" kindref="member">TextlineProjection::TextlineProjection</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>:<sp/>x_origin_(0),<sp/>y_origin_(0),<sp/>pix_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>projection<sp/>map<sp/>should<sp/>be<sp/>about<sp/>100<sp/>ppi,<sp/>whatever<sp/>the<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>scale_factor_<sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(resolution<sp/>/<sp/>100.0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale_factor_<sp/>&lt;<sp/>1)<sp/>scale_factor_<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="classtesseract_1_1_textline_projection_1a4c272e561b9be50e091493c532396284" kindref="member">TextlineProjection::~TextlineProjection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pix_);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>projection<sp/>profile<sp/>given<sp/>the<sp/>input_block<sp/>containing<sp/>lists<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>blobs,<sp/>a<sp/>rotation<sp/>to<sp/>convert<sp/>to<sp/>image<sp/>coords,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>full-resolution<sp/>nontext_map,<sp/>marking<sp/>out<sp/>areas<sp/>to<sp/>avoid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>During<sp/>construction,<sp/>we<sp/>have<sp/>the<sp/>following<sp/>assumptions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>rotation<sp/>is<sp/>a<sp/>multiple<sp/>of<sp/>90<sp/>degrees,<sp/>ie<sp/>no<sp/>deskew<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>blobs<sp/>have<sp/>had<sp/>their<sp/>left<sp/>and<sp/>right<sp/>rules<sp/>set<sp/>to<sp/>also<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>range<sp/>of<sp/>projection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1a813c0b50d88ccb86b6457fdd6bbe66e5" kindref="member">TextlineProjection::ConstructProjection</ref>(<ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref>*<sp/>input_block,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>nontext_map)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pix_);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>image_box(0,<sp/>0,<sp/>pixGetWidth(nontext_map),<sp/>pixGetHeight(nontext_map));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>x_origin_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>y_origin_<sp/>=<sp/>image_box.height();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>(image_box.width()<sp/>+<sp/>scale_factor_<sp/>-<sp/>1)<sp/>/<sp/>scale_factor_;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>(image_box.height()<sp/>+<sp/>scale_factor_<sp/>-<sp/>1)<sp/>/<sp/>scale_factor_;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>pix_<sp/>=<sp/>pixCreate(width,<sp/>height,<sp/>8);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>ProjectBlobs(&amp;input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1a5dd67c54162a6b60b0fd11500d4a3025" kindref="member">blobs</ref>,<sp/>rotation,<sp/>image_box,<sp/>nontext_map);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>ProjectBlobs(&amp;input_block-&gt;<ref refid="class_t_o___b_l_o_c_k_1aafe2a9baa69300ee71da42e6dc18cfee" kindref="member">large_blobs</ref>,<sp/>rotation,<sp/>image_box,<sp/>nontext_map);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>Pix*<sp/>final_pix<sp/>=<sp/>pixBlockconv(pix_,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Pix*<sp/>final_pix<sp/>=<sp/>pixBlockconv(pix_,<sp/>2,<sp/>2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pix_);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>pix_<sp/>=<sp/>final_pix;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>blobs<sp/>in<sp/>the<sp/>window<sp/>colored<sp/>according<sp/>to<sp/>textline<sp/>quality.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1aac6c563b3b6bc5f903f7c4b0061daf32" kindref="member">TextlineProjection::PlotGradedBlobs</ref>(BLOBNBOX_LIST*<sp/>blobs,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>win)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>it(blobs);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bad_box<sp/>=<sp/><ref refid="classtesseract_1_1_textline_projection_1ad73a87b2d4bccbc8f5f6113481b9c0e2" kindref="member">BoxOutOfHTextline</ref>(box,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" kindref="member">UniquelyVertical</ref>())</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a61dec9bc0aaf1d527a731b2a6ce055c8" kindref="member">ScrollView::YELLOW</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(bad_box<sp/>?<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a0959f7470b08ae1a38aa7e38fba29402" kindref="member">ScrollView::RED</ref><sp/>:<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a66e5117e4930fdd9a43bdb674d57a719" kindref="member">ScrollView::BLUE</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1ac2a8fdf5d37967ea4a298dc092b6ed0e" kindref="member">Rectangle</ref>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Moves<sp/>blobs<sp/>that<sp/>look<sp/>like<sp/>they<sp/>don&apos;t<sp/>sit<sp/>well<sp/>on<sp/>a<sp/>textline<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input<sp/>blobs<sp/>list<sp/>to<sp/>the<sp/>output<sp/>small_blobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>gets<sp/>them<sp/>away<sp/>from<sp/>initial<sp/>textline<sp/>finding<sp/>to<sp/>stop<sp/>diacritics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>forming<sp/>incorrect<sp/>textlines.<sp/>(Introduced<sp/>mainly<sp/>to<sp/>fix<sp/>Thai.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1af2d55a393da9c25220a8a3ec6ca861d4" kindref="member">TextlineProjection::MoveNonTextlineBlobs</ref>(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_LIST*<sp/>blobs,<sp/>BLOBNBOX_LIST*<sp/>small_blobs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>it(blobs);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>small_it(small_blobs);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">AlignedBlob::WithinTestRegion</ref>(2,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_textline_projection_1ad73a87b2d4bccbc8f5f6113481b9c0e2" kindref="member">BoxOutOfHTextline</ref>(box,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>debug)<sp/>&amp;&amp;<sp/>!blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" kindref="member">UniquelyVertical</ref>())<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1acdf3cc39226f3378516956b0e33fa533" kindref="member">ClearNeighbours</ref>();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>small_it.add_to_end(it.extract());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window<sp/>and<sp/>display<sp/>the<sp/>projection<sp/>in<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1a1e581a8489ec184b8ba5fbee9aa9f8c9" kindref="member">TextlineProjection::DisplayProjection</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>pixGetWidth(pix_);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>pixGetHeight(pix_);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>Pix*<sp/>pixc<sp/>=<sp/>pixCreate(width,<sp/>height,<sp/>32);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_wpl<sp/>=<sp/>pixGetWpl(pix_);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_wpl<sp/>=<sp/>pixGetWpl(pixc);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>src_data<sp/>=<sp/>pixGetData(pix_);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>col_data<sp/>=<sp/>pixGetData(pixc);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;<sp/>y<sp/>&lt;<sp/>height;<sp/>++y,<sp/>src_data<sp/>+=<sp/>src_wpl,<sp/>col_data<sp/>+=<sp/>col_wpl)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>width;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixel<sp/>=<sp/>GET_DATA_BYTE(src_data,<sp/>x);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_uint32<sp/>result;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&lt;=<sp/>17)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>composeRGBPixel(0,<sp/>0,<sp/>pixel<sp/>*<sp/>15,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&lt;=<sp/>145)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>composeRGBPixel(0,<sp/>(pixel<sp/>-<sp/>17)<sp/>*<sp/>2,<sp/>255,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>composeRGBPixel((pixel<sp/>-<sp/>145)<sp/>*<sp/>2,<sp/>255,<sp/>255,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>col_data[x]<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>uncomment<sp/>when<sp/>scrollview<sp/>can<sp/>display<sp/>non-binary<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>win<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>(</highlight><highlight class="stringliteral">&quot;Projection&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>height,<sp/>width,<sp/>height);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1a45881e629322d82c9fc0c5f926a76f16" kindref="member">Image</ref>(pixc,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1a0830a51981a20c8700b5ec49137e46e9" kindref="member">Update</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>pixWrite(</highlight><highlight class="stringliteral">&quot;projection.png&quot;</highlight><highlight class="normal">,<sp/>pixc,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pixc);</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>distance<sp/>of<sp/>the<sp/>box<sp/>from<sp/>the<sp/>partition<sp/>using<sp/>curved<sp/>projection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>space.<sp/>As<sp/>DistanceOfBoxFromBox,<sp/>except<sp/>that<sp/>the<sp/>direction<sp/>is<sp/>taken<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>ColPartition<sp/>and<sp/>the<sp/>median<sp/>bounds<sp/>of<sp/>the<sp/>ColPartition<sp/>are<sp/>used<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>to_box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1aa72325e896b00272a6486ab4c57c54d3" kindref="member">TextlineProjection::DistanceOfBoxFromPartition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>part,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>a<sp/>partition<sp/>box<sp/>that<sp/>uses<sp/>the<sp/>median<sp/>top/bottom<sp/>of<sp/>the<sp/>blobs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>and<sp/>median<sp/>left/right<sp/>for<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>part_box<sp/>=<sp/>part.bounding_box();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part.IsHorizontalType())<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(part.median_top());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(part.median_bottom());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(part.median_left());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>part_box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(part.median_right());</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>use<sp/>DistanceOfBoxFromBox<sp/>to<sp/>make<sp/>the<sp/>actual<sp/>calculation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1a6093b6f965fd63e9688b8719d556a68d" kindref="member">DistanceOfBoxFromBox</ref>(box,<sp/>part_box,<sp/>part.IsHorizontalType(),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denorm,<sp/>debug);</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>distance<sp/>from<sp/>the<sp/>from_box<sp/>to<sp/>the<sp/>to_box<sp/>using<sp/>curved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>projection<sp/>space.<sp/>Separation<sp/>that<sp/>involves<sp/>a<sp/>decrease<sp/>in<sp/>projection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>density<sp/>(moving<sp/>from<sp/>the<sp/>from_box<sp/>to<sp/>the<sp/>to_box)<sp/>is<sp/>weighted<sp/>more<sp/>heavily</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>than<sp/>constant<sp/>density,<sp/>and<sp/>an<sp/>increase<sp/>is<sp/>weighted<sp/>less.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>horizontal_textline<sp/>is<sp/>true,<sp/>then<sp/>curved<sp/>space<sp/>is<sp/>used<sp/>vertically,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>for<sp/>a<sp/>diacritic<sp/>on<sp/>the<sp/>edge<sp/>of<sp/>a<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>projection<sp/>uses<sp/>original<sp/>image<sp/>coords,<sp/>so<sp/>denorm<sp/>is<sp/>used<sp/>to<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>the<sp/>image<sp/>coords<sp/>from<sp/>box/part<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>How<sp/>the<sp/>calculation<sp/>works:<sp/>Think<sp/>of<sp/>a<sp/>diacritic<sp/>near<sp/>a<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distance<sp/>is<sp/>measured<sp/>from<sp/>the<sp/>far<sp/>side<sp/>of<sp/>the<sp/>from_box<sp/>to<sp/>the<sp/>near<sp/>side<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>to_box.<sp/>Shown<sp/>is<sp/>the<sp/>horizontal<sp/>textline<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|------^-----|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>from<sp/>|<sp/>box<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|------|-----|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>perpendicular<sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;------v--------&gt;|--------------------|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallel<sp/>|<sp/><sp/><sp/><sp/><sp/>to<sp/>box<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|--------------------|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Perpendicular<sp/>distance<sp/>uses<sp/>&quot;curved<sp/>space&quot;<sp/>See<sp/>VerticalDistance<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parallel<sp/>distance<sp/>is<sp/>linear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Result<sp/>is<sp/>perpendicular_gap<sp/>+<sp/>parallel_gap<sp/>/<sp/>kParaPerpDistRatio.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1a6093b6f965fd63e9688b8719d556a68d" kindref="member">TextlineProjection::DistanceOfBoxFromBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>from_box,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>to_box,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>horizontal_textline,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>parallel_gap<sp/>is<sp/>the<sp/>horizontal<sp/>gap<sp/>between<sp/>a<sp/>horizontal<sp/>textline<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>box.<sp/>Analogous<sp/>for<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parallel_gap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start_pt<sp/>is<sp/>the<sp/>box<sp/>end<sp/>of<sp/>the<sp/>line<sp/>to<sp/>be<sp/>modified<sp/>for<sp/>curved<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>start_pt;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>end_pt<sp/>is<sp/>the<sp/>partition<sp/>end<sp/>of<sp/>the<sp/>line<sp/>to<sp/>be<sp/>modified<sp/>for<sp/>curved<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>end_pt;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(horizontal_textline)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>parallel_gap<sp/>=<sp/>from_box.<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(to_box)<sp/>+<sp/>from_box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>(from_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>from_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>-<sp/>to_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&gt;=<sp/>to_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>-<sp/>from_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>from_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(to_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>from_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(to_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>parallel_gap<sp/>=<sp/>from_box.<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(to_box)<sp/>+<sp/>from_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(from_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>-<sp/>to_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&gt;=<sp/>to_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>from_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>())<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>from_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(to_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>from_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(to_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>(from_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>from_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>perpendicular<sp/>gap<sp/>is<sp/>the<sp/>max<sp/>vertical<sp/>distance<sp/>gap<sp/>out<sp/>of:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>of<sp/>from_box<sp/>to<sp/>to_box<sp/>top<sp/>and<sp/>bottom<sp/>of<sp/>from_box<sp/>to<sp/>to_box<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>value<sp/>is<sp/>then<sp/>modified<sp/>for<sp/>curved<sp/>projection<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Analogous<sp/>for<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>perpendicular_gap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>start_pt<sp/>==<sp/>end_pt,<sp/>then<sp/>the<sp/>from_box<sp/>lies<sp/>entirely<sp/>within<sp/>the<sp/>to_box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(in<sp/>the<sp/>perpendicular<sp/>direction),<sp/>so<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>calculate<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>perpendicular_gap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>!=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>||<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>!=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denorm<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Denormalize<sp/>the<sp/>start<sp/>and<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>denorm-&gt;<ref refid="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" kindref="member">DenormTransform</ref>(start_pt,<sp/>&amp;start_pt);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>denorm-&gt;<ref refid="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" kindref="member">DenormTransform</ref>(end_pt,<sp/>&amp;end_pt);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>-<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>)<sp/>&gt;=<sp/>abs(start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>-<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>))<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perpendicular_gap<sp/>=<sp/><ref refid="classtesseract_1_1_textline_projection_1a8a1de7e99cec9c448b63d3627892429b" kindref="member">VerticalDistance</ref>(debug,<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>perpendicular_gap<sp/>=<sp/><ref refid="classtesseract_1_1_textline_projection_1ac1e6deb3faabc127c87d7d9a0be59ed2" kindref="member">HorizontalDistance</ref>(debug,<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>parallel_gap<sp/>weighs<sp/>less<sp/>than<sp/>the<sp/>perpendicular_gap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>perpendicular_gap<sp/>+<sp/>parallel_gap<sp/>/<sp/><ref refid="textlineprojection_8cpp_1a6bff85a79d3b0f4a9f27b9e290b5cd68" kindref="member">kParaPerpDistRatio</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>distance<sp/>between<sp/>(x,<sp/>y1)<sp/>and<sp/>(x,<sp/>y2)<sp/>using<sp/>the<sp/>rule<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>decrease<sp/>in<sp/>textline<sp/>density<sp/>is<sp/>weighted<sp/>more<sp/>heavily<sp/>than<sp/>an<sp/>increase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>coordinates<sp/>are<sp/>in<sp/>source<sp/>image<sp/>space,<sp/>ie<sp/>processed<sp/>by<sp/>any<sp/>denorm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>already,<sp/>but<sp/>not<sp/>yet<sp/>scaled<sp/>by<sp/>scale_factor_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Going<sp/>from<sp/>the<sp/>outside<sp/>of<sp/>a<sp/>textline<sp/>to<sp/>the<sp/>inside<sp/>should<sp/>measure<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>less<sp/>distance<sp/>than<sp/>going<sp/>from<sp/>the<sp/>inside<sp/>of<sp/>a<sp/>textline<sp/>to<sp/>the<sp/>outside.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>How<sp/>it<sp/>works:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>An<sp/>increase<sp/>is<sp/>cheap<sp/>(getting<sp/>closer<sp/>to<sp/>a<sp/>textline).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constant<sp/>costs<sp/>unity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>decrease<sp/>is<sp/>expensive<sp/>(getting<sp/>further<sp/>from<sp/>a<sp/>textline).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pixels<sp/>in<sp/>projection<sp/>map<sp/>Counted<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1/x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1/x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1/x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Total:<sp/>1<sp/>+<sp/>x<sp/>+<sp/>3/x<sp/>where<sp/>x<sp/>=<sp/>kWrongWayPenalty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1a8a1de7e99cec9c448b63d3627892429b" kindref="member">TextlineProjection::VerticalDistance</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>ImageXToProjectionX(x);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>y1<sp/>=<sp/>ImageYToProjectionY(y1);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>y2<sp/>=<sp/>ImageYToProjectionY(y2);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y1<sp/>==<sp/>y2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wpl<sp/>=<sp/>pixGetWpl(pix_);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>y1<sp/>&lt;<sp/>y2<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>data<sp/>=<sp/>pixGetData(pix_)<sp/>+<sp/>y1<sp/>*<sp/>wpl;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>wpl<sp/>*=<sp/>step;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_pixel<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>x);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_way_steps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>y1;<sp/>y<sp/>!=<sp/>y2;<sp/>y<sp/>+=<sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>wpl;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixel<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>x);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;At<sp/>(%d,%d),<sp/>pix<sp/>=<sp/>%d,<sp/>prev=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>y<sp/>+<sp/>step,<sp/>pixel,<sp/>prev_pixel);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&lt;<sp/>prev_pixel)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>+=<sp/><ref refid="textlineprojection_8cpp_1a092bd18070934c5079ce09f4cf3cf403" kindref="member">kWrongWayPenalty</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&gt;<sp/>prev_pixel)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++right_way_steps;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++distance;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_pixel<sp/>=<sp/>pixel;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distance<sp/>*<sp/>scale_factor_<sp/>+</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right_way_steps<sp/>*<sp/>scale_factor_<sp/>/<sp/><ref refid="textlineprojection_8cpp_1a092bd18070934c5079ce09f4cf3cf403" kindref="member">kWrongWayPenalty</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>distance<sp/>between<sp/>(x1,<sp/>y)<sp/>and<sp/>(x2,<sp/>y)<sp/>using<sp/>the<sp/>rule<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>decrease<sp/>in<sp/>textline<sp/>density<sp/>is<sp/>weighted<sp/>more<sp/>heavily<sp/>than<sp/>an<sp/>increase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1ac1e6deb3faabc127c87d7d9a0be59ed2" kindref="member">TextlineProjection::HorizontalDistance</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>x1<sp/>=<sp/>ImageXToProjectionX(x1);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>x2<sp/>=<sp/>ImageXToProjectionX(x2);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/>ImageYToProjectionY(y);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x1<sp/>==<sp/>x2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wpl<sp/>=<sp/>pixGetWpl(pix_);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>x1<sp/>&lt;<sp/>x2<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>data<sp/>=<sp/>pixGetData(pix_)<sp/>+<sp/>y<sp/>*<sp/>wpl;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_pixel<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>x1);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_way_steps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>x1;<sp/>x<sp/>!=<sp/>x2;<sp/>x<sp/>+=<sp/>step)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixel<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>x<sp/>+<sp/>step);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;At<sp/>(%d,%d),<sp/>pix<sp/>=<sp/>%d,<sp/>prev=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+<sp/>step,<sp/>y,<sp/>pixel,<sp/>prev_pixel);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&lt;<sp/>prev_pixel)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>distance<sp/>+=<sp/><ref refid="textlineprojection_8cpp_1a092bd18070934c5079ce09f4cf3cf403" kindref="member">kWrongWayPenalty</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&gt;<sp/>prev_pixel)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++right_way_steps;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++distance;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_pixel<sp/>=<sp/>pixel;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distance<sp/>*<sp/>scale_factor_<sp/>+</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right_way_steps<sp/>*<sp/>scale_factor_<sp/>/<sp/><ref refid="textlineprojection_8cpp_1a092bd18070934c5079ce09f4cf3cf403" kindref="member">kWrongWayPenalty</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>blob<sp/>appears<sp/>to<sp/>be<sp/>outside<sp/>of<sp/>a<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Such<sp/>blobs<sp/>are<sp/>potentially<sp/>diacritics<sp/>(even<sp/>if<sp/>large<sp/>in<sp/>Thai)<sp/>and<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>kept<sp/>away<sp/>from<sp/>initial<sp/>textline<sp/>finding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1ad73a87b2d4bccbc8f5f6113481b9c0e2" kindref="member">TextlineProjection::BoxOutOfHTextline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grad1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grad2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>EvaluateBoxInternal(box,<sp/>denorm,<sp/>debug,<sp/>&amp;grad1,<sp/>&amp;grad2,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>worst_result<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(grad1,<sp/>grad2);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_result<sp/>=<sp/>grad1<sp/>+<sp/>grad2;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_result<sp/>&gt;=<sp/>6)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Strongly<sp/>in<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Medium<sp/>strength:<sp/>if<sp/>either<sp/>gradient<sp/>is<sp/>negative,<sp/>it<sp/>is<sp/>likely<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>body<sp/>of<sp/>the<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(worst_result<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Evaluates<sp/>the<sp/>textlineiness<sp/>of<sp/>a<sp/>ColPartition.<sp/>Uses<sp/>EvaluateBox<sp/>below,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>uses<sp/>the<sp/>median<sp/>top/bottom<sp/>for<sp/>horizontal<sp/>and<sp/>median<sp/>left/right<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vertical<sp/>instead<sp/>of<sp/>the<sp/>bounding<sp/>box<sp/>edges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Evaluates<sp/>for<sp/>both<sp/>horizontal<sp/>and<sp/>vertical<sp/>and<sp/>returns<sp/>the<sp/>best<sp/>result,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>positive<sp/>value<sp/>for<sp/>horizontal<sp/>and<sp/>a<sp/>negative<sp/>value<sp/>for<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1adf0a59d6215cb6cb5fd906c323dc9c3d" kindref="member">TextlineProjection::EvaluateColPartition</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>part,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part.IsSingleton())</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1a43ff05bad93c8d1cbf600ed442315ce5" kindref="member">EvaluateBox</ref>(part.bounding_box(),<sp/>denorm,<sp/>debug);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>vertical<sp/>orientation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>part.bounding_box();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>partition<sp/>median<sp/>for<sp/>left/right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(part.median_left());</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(part.median_right());</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vresult<sp/>=<sp/><ref refid="classtesseract_1_1_textline_projection_1a43ff05bad93c8d1cbf600ed442315ce5" kindref="member">EvaluateBox</ref>(box,<sp/>denorm,<sp/>debug);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>horizontal<sp/>orientation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>box<sp/>=<sp/>part.bounding_box();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>partition<sp/>median<sp/>for<sp/>top/bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>box.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(part.median_top());</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>box.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(part.median_bottom());</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hresult<sp/>=<sp/><ref refid="classtesseract_1_1_textline_projection_1a43ff05bad93c8d1cbf600ed442315ce5" kindref="member">EvaluateBox</ref>(box,<sp/>denorm,<sp/>debug);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Partition<sp/>hresult=%d,<sp/>vresult=%d<sp/>from:&quot;</highlight><highlight class="normal">,<sp/>hresult,<sp/>vresult);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>part.bounding_box().print();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>part.Print();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hresult<sp/>&gt;=<sp/>-vresult<sp/>?<sp/>hresult<sp/>:<sp/>vresult;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>mean<sp/>projection<sp/>gradients<sp/>over<sp/>the<sp/>horizontal<sp/>and<sp/>vertical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>edges<sp/>of<sp/>the<sp/>box:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-h-h-h-h-h-h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>|------------|<sp/>mean=htop<sp/><sp/><sp/>-v|+v--------+v|-v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>|+h+h+h+h+h+h|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-v|+v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+v|-v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-v|+v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+v|-v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>|<sp/><sp/><sp/><sp/>box<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-v|+v<sp/><sp/>box<sp/><sp/><sp/>+v|-v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-v|+v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+v|-v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>|+h+h+h+h+h+h|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-v|+v<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+v|-v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>|------------|<sp/>mean=hbot<sp/><sp/><sp/>-v|+v--------+v|-v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>-h-h-h-h-h-h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean=vleft<sp/><sp/>mean=vright</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>MAX(htop,hbot)<sp/>-<sp/>MAX(vleft,vright),<sp/>which<sp/>is<sp/>a<sp/>positive<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>a<sp/>horizontal<sp/>textline,<sp/>a<sp/>negative<sp/>number<sp/>for<sp/>a<sp/>vertical<sp/>textline,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>near<sp/>zero<sp/>for<sp/>undecided.<sp/>Undecided<sp/>is<sp/>most<sp/>likely<sp/>non-text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>the<sp/>gradients<sp/>are<sp/>truncated<sp/>to<sp/>remain<sp/>non-negative,<sp/>since<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>horizontal<sp/>gradients<sp/>don&apos;t<sp/>give<sp/>any<sp/>indication<sp/>of<sp/>being<sp/>vertical<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vice<sp/>versa.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Additional<sp/>complexity:<sp/>The<sp/>coordinates<sp/>have<sp/>to<sp/>be<sp/>transformed<sp/>to<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image<sp/>coordinates<sp/>with<sp/>denorm<sp/>(if<sp/>not<sp/>null),<sp/>scaled<sp/>to<sp/>match<sp/>the<sp/>projection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pix,<sp/>and<sp/>THEN<sp/>step<sp/>out<sp/>2<sp/>pixels<sp/>each<sp/>way<sp/>from<sp/>the<sp/>edge<sp/>to<sp/>compute<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>gradient,<sp/>and<sp/>tries<sp/>3<sp/>positions,<sp/>each<sp/>measuring<sp/>the<sp/>gradient<sp/>over<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>4-pixel<sp/>spread:<sp/>(+3/-1),<sp/>(+2/-2),<sp/>(+1/-3).<sp/><sp/>This<sp/>complexity<sp/>is<sp/>handled<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="comment">//<sp/>several<sp/>layers<sp/>of<sp/>helpers<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_textline_projection_1a43ff05bad93c8d1cbf600ed442315ce5" kindref="member">TextlineProjection::EvaluateBox</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EvaluateBoxInternal(box,<sp/>denorm,<sp/>debug,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internal<sp/>version<sp/>of<sp/>EvaluateBox<sp/>returns<sp/>the<sp/>unclipped<sp/>gradients<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>the<sp/>result<sp/>of<sp/>EvaluateBox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/>hgrad1<sp/>and<sp/>hgrad2<sp/>are<sp/>the<sp/>gradients<sp/>for<sp/>the<sp/>horizontal<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TextlineProjection::EvaluateBoxInternal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>hgrad1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>hgrad2,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vgrad1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vgrad2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_gradient<sp/>=<sp/>BestMeanGradientInRow(denorm,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_gradient<sp/>=<sp/>-BestMeanGradientInRow(denorm,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_gradient<sp/>=<sp/>BestMeanGradientInColumn(denorm,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_gradient<sp/>=<sp/>-BestMeanGradientInColumn(denorm,<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_clipped<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(top_gradient,<sp/>0);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_clipped<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(bottom_gradient,<sp/>0);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_clipped<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(left_gradient,<sp/>0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_clipped<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(right_gradient,<sp/>0);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Gradients:<sp/>top<sp/>=<sp/>%d,<sp/>bottom<sp/>=<sp/>%d,<sp/>left=<sp/>%d,<sp/>right=<sp/>%d<sp/>for<sp/>box:&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_gradient,<sp/>bottom_gradient,<sp/>left_gradient,<sp/>right_gradient);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a2e753aa9943276301d68e9f9cad99620" kindref="member">print</ref>();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(top_clipped,<sp/>bottom_clipped)<sp/>-</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(left_clipped,<sp/>right_clipped);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hgrad1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>hgrad2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>*hgrad1<sp/>=<sp/>top_gradient;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>*hgrad2<sp/>=<sp/>bottom_gradient;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vgrad1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>vgrad2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>*vgrad1<sp/>=<sp/>left_gradient;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>*vgrad2<sp/>=<sp/>right_gradient;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>returns<sp/>the<sp/>mean<sp/>gradient<sp/>value<sp/>for<sp/>the<sp/>horizontal<sp/>row<sp/>at<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>y,<sp/>(in<sp/>the<sp/>external<sp/>coordinates)<sp/>by<sp/>subtracting<sp/>the<sp/>mean<sp/>of<sp/>the<sp/>transformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>row<sp/>2<sp/>pixels<sp/>above<sp/>from<sp/>the<sp/>mean<sp/>of<sp/>the<sp/>transformed<sp/>row<sp/>2<sp/>pixels<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>gives<sp/>a<sp/>positive<sp/>value<sp/>for<sp/>a<sp/>good<sp/>top<sp/>edge<sp/>and<sp/>negative<sp/>for<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>best<sp/>result<sp/>out<sp/>of<sp/>+2/-2,<sp/>+3/-1,<sp/>+1/-3<sp/>pixels<sp/>from<sp/>the<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TextlineProjection::BestMeanGradientInRow(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>min_x,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>max_x,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>y,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>best_is_max)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>start_pt(min_x,<sp/>y);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>end_pt(max_x,<sp/>y);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upper<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>-2,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lower<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>2,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_gradient<sp/>=<sp/>lower<sp/>-<sp/>upper;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>upper<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>-1,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>lower<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>3,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gradient<sp/>=<sp/>lower<sp/>-<sp/>upper;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gradient<sp/>&gt;<sp/>best_gradient)<sp/>==<sp/>best_is_max)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>best_gradient<sp/>=<sp/>gradient;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>upper<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>-3,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>lower<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>1,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>gradient<sp/>=<sp/>lower<sp/>-<sp/>upper;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gradient<sp/>&gt;<sp/>best_gradient)<sp/>==<sp/>best_is_max)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>best_gradient<sp/>=<sp/>gradient;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_gradient;</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>returns<sp/>the<sp/>mean<sp/>gradient<sp/>value<sp/>for<sp/>the<sp/>vertical<sp/>column<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>x,<sp/>(in<sp/>the<sp/>external<sp/>coordinates)<sp/>by<sp/>subtracting<sp/>the<sp/>mean<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>transformed<sp/>column<sp/>2<sp/>pixels<sp/>left<sp/>from<sp/>the<sp/>mean<sp/>of<sp/>the<sp/>transformed<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2<sp/>pixels<sp/>to<sp/>the<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>gives<sp/>a<sp/>positive<sp/>value<sp/>for<sp/>a<sp/>good<sp/>left<sp/>edge<sp/>and<sp/>negative<sp/>for<sp/>right.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>best<sp/>result<sp/>out<sp/>of<sp/>+2/-2,<sp/>+3/-1,<sp/>+1/-3<sp/>pixels<sp/>from<sp/>the<sp/>edge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TextlineProjection::BestMeanGradientInColumn(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>x,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>min_y,<sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>max_y,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>best_is_max)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>start_pt(x,<sp/>min_y);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>end_pt(x,<sp/>max_y);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>-2,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>2,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_gradient<sp/>=<sp/>right<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>left<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>-1,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>right<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>3,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gradient<sp/>=<sp/>right<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gradient<sp/>&gt;<sp/>best_gradient)<sp/>==<sp/>best_is_max)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>best_gradient<sp/>=<sp/>gradient;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>left<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>-3,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>right<sp/>=<sp/>MeanPixelsInLineSegment(denorm,<sp/>1,<sp/>start_pt,<sp/>end_pt);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>gradient<sp/>=<sp/>right<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((gradient<sp/>&gt;<sp/>best_gradient)<sp/>==<sp/>best_is_max)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>best_gradient<sp/>=<sp/>gradient;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_gradient;</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>returns<sp/>the<sp/>mean<sp/>pixel<sp/>value<sp/>over<sp/>the<sp/>line<sp/>between<sp/>the<sp/>start_pt<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end_pt<sp/>(inclusive),<sp/>but<sp/>shifted<sp/>perpendicular<sp/>to<sp/>the<sp/>line<sp/>in<sp/>the<sp/>projection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image<sp/>by<sp/>offset<sp/>pixels.<sp/>For<sp/>simplicity,<sp/>it<sp/>is<sp/>assumed<sp/>that<sp/>the<sp/>vector<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>either<sp/>nearly<sp/>horizontal<sp/>or<sp/>nearly<sp/>vertical.<sp/>It<sp/>works<sp/>on<sp/>skewed<sp/>textlines!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>end<sp/>points<sp/>are<sp/>in<sp/>external<sp/>coordinates,<sp/>and<sp/>will<sp/>be<sp/>denormalized<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>denorm<sp/>if<sp/>not<sp/>NULL<sp/>before<sp/>further<sp/>conversion<sp/>to<sp/>pix<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/>After<sp/>all<sp/>the<sp/>conversions,<sp/>the<sp/>offset<sp/>is<sp/>added<sp/>to<sp/>the<sp/>direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>perpendicular<sp/>to<sp/>the<sp/>line<sp/>direction.<sp/>The<sp/>offset<sp/>is<sp/>thus<sp/>in<sp/>projection<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/>coordinates,<sp/>which<sp/>allows<sp/>the<sp/>caller<sp/>to<sp/>get<sp/>a<sp/>guaranteed<sp/>displacement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/>between<sp/>pixels<sp/>used<sp/>to<sp/>calculate<sp/>gradients.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TextlineProjection::MeanPixelsInLineSegment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>start_pt,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>end_pt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>TransformToPixCoords(denorm,<sp/>&amp;start_pt);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>TransformToPixCoords(denorm,<sp/>&amp;end_pt);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>TruncateToImageBounds(&amp;start_pt);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>TruncateToImageBounds(&amp;end_pt);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wpl<sp/>=<sp/>pixGetWpl(pix_);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>data<sp/>=<sp/>pixGetData(pix_);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_delta<sp/>=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>-<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_delta<sp/>=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>-<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(x_delta)<sp/>&gt;=<sp/>abs(y_delta))<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x_delta<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Horizontal<sp/>line.<sp/>Add<sp/>the<sp/>offset<sp/>vertically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_step<sp/>=<sp/>x_delta<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correct<sp/>offset<sp/>for<sp/>rotation,<sp/>keeping<sp/>it<sp/>anti-clockwise<sp/>of<sp/>the<sp/>delta.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>*=<sp/>x_step;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>TruncateToImageBounds(&amp;start_pt);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>TruncateToImageBounds(&amp;end_pt);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>x_delta<sp/>=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>-<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>y_delta<sp/>=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>-<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>x_delta<sp/>*<sp/>x_step<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;<sp/>x<sp/>!=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;<sp/>x<sp/>+=<sp/>x_step)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>+<sp/><ref refid="helpers_8h_1a29e9efc11d2c7cdfa4c30881e82999dc" kindref="member">DivRounded</ref>(y_delta<sp/>*<sp/>(x<sp/>-<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>),<sp/>x_delta);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>GET_DATA_BYTE(data<sp/>+<sp/>wpl<sp/>*<sp/>y,<sp/>x);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vertical<sp/>line.<sp/>Add<sp/>the<sp/>offset<sp/>horizontally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_step<sp/>=<sp/>y_delta<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Correct<sp/>offset<sp/>for<sp/>rotation,<sp/>keeping<sp/>it<sp/>anti-clockwise<sp/>of<sp/>the<sp/>delta.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pix<sp/>holds<sp/>the<sp/>image<sp/>with<sp/>y=0<sp/>at<sp/>the<sp/>top,<sp/>so<sp/>the<sp/>offset<sp/>is<sp/>negated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>*=<sp/>-y_step;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>TruncateToImageBounds(&amp;start_pt);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>TruncateToImageBounds(&amp;end_pt);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>x_delta<sp/>=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>-<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>y_delta<sp/>=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>-<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>y_delta<sp/>*<sp/>y_step<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;<sp/>y<sp/>!=<sp/>end_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;<sp/>y<sp/>+=<sp/>y_step)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>+<sp/><ref refid="helpers_8h_1a29e9efc11d2c7cdfa4c30881e82999dc" kindref="member">DivRounded</ref>(x_delta<sp/>*<sp/>(y<sp/>-<sp/>start_pt.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>),<sp/>y_delta);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total<sp/>+=<sp/>GET_DATA_BYTE(data<sp/>+<sp/>wpl<sp/>*<sp/>y,<sp/>x);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="helpers_8h_1a29e9efc11d2c7cdfa4c30881e82999dc" kindref="member">DivRounded</ref>(total,<sp/>count);</highlight></codeline>
<codeline lineno="567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>an<sp/>input<sp/>pix,<sp/>and<sp/>a<sp/>box,<sp/>the<sp/>sides<sp/>of<sp/>the<sp/>box<sp/>are<sp/>shrunk<sp/>inwards<sp/>until</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>they<sp/>bound<sp/>any<sp/>black<sp/>pixels<sp/>found<sp/>within<sp/>the<sp/>original<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>function<sp/>converts<sp/>between<sp/>tesseract<sp/>coords<sp/>and<sp/>the<sp/>pix<sp/>coords<sp/>assuming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>this<sp/>pix<sp/>is<sp/>full<sp/>resolution<sp/>equal<sp/>in<sp/>size<sp/>to<sp/>the<sp/>original<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>an<sp/>empty<sp/>box<sp/>if<sp/>there<sp/>are<sp/>no<sp/>black<sp/>pixels<sp/>in<sp/>the<sp/>source<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>BoundsWithinBox(Pix*<sp/>pix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>im_height<sp/>=<sp/>pixGetHeight(pix);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>Box*<sp/>input_box<sp/>=<sp/>boxCreate(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>im_height<sp/>-<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>Box*<sp/>output_box<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>pixClipBoxToForeground(pix,<sp/>input_box,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;output_box);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>result_box;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output_box<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>l_int32<sp/>x,<sp/>y,<sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>boxGetGeometry(output_box,<sp/>&amp;x,<sp/>&amp;y,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>result_box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(x);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>result_box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(x<sp/>+<sp/>width);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>result_box.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(im_height<sp/>-<sp/>y);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>result_box.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(result_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>-<sp/>height);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>boxDestroy(&amp;output_box);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>boxDestroy(&amp;input_box);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_box;</highlight></codeline>
<codeline lineno="592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Splits<sp/>the<sp/>given<sp/>box<sp/>in<sp/>half<sp/>at<sp/>x_middle<sp/>or<sp/>y_middle<sp/>according<sp/>to<sp/>split_on_x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>checks<sp/>for<sp/>nontext_map<sp/>pixels<sp/>in<sp/>each<sp/>half.<sp/>Reduces<sp/>the<sp/>bbox<sp/>so<sp/>that<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>still<sp/>includes<sp/>the<sp/>middle<sp/>point,<sp/>but<sp/>does<sp/>not<sp/>touch<sp/>any<sp/>fg<sp/>pixels<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nontext_map.<sp/>An<sp/>empty<sp/>box<sp/>may<sp/>be<sp/>returned<sp/>if<sp/>there<sp/>is<sp/>no<sp/>such<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TruncateBoxToMissNonText(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_middle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_middle,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>split_on_x,<sp/>Pix*<sp/>nontext_map,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bbox)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box1(*bbox);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box2(*bbox);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>im_box;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split_on_x)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>box1.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(x_middle);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>im_box<sp/>=<sp/>BoundsWithinBox(nontext_map,<sp/>box1);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!im_box.<ref refid="class_t_b_o_x_1a7c6996aea1eb6be07b1d6634bf36cfd6" kindref="member">null_box</ref>())<sp/>box1.set_left(im_box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>box2.set_left(x_middle);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>im_box<sp/>=<sp/>BoundsWithinBox(nontext_map,<sp/>box2);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!im_box.<ref refid="class_t_b_o_x_1a7c6996aea1eb6be07b1d6634bf36cfd6" kindref="member">null_box</ref>())<sp/>box2.set_right(im_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>box1.set_bottom(y_middle);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>im_box<sp/>=<sp/>BoundsWithinBox(nontext_map,<sp/>box1);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!im_box.<ref refid="class_t_b_o_x_1a7c6996aea1eb6be07b1d6634bf36cfd6" kindref="member">null_box</ref>())<sp/>box1.set_top(im_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>box2.set_top(y_middle);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>im_box<sp/>=<sp/>BoundsWithinBox(nontext_map,<sp/>box2);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!im_box.<ref refid="class_t_b_o_x_1a7c6996aea1eb6be07b1d6634bf36cfd6" kindref="member">null_box</ref>())<sp/>box2.set_bottom(im_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>box1<sp/>+=<sp/>box2;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>*bbox<sp/>=<sp/>box1;</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>to<sp/>add<sp/>1<sp/>to<sp/>a<sp/>rectangle<sp/>in<sp/>source<sp/>image<sp/>coords<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">//<sp/>internal<sp/>projection<sp/>pix_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TextlineProjection::IncrementRectangle8Bit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaled_left<sp/>=<sp/>ImageXToProjectionX(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>());</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaled_top<sp/>=<sp/>ImageYToProjectionY(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaled_right<sp/>=<sp/>ImageXToProjectionX(box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>());</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scaled_bottom<sp/>=<sp/>ImageYToProjectionY(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wpl<sp/>=<sp/>pixGetWpl(pix_);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref>*<sp/>data<sp/>=<sp/>pixGetData(pix_)<sp/>+<sp/>scaled_top<sp/>*<sp/>wpl;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>scaled_top;<sp/>y<sp/>&lt;=<sp/>scaled_bottom;<sp/>++y)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>scaled_left;<sp/>x<sp/>&lt;=<sp/>scaled_right;<sp/>++x)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixel<sp/>=<sp/>GET_DATA_BYTE(data,<sp/>x);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixel<sp/>&lt;<sp/>255)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET_DATA_BYTE(data,<sp/>x,<sp/>pixel<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>+=<sp/>wpl;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inserts<sp/>a<sp/>list<sp/>of<sp/>blobs<sp/>into<sp/>the<sp/>projection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotation<sp/>is<sp/>a<sp/>multiple<sp/>of<sp/>90<sp/>degrees<sp/>to<sp/>get<sp/>from<sp/>blob<sp/>coords<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nontext_map<sp/>coords,<sp/>nontext_map_box<sp/>is<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>nontext_map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Blobs<sp/>are<sp/>spread<sp/>horizontally<sp/>or<sp/>vertically<sp/>according<sp/>to<sp/>their<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">//<sp/>flags,<sp/>but<sp/>the<sp/>spreading<sp/>is<sp/>truncated<sp/>by<sp/>set<sp/>pixels<sp/>in<sp/>the<sp/>nontext_map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>also<sp/>by<sp/>the<sp/>horizontal<sp/>rule<sp/>line<sp/>limits<sp/>on<sp/>the<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TextlineProjection::ProjectBlobs(BLOBNBOX_LIST*<sp/>blobs,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>nontext_map_box,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>nontext_map)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>BLOBNBOX_IT<sp/>blob_it(blobs);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(blob_it.mark_cycle_pt();<sp/>!blob_it.cycled_list();<sp/>blob_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>blob_it.data();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>bbox<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>middle((bbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>bbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(bbox.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>+<sp/>bbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spreading_horizontally<sp/>=<sp/>PadBlobBox(blob,<sp/>&amp;bbox);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>to<sp/>match<sp/>the<sp/>nontext_map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox.<ref refid="class_t_b_o_x_1a428e14544aeb44064bc8637d920211a0" kindref="member">rotate</ref>(rotation);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>middle.rotate(rotation);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rotation.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>==<sp/>0.0f)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>spreading_horizontally<sp/>=<sp/>!spreading_horizontally;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>to<sp/>the<sp/>image<sp/>before<sp/>applying<sp/>the<sp/>increments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox<sp/>&amp;=<sp/>nontext_map_box;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>in-place<sp/>box<sp/>intersection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>image<sp/>pixels<sp/>before<sp/>spreading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>TruncateBoxToMissNonText(middle.x(),<sp/>middle.y(),<sp/>spreading_horizontally,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nontext_map,<sp/>&amp;bbox);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>IncrementRectangle8Bit(bbox);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pads<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>given<sp/>blob<sp/>according<sp/>to<sp/>whether<sp/>it<sp/>is<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>horizontal<sp/>or<sp/>vertical<sp/>text<sp/>line,<sp/>taking<sp/>into<sp/>account<sp/>tab-stops<sp/>near</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>blob.<sp/>Returns<sp/>true<sp/>if<sp/>padding<sp/>was<sp/>in<sp/>the<sp/>horizontal<sp/>direction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>TextlineProjection::PadBlobBox(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bbox)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>which<sp/>direction<sp/>to<sp/>spread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>text<sp/>is<sp/>well<sp/>spaced<sp/>out,<sp/>it<sp/>can<sp/>be<sp/>useful<sp/>to<sp/>pad<sp/>perpendicular<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>textline<sp/>direction,<sp/>so<sp/>as<sp/>to<sp/>ensure<sp/>diacritics<sp/>get<sp/>absorbed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correctly,<sp/>but<sp/>if<sp/>the<sp/>text<sp/>is<sp/>tightly<sp/>spaced,<sp/>this<sp/>will<sp/>destroy<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blank<sp/>space<sp/>between<sp/>textlines<sp/>in<sp/>the<sp/>projection<sp/>map,<sp/>and<sp/>that<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>very<sp/>bad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pad_limit<sp/>=<sp/>scale_factor_<sp/>*<sp/><ref refid="textlineprojection_8cpp_1ace97a5f2c6d12302036b0ae9630a5bcb" kindref="member">kMinLineSpacingFactor</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xpad<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ypad<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>padding_horizontally<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a4faf8ec29ebb0f3c2fbdd158fd33cdc9" kindref="member">UniquelyHorizontal</ref>())<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>xpad<sp/>=<sp/>bbox-&gt;<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>*<sp/><ref refid="textlineprojection_8cpp_1ad44742ad860d606b8afb227717532d73" kindref="member">kOrientedPadFactor</ref>;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>padding_horizontally<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>text<sp/>appears<sp/>to<sp/>be<sp/>very<sp/>well<sp/>spaced,<sp/>pad<sp/>the<sp/>other<sp/>direction<sp/>by<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>pixel<sp/>in<sp/>the<sp/>projection<sp/>profile<sp/>space<sp/>to<sp/>help<sp/>join<sp/>diacritics<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>textline.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>)-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>())<sp/>&gt;<sp/>pad_limit)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_t_b_o_x_1a98e0f9a8622eec475ee93b260c57c7ab" kindref="member">y_gap</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>)-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>())<sp/>&gt;<sp/>pad_limit))<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ypad<sp/>=<sp/>scale_factor_;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1aa4e11bd4e9e5903b52bcd363db008f2e" kindref="member">UniquelyVertical</ref>())<sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>ypad<sp/>=<sp/>bbox-&gt;<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>*<sp/><ref refid="textlineprojection_8cpp_1ad44742ad860d606b8afb227717532d73" kindref="member">kOrientedPadFactor</ref>;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>)-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>())<sp/>&gt;<sp/>pad_limit)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>)<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_t_b_o_x_1a6c296f134aaae6ee544c4d000d76f80e" kindref="member">x_gap</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>)-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>())<sp/>&gt;<sp/>pad_limit))<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xpad<sp/>=<sp/>scale_factor_;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>)-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>)<sp/>==<sp/>blob)<sp/>||</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a898fc0442f50593b8ce360d3253d254d" kindref="member">BND_BELOW</ref>)-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a29aa5ffa693a9ac7e91c8c59e037509c" kindref="member">BND_ABOVE</ref>)<sp/>==<sp/>blob))<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ypad<sp/>=<sp/>bbox-&gt;<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>()<sp/>*<sp/><ref refid="textlineprojection_8cpp_1ae4596a15ea8f66612a71bec5254c0462" kindref="member">kDefaultPadFactor</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>)-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>)<sp/>==<sp/>blob)<sp/>||</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883a34eeb3a076f3bbcb32d47b74ee3cee86" kindref="member">BND_LEFT</ref>)-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a20cea54041981db2aa2e94cb4db7b4cf" kindref="member">neighbour</ref>(<ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883ac0391ea6a5bf43f7735142e9ae87a62f" kindref="member">BND_RIGHT</ref>)<sp/>==<sp/>blob))<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xpad<sp/>=<sp/>bbox-&gt;<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()<sp/>*<sp/><ref refid="textlineprojection_8cpp_1ae4596a15ea8f66612a71bec5254c0462" kindref="member">kDefaultPadFactor</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>padding_horizontally<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>bbox-&gt;<ref refid="class_t_b_o_x_1ad78f4f7e9746def02b0d2e8e8a2b3ceb" kindref="member">pad</ref>(xpad,<sp/>ypad);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>pad_limit<sp/>=<sp/>scale_factor_<sp/>*<sp/><ref refid="textlineprojection_8cpp_1a64d2e9156d75dc23cf000d5a51a87e8a" kindref="member">kMaxTabStopOverrun</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>shrink<sp/>horizontally<sp/>to<sp/>avoid<sp/>stepping<sp/>more<sp/>than<sp/>pad_limit<sp/>over<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>tab-stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>&lt;<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ac149d9356065f3836019b2da3e311740" kindref="member">left_rule</ref>()<sp/>-<sp/>pad_limit)<sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1ac149d9356065f3836019b2da3e311740" kindref="member">left_rule</ref>()<sp/>-<sp/>pad_limit);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>&gt;<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b323abfc9e7e03a3edccab8f725315b" kindref="member">right_rule</ref>()<sp/>+<sp/>pad_limit)<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9b323abfc9e7e03a3edccab8f725315b" kindref="member">right_rule</ref>()<sp/>+<sp/>pad_limit);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>padding_horizontally;</highlight></codeline>
<codeline lineno="736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>denormalizes<sp/>the<sp/>TPOINT<sp/>with<sp/>the<sp/>denorm<sp/>if<sp/>not<sp/>NULL,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="comment">//<sp/>converts<sp/>to<sp/>pix_<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TextlineProjection::TransformToPixCoords(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>*<sp/>pt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denorm<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Denormalize<sp/>the<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>denorm-&gt;<ref refid="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" kindref="member">DenormTransform</ref>(*pt,<sp/>pt);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/>pt-&gt;<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>ImageXToProjectionX(pt-&gt;<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>pt-&gt;<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>ImageYToProjectionY(pt-&gt;<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>truncates<sp/>the<sp/>TPOINT<sp/>to<sp/>be<sp/>within<sp/>the<sp/>pix_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TextlineProjection::TruncateToImageBounds(<ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>*<sp/>pt)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/>pt-&gt;<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>ClipToRange&lt;int&gt;(pt-&gt;<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>0,<sp/>pixGetWidth(pix_)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/>pt-&gt;<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>ClipToRange&lt;int&gt;(pt-&gt;<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>,<sp/>0,<sp/>pixGetHeight(pix_)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transform<sp/>tesseract<sp/>image<sp/>coordinates<sp/>to<sp/>coordinates<sp/>used<sp/>in<sp/>the<sp/>projection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TextlineProjection::ImageXToProjectionX(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/><ref refid="helpers_8h_1af8739168d5b3235996eeb25dac3c4044" kindref="member">ClipToRange</ref>((x<sp/>-<sp/>x_origin_)<sp/>/<sp/>scale_factor_,<sp/>0,<sp/>pixGetWidth(pix_)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TextlineProjection::ImageYToProjectionY(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/>y<sp/>=<sp/><ref refid="helpers_8h_1af8739168d5b3235996eeb25dac3c4044" kindref="member">ClipToRange</ref>((y_origin_<sp/>-<sp/>y)<sp/>/<sp/>scale_factor_,<sp/>0,<sp/>pixGetHeight(pix_)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/textlineprojection.cpp"/>
  </compounddef>
</doxygen>
