<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="devanagari__processing_8cpp" kind="file">
    <compoundname>devanagari_processing.cpp</compoundname>
    <includes refid="devanagari__processing_8h" local="yes">devanagari_processing.h</includes>
    <includes local="yes">allheaders.h</includes>
    <includes refid="tordmain_8h" local="yes">tordmain.h</includes>
    <includes refid="img_8h" local="yes">img.h</includes>
    <includes refid="statistc_8h" local="yes">statistc.h</includes>
    <incdepgraph>
      <node id="37664">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="37656" relation="include">
        </childnode>
        <childnode refid="37649" relation="include">
        </childnode>
        <childnode refid="37647" relation="include">
        </childnode>
        <childnode refid="37615" relation="include">
        </childnode>
        <childnode refid="37665" relation="include">
        </childnode>
      </node>
      <node id="37640">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="37665">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37619" relation="include">
        </childnode>
        <childnode refid="37641" relation="include">
        </childnode>
      </node>
      <node id="37614">
        <label>devanagari_processing.h</label>
        <link refid="devanagari__processing_8h"/>
        <childnode refid="37615" relation="include">
        </childnode>
        <childnode refid="37643" relation="include">
        </childnode>
      </node>
      <node id="37627">
        <label>stdlib.h</label>
      </node>
      <node id="37620">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="37621" relation="include">
        </childnode>
      </node>
      <node id="37650">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="37629" relation="include">
        </childnode>
      </node>
      <node id="37659">
        <label>allheaders.h</label>
      </node>
      <node id="37641">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
      </node>
      <node id="37626">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="37627" relation="include">
        </childnode>
        <childnode refid="37628" relation="include">
        </childnode>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37629" relation="include">
        </childnode>
        <childnode refid="37630" relation="include">
        </childnode>
      </node>
      <node id="37656">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37619" relation="include">
        </childnode>
        <childnode refid="37626" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
      </node>
      <node id="37651">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="37652" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
      </node>
      <node id="37618">
        <label>stddef.h</label>
      </node>
      <node id="37629">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="37619" relation="include">
        </childnode>
      </node>
      <node id="37657">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="37623" relation="include">
        </childnode>
        <childnode refid="37624" relation="include">
        </childnode>
        <childnode refid="37636" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
        <childnode refid="37641" relation="include">
        </childnode>
        <childnode refid="37658" relation="include">
        </childnode>
      </node>
      <node id="37621">
        <label>limits.h</label>
      </node>
      <node id="37638">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="37637" relation="include">
        </childnode>
      </node>
      <node id="37654">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="37636" relation="include">
        </childnode>
      </node>
      <node id="37649">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37619" relation="include">
        </childnode>
        <childnode refid="37626" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
      </node>
      <node id="37628">
        <label>string.h</label>
      </node>
      <node id="37639">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="37637" relation="include">
        </childnode>
        <childnode refid="37636" relation="include">
        </childnode>
        <childnode refid="37640" relation="include">
        </childnode>
        <childnode refid="37641" relation="include">
        </childnode>
        <childnode refid="37642" relation="include">
        </childnode>
      </node>
      <node id="37648">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="37619" relation="include">
        </childnode>
      </node>
      <node id="37645">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="37619" relation="include">
        </childnode>
      </node>
      <node id="37652">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="37653" relation="include">
        </childnode>
        <childnode refid="37654" relation="include">
        </childnode>
        <childnode refid="37648" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
        <childnode refid="37650" relation="include">
        </childnode>
        <childnode refid="37641" relation="include">
        </childnode>
      </node>
      <node id="37647">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="37643" relation="include">
        </childnode>
        <childnode refid="37648" relation="include">
        </childnode>
        <childnode refid="37649" relation="include">
        </childnode>
        <childnode refid="37632" relation="include">
        </childnode>
        <childnode refid="37650" relation="include">
        </childnode>
        <childnode refid="37651" relation="include">
        </childnode>
        <childnode refid="37633" relation="include">
        </childnode>
      </node>
      <node id="37633">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37634" relation="include">
        </childnode>
        <childnode refid="37647" relation="include">
        </childnode>
      </node>
      <node id="37630">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="37629" relation="include">
        </childnode>
      </node>
      <node id="37661">
        <label>time.h</label>
      </node>
      <node id="37653">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="37636" relation="include">
        </childnode>
        <childnode refid="37654" relation="include">
        </childnode>
      </node>
      <node id="37637">
        <label>math.h</label>
      </node>
      <node id="37631">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="37629" relation="include">
        </childnode>
      </node>
      <node id="37660">
        <label>tordmain.h</label>
        <link refid="tordmain_8h"/>
        <childnode refid="37661" relation="include">
        </childnode>
        <childnode refid="37643" relation="include">
        </childnode>
        <childnode refid="37615" relation="include">
        </childnode>
        <childnode refid="37662" relation="include">
        </childnode>
        <childnode refid="37664" relation="include">
        </childnode>
        <childnode refid="37666" relation="include">
        </childnode>
      </node>
      <node id="37635">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="37636" relation="include">
        </childnode>
      </node>
      <node id="37663">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="37637" relation="include">
        </childnode>
        <childnode refid="37662" relation="include">
        </childnode>
      </node>
      <node id="37623">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="37613">
        <label>textord/devanagari_processing.cpp</label>
        <link refid="devanagari_processing.cpp"/>
        <childnode refid="37614" relation="include">
        </childnode>
        <childnode refid="37659" relation="include">
        </childnode>
        <childnode refid="37660" relation="include">
        </childnode>
        <childnode refid="37616" relation="include">
        </childnode>
        <childnode refid="37665" relation="include">
        </childnode>
      </node>
      <node id="37643">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37644" relation="include">
        </childnode>
        <childnode refid="37632" relation="include">
        </childnode>
      </node>
      <node id="37615">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="37616" relation="include">
        </childnode>
        <childnode refid="37622" relation="include">
        </childnode>
        <childnode refid="37633" relation="include">
        </childnode>
        <childnode refid="37655" relation="include">
        </childnode>
      </node>
      <node id="37644">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37627" relation="include">
        </childnode>
        <childnode refid="37645" relation="include">
        </childnode>
        <childnode refid="37629" relation="include">
        </childnode>
        <childnode refid="37646" relation="include">
        </childnode>
        <childnode refid="37640" relation="include">
        </childnode>
      </node>
      <node id="37617">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="37618" relation="include">
        </childnode>
        <childnode refid="37619" relation="include">
        </childnode>
      </node>
      <node id="37622">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="37623" relation="include">
        </childnode>
        <childnode refid="37624" relation="include">
        </childnode>
        <childnode refid="37632" relation="include">
        </childnode>
      </node>
      <node id="37624">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37619" relation="include">
        </childnode>
        <childnode refid="37626" relation="include">
        </childnode>
        <childnode refid="37631" relation="include">
        </childnode>
      </node>
      <node id="37636">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37637" relation="include">
        </childnode>
        <childnode refid="37624" relation="include">
        </childnode>
        <childnode refid="37638" relation="include">
        </childnode>
      </node>
      <node id="37666">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="37616">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="37617" relation="include">
        </childnode>
      </node>
      <node id="37642">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="37643" relation="include">
        </childnode>
      </node>
      <node id="37658">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="37619">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="37620" relation="include">
        </childnode>
      </node>
      <node id="37655">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="37656" relation="include">
        </childnode>
        <childnode refid="37616" relation="include">
        </childnode>
        <childnode refid="37632" relation="include">
        </childnode>
        <childnode refid="37657" relation="include">
        </childnode>
        <childnode refid="37658" relation="include">
        </childnode>
      </node>
      <node id="37625">
        <label>stdio.h</label>
      </node>
      <node id="37632">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37628" relation="include">
        </childnode>
        <childnode refid="37620" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
      </node>
      <node id="37662">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="37656" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
        <childnode refid="37663" relation="include">
        </childnode>
      </node>
      <node id="37646">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="37625" relation="include">
        </childnode>
        <childnode refid="37628" relation="include">
        </childnode>
      </node>
      <node id="37634">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="37635" relation="include">
        </childnode>
        <childnode refid="37626" relation="include">
        </childnode>
        <childnode refid="37617" relation="include">
        </childnode>
        <childnode refid="37639" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="devanagari__processing_8cpp_1a245c77acb38e613b722cd98dfa8eed60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>INT_VAR</definition>
        <argsstring>(devanagari_split_debuglevel, 0,&quot;Debug level for split shiro-rekha process.&quot;)</argsstring>
        <name>INT_VAR</name>
        <param>
          <type>devanagari_split_debuglevel</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Debug level for split shiro-rekha process.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/devanagari_processing.cpp" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="devanagari__processing_8cpp_1ae76c2f6b69f05b739ff8b9996ed9b6a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOL_VAR</definition>
        <argsstring>(devanagari_split_debugimage, 0,&quot;Whether to create a debug image for split shiro-rekha process.&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>devanagari_split_debugimage</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Whether to create a debug image for split shiro-rekha process.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/devanagari_processing.cpp" line="32" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devanagari_processing.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Methods<sp/>to<sp/>process<sp/>images<sp/>containing<sp/>devanagari<sp/>symbols,</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prior<sp/>to<sp/>classification.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Shobhit<sp/>Saxena</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Nov<sp/>17<sp/>20:26:01<sp/>IST<sp/>2008</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="devanagari__processing_8h" kindref="compound">devanagari_processing.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tordmain_8h" kindref="compound">tordmain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="img_8h" kindref="compound">img.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="statistc_8h" kindref="compound">statistc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flags<sp/>controlling<sp/>the<sp/>debugging<sp/>information<sp/>for<sp/>shiro-rekha<sp/>splitting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>strategies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="params_8h_1a554d43d0cf0e3f9552921941d9e147bd" kindref="member">INT_VAR</ref>(devanagari_split_debuglevel,<sp/>0,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Debug<sp/>level<sp/>for<sp/>split<sp/>shiro-rekha<sp/>process.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="params_8h_1a442e7f541a050acf5ebda026db177877" kindref="member">BOOL_VAR</ref>(devanagari_split_debugimage,<sp/>0,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Whether<sp/>to<sp/>create<sp/>a<sp/>debug<sp/>image<sp/>for<sp/>split<sp/>shiro-rekha<sp/>process.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="classtesseract_1_1_shiro_rekha_splitter_1a09814382ca566884157cceab9076fff2" kindref="member">ShiroRekhaSplitter::ShiroRekhaSplitter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>orig_pix_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>segmentation_block_list_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>splitted_image_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>global_xheight_<sp/>=<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ac973904ee08ed3d33aa15afc9dc2a903" kindref="member">kUnspecifiedXheight</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>perform_close_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>debug_image_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>pageseg_split_strategy_<sp/>=<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601a1ca815839c8e78def404b329ba79697a" kindref="member">NO_SPLIT</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>ocr_split_strategy_<sp/>=<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601a1ca815839c8e78def404b329ba79697a" kindref="member">NO_SPLIT</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="classtesseract_1_1_shiro_rekha_splitter_1a018fa239787df6051031ac4627e442cb" kindref="member">ShiroRekhaSplitter::~ShiroRekhaSplitter</ref>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1a8bfcc88be2d166b396f760d10ae29f18" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1a8bfcc88be2d166b396f760d10ae29f18" kindref="member">ShiroRekhaSplitter::Clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;orig_pix_);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;splitted_image_);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>pageseg_split_strategy_<sp/>=<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601a1ca815839c8e78def404b329ba79697a" kindref="member">NO_SPLIT</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>ocr_split_strategy_<sp/>=<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601a1ca815839c8e78def404b329ba79697a" kindref="member">NO_SPLIT</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;debug_image_);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>segmentation_block_list_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>global_xheight_<sp/>=<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ac973904ee08ed3d33aa15afc9dc2a903" kindref="member">kUnspecifiedXheight</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>perform_close_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>dumps<sp/>a<sp/>debug<sp/>image<sp/>to<sp/>the<sp/>specified<sp/>location.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ac60692d8c95f1ed1505adbd2554ece53" kindref="member">ShiroRekhaSplitter::DumpDebugImage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>pixWrite(filename,<sp/>debug_image_,<sp/>IFF_PNG);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>setting<sp/>the<sp/>input<sp/>image,<sp/>a<sp/>clone<sp/>of<sp/>it<sp/>is<sp/>owned<sp/>by<sp/>this<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1aef511d3502b7ea23cde356ef6454f064" kindref="member">ShiroRekhaSplitter::set_orig_pix</ref>(Pix*<sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orig_pix_)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;orig_pix_);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>orig_pix_<sp/>=<sp/>pixClone(pix);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Top-level<sp/>method<sp/>to<sp/>perform<sp/>splitting<sp/>based<sp/>on<sp/>current<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>a<sp/>split<sp/>was<sp/>actually<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>split_for_pageseg<sp/>should<sp/>be<sp/>true<sp/>if<sp/>the<sp/>splitting<sp/>is<sp/>being<sp/>done<sp/>prior<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>page<sp/>segmentation.<sp/>This<sp/>mode<sp/>uses<sp/>the<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pageseg_devanagari_split_strategy<sp/>to<sp/>determine<sp/>the<sp/>splitting<sp/>strategy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1a28e6f7d06927c5742be73589cb3eefcf" kindref="member">ShiroRekhaSplitter::Split</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>split_for_pageseg)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601" kindref="member">SplitStrategy</ref><sp/>split_strategy<sp/>=<sp/>split_for_pageseg<sp/>?<sp/>pageseg_split_strategy_<sp/>:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ocr_split_strategy_;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split_strategy<sp/>==<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601a1ca815839c8e78def404b329ba79697a" kindref="member">NO_SPLIT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(split_strategy<sp/>==<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601abb20813b04f412bb19593e228c343503" kindref="member">MINIMAL_SPLIT</ref><sp/>||</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split_strategy<sp/>==<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601a8835ad2cdb469808d2aa1d4c8546426c" kindref="member">MAXIMAL_SPLIT</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(orig_pix_);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debuglevel<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Splitting<sp/>shiro-rekha<sp/>...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Split<sp/>strategy<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split_strategy<sp/>==<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601abb20813b04f412bb19593e228c343503" kindref="member">MINIMAL_SPLIT</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Minimal&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Maximal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Initial<sp/>pageseg<sp/>available<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentation_block_list_<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;yes&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;no&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>copy<sp/>of<sp/>original<sp/>image<sp/>to<sp/>store<sp/>the<sp/>splitting<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;splitted_image_);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>splitted_image_<sp/>=<sp/>pixCopy(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>orig_pix_);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>debug<sp/>image<sp/>if<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debugimage)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;debug_image_);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>debug_image_<sp/>=<sp/>pixConvertTo32(orig_pix_);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Determine<sp/>all<sp/>connected<sp/>components<sp/>in<sp/>the<sp/>input<sp/>image.<sp/>A<sp/>close<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>may<sp/>be<sp/>required<sp/>prior<sp/>to<sp/>this,<sp/>depending<sp/>on<sp/>the<sp/>current<sp/>settings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>Pix*<sp/>pix_for_ccs<sp/>=<sp/>pixClone(orig_pix_);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(perform_close_<sp/>&amp;&amp;<sp/>global_xheight_<sp/>!=<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ac973904ee08ed3d33aa15afc9dc2a903" kindref="member">kUnspecifiedXheight</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!segmentation_block_list_)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debuglevel<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Performing<sp/>a<sp/>global<sp/>close<sp/>operation..\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>global<sp/>measure<sp/>is<sp/>available<sp/>for<sp/>xheight,<sp/>but<sp/>no<sp/>local<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;pix_for_ccs);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>pix_for_ccs<sp/>=<sp/>pixCopy(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>orig_pix_);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>PerformClose(pix_for_ccs,<sp/>global_xheight_);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>Pixa*<sp/>ccs;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>Boxa*<sp/>tmp_boxa<sp/>=<sp/>pixConnComp(pix_for_ccs,<sp/>&amp;ccs,<sp/>8);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>boxaDestroy(&amp;tmp_boxa);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;pix_for_ccs);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>connected<sp/>components.<sp/>Get<sp/>their<sp/>bounding<sp/>boxes<sp/>and<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>the<sp/>image<sp/>regions<sp/>corresponding<sp/>to<sp/>these<sp/>boxes<sp/>from<sp/>the<sp/>original<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Conditionally<sp/>run<sp/>splitting<sp/>on<sp/>each<sp/>of<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>Boxa*<sp/>regions_to_clear<sp/>=<sp/>boxaCreate(0);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>pixaGetCount(ccs);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>Box*<sp/>box<sp/>=<sp/>ccs-&gt;boxa-&gt;box[i];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>Pix*<sp/>word_pix<sp/>=<sp/>pixClipRectangle(orig_pix_,<sp/>box,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(word_pix);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xheight<sp/>=<sp/>GetXheightForCC(box);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xheight<sp/>==<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ac973904ee08ed3d33aa15afc9dc2a903" kindref="member">kUnspecifiedXheight</ref><sp/>&amp;&amp;<sp/>segmentation_block_list_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devanagari_split_debugimage)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixRenderBoxArb(debug_image_,<sp/>box,<sp/>1,<sp/>255,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>some<sp/>xheight<sp/>measure<sp/>is<sp/>available,<sp/>attempt<sp/>to<sp/>pre-eliminate<sp/>small</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>blobs<sp/>from<sp/>the<sp/>shiro-rekha<sp/>process.<sp/>This<sp/>is<sp/>primarily<sp/>to<sp/>save<sp/>the<sp/>CCs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>corresponding<sp/>to<sp/>punctuation<sp/>marks/small<sp/>dots<sp/>etc<sp/>which<sp/>are<sp/>part<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>larger<sp/>graphemes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xheight<sp/>==<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ac973904ee08ed3d33aa15afc9dc2a903" kindref="member">kUnspecifiedXheight</ref><sp/>||</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(box-&gt;w<sp/>&gt;<sp/>xheight<sp/>/<sp/>3<sp/>&amp;&amp;<sp/>box-&gt;h<sp/>&gt;<sp/>xheight<sp/>/<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SplitWordShiroRekha(split_strategy,<sp/>word_pix,<sp/>xheight,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;x,<sp/>box-&gt;y,<sp/>regions_to_clear);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debuglevel<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;CC<sp/>dropped<sp/>from<sp/>splitting:<sp/>%d,%d<sp/>(%d,<sp/>%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box-&gt;x,<sp/>box-&gt;y,<sp/>box-&gt;w,<sp/>box-&gt;h);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>pixDestroy(&amp;word_pix);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Actually<sp/>clear<sp/>the<sp/>boxes<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>boxaGetCount(regions_to_clear);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>Box*<sp/>box<sp/>=<sp/>boxaGetBox(regions_to_clear,<sp/>i,<sp/>L_CLONE);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>pixClearInRect(splitted_image_,<sp/>box);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>boxDestroy(&amp;box);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>boxaDestroy(&amp;regions_to_clear);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>pixaDestroy(&amp;ccs);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debugimage)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ac60692d8c95f1ed1505adbd2554ece53" kindref="member">DumpDebugImage</ref>(split_for_pageseg<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;pageseg_split_debug.png&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ocr_split_debug.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Method<sp/>to<sp/>perform<sp/>a<sp/>close<sp/>operation<sp/>on<sp/>the<sp/>input<sp/>image.<sp/>The<sp/>xheight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>estimate<sp/>decides<sp/>the<sp/>size<sp/>of<sp/>sel<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShiroRekhaSplitter::PerformClose(Pix*<sp/>pix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xheight_estimate)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>pixCloseBrick(pix,<sp/>pix,<sp/>xheight_estimate<sp/>/<sp/>8,<sp/>xheight_estimate<sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>resolves<sp/>the<sp/>cc<sp/>bbox<sp/>to<sp/>a<sp/>particular<sp/>row<sp/>and<sp/>returns<sp/>the<sp/>row&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>xheight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ShiroRekhaSplitter::GetXheightForCC(Box*<sp/>cc_bbox)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!segmentation_block_list_)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global_xheight_;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>box<sp/>coordinates<sp/>in<sp/>Tesseract&apos;s<sp/>coordinate<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>bbox(cc_bbox-&gt;x,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixGetHeight(orig_pix_)<sp/>-<sp/>cc_bbox-&gt;y<sp/>-<sp/>cc_bbox-&gt;h<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cc_bbox-&gt;x<sp/>+<sp/>cc_bbox-&gt;w,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixGetHeight(orig_pix_)<sp/>-<sp/>cc_bbox-&gt;y<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>BLOCK_IT<sp/>block_it(segmentation_block_list_);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(block_it.mark_cycle_pt();<sp/>!block_it.cycled_list();<sp/>block_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block<sp/>=<sp/>block_it.data();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>rows<sp/>in<sp/>the<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>ROW_IT<sp/>row_it(block-&gt;<ref refid="class_b_l_o_c_k_1ae9826e422b0bf17a7592dee8db3fe058" kindref="member" tooltip="get rows ">row_list</ref>());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row_it.mark_cycle_pt();<sp/>!row_it.cycled_list();<sp/>row_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_r_o_w" kindref="compound">ROW</ref>*<sp/>row<sp/>=<sp/>row_it.data();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!row-&gt;<ref refid="class_r_o_w_1a7bb838e55056e39e15d7e2cea8ebebb0" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(bbox))<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Row<sp/>could<sp/>be<sp/>skewed,<sp/>warped,<sp/>etc.<sp/>Use<sp/>the<sp/>position<sp/>of<sp/>the<sp/>box<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>the<sp/>baseline<sp/>position<sp/>of<sp/>the<sp/>row<sp/>for<sp/>that<sp/>x-coordinate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>square<sp/>TBOX<sp/>whose<sp/>baseline&apos;s<sp/>mid-point<sp/>lies<sp/>at<sp/>this<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>side<sp/>is<sp/>row&apos;s<sp/>xheight.<sp/>Take<sp/>the<sp/>overlap<sp/>of<sp/>this<sp/>box<sp/>with<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>box<sp/>and<sp/>check<sp/>if<sp/>it<sp/>is<sp/>a<sp/>&apos;major<sp/>overlap&apos;.<sp/>If<sp/>so,<sp/>this<sp/>box<sp/>lies<sp/>in<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row.<sp/>In<sp/>that<sp/>case,<sp/>return<sp/>the<sp/>xheight<sp/>for<sp/>this<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>box_middle<sp/>=<sp/>0.5<sp/>*<sp/>(bbox.left()<sp/>+<sp/>bbox.right());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865a83297de004f4e58b9be2108c6cd08a23" kindref="member">baseline</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(row-&gt;<ref refid="class_r_o_w_1a097b3543fa3ca5768eb50033d4c4db9c" kindref="member">base_line</ref>(box_middle)<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>test_box(box_middle<sp/>-<sp/>row-&gt;<ref refid="class_r_o_w_1a2954f94ec4eefe1e3729912e5b8ea779" kindref="member">x_height</ref>()<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865a83297de004f4e58b9be2108c6cd08a23" kindref="member">baseline</ref>,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box_middle<sp/>+<sp/>row-&gt;<ref refid="class_r_o_w_1a2954f94ec4eefe1e3729912e5b8ea779" kindref="member">x_height</ref>()<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(baseline<sp/>+<sp/>row-&gt;<ref refid="class_r_o_w_1a2954f94ec4eefe1e3729912e5b8ea779" kindref="member">x_height</ref>()));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>overlap.<sp/>If<sp/>it<sp/>is<sp/>is<sp/>a<sp/>major<sp/>overlap,<sp/>this<sp/>is<sp/>the<sp/>right<sp/>row.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox.major_overlap(test_box))<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row-&gt;<ref refid="class_r_o_w_1a2954f94ec4eefe1e3729912e5b8ea779" kindref="member">x_height</ref>();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>row<sp/>found<sp/>for<sp/>this<sp/>bbox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ac973904ee08ed3d33aa15afc9dc2a903" kindref="member">kUnspecifiedXheight</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>list<sp/>of<sp/>regions<sp/>(boxes)<sp/>which<sp/>should<sp/>be<sp/>cleared<sp/>in<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image<sp/>so<sp/>as<sp/>to<sp/>perform<sp/>shiro-rekha<sp/>splitting.<sp/>Pix<sp/>is<sp/>assumed<sp/>to<sp/>carry<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(or<sp/>less)<sp/>word<sp/>only.<sp/>Xheight<sp/>measure<sp/>could<sp/>be<sp/>the<sp/>global<sp/>estimate,<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>estimate,<sp/>or<sp/>unspecified.<sp/>If<sp/>unspecified,<sp/>over<sp/>splitting<sp/>may<sp/>occur,<sp/>since<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conservative<sp/>estimate<sp/>of<sp/>stroke<sp/>width<sp/>along<sp/>with<sp/>an<sp/>associated<sp/>multiplier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>used<sp/>in<sp/>its<sp/>place.<sp/>It<sp/>is<sp/>advisable<sp/>to<sp/>have<sp/>a<sp/>specified<sp/>xheight<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>splitting<sp/>for<sp/>classification/training.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>vertical<sp/>projection<sp/>histogram<sp/>of<sp/>all<sp/>the<sp/>on-pixels<sp/>in<sp/>the<sp/>input<sp/>pix<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>computed.<sp/>The<sp/>maxima<sp/>of<sp/>this<sp/>histogram<sp/>is<sp/>regarded<sp/>as<sp/>an<sp/>approximate<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>shiro-rekha.<sp/>By<sp/>descending<sp/>on<sp/>the<sp/>maxima&apos;s<sp/>peak<sp/>on<sp/>both<sp/>sides,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>stroke<sp/>width<sp/>of<sp/>shiro-rekha<sp/>is<sp/>estimated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>horizontal<sp/>projection<sp/>histogram<sp/>is<sp/>computed<sp/>for<sp/>a<sp/>sub-image<sp/>of<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image,<sp/>which<sp/>extends<sp/>from<sp/>just<sp/>below<sp/>the<sp/>shiro-rekha<sp/>down<sp/>to<sp/>a<sp/>certain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>leeway.<sp/>The<sp/>leeway<sp/>depends<sp/>on<sp/>the<sp/>input<sp/>xheight,<sp/>if<sp/>provided,<sp/>else<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>conservative<sp/>multiplier<sp/>on<sp/>approximate<sp/>stroke<sp/>width<sp/>is<sp/>used<sp/>(which<sp/>may<sp/>lead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>over-splitting).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShiroRekhaSplitter::SplitWordShiroRekha(SplitStrategy<sp/>split_strategy,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pix*<sp/>pix,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xheight,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_left,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_top,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Boxa*<sp/>regions_to_clear)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split_strategy<sp/>==<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601a1ca815839c8e78def404b329ba79697a" kindref="member">NO_SPLIT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>pixGetWidth(pix);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>pixGetHeight(pix);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Statistically<sp/>determine<sp/>the<sp/>yextents<sp/>of<sp/>the<sp/>shiro-rekha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shirorekha_top,<sp/>shirorekha_bottom,<sp/>shirorekha_ylevel;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>GetShiroRekhaYExtents(pix,<sp/>&amp;shirorekha_top,<sp/>&amp;shirorekha_bottom,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;shirorekha_ylevel);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>the<sp/>shiro<sp/>rekha<sp/>is<sp/>also<sp/>a<sp/>stroke,<sp/>its<sp/>width<sp/>is<sp/>equal<sp/>to<sp/>the<sp/>stroke</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stroke_width<sp/>=<sp/>shirorekha_bottom<sp/>-<sp/>shirorekha_top<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>safeguards<sp/>to<sp/>protect<sp/>CCs<sp/>we<sp/>do<sp/>not<sp/>want<sp/>to<sp/>be<sp/>split.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>particularly<sp/>useful<sp/>when<sp/>the<sp/>word<sp/>wasn&apos;t<sp/>eliminated<sp/>earlier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>xheight<sp/>information<sp/>was<sp/>unavailable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shirorekha_ylevel<sp/>&gt;<sp/>height<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shirorekha<sp/>shouldn&apos;t<sp/>be<sp/>in<sp/>the<sp/>bottom<sp/>half<sp/>of<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debuglevel<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>splitting<sp/>CC<sp/>at<sp/>(%d,<sp/>%d):<sp/>shirorekha<sp/>in<sp/>lower<sp/>half..\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_left,<sp/>word_top);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stroke_width<sp/>&gt;<sp/>height<sp/>/<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>the<sp/>boldest<sp/>of<sp/>fonts<sp/>shouldn&apos;t<sp/>do<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debuglevel<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Skipping<sp/>splitting<sp/>CC<sp/>at<sp/>(%d,<sp/>%d):<sp/>stroke<sp/>width<sp/>too<sp/>huge..\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_left,<sp/>word_top);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>ascender<sp/>and<sp/>descender<sp/>regions<sp/>of<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Obtain<sp/>a<sp/>vertical<sp/>projection<sp/>histogram<sp/>for<sp/>the<sp/>resulting<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>Box*<sp/>box_to_clear<sp/>=<sp/>boxCreate(0,<sp/>shirorekha_top<sp/>-<sp/>stroke_width<sp/>/<sp/>3,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,<sp/>5<sp/>*<sp/>stroke_width<sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>Pix*<sp/>word_in_xheight<sp/>=<sp/>pixCopy(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>pix);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>pixClearInRect(word_in_xheight,<sp/>box_to_clear);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>clear<sp/>any<sp/>pixels<sp/>which<sp/>are<sp/>below<sp/>shirorekha_bottom<sp/>+<sp/>some<sp/>leeway.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>leeway<sp/>is<sp/>set<sp/>to<sp/>xheight<sp/>if<sp/>the<sp/>information<sp/>is<sp/>available,<sp/>else<sp/>it<sp/>is<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>multiplier<sp/>applied<sp/>to<sp/>the<sp/>stroke<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leeway_to_keep<sp/>=<sp/>stroke_width<sp/>*<sp/>3;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xheight<sp/>!=<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ac973904ee08ed3d33aa15afc9dc2a903" kindref="member">kUnspecifiedXheight</ref>)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>because<sp/>the<sp/>xheight-region<sp/>typically<sp/>includes<sp/>the<sp/>shiro-rekha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inside<sp/>it,<sp/>i.e.,<sp/>the<sp/>top<sp/>of<sp/>the<sp/>xheight<sp/>range<sp/>corresponds<sp/>to<sp/>the<sp/>top<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shiro-rekha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>leeway_to_keep<sp/>=<sp/>xheight<sp/>-<sp/>stroke_width;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>box_to_clear-&gt;y<sp/>=<sp/>shirorekha_bottom<sp/>+<sp/>leeway_to_keep;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>box_to_clear-&gt;h<sp/>=<sp/>height<sp/>-<sp/>box_to_clear-&gt;y;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>pixClearInRect(word_in_xheight,<sp/>box_to_clear);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>boxDestroy(&amp;box_to_clear);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>PixelHistogram<sp/>vert_hist;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>vert_hist.ConstructVerticalCountHist(word_in_xheight);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>pixDestroy(&amp;word_in_xheight);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>number<sp/>of<sp/>black<sp/>pixel<sp/>in<sp/>any<sp/>column<sp/>of<sp/>the<sp/>image<sp/>is<sp/>less<sp/>than<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>fraction<sp/>of<sp/>the<sp/>stroke<sp/>width,<sp/>treat<sp/>it<sp/>as<sp/>noise<sp/>/<sp/>a<sp/>stray<sp/>mark.<sp/>Perform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>changes<sp/>inside<sp/>the<sp/>vert_hist<sp/>data<sp/>itself,<sp/>as<sp/>that<sp/>is<sp/>used<sp/>later<sp/>on<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>bit<sp/>vector<sp/>for<sp/>the<sp/>final<sp/>split<sp/>decision<sp/>at<sp/>every<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vert_hist.hist()[i]<sp/>&lt;=<sp/>stroke_width<sp/>/<sp/>4)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_hist.hist()[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vert_hist.hist()[i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>order<sp/>to<sp/>split<sp/>the<sp/>line<sp/>at<sp/>any<sp/>point,<sp/>we<sp/>make<sp/>sure<sp/>that<sp/>the<sp/>width<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>gap<sp/>is<sp/>atleast<sp/>half<sp/>the<sp/>stroke<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cur_component_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>width)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vert_hist.hist()[i])<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>j<sp/>&lt;<sp/>width<sp/>&amp;&amp;<sp/>!vert_hist.hist()[i+j])</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;=<sp/>stroke_width<sp/>/<sp/>2<sp/>&amp;&amp;<sp/>cur_component_width<sp/>&gt;=<sp/>stroke_width<sp/>/<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>a<sp/>shiro-rekha<sp/>split.<sp/>The<sp/>intervening<sp/>region<sp/>lies<sp/>from<sp/>i<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i+j-1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>minimal<sp/>single-pixel<sp/>split<sp/>makes<sp/>the<sp/>estimation<sp/>of<sp/>intra-<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inter-word<sp/>spacing<sp/>easier<sp/>during<sp/>page<sp/>layout<sp/>analysis,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whereas<sp/>a<sp/>maximal<sp/>split<sp/>may<sp/>be<sp/>needed<sp/>for<sp/>OCR,<sp/>depending<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>the<sp/>engine<sp/>was<sp/>trained.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minimal_split<sp/>=<sp/>(split_strategy<sp/>==<sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1ab44f3b6e26668478841a5b8c45332601abb20813b04f412bb19593e228c343503" kindref="member">MINIMAL_SPLIT</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>split_width<sp/>=<sp/>minimal_split<sp/>?<sp/>1<sp/>:<sp/>j;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>split_left<sp/>=<sp/>minimal_split<sp/>?<sp/>i<sp/>+<sp/>(j<sp/>/<sp/>2)<sp/>-<sp/>(split_width<sp/>/<sp/>2)<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!minimal_split<sp/>||<sp/>(i<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>+<sp/>j<sp/>!=<sp/>width))<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Box*<sp/>box_to_clear<sp/>=</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxCreate(word_left<sp/>+<sp/>split_left,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>word_top<sp/>+<sp/>shirorekha_top<sp/>-<sp/>stroke_width<sp/>/<sp/>3,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split_width,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5<sp/>*<sp/>stroke_width<sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box_to_clear)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxaAddBox(regions_to_clear,<sp/>box_to_clear,<sp/>L_CLONE);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>this<sp/>in<sp/>the<sp/>debug<sp/>image<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debugimage)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixRenderBoxArb(debug_image_,<sp/>box_to_clear,<sp/>1,<sp/>128,<sp/>255,<sp/>128);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxDestroy(&amp;box_to_clear);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_component_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>j;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++cur_component_width;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Refreshes<sp/>the<sp/>words<sp/>in<sp/>the<sp/>segmentation<sp/>block<sp/>list<sp/>by<sp/>using<sp/>blobs<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input<sp/>block<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>segmentation<sp/>block<sp/>list<sp/>must<sp/>be<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1a90146104b2c9a136fdd873036cb95230" kindref="member">ShiroRekhaSplitter::RefreshSegmentationWithNewBlobs</ref>(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_LIST*<sp/>new_blobs)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>segmentation<sp/>block<sp/>list<sp/>must<sp/>have<sp/>been<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(segmentation_block_list_);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debuglevel<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Before<sp/>refreshing<sp/>blobs:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ocrblock_8cpp_1a7f48b20c8959347726c816b94b3c47f5" kindref="member">PrintSegmentationStats</ref>(segmentation_block_list_);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;New<sp/>Blobs<sp/>found:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>new_blobs-&gt;length());</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>C_BLOB_LIST<sp/>not_found_blobs;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><ref refid="ocrblock_8cpp_1af0a18fdb19dd9d4ebe9e73b864c2fad5" kindref="member">RefreshWordBlobsFromNewBlobs</ref>(segmentation_block_list_,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_blobs,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((devanagari_split_debugimage<sp/>&amp;&amp;<sp/>debug_image_)<sp/>?</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;not_found_blobs<sp/>:<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debuglevel<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;After<sp/>refreshing<sp/>blobs:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ocrblock_8cpp_1a7f48b20c8959347726c816b94b3c47f5" kindref="member">PrintSegmentationStats</ref>(segmentation_block_list_);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devanagari_split_debugimage<sp/>&amp;&amp;<sp/>debug_image_)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>out<sp/>the<sp/>original<sp/>blobs<sp/>for<sp/>which<sp/>no<sp/>match<sp/>was<sp/>found<sp/>in<sp/>the<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all_blobs<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>not_found_it(&amp;not_found_blobs);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(not_found_it.mark_cycle_pt();<sp/>!not_found_it.cycled_list();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not_found_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>not_found<sp/>=<sp/>not_found_it.data();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>not_found_box<sp/>=<sp/>not_found-&gt;<ref refid="class_c___b_l_o_b_1a77e52e29e2c622a3a63bb7edb110f6ab" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Box*<sp/>box_to_plot<sp/>=<sp/>GetBoxForTBOX(not_found_box);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixRenderBoxArb(debug_image_,<sp/>box_to_plot,<sp/>1,<sp/>255,<sp/>0,<sp/>255);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxDestroy(&amp;box_to_plot);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Plot<sp/>out<sp/>the<sp/>blobs<sp/>unused<sp/>from<sp/>all<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>all_blobs_it(new_blobs);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(all_blobs_it.mark_cycle_pt();<sp/>!all_blobs_it.cycled_list();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_blobs_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>a_blob<sp/>=<sp/>all_blobs_it.data();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Box*<sp/>box_to_plot<sp/>=<sp/>GetBoxForTBOX(a_blob-&gt;<ref refid="class_c___b_l_o_b_1a77e52e29e2c622a3a63bb7edb110f6ab" kindref="member">bounding_box</ref>());</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixRenderBoxArb(debug_image_,<sp/>box_to_plot,<sp/>3,<sp/>0,<sp/>127,<sp/>0);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxDestroy(&amp;box_to_plot);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>new<sp/>box<sp/>object<sp/>for<sp/>the<sp/>corresponding<sp/>TBOX,<sp/>based<sp/>on<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>image&apos;s<sp/>coordinate<sp/>system.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal">Box*<sp/>ShiroRekhaSplitter::GetBoxForTBOX(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>tbox)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boxCreate(tbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>pixGetHeight(orig_pix_)<sp/>-<sp/>tbox.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>(),<sp/>tbox.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>());</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>returns<sp/>the<sp/>computed<sp/>mode-height<sp/>of<sp/>blobs<sp/>in<sp/>the<sp/>pix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>also<sp/>prunes<sp/>very<sp/>small<sp/>blobs<sp/>from<sp/>calculation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shiro_rekha_splitter_1a99f3f8f96a8b7bfe08ce2b19c8052a6c" kindref="member">ShiroRekhaSplitter::GetModeHeight</ref>(Pix*<sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>Boxa*<sp/>boxa<sp/>=<sp/>pixConnComp(pix,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>heights(0,<sp/>pixGetHeight(pix));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>heights.clear();</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>boxaGetCount(boxa);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>Box*<sp/>box<sp/>=<sp/>boxaGetBox(boxa,<sp/>i,<sp/>L_CLONE);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box-&gt;h<sp/>&gt;=<sp/>3<sp/>||<sp/>box-&gt;w<sp/>&gt;=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>heights.add(box-&gt;h,<sp/>1);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>boxDestroy(&amp;box);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>boxaDestroy(&amp;boxa);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heights.mode();</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>returns<sp/>y-extents<sp/>of<sp/>the<sp/>shiro-rekha<sp/>computed<sp/>from<sp/>the<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="comment">//<sp/>word<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShiroRekhaSplitter::GetShiroRekhaYExtents(Pix*<sp/>word_pix,</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>shirorekha_top,</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>shirorekha_bottom,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>shirorekha_ylevel)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>a<sp/>histogram<sp/>from<sp/>projecting<sp/>the<sp/>word<sp/>on<sp/>a<sp/>vertical<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/>PixelHistogram<sp/>hist_horiz;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>hist_horiz.ConstructHorizontalCountHist(word_pix);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>ylevel<sp/>where<sp/>the<sp/>top-line<sp/>exists.<sp/>This<sp/>is<sp/>basically<sp/>the<sp/>global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>maxima<sp/>in<sp/>the<sp/>horizontal<sp/>histogram.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topline_onpixel_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>topline_ylevel<sp/>=<sp/>hist_horiz.GetHistogramMaximum(&amp;topline_onpixel_count);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>upper<sp/>and<sp/>lower<sp/>extents<sp/>of<sp/>the<sp/>shiro<sp/>rekha.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thresh<sp/>=<sp/>(topline_onpixel_count<sp/>*<sp/>70)<sp/>/<sp/>100;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ulimit<sp/>=<sp/>topline_ylevel;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>llimit<sp/>=<sp/>topline_ylevel;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ulimit<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>hist_horiz.hist()[ulimit]<sp/>&gt;=<sp/>thresh)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>--ulimit;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(llimit<sp/>&lt;<sp/>word_pix-&gt;h<sp/>&amp;&amp;<sp/>hist_horiz.hist()[llimit]<sp/>&gt;=<sp/>thresh)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>++llimit;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shirorekha_top)<sp/>*shirorekha_top<sp/>=<sp/>ulimit;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shirorekha_bottom)<sp/>*shirorekha_bottom<sp/>=<sp/>llimit;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shirorekha_ylevel)<sp/>*shirorekha_ylevel<sp/>=<sp/>topline_ylevel;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>returns<sp/>the<sp/>global-maxima<sp/>for<sp/>the<sp/>histogram.<sp/>The<sp/>frequency<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>global<sp/>maxima<sp/>is<sp/>returned<sp/>in<sp/>count,<sp/>if<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pixel_histogram_1ac984a3128e256cdc178cc33da1d81238" kindref="member">PixelHistogram::GetHistogramMaximum</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hist_[i]<sp/>&gt;<sp/>hist_[best_value])<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_value<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count)<sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>*count<sp/>=<sp/>hist_[best_value];</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_value;</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Methods<sp/>to<sp/>construct<sp/>histograms<sp/>from<sp/>images.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pixel_histogram_1ae6f0d2fd25a0a76b84e370aac7f7b58f" kindref="member">PixelHistogram::ConstructVerticalCountHist</ref>(Pix*<sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_pixel_histogram_1aaa214752dc7cbb3923fcece5dff758ed" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>pixGetWidth(pix);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>pixGetHeight(pix);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>hist_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[width];</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>length_<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wpl<sp/>=<sp/>pixGetWpl(pix);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>l_uint32<sp/>*data<sp/>=<sp/>pixGetData(pix);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>hist_[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>height;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>l_uint32<sp/>*line<sp/>=<sp/>data<sp/>+<sp/>i<sp/>*<sp/>wpl;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>width;<sp/>++j)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GET_DATA_BIT(line,<sp/>j))</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(hist_[j]);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_pixel_histogram_1a7d423f56f2e8440301f8af11a952fade" kindref="member">PixelHistogram::ConstructHorizontalCountHist</ref>(Pix*<sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_pixel_histogram_1aaa214752dc7cbb3923fcece5dff758ed" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>Numa*<sp/>counts<sp/>=<sp/>pixCountPixelsByRow(pix,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>length_<sp/>=<sp/>numaGetCount(counts);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>hist_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[length_];</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>l_int32<sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>numaGetIValue(counts,<sp/>i,<sp/>&amp;val);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>hist_[i]<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>numaDestroy(&amp;counts);</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/devanagari_processing.cpp"/>
  </compounddef>
</doxygen>
