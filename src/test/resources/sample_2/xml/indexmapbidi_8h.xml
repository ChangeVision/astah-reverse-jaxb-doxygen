<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="indexmapbidi_8h" kind="file">
    <compoundname>indexmapbidi.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="genericvector_8h" local="yes">genericvector.h</includes>
    <includedby refid="indexmapbidi_8cpp" local="yes">ccutil/indexmapbidi.cpp</includedby>
    <includedby refid="trainingsampleset_8h" local="yes">classify/trainingsampleset.h</includedby>
    <includedby refid="intfeaturemap_8h" local="yes">classify/intfeaturemap.h</includedby>
    <includedby refid="mastertrainer_8h" local="yes">classify/mastertrainer.h</includedby>
    <includedby refid="sampleiterator_8cpp" local="yes">classify/sampleiterator.cpp</includedby>
    <includedby refid="trainingsampleset_8cpp" local="yes">classify/trainingsampleset.cpp</includedby>
    <includedby refid="mftraining_8cpp" local="yes">training/mftraining.cpp</includedby>
    <incdepgraph>
      <node id="17242">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="17234">
        <label>stdlib.h</label>
      </node>
      <node id="17237">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="17238" relation="include">
        </childnode>
      </node>
      <node id="17239">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="17236" relation="include">
        </childnode>
      </node>
      <node id="17238">
        <label>limits.h</label>
      </node>
      <node id="17241">
        <label>string.h</label>
      </node>
      <node id="17235">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="17236" relation="include">
        </childnode>
      </node>
      <node id="17233">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17234" relation="include">
        </childnode>
        <childnode refid="17235" relation="include">
        </childnode>
        <childnode refid="17239" relation="include">
        </childnode>
        <childnode refid="17240" relation="include">
        </childnode>
        <childnode refid="17242" relation="include">
        </childnode>
      </node>
      <node id="17236">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="17237" relation="include">
        </childnode>
      </node>
      <node id="17232">
        <label>stdio.h</label>
      </node>
      <node id="17231">
        <label>ccutil/indexmapbidi.h</label>
        <link refid="indexmapbidi.h"/>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17233" relation="include">
        </childnode>
      </node>
      <node id="17240">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="17232" relation="include">
        </childnode>
        <childnode refid="17241" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17256">
        <label>classify/intfeaturedist.cpp</label>
        <link refid="intfeaturedist_8cpp"/>
      </node>
      <node id="17253">
        <label>classify/sampleiterator.cpp</label>
        <link refid="sampleiterator_8cpp"/>
      </node>
      <node id="17257">
        <label>classify/intfeaturemap.cpp</label>
        <link refid="intfeaturemap_8cpp"/>
      </node>
      <node id="17248">
        <label>classify/mastertrainer.cpp</label>
        <link refid="mastertrainer_8cpp"/>
      </node>
      <node id="17250">
        <label>training/commontraining.cpp</label>
        <link refid="commontraining_8cpp"/>
      </node>
      <node id="17258">
        <label>classify/trainingsample.cpp</label>
        <link refid="trainingsample_8cpp"/>
      </node>
      <node id="17246">
        <label>classify/errorcounter.cpp</label>
        <link refid="errorcounter_8cpp"/>
      </node>
      <node id="17255">
        <label>classify/intfeaturemap.h</label>
        <link refid="intfeaturemap_8h"/>
        <childnode refid="17256" relation="include">
        </childnode>
        <childnode refid="17257" relation="include">
        </childnode>
        <childnode refid="17247" relation="include">
        </childnode>
        <childnode refid="17258" relation="include">
        </childnode>
        <childnode refid="17254" relation="include">
        </childnode>
      </node>
      <node id="17251">
        <label>training/mftraining.cpp</label>
        <link refid="mftraining_8cpp"/>
      </node>
      <node id="17254">
        <label>classify/trainingsampleset.cpp</label>
        <link refid="trainingsampleset_8cpp"/>
      </node>
      <node id="17245">
        <label>classify/trainingsampleset.h</label>
        <link refid="trainingsampleset_8h"/>
        <childnode refid="17246" relation="include">
        </childnode>
        <childnode refid="17247" relation="include">
        </childnode>
        <childnode refid="17253" relation="include">
        </childnode>
        <childnode refid="17254" relation="include">
        </childnode>
      </node>
      <node id="17244">
        <label>ccutil/indexmapbidi.cpp</label>
        <link refid="indexmapbidi_8cpp"/>
      </node>
      <node id="17252">
        <label>training/shapeclustering.cpp</label>
        <link refid="shapeclustering_8cpp"/>
      </node>
      <node id="17249">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="17243">
        <label>ccutil/indexmapbidi.h</label>
        <link refid="indexmapbidi.h"/>
        <childnode refid="17244" relation="include">
        </childnode>
        <childnode refid="17245" relation="include">
        </childnode>
        <childnode refid="17255" relation="include">
        </childnode>
        <childnode refid="17247" relation="include">
        </childnode>
        <childnode refid="17253" relation="include">
        </childnode>
        <childnode refid="17254" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
      </node>
      <node id="17247">
        <label>classify/mastertrainer.h</label>
        <link refid="mastertrainer_8h"/>
        <childnode refid="17248" relation="include">
        </childnode>
        <childnode refid="17249" relation="include">
        </childnode>
        <childnode refid="17250" relation="include">
        </childnode>
        <childnode refid="17251" relation="include">
        </childnode>
        <childnode refid="17252" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesseract_1_1_index_map" prot="public">tesseract::IndexMap</innerclass>
    <innerclass refid="classtesseract_1_1_index_map_bi_di" prot="public">tesseract::IndexMapBiDi</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexmapbidi.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Bi-directional<sp/>mapping<sp/>between<sp/>a<sp/>sparse<sp/>and<sp/>compact<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>rays@google.com<sp/>(Ray<sp/>Smith)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Tue<sp/>Apr<sp/>06<sp/>11:33:59<sp/>PDT<sp/>2010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2010,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_CCUTIL_INDEXMAPBIDI_H_</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_CCUTIL_INDEXMAPBIDI_H_</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericvector_8h" kindref="compound">genericvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IndexMapBiDi;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bidirectional<sp/>one-to-one<sp/>mapping<sp/>between<sp/>a<sp/>sparse<sp/>and<sp/>a<sp/>compact<sp/>discrete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>space.<sp/>Many<sp/>entries<sp/>in<sp/>the<sp/>sparse<sp/>space<sp/>are<sp/>unmapped,<sp/>but<sp/>those<sp/>that<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mapped<sp/>have<sp/>a<sp/>1-1<sp/>mapping<sp/>to<sp/>(and<sp/>from)<sp/>the<sp/>compact<sp/>space,<sp/>where<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>values<sp/>are<sp/>used.<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>forming<sp/>subsets<sp/>of<sp/>larger<sp/>collections,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>subsets<sp/>of<sp/>character<sp/>sets,<sp/>or<sp/>subsets<sp/>of<sp/>binary<sp/>feature<sp/>spaces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>base<sp/>class<sp/>provides<sp/>basic<sp/>functionality<sp/>with<sp/>binary<sp/>search<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SparseToCompact<sp/>mapping<sp/>to<sp/>save<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>a<sp/>faster<sp/>inverse<sp/>mapping,<sp/>or<sp/>to<sp/>allow<sp/>a<sp/>many-to-one<sp/>mapping,<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IndexMapBiDi<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>there<sp/>are<sp/>currently<sp/>no<sp/>methods<sp/>to<sp/>setup<sp/>an<sp/>IndexMap<sp/>on<sp/>its<sp/>own!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>must<sp/>be<sp/>initialized<sp/>by<sp/>copying<sp/>from<sp/>an<sp/>IndexMapBiDi<sp/>or<sp/>by<sp/>DeSerialize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classtesseract_1_1_index_map" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_index_map" kindref="compound">IndexMap</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="classtesseract_1_1_index_map_1a0ed244a46cf41eaee538f917605a9c8c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1a0ed244a46cf41eaee538f917605a9c8c" kindref="member">~IndexMap</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SparseToCompact<sp/>takes<sp/>a<sp/>sparse<sp/>index<sp/>to<sp/>an<sp/>index<sp/>in<sp/>the<sp/>compact<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Uses<sp/>a<sp/>binary<sp/>search<sp/>to<sp/>find<sp/>the<sp/>result.<sp/>For<sp/>faster<sp/>speed<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IndexMapBiDi,<sp/>but<sp/>that<sp/>takes<sp/>more<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1af6d980041372e85befb238aae69192c0" kindref="member">SparseToCompact</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sparse_index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>CompactToSparse<sp/>takes<sp/>a<sp/>compact<sp/>index<sp/>to<sp/>the<sp/>corresponding<sp/>index<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sparse<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classtesseract_1_1_index_map_1ad9e50b500bcbadf8f3be98cd672f0c4a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1ad9e50b500bcbadf8f3be98cd672f0c4a" kindref="member">CompactToSparse</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compact_index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1a5089b80f1c2f365c07dc075da232aa89" kindref="member">compact_map_</ref>[compact_index];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>of<sp/>the<sp/>sparse<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classtesseract_1_1_index_map_1a25dc97e755104bf3e58a8a9f0a254d18" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1a25dc97e755104bf3e58a8a9f0a254d18" kindref="member">SparseSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1ae3ff257a84297cf8c67ee4bb27e54194" kindref="member">sparse_size_</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>of<sp/>the<sp/>compact<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1ab2904b1640580ad7ba6b2c14522dc3e8" kindref="member">CompactSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1a5089b80f1c2f365c07dc075da232aa89" kindref="member">compact_map_</ref>.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>from<sp/>the<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1a838d73d3bb8c7e8a1b43761cf99f337d" kindref="member">CopyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map" kindref="compound">IndexMap</ref>&amp;<sp/>src);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1a838d73d3bb8c7e8a1b43761cf99f337d" kindref="member">CopyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di" kindref="compound">IndexMapBiDi</ref>&amp;<sp/>src);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1a067894b455dcd2e3d013a9449e1aae7d" kindref="member">Serialize</ref>(FILE*<sp/>fp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1a74a60120500f7ced59f2cea3bc42138f" kindref="member">DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>sparse<sp/>space<sp/>covers<sp/>integers<sp/>in<sp/>the<sp/>range<sp/>[0,<sp/>sparse_size_-1].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classtesseract_1_1_index_map_1ae3ff257a84297cf8c67ee4bb27e54194" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_1ae3ff257a84297cf8c67ee4bb27e54194" kindref="member">sparse_size_</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>compact<sp/>space<sp/>covers<sp/>integers<sp/>in<sp/>the<sp/>range<sp/>[0,<sp/>compact_map_.size()-1].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>element<sp/>contains<sp/>the<sp/>corresponding<sp/>sparse<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classtesseract_1_1_index_map_1a5089b80f1c2f365c07dc075da232aa89" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;inT32&gt;</ref><sp/><ref refid="classtesseract_1_1_index_map_1a5089b80f1c2f365c07dc075da232aa89" kindref="member">compact_map_</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bidirectional<sp/>many-to-one<sp/>mapping<sp/>between<sp/>a<sp/>sparse<sp/>and<sp/>a<sp/>compact<sp/>discrete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>space.<sp/>As<sp/>with<sp/>IndexMap,<sp/>many<sp/>entries<sp/>may<sp/>be<sp/>unmapped,<sp/>but<sp/>unlike<sp/>IndexMap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>those<sp/>that<sp/>are,<sp/>many<sp/>may<sp/>be<sp/>mapped<sp/>to<sp/>the<sp/>same<sp/>compact<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>map<sp/>is<sp/>many-to-one,<sp/>it<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>directly<sp/>obtain<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sparse<sp/>indices<sp/>that<sp/>map<sp/>to<sp/>a<sp/>single<sp/>compact<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>map<sp/>is<sp/>time-<sp/>rather<sp/>than<sp/>space-efficient.<sp/>It<sp/>stores<sp/>the<sp/>entire<sp/>sparse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IndexMapBiDi<sp/>may<sp/>be<sp/>initialized<sp/>in<sp/>one<sp/>of<sp/>3<sp/>ways:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>Init(size,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Setup();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Sets<sp/>a<sp/>complete<sp/>1:1<sp/>mapping<sp/>with<sp/>no<sp/>unmapped<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Init(size,<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>...<sp/>SetMap(index,<sp/>true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Setup();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Specifies<sp/>precisely<sp/>which<sp/>sparse<sp/>indices<sp/>are<sp/>mapped.<sp/>The<sp/>mapping<sp/>is<sp/>1:1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>Either<sp/>of<sp/>the<sp/>above,<sp/>followed<sp/>by:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>...<sp/>Merge(index1,<sp/>index2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>CompleteMerges();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Allows<sp/>a<sp/>many-to-one<sp/>mapping<sp/>by<sp/>merging<sp/>compact<sp/>space<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classtesseract_1_1_index_map_bi_di" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_index_map_bi_di" kindref="compound">IndexMapBiDi</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map" kindref="compound">IndexMap</ref><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104" refid="classtesseract_1_1_index_map_bi_di_1a2f27556fa2b387b3b640a186a3e86144" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1a2f27556fa2b387b3b640a186a3e86144" kindref="member">~IndexMapBiDi</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Top-level<sp/>init<sp/>function<sp/>in<sp/>a<sp/>single<sp/>call<sp/>to<sp/>initialize<sp/>a<sp/>map<sp/>to<sp/>select</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>single<sp/>contiguous<sp/>subrange<sp/>[start,<sp/>end)<sp/>of<sp/>the<sp/>sparse<sp/>space<sp/>to<sp/>be<sp/>mapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>to<sp/>1<sp/>to<sp/>the<sp/>compact<sp/>space,<sp/>with<sp/>all<sp/>other<sp/>elements<sp/>of<sp/>the<sp/>sparse<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>left<sp/>unmapped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>call<sp/>Setup<sp/>after<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1aa33022e109d31768150283cfd9530f6c" kindref="member">InitAndSetupRange</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sparse_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initializes<sp/>just<sp/>the<sp/>sparse_map_<sp/>to<sp/>the<sp/>given<sp/>size<sp/>with<sp/>either<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>forward<sp/>indices<sp/>mapped<sp/>(all_mapped<sp/>=<sp/>true)<sp/>or<sp/>none<sp/>(all_mapped<sp/>=<sp/>false).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>Setup<sp/>immediately<sp/>after,<sp/>or<sp/>make<sp/>calls<sp/>to<sp/>SetMap<sp/>first<sp/>to<sp/>adjust<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>mapping<sp/>and<sp/>then<sp/>call<sp/>Setup<sp/>before<sp/>using<sp/>the<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1a165b8de5eeba0557d206f76b556793d9" kindref="member">Init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>all_mapped);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>a<sp/>given<sp/>index<sp/>in<sp/>the<sp/>sparse_map_<sp/>to<sp/>be<sp/>mapped<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1a3b4579cc4934a996ea688de031e758f2" kindref="member">SetMap</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sparse_index,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mapped);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Sets<sp/>up<sp/>the<sp/>sparse_map_<sp/>and<sp/>compact_map_<sp/>properly<sp/>after<sp/>Init<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>calls<sp/>to<sp/>SetMap.<sp/>Assumes<sp/>an<sp/>ordered<sp/>1-1<sp/>map<sp/>from<sp/>set<sp/>indices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>sparse<sp/>space<sp/>to<sp/>the<sp/>compact<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1a909e48dddc1488311f4d7083544eca56" kindref="member">Setup</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merges<sp/>the<sp/>two<sp/>compact<sp/>space<sp/>indices.<sp/>May<sp/>be<sp/>called<sp/>many<sp/>times,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>merges<sp/>must<sp/>be<sp/>concluded<sp/>by<sp/>a<sp/>call<sp/>to<sp/>CompleteMerges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>a<sp/>merge<sp/>was<sp/>actually<sp/>performed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1a2065aea120b8bbad4afc135bc3473044" kindref="member">Merge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compact_index1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compact_index2);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>given<sp/>compact<sp/>index<sp/>has<sp/>been<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classtesseract_1_1_index_map_bi_di_1a8df00cfcea90afefcb1cdf0e6738546d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1a8df00cfcea90afefcb1cdf0e6738546d" kindref="member">IsCompactDeleted</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MasterCompactIndex(index)<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Completes<sp/>one<sp/>or<sp/>more<sp/>Merge<sp/>operations<sp/>by<sp/>further<sp/>compacting<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compact<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1ab809f6fe92e0f3a7bce25eeb183ab120" kindref="member">CompleteMerges</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>SparseToCompact<sp/>takes<sp/>a<sp/>sparse<sp/>index<sp/>to<sp/>an<sp/>index<sp/>in<sp/>the<sp/>compact<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1a2c0f96f5d5fad6c9973e1b074fac5a03" kindref="member">SparseToCompact</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sparse_index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sparse_map_[sparse_index];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>size<sp/>of<sp/>the<sp/>sparse<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classtesseract_1_1_index_map_bi_di_1ae108e47d0f0049137072ad2bc1f6705d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1ae108e47d0f0049137072ad2bc1f6705d" kindref="member">SparseSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sparse_map_.<ref refid="class_generic_vector_1a111b51dd0bf1324cfb69ef70703d8e70" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>from<sp/>the<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1a2b5e065b41a3a58f83b28b8d6df05185" kindref="member">CopyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di" kindref="compound">IndexMapBiDi</ref>&amp;<sp/>src);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1aa92b1c868939853b0e20c6842ece0f1a" kindref="member">Serialize</ref>(FILE*<sp/>fp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1ad54cf4a1295408ec26e87ce377a8747d" kindref="member">DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Bulk<sp/>calls<sp/>to<sp/>SparseToCompact.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Maps<sp/>the<sp/>given<sp/>array<sp/>of<sp/>sparse<sp/>indices<sp/>to<sp/>an<sp/>array<sp/>of<sp/>compact<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>the<sp/>input<sp/>is<sp/>sorted.<sp/>The<sp/>output<sp/>indices<sp/>are<sp/>sorted<sp/>and<sp/>uniqued.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>value<sp/>is<sp/>the<sp/>number<sp/>of<sp/>&quot;missed&quot;<sp/>features,<sp/>being<sp/>features<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>map<sp/>to<sp/>the<sp/>compact<sp/>feature<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_index_map_bi_di_1a3114a55998f2e854a406d79650d83747" kindref="member">MapFeatures</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/>sparse,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>*<sp/>compact)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>master<sp/>compact<sp/>index<sp/>for<sp/>a<sp/>given<sp/>compact<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>During<sp/>a<sp/>multiple<sp/>merge<sp/>operation,<sp/>several<sp/>compact<sp/>indices<sp/>may<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>combined,<sp/>so<sp/>we<sp/>need<sp/>to<sp/>be<sp/>able<sp/>to<sp/>find<sp/>the<sp/>master<sp/>of<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MasterCompactIndex(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compact_index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(compact_index<sp/>&gt;=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparse_map_[<ref refid="classtesseract_1_1_index_map_1a5089b80f1c2f365c07dc075da232aa89" kindref="member">compact_map_</ref>[compact_index]]<sp/>!=<sp/>compact_index)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compact_index<sp/>=<sp/>sparse_map_[<ref refid="classtesseract_1_1_index_map_1a5089b80f1c2f365c07dc075da232aa89" kindref="member">compact_map_</ref>[compact_index]];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compact_index;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Direct<sp/>look-up<sp/>of<sp/>the<sp/>compact<sp/>index<sp/>for<sp/>each<sp/>element<sp/>in<sp/>sparse<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;inT32&gt;</ref><sp/>sparse_map_;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_CCUTIL_INDEXMAPBIDI_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccutil/indexmapbidi.h"/>
  </compounddef>
</doxygen>
