<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_f_c_o_o_r_d" kind="class" prot="public">
    <compoundname>FCOORD</compoundname>
    <includes refid="points_8h" local="no">points.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_f_c_o_o_r_d_1a8ef32551bd1685ea2b5377c93506a213" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float FCOORD::xcoord</definition>
        <argsstring></argsstring>
        <name>xcoord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="299" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_f_c_o_o_r_d_1a18532f70f31cce2d9614e97ff6f68215" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float FCOORD::ycoord</definition>
        <argsstring></argsstring>
        <name>ycoord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="300" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_f_c_o_o_r_d_1ab76ac19149426cd7fcbe2f55f955d3d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FCOORD::FCOORD</definition>
        <argsstring>()</argsstring>
        <name>FCOORD</name>
        <briefdescription>
<para>empty constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="193" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="193" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1abc66daac958bd4efb8074e70da0d3922" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FCOORD::FCOORD</definition>
        <argsstring>(float xvalue, float yvalue)</argsstring>
        <name>FCOORD</name>
        <param>
          <type>float</type>
          <declname>xvalue</declname>
        </param>
        <param>
          <type>float</type>
          <declname>yvalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xvalue</parametername>
</parameternamelist>
<parameterdescription>
<para>x value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yvalue</parametername>
</parameternamelist>
<parameterdescription>
<para>y value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="198" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="198" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a6fc221d926946bd07228174fc5c7d06c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FCOORD::FCOORD</definition>
        <argsstring>(ICOORD icoord)</argsstring>
        <name>FCOORD</name>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>icoord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="203" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="203" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FCOORD::x</definition>
        <argsstring>() const </argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="209" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FCOORD::y</definition>
        <argsstring>() const </argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="212" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FCOORD::set_x</definition>
        <argsstring>(float xin)</argsstring>
        <name>set_x</name>
        <param>
          <type>float</type>
          <declname>xin</declname>
        </param>
        <briefdescription>
<para>rewrite function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="216" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FCOORD::set_y</definition>
        <argsstring>(float yin)</argsstring>
        <name>set_y</name>
        <param>
          <type>float</type>
          <declname>yin</declname>
        </param>
        <briefdescription>
<para>rewrite function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="220" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a200f5a95100dd178551868e3ce242ef5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FCOORD::sqlength</definition>
        <argsstring>() const </argsstring>
        <name>sqlength</name>
        <briefdescription>
<para>find sq length </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="225" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a57c525156717d9e0823230eb5b84255d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FCOORD::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
<para>find length </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="230" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a95fcb2c8d94affe479612de3849ae60b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FCOORD::pt_to_pt_sqdist</definition>
        <argsstring>(const FCOORD &amp;pt) const </argsstring>
        <name>pt_to_pt_sqdist</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>sq dist between pts </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="235" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="235" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a436fdbffdc41279c811a00b47b82f7e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FCOORD::pt_to_pt_dist</definition>
        <argsstring>(const FCOORD &amp;pt) const </argsstring>
        <name>pt_to_pt_dist</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Distance between pts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="244" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a4ab61cbf07eeb3473ae0ba6558fe9fb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float FCOORD::angle</definition>
        <argsstring>() const </argsstring>
        <name>angle</name>
        <briefdescription>
<para>find angle </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="249" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="249" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1ae038bea84e90d493366d15c9578e4be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool FCOORD::normalise</definition>
        <argsstring>()</argsstring>
        <name>normalise</name>
        <briefdescription>
<para>Convert to unit vec. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1af0f80f0ba345a842f59a8b82153c4aa2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 FCOORD::operator==</definition>
        <argsstring>(const FCOORD &amp;other)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>test equality </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="257" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="257" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a3aed0c55d91e5621fb915c9920681599" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 FCOORD::operator!=</definition>
        <argsstring>(const FCOORD &amp;other)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>test inequality </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="261" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a81ca9ea0cac4cd8c1bca0314e29bb28d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FCOORD::rotate</definition>
        <argsstring>(const FCOORD vec)</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rotate <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>by vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="291" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="471" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="class_f_c_o_o_r_d_1a8fb03c71def155b9b9a4fa536f9c8892" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void FCOORD::unrotate</definition>
        <argsstring>(const FCOORD &amp;vec)</argsstring>
        <name>unrotate</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="294" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="480" bodyend="482"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1a93fc41bdafc5fe67e5d076302168c048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD operator!</definition>
        <argsstring>(const FCOORD &amp;)</argsstring>
        <name>operator!</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>src</defname>
        </param>
        <briefdescription>
<para>rotate 90 deg anti </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="265" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="258" bodyend="266"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1aa9c251947d512d66a63a597a8b5ced90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD operator-</definition>
        <argsstring>(const FCOORD &amp;)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>src</defname>
        </param>
        <briefdescription>
<para>unary minus </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="267" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="276" bodyend="284"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1a967005610313518ff204a7666c139b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD operator+</definition>
        <argsstring>(const FCOORD &amp;, const FCOORD &amp;)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>add </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="269" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="294" bodyend="302"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1a06a7274fa65d08c12e2a6b889d8aa57e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
        <definition>FCOORD&amp; operator+=</definition>
        <argsstring>(FCOORD &amp;, const FCOORD &amp;)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>add </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="271" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="312" bodyend="318"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1aaa8661637d35806c17ad14838869f269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD operator-</definition>
        <argsstring>(const FCOORD &amp;, const FCOORD &amp;)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>subtract </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="273" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="328" bodyend="336"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1a29e44d3df611db560d524640ea5961d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
        <definition>FCOORD&amp; operator-=</definition>
        <argsstring>(FCOORD &amp;, const FCOORD &amp;)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>subtract </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="275" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="346" bodyend="352"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1a09f2228a2c4e7eddb4efa190506b4229" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend float</type>
        <definition>float operator%</definition>
        <argsstring>(const FCOORD &amp;, const FCOORD &amp;)</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>scalar product </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="277" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="362" bodyend="366"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1a7519309ad5346ca46b2e06b060775bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend float</type>
        <definition>float operator*</definition>
        <argsstring>(const FCOORD &amp;, const FCOORD &amp;)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>cross product </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="279" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="375" bodyend="379"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1ae6e75d4fe10fa8d978de07430025343f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD operator*</definition>
        <argsstring>(const FCOORD &amp;, float)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>float</type>
          <defname>scale</defname>
        </param>
        <briefdescription>
<para>multiply </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="281" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="388" bodyend="396"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1a7bf09001b60d368e9e05c131843e4cf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD operator*</definition>
        <argsstring>(float, const FCOORD &amp;)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <defname>scale</defname>
        </param>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <briefdescription>
<para>multiply </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="283" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="399" bodyend="408"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1ad2bd6e89980328124567d1a30c320653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
        <definition>FCOORD&amp; operator*=</definition>
        <argsstring>(FCOORD &amp;, float)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>float</type>
          <defname>scale</defname>
        </param>
        <briefdescription>
<para>multiply </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="286" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="418" bodyend="424"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1a2eea256cd15417121152f09ada4e8fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD operator/</definition>
        <argsstring>(const FCOORD &amp;, float)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>float</type>
          <defname>scale</defname>
        </param>
        <briefdescription>
<para>divide </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="288" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="434" bodyend="444"/>
      </memberdef>
      <memberdef kind="friend" id="class_f_c_o_o_r_d_1a10d0bca7ebef641fd17e18f1836ec02e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
        <definition>FCOORD&amp; operator/=</definition>
        <argsstring>(FCOORD &amp;, float)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>float</type>
          <defname>scale</defname>
        </param>
        <briefdescription>
<para>divide </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="296" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="454" bodyend="462"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="190" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="189" bodyend="301"/>
    <listofallmembers>
      <member refid="class_f_c_o_o_r_d_1a4ab61cbf07eeb3473ae0ba6558fe9fb6" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>angle</name></member>
      <member refid="class_f_c_o_o_r_d_1ab76ac19149426cd7fcbe2f55f955d3d0" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>FCOORD</name></member>
      <member refid="class_f_c_o_o_r_d_1abc66daac958bd4efb8074e70da0d3922" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>FCOORD</name></member>
      <member refid="class_f_c_o_o_r_d_1a6fc221d926946bd07228174fc5c7d06c" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>FCOORD</name></member>
      <member refid="class_f_c_o_o_r_d_1a57c525156717d9e0823230eb5b84255d" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>length</name></member>
      <member refid="class_f_c_o_o_r_d_1ae038bea84e90d493366d15c9578e4be9" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>normalise</name></member>
      <member refid="class_f_c_o_o_r_d_1a93fc41bdafc5fe67e5d076302168c048" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator!</name></member>
      <member refid="class_f_c_o_o_r_d_1a3aed0c55d91e5621fb915c9920681599" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator!=</name></member>
      <member refid="class_f_c_o_o_r_d_1a09f2228a2c4e7eddb4efa190506b4229" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator%</name></member>
      <member refid="class_f_c_o_o_r_d_1a7519309ad5346ca46b2e06b060775bf3" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator*</name></member>
      <member refid="class_f_c_o_o_r_d_1ae6e75d4fe10fa8d978de07430025343f" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator*</name></member>
      <member refid="class_f_c_o_o_r_d_1a7bf09001b60d368e9e05c131843e4cf7" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator*</name></member>
      <member refid="class_f_c_o_o_r_d_1ad2bd6e89980328124567d1a30c320653" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator*=</name></member>
      <member refid="class_f_c_o_o_r_d_1a967005610313518ff204a7666c139b17" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator+</name></member>
      <member refid="class_f_c_o_o_r_d_1a06a7274fa65d08c12e2a6b889d8aa57e" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator+=</name></member>
      <member refid="class_f_c_o_o_r_d_1aa9c251947d512d66a63a597a8b5ced90" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator-</name></member>
      <member refid="class_f_c_o_o_r_d_1aaa8661637d35806c17ad14838869f269" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator-</name></member>
      <member refid="class_f_c_o_o_r_d_1a29e44d3df611db560d524640ea5961d9" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator-=</name></member>
      <member refid="class_f_c_o_o_r_d_1a2eea256cd15417121152f09ada4e8fa7" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator/</name></member>
      <member refid="class_f_c_o_o_r_d_1a10d0bca7ebef641fd17e18f1836ec02e" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator/=</name></member>
      <member refid="class_f_c_o_o_r_d_1af0f80f0ba345a842f59a8b82153c4aa2" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>operator==</name></member>
      <member refid="class_f_c_o_o_r_d_1a436fdbffdc41279c811a00b47b82f7e2" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>pt_to_pt_dist</name></member>
      <member refid="class_f_c_o_o_r_d_1a95fcb2c8d94affe479612de3849ae60b" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>pt_to_pt_sqdist</name></member>
      <member refid="class_f_c_o_o_r_d_1a81ca9ea0cac4cd8c1bca0314e29bb28d" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>rotate</name></member>
      <member refid="class_f_c_o_o_r_d_1ae2b7e41fa5e065a9ccbf7358b4911920" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>set_x</name></member>
      <member refid="class_f_c_o_o_r_d_1ad1e9f0d2a1f054f70b6f3036db6afcc0" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>set_y</name></member>
      <member refid="class_f_c_o_o_r_d_1a200f5a95100dd178551868e3ce242ef5" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>sqlength</name></member>
      <member refid="class_f_c_o_o_r_d_1a8fb03c71def155b9b9a4fa536f9c8892" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>unrotate</name></member>
      <member refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>x</name></member>
      <member refid="class_f_c_o_o_r_d_1a8ef32551bd1685ea2b5377c93506a213" prot="private" virt="non-virtual"><scope>FCOORD</scope><name>xcoord</name></member>
      <member refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" prot="public" virt="non-virtual"><scope>FCOORD</scope><name>y</name></member>
      <member refid="class_f_c_o_o_r_d_1a18532f70f31cce2d9614e97ff6f68215" prot="private" virt="non-virtual"><scope>FCOORD</scope><name>ycoord</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
