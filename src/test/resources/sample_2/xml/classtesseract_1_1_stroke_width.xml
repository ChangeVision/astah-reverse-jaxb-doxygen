<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classtesseract_1_1_stroke_width" kind="class" prot="public">
    <compoundname>tesseract::StrokeWidth</compoundname>
    <basecompoundref refid="classtesseract_1_1_blob_grid" prot="public" virt="non-virtual">tesseract::BlobGrid</basecompoundref>
    <includes refid="strokewidth_8h" local="no">strokewidth.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1abf0ed4cf9d6bb55af9caddaef4bdf638" prot="private" static="no" mutable="no">
        <type>Pix *</type>
        <definition>Pix* tesseract::StrokeWidth::nontext_map_</definition>
        <argsstring></argsstring>
        <name>nontext_map_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="283" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1af1136455243da9df9dfd6ae8d14580d8" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_textline_projection" kindref="compound">TextlineProjection</ref> *</type>
        <definition>TextlineProjection* tesseract::StrokeWidth::projection_</definition>
        <argsstring></argsstring>
        <name>projection_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="285" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1ae7951f7083dfbcf7e837ba66b69930aa" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
        <definition>const DENORM* tesseract::StrokeWidth::denorm_</definition>
        <argsstring></argsstring>
        <name>denorm_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="287" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1a7437b373dec7961ee4b0cfa8185d6b18" prot="private" static="no" mutable="no">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>TBOX tesseract::StrokeWidth::grid_box_</definition>
        <argsstring></argsstring>
        <name>grid_box_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="289" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1ad11595decd15a4c936a4b1680cfddaa3" prot="private" static="no" mutable="no">
        <type><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref></type>
        <definition>FCOORD tesseract::StrokeWidth::rerotation_</definition>
        <argsstring></argsstring>
        <name>rerotation_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="291" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1af5ecd49fc6d47920ce815742bcad9066" prot="private" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* tesseract::StrokeWidth::leaders_win_</definition>
        <argsstring></argsstring>
        <name>leaders_win_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="293" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1a7fc2b662fad01c04d3acb636de466af0" prot="private" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* tesseract::StrokeWidth::initial_widths_win_</definition>
        <argsstring></argsstring>
        <name>initial_widths_win_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="294" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1a8ae4031d4fee68525cc31206954150c4" prot="private" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* tesseract::StrokeWidth::widths_win_</definition>
        <argsstring></argsstring>
        <name>widths_win_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="295" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1a54250e21a2fd590db379eeeda1c0d697" prot="private" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* tesseract::StrokeWidth::chains_win_</definition>
        <argsstring></argsstring>
        <name>chains_win_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="296" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1a85cb3a93592d3281c28c2af99c7d8606" prot="private" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* tesseract::StrokeWidth::diacritics_win_</definition>
        <argsstring></argsstring>
        <name>diacritics_win_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="297" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1a38e65838e8405302b1e325cad7ce2982" prot="private" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* tesseract::StrokeWidth::textlines_win_</definition>
        <argsstring></argsstring>
        <name>textlines_win_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="298" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_stroke_width_1a4b21405e86790db3b745d5cc84c9ac9e" prot="private" static="no" mutable="no">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView* tesseract::StrokeWidth::smoothed_win_</definition>
        <argsstring></argsstring>
        <name>smoothed_win_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="299" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a4551a10f256b1df74832b53b8f0e33b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::StrokeWidth::StrokeWidth</definition>
        <argsstring>(int gridsize, const ICOORD &amp;bleft, const ICOORD &amp;tright)</argsstring>
        <name>StrokeWidth</name>
        <param>
          <type>int</type>
          <declname>gridsize</declname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <declname>bleft</declname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <declname>tright</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="51" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="121" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a86277000549e608335b9fcbb042d165b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>tesseract::StrokeWidth::~StrokeWidth</definition>
        <argsstring>()</argsstring>
        <name>~StrokeWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="134" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a8273b43eb6170be582f30d5049aec523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::SetNeighboursOnMediumBlobs</definition>
        <argsstring>(TO_BLOCK *block)</argsstring>
        <name>SetNeighboursOnMediumBlobs</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="154" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1aadfc985b5ed12df5ac545b344a304326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::FindTextlineDirectionAndFixBrokenCJK</definition>
        <argsstring>(bool cjk_merge, TO_BLOCK *input_block)</argsstring>
        <name>FindTextlineDirectionAndFixBrokenCJK</name>
        <param>
          <type>bool</type>
          <declname>cjk_merge</declname>
        </param>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>input_block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="63" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="168" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a2db693b25f867e5ac21177353f6abcac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::StrokeWidth::TestVerticalTextDirection</definition>
        <argsstring>(TO_BLOCK *block, BLOBNBOX_CLIST *osd_blobs)</argsstring>
        <name>TestVerticalTextDirection</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>osd_blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="81" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="219" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a35f8ebba3622b6777da414ce6679158d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::CorrectForRotation</definition>
        <argsstring>(const FCOORD &amp;rerotation, ColPartitionGrid *part_grid)</argsstring>
        <name>CorrectForRotation</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rerotation</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="85" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="263" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a8418b53298a0a6b71b8d4c804d48980e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::FindLeaderPartitions</definition>
        <argsstring>(TO_BLOCK *block, ColPartitionGrid *part_grid)</argsstring>
        <name>FindLeaderPartitions</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="89" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="272" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a726e68e695eceafbf22602ba8c563c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::RemoveLineResidue</definition>
        <argsstring>(ColPartition_LIST *big_part_list)</argsstring>
        <name>RemoveLineResidue</name>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>big_part_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="94" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="292" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a64cc6e7ab7c16c2181dd1fa09d6c765e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::GradeBlobsIntoPartitions</definition>
        <argsstring>(const FCOORD &amp;rerotation, TO_BLOCK *block, Pix *nontext_pix, const DENORM *denorm, TextlineProjection *projection, ColPartitionGrid *part_grid, ColPartition_LIST *big_parts)</argsstring>
        <name>GradeBlobsIntoPartitions</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rerotation</declname>
        </param>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>Pix *</type>
          <declname>nontext_pix</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_textline_projection" kindref="compound">TextlineProjection</ref> *</type>
          <declname>projection</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>big_parts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="111" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="356" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a90b53628c521c80302467b8059fc0a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::HandleClick</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>HandleClick</name>
        <reimplements refid="classtesseract_1_1_b_b_grid_1aa3c72e54651cbf20ee185f8623a60335">HandleClick</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles a click event in a display window. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="120" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="404" bodyend="438"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1ac3d05b1e694e9c35f155964e99a57f1e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::ComputeNoiseDensity</definition>
        <argsstring>(TO_BLOCK *block, TabFind *line_grid)</argsstring>
        <name>ComputeNoiseDensity</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_tab_find" kindref="compound">TabFind</ref> *</type>
          <declname>line_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1aba12fdda3e2c7bc57d424178a2f05f00" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::FindLeadersAndMarkNoise</definition>
        <argsstring>(TO_BLOCK *block, ColPartition_LIST *leader_parts)</argsstring>
        <name>FindLeadersAndMarkNoise</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>leader_parts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="136" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="449" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1aef9a7fd06e501eb011ae73061bac46d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::InsertBlobs</definition>
        <argsstring>(TO_BLOCK *block)</argsstring>
        <name>InsertBlobs</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts the block blobs (normal and large) into this grid. Blobs remain owned by the block. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="141" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="518" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1ade61015d3503b898b8f9b6764dc466ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::StrokeWidth::FixBrokenCJK</definition>
        <argsstring>(TO_BLOCK *block)</argsstring>
        <name>FixBrokenCJK</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="148" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="584" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1ad7f54e8d5cefdbd58c74c5f9bce68276" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::AccumulateOverlaps</definition>
        <argsstring>(const BLOBNBOX *not_this, bool debug, int max_size, int max_dist, TBOX *bbox, BLOBNBOX_CLIST *blobs)</argsstring>
        <name>AccumulateOverlaps</name>
        <param>
          <type>const <ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>not_this</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_dist</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="154" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="712" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a1507231431726b9fd66a843b0adc3d54" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::FindTextlineFlowDirection</definition>
        <argsstring>(bool display_if_debugging)</argsstring>
        <name>FindTextlineFlowDirection</name>
        <param>
          <type>bool</type>
          <declname>display_if_debugging</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="165" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="803" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a3986245b34973b53beb591419d01fd83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::SetNeighbours</definition>
        <argsstring>(bool leaders, bool activate_line_trap, BLOBNBOX *blob)</argsstring>
        <name>SetNeighbours</name>
        <param>
          <type>bool</type>
          <declname>leaders</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>activate_line_trap</declname>
        </param>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="172" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="850" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1ac43e7f3b62600d7a59e1f4e25918ed81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::StrokeWidth::FindGoodNeighbour</definition>
        <argsstring>(BlobNeighbourDir dir, bool leaders, BLOBNBOX *blob)</argsstring>
        <name>FindGoodNeighbour</name>
        <param>
          <type><ref refid="blobbox_8h_1a4974474b3b161b68355d9a16eeaa3883" kindref="member">BlobNeighbourDir</ref></type>
          <declname>dir</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>leaders</declname>
        </param>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="179" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="872" bodyend="1028"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1afdb09c2cf51ec0afebf2777949add003" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::SetNeighbourFlows</definition>
        <argsstring>(BLOBNBOX *blob)</argsstring>
        <name>SetNeighbourFlows</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="183" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1101" bodyend="1138"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1ac87836567fc43fc2824a85fd712711f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::SimplifyObviousNeighbours</definition>
        <argsstring>(BLOBNBOX *blob)</argsstring>
        <name>SimplifyObviousNeighbours</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="188" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1157" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a087b07b5396bcb1bdf7bb773a5e646ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::SmoothNeighbourTypes</definition>
        <argsstring>(BLOBNBOX *blob, bool desperate)</argsstring>
        <name>SmoothNeighbourTypes</name>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>desperate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="193" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1196" bodyend="1227"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a609033a13968b22ba56d7de2653612d1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::MarkLeaderNeighbours</definition>
        <argsstring>(const ColPartition *part, LeftOrRight side)</argsstring>
        <name>MarkLeaderNeighbours</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>part</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1acd121b57d321ca8511db069f603d071f" kindref="member">LeftOrRight</ref></type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="198" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="526" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1acfd1c431554ef990975193060d89e121" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::FindInitialPartitions</definition>
        <argsstring>(const FCOORD &amp;rerotation, TO_BLOCK *block, ColPartitionGrid *part_grid, ColPartition_LIST *big_parts)</argsstring>
        <name>FindInitialPartitions</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>rerotation</declname>
        </param>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>big_parts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="205" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1234" bodyend="1274"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1af5920ef12ef3c1e6056751f198bdbefb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::FindVerticalTextChains</definition>
        <argsstring>(ColPartitionGrid *part_grid)</argsstring>
        <name>FindVerticalTextChains</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="210" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1292" bodyend="1317"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a2d22aecae638fa3e5027c570380ebfad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::FindHorizontalTextChains</definition>
        <argsstring>(ColPartitionGrid *part_grid)</argsstring>
        <name>FindHorizontalTextChains</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="212" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1335" bodyend="1358"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1afa01a3ba3d8b078ecedb950d889c54d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::TestDiacritics</definition>
        <argsstring>(ColPartitionGrid *part_grid, TO_BLOCK *block)</argsstring>
        <name>TestDiacritics</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="214" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1367" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1afbeccd1fbd081a24c47a9a6861bd235d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::StrokeWidth::DiacriticBlob</definition>
        <argsstring>(BlobGrid *small_grid, BLOBNBOX *blob)</argsstring>
        <name>DiacriticBlob</name>
        <param>
          <type><ref refid="classtesseract_1_1_blob_grid" kindref="compound">BlobGrid</ref> *</type>
          <declname>small_grid</declname>
        </param>
        <param>
          <type><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="221" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1444" bodyend="1599"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1abfc375456531c2e2200a25f7b755d9d3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::StrokeWidth::DiacriticXGapFilled</definition>
        <argsstring>(BlobGrid *grid, const TBOX &amp;diacritic_box, const TBOX &amp;base_box)</argsstring>
        <name>DiacriticXGapFilled</name>
        <param>
          <type><ref refid="classtesseract_1_1_blob_grid" kindref="compound">BlobGrid</ref> *</type>
          <declname>grid</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>diacritic_box</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>base_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="235" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1614" bodyend="1650"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a3f9e802451aa6714c7951d50a1f3fcf3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::MergeDiacritics</definition>
        <argsstring>(TO_BLOCK *block, ColPartitionGrid *part_grid)</argsstring>
        <name>MergeDiacritics</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="238" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1653" bodyend="1677"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a52fd645f9d553dbc73dccaf3c65b2367" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::RemoveLargeUnusedBlobs</definition>
        <argsstring>(TO_BLOCK *block, ColPartitionGrid *part_grid, ColPartition_LIST *big_parts)</argsstring>
        <name>RemoveLargeUnusedBlobs</name>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type>ColPartition_LIST *</type>
          <declname>big_parts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="242" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1682" bodyend="1696"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a477c5a8ba1bc4b9826e4e99c2d253668" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::PartitionRemainingBlobs</definition>
        <argsstring>(ColPartitionGrid *part_grid)</argsstring>
        <name>PartitionRemainingBlobs</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="247" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1699" bodyend="1728"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a9ec59ce5e72d5902fc1a6c670e27bd4f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::MakePartitionsFromCellList</definition>
        <argsstring>(bool combine, ColPartitionGrid *part_grid, BLOBNBOX_CLIST *cell_list)</argsstring>
        <name>MakePartitionsFromCellList</name>
        <param>
          <type>bool</type>
          <declname>combine</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <param>
          <type>BLOBNBOX_CLIST *</type>
          <declname>cell_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="251" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1732" bodyend="1756"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a7845af56200b1c1a39a56f542785ec1d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::CompletePartition</definition>
        <argsstring>(ColPartition *part, ColPartitionGrid *part_grid)</argsstring>
        <name>CompletePartition</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>part</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="257" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1760" bodyend="1770"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1a860ba53c77d67aae722ccf26adb764bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::StrokeWidth::EasyMerges</definition>
        <argsstring>(ColPartitionGrid *part_grid)</argsstring>
        <name>EasyMerges</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition_grid" kindref="compound">ColPartitionGrid</ref> *</type>
          <declname>part_grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="260" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1774" bodyend="1778"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1ade4edbda72ee27c183b03dc6554bfb3e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::StrokeWidth::OrientationSearchBox</definition>
        <argsstring>(ColPartition *part, TBOX *box)</argsstring>
        <name>OrientationSearchBox</name>
        <param>
          <type><ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>part</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="265" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1783" bodyend="1792"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1ae2c58a723d0796cc4275ee345a59ddb2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::StrokeWidth::ConfirmEasyMerge</definition>
        <argsstring>(const ColPartition *p1, const ColPartition *p2)</argsstring>
        <name>ConfirmEasyMerge</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_col_partition" kindref="compound">ColPartition</ref> *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="268" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1795" bodyend="1821"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1aa79ea18217931c7418e2153cb369ee7b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::StrokeWidth::NoNoiseInBetween</definition>
        <argsstring>(const TBOX &amp;box1, const TBOX &amp;box2) const </argsstring>
        <name>NoNoiseInBetween</name>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box1</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="271" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1824" bodyend="1827"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1abf8c107395d1802182122e5483f4f33b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView * tesseract::StrokeWidth::DisplayGoodBlobs</definition>
        <argsstring>(const char *window_name, int x, int y)</argsstring>
        <name>DisplayGoodBlobs</name>
        <param>
          <type>const char *</type>
          <declname>window_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Displays the blobs colored according to the number of good neighbours and the vertical/horizontal flow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="275" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1832" bodyend="1871"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_stroke_width_1ae1cd531c5c1f7f5eb424f30d0a1b5c01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
        <definition>ScrollView * tesseract::StrokeWidth::DisplayDiacritics</definition>
        <argsstring>(const char *window_name, int x, int y, TO_BLOCK *block)</argsstring>
        <name>DisplayDiacritics</name>
        <param>
          <type>const char *</type>
          <declname>window_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_t_o___b_l_o_c_k" kindref="compound">TO_BLOCK</ref> *</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="278" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.cpp" bodystart="1884" bodyend="1919"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classtesseract_1_1_stroke_width" kindref="compound">StrokeWidth</ref> class holds all the normal and large blobs. It is used to find good large blobs and move them to the normal blobs by virtue of having a reasonable strokewidth compatible neighbour. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1886">
        <label>tesseract::StrokeWidth</label>
        <link refid="classtesseract_1_1_stroke_width"/>
        <childnode refid="1887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1887">
        <label>tesseract::BlobGrid</label>
        <link refid="classtesseract_1_1_blob_grid"/>
        <childnode refid="1888" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1888">
        <label>tesseract::BBGrid&lt; BLOBNBOX, BLOBNBOX_CLIST, BLOBNBOX_C_IT &gt;</label>
        <link refid="classtesseract_1_1_b_b_grid"/>
        <childnode refid="1889" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1889">
        <label>tesseract::GridBase</label>
        <link refid="classtesseract_1_1_grid_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1890">
        <label>tesseract::StrokeWidth</label>
        <link refid="classtesseract_1_1_stroke_width"/>
        <childnode refid="1891" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1894">
        <label>ICOORD</label>
        <link refid="class_i_c_o_o_r_d"/>
      </node>
      <node id="1891">
        <label>tesseract::BlobGrid</label>
        <link refid="classtesseract_1_1_blob_grid"/>
        <childnode refid="1892" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1892">
        <label>tesseract::BBGrid&lt; BLOBNBOX, BLOBNBOX_CLIST, BLOBNBOX_C_IT &gt;</label>
        <link refid="classtesseract_1_1_b_b_grid"/>
        <childnode refid="1893" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1893">
        <label>tesseract::GridBase</label>
        <link refid="classtesseract_1_1_grid_base"/>
        <childnode refid="1894" relation="usage">
          <edgelabel>tright_</edgelabel>
          <edgelabel>bleft_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/trunk/textord/strokewidth.h" line="49" column="1" bodyfile="/Users/makoto/Desktop/trunk/textord/strokewidth.h" bodystart="49" bodyend="300"/>
    <listofallmembers>
      <member refid="classtesseract_1_1_stroke_width_1ad7f54e8d5cefdbd58c74c5f9bce68276" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>AccumulateOverlaps</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1a19df7a0ef4d8204b5d6fa36765011114" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>AssertNoDuplicates</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1a433d978224467a5842ab3126dd0ba903" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>BBGrid</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1aed2c82e5d0aa5c92137aae623a79f5ec" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>BBGrid</name></member>
      <member refid="classtesseract_1_1_grid_base_1ad20b2cb8eb2bf52871d5260c04949cce" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>bleft</name></member>
      <member refid="classtesseract_1_1_grid_base_1a5f09e93ec22c3f7a245eb6611309d8d6" prot="protected" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>bleft_</name></member>
      <member refid="classtesseract_1_1_blob_grid_1a86754acb30620ac8308d7e178f7618bd" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>BlobGrid</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a54250e21a2fd590db379eeeda1c0d697" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>chains_win_</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1a0b373075bdfda41719d6fb9a64bcfee0" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>Clear</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1aa3f84b8f684c71394335a5a4f17c90be" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>ClearGridData</name></member>
      <member refid="classtesseract_1_1_grid_base_1a6349387c9d98fae34cf247b12cdc5a00" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>ClipGridCoords</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a7845af56200b1c1a39a56f542785ec1d" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>CompletePartition</name></member>
      <member refid="classtesseract_1_1_stroke_width_1ac3d05b1e694e9c35f155964e99a57f1e" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>ComputeNoiseDensity</name></member>
      <member refid="classtesseract_1_1_stroke_width_1ae2c58a723d0796cc4275ee345a59ddb2" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>ConfirmEasyMerge</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a35f8ebba3622b6777da414ce6679158d" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>CorrectForRotation</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1a48e846646c932192133cdcdac274c94d" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>CountCellElements</name></member>
      <member refid="classtesseract_1_1_stroke_width_1ae7951f7083dfbcf7e837ba66b69930aa" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>denorm_</name></member>
      <member refid="classtesseract_1_1_stroke_width_1afbeccd1fbd081a24c47a9a6861bd235d" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>DiacriticBlob</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a85cb3a93592d3281c28c2af99c7d8606" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>diacritics_win_</name></member>
      <member refid="classtesseract_1_1_stroke_width_1abfc375456531c2e2200a25f7b755d9d3" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>DiacriticXGapFilled</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1a01e56b692125ef3220a23695e2c4821f" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>DisplayBoxes</name></member>
      <member refid="classtesseract_1_1_stroke_width_1ae1cd531c5c1f7f5eb424f30d0a1b5c01" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>DisplayDiacritics</name></member>
      <member refid="classtesseract_1_1_stroke_width_1abf8c107395d1802182122e5483f4f33b" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>DisplayGoodBlobs</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a860ba53c77d67aae722ccf26adb764bb" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>EasyMerges</name></member>
      <member refid="classtesseract_1_1_stroke_width_1ac43e7f3b62600d7a59e1f4e25918ed81" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>FindGoodNeighbour</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a2d22aecae638fa3e5027c570380ebfad" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>FindHorizontalTextChains</name></member>
      <member refid="classtesseract_1_1_stroke_width_1acfd1c431554ef990975193060d89e121" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>FindInitialPartitions</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a8418b53298a0a6b71b8d4c804d48980e" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>FindLeaderPartitions</name></member>
      <member refid="classtesseract_1_1_stroke_width_1aba12fdda3e2c7bc57d424178a2f05f00" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>FindLeadersAndMarkNoise</name></member>
      <member refid="classtesseract_1_1_stroke_width_1aadfc985b5ed12df5ac545b344a304326" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>FindTextlineDirectionAndFixBrokenCJK</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a1507231431726b9fd66a843b0adc3d54" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>FindTextlineFlowDirection</name></member>
      <member refid="classtesseract_1_1_stroke_width_1af5920ef12ef3c1e6056751f198bdbefb" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>FindVerticalTextChains</name></member>
      <member refid="classtesseract_1_1_stroke_width_1ade61015d3503b898b8f9b6764dc466ef" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>FixBrokenCJK</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a64cc6e7ab7c16c2181dd1fa09d6c765e" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>GradeBlobsIntoPartitions</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1ae58f8b18fce79b681e5f480dd2ea00e4" prot="protected" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>grid_</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a7437b373dec7961ee4b0cfa8185d6b18" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>grid_box_</name></member>
      <member refid="classtesseract_1_1_grid_base_1ac1ea91a905041f0fa896bec740903a77" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>GridBase</name></member>
      <member refid="classtesseract_1_1_grid_base_1a52bfcebedaa848425b8e2d228df559b6" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>GridBase</name></member>
      <member refid="classtesseract_1_1_grid_base_1adcda3a0efeed2a95fc777fc7127898a6" prot="protected" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>gridbuckets_</name></member>
      <member refid="classtesseract_1_1_grid_base_1a9cb158bba184d657c51257b98eea9f8f" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>GridCoords</name></member>
      <member refid="classtesseract_1_1_grid_base_1a07e6b230c150180d009ef1f317e642f2" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>gridheight</name></member>
      <member refid="classtesseract_1_1_grid_base_1ae70ca33c0676a296720fea5ddc0aa5cc" prot="protected" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>gridheight_</name></member>
      <member refid="classtesseract_1_1_grid_base_1afff2cee730084711205977b5fcb4901e" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>gridsize</name></member>
      <member refid="classtesseract_1_1_grid_base_1a0758dd90d5ce47e504a4148f4cda33f3" prot="protected" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>gridsize_</name></member>
      <member refid="classtesseract_1_1_grid_base_1a0a38ea995b9d65f8b67d66d5501a5b80" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>gridwidth</name></member>
      <member refid="classtesseract_1_1_grid_base_1a429c00f7b3ea66cfd63a75cfa2c1b43d" prot="protected" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>gridwidth_</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a90b53628c521c80302467b8059fc0a5c" prot="public" virt="virtual"><scope>tesseract::StrokeWidth</scope><name>HandleClick</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1a1d2990adf323d7910fbf87b6fc3a7415" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>Init</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a7fc2b662fad01c04d3acb636de466af0" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>initial_widths_win_</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1a7b379525e3d60c68e583352ae4b8a750" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>InsertBBox</name></member>
      <member refid="classtesseract_1_1_blob_grid_1ae3e2254b403947fc9628221aa3cb5b26" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>InsertBlobList</name></member>
      <member refid="classtesseract_1_1_stroke_width_1aef9a7fd06e501eb011ae73061bac46d0" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>InsertBlobs</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1a70a2666a2f5db0cf64dea637953b1412" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>InsertPixPtBBox</name></member>
      <member refid="classtesseract_1_1_stroke_width_1af5ecd49fc6d47920ce815742bcad9066" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>leaders_win_</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a9ec59ce5e72d5902fc1a6c670e27bd4f" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>MakePartitionsFromCellList</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1aa716f76c7f04f7112abfc10a3f8c63e0" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>MakeWindow</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a609033a13968b22ba56d7de2653612d1" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>MarkLeaderNeighbours</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a3f9e802451aa6714c7951d50a1f3fcf3" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>MergeDiacritics</name></member>
      <member refid="classtesseract_1_1_stroke_width_1aa79ea18217931c7418e2153cb369ee7b" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>NoNoiseInBetween</name></member>
      <member refid="classtesseract_1_1_stroke_width_1abf0ed4cf9d6bb55af9caddaef4bdf638" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>nontext_map_</name></member>
      <member refid="classtesseract_1_1_stroke_width_1ade4edbda72ee27c183b03dc6554bfb3e" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>OrientationSearchBox</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a477c5a8ba1bc4b9826e4e99c2d253668" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>PartitionRemainingBlobs</name></member>
      <member refid="classtesseract_1_1_stroke_width_1af1136455243da9df9dfd6ae8d14580d8" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>projection_</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1ab5924a2ebc0760856cbafde9df32fcd6" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>RectangleEmpty</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1adc713153c1282d8727f85ee6d38d7d31" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>RemoveBBox</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a52fd645f9d553dbc73dccaf3c65b2367" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>RemoveLargeUnusedBlobs</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a726e68e695eceafbf22602ba8c563c4a" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>RemoveLineResidue</name></member>
      <member refid="classtesseract_1_1_stroke_width_1ad11595decd15a4c936a4b1680cfddaa3" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>rerotation_</name></member>
      <member refid="classtesseract_1_1_stroke_width_1afdb09c2cf51ec0afebf2777949add003" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>SetNeighbourFlows</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a3986245b34973b53beb591419d01fd83" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>SetNeighbours</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a8273b43eb6170be582f30d5049aec523" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>SetNeighboursOnMediumBlobs</name></member>
      <member refid="classtesseract_1_1_stroke_width_1ac87836567fc43fc2824a85fd712711f5" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>SimplifyObviousNeighbours</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a4b21405e86790db3b745d5cc84c9ac9e" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>smoothed_win_</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a087b07b5396bcb1bdf7bb773a5e646ab" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>SmoothNeighbourTypes</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a4551a10f256b1df74832b53b8f0e33b2" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>StrokeWidth</name></member>
      <member refid="classtesseract_1_1_stroke_width_1afa01a3ba3d8b078ecedb950d889c54d5" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>TestDiacritics</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a2db693b25f867e5ac21177353f6abcac" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>TestVerticalTextDirection</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a38e65838e8405302b1e325cad7ce2982" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>textlines_win_</name></member>
      <member refid="classtesseract_1_1_grid_base_1aa94e147841b6a4fae0b28e7e872685a5" prot="public" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>tright</name></member>
      <member refid="classtesseract_1_1_grid_base_1ac348165d112922b3d956f924405012cd" prot="protected" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>tright_</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a8ae4031d4fee68525cc31206954150c4" prot="private" virt="non-virtual"><scope>tesseract::StrokeWidth</scope><name>widths_win_</name></member>
      <member refid="classtesseract_1_1_b_b_grid_1a70d6e4e5938d390162572615e0a9036a" prot="public" virt="virtual"><scope>tesseract::StrokeWidth</scope><name>~BBGrid</name></member>
      <member refid="classtesseract_1_1_blob_grid_1a70262f671ac05a8b72c71ba75d9a51de" prot="public" virt="virtual"><scope>tesseract::StrokeWidth</scope><name>~BlobGrid</name></member>
      <member refid="classtesseract_1_1_grid_base_1a7ee16480a8ca444d7847850ac0115813" prot="public" virt="virtual"><scope>tesseract::StrokeWidth</scope><name>~GridBase</name></member>
      <member refid="classtesseract_1_1_stroke_width_1a86277000549e608335b9fcbb042d165b" prot="public" virt="virtual"><scope>tesseract::StrokeWidth</scope><name>~StrokeWidth</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
