<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="trainingsampleset_8h" kind="file">
    <compoundname>trainingsampleset.h</compoundname>
    <includes refid="bitvector_8h" local="yes">bitvector.h</includes>
    <includes refid="genericvector_8h" local="yes">genericvector.h</includes>
    <includes refid="indexmapbidi_8h" local="yes">indexmapbidi.h</includes>
    <includes refid="matrix_8h" local="yes">matrix.h</includes>
    <includes refid="shapetable_8h" local="yes">shapetable.h</includes>
    <includes refid="trainingsample_8h" local="yes">trainingsample.h</includes>
    <includedby refid="errorcounter_8cpp" local="yes">classify/errorcounter.cpp</includedby>
    <includedby refid="mastertrainer_8h" local="yes">classify/mastertrainer.h</includedby>
    <includedby refid="sampleiterator_8cpp" local="yes">classify/sampleiterator.cpp</includedby>
    <includedby refid="trainingsampleset_8cpp" local="yes">classify/trainingsampleset.cpp</includedby>
    <incdepgraph>
      <node id="28189">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="28190" relation="include">
        </childnode>
        <childnode refid="28195" relation="include">
        </childnode>
        <childnode refid="28161" relation="include">
        </childnode>
      </node>
      <node id="28136">
        <label>assert.h</label>
      </node>
      <node id="28147">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="28195">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="28142">
        <label>stdlib.h</label>
      </node>
      <node id="28139">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="28140" relation="include">
        </childnode>
      </node>
      <node id="28201">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="28138" relation="include">
        </childnode>
      </node>
      <node id="28167">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="28144" relation="include">
        </childnode>
      </node>
      <node id="28190">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="28191" relation="include">
        </childnode>
        <childnode refid="28144" relation="include">
        </childnode>
        <childnode refid="28161" relation="include">
        </childnode>
        <childnode refid="28192" relation="include">
        </childnode>
        <childnode refid="28164" relation="include">
        </childnode>
        <childnode refid="28160" relation="include">
        </childnode>
        <childnode refid="28193" relation="include">
        </childnode>
        <childnode refid="28194" relation="include">
        </childnode>
      </node>
      <node id="28177">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
      </node>
      <node id="28152">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="28142" relation="include">
        </childnode>
        <childnode refid="28146" relation="include">
        </childnode>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28153" relation="include">
        </childnode>
        <childnode refid="28144" relation="include">
        </childnode>
        <childnode refid="28155" relation="include">
        </childnode>
      </node>
      <node id="28151">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28138" relation="include">
        </childnode>
        <childnode refid="28152" relation="include">
        </childnode>
        <childnode refid="28156" relation="include">
        </childnode>
      </node>
      <node id="28135">
        <label>bitvector.h</label>
        <link refid="bitvector_8h"/>
        <childnode refid="28136" relation="include">
        </childnode>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28138" relation="include">
        </childnode>
      </node>
      <node id="28197">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="28138" relation="include">
        </childnode>
        <childnode refid="28198" relation="include">
        </childnode>
        <childnode refid="28164" relation="include">
        </childnode>
      </node>
      <node id="28209">
        <label>mf.h</label>
        <link refid="mf_8h"/>
        <childnode refid="28206" relation="include">
        </childnode>
        <childnode refid="28198" relation="include">
        </childnode>
      </node>
      <node id="28168">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="28169" relation="include">
        </childnode>
        <childnode refid="28176" relation="include">
        </childnode>
      </node>
      <node id="28150">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="28136" relation="include">
        </childnode>
        <childnode refid="28151" relation="include">
        </childnode>
        <childnode refid="28141" relation="include">
        </childnode>
        <childnode refid="28157" relation="include">
        </childnode>
        <childnode refid="28158" relation="include">
        </childnode>
        <childnode refid="28160" relation="include">
        </childnode>
        <childnode refid="28163" relation="include">
        </childnode>
      </node>
      <node id="28154">
        <label>stddef.h</label>
      </node>
      <node id="28159">
        <label>memory.h</label>
      </node>
      <node id="28203">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="28185" relation="include">
        </childnode>
      </node>
      <node id="28196">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="28138" relation="include">
        </childnode>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28172" relation="include">
        </childnode>
      </node>
      <node id="28144">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="28138" relation="include">
        </childnode>
      </node>
      <node id="28185">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="28138" relation="include">
        </childnode>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28158" relation="include">
        </childnode>
      </node>
      <node id="28140">
        <label>limits.h</label>
      </node>
      <node id="28182">
        <label>shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="28141" relation="include">
        </childnode>
        <childnode refid="28183" relation="include">
        </childnode>
      </node>
      <node id="28207">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="28198" relation="include">
        </childnode>
        <childnode refid="28184" relation="include">
        </childnode>
        <childnode refid="28208" relation="include">
        </childnode>
        <childnode refid="28172" relation="include">
        </childnode>
      </node>
      <node id="28174">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="28172" relation="include">
        </childnode>
      </node>
      <node id="28175">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="28171" relation="include">
        </childnode>
      </node>
      <node id="28166">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28138" relation="include">
        </childnode>
        <childnode refid="28152" relation="include">
        </childnode>
        <childnode refid="28156" relation="include">
        </childnode>
      </node>
      <node id="28193">
        <label>pthread.h</label>
      </node>
      <node id="28146">
        <label>string.h</label>
      </node>
      <node id="28162">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="28158" relation="include">
        </childnode>
      </node>
      <node id="28158">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="28159" relation="include">
        </childnode>
        <childnode refid="28146" relation="include">
        </childnode>
      </node>
      <node id="28188">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28146" relation="include">
        </childnode>
        <childnode refid="28142" relation="include">
        </childnode>
        <childnode refid="28138" relation="include">
        </childnode>
        <childnode refid="28178" relation="include">
        </childnode>
        <childnode refid="28189" relation="include">
        </childnode>
      </node>
      <node id="28176">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="28172" relation="include">
        </childnode>
        <childnode refid="28171" relation="include">
        </childnode>
        <childnode refid="28147" relation="include">
        </childnode>
        <childnode refid="28177" relation="include">
        </childnode>
        <childnode refid="28178" relation="include">
        </childnode>
      </node>
      <node id="28165">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="28138" relation="include">
        </childnode>
      </node>
      <node id="28143">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="28138" relation="include">
        </childnode>
      </node>
      <node id="28194">
        <label>semaphore.h</label>
      </node>
      <node id="28169">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="28170" relation="include">
        </childnode>
        <childnode refid="28175" relation="include">
        </childnode>
        <childnode refid="28165" relation="include">
        </childnode>
        <childnode refid="28176" relation="include">
        </childnode>
        <childnode refid="28167" relation="include">
        </childnode>
        <childnode refid="28177" relation="include">
        </childnode>
      </node>
      <node id="28163">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="28164" relation="include">
        </childnode>
        <childnode refid="28165" relation="include">
        </childnode>
        <childnode refid="28166" relation="include">
        </childnode>
        <childnode refid="28161" relation="include">
        </childnode>
        <childnode refid="28167" relation="include">
        </childnode>
        <childnode refid="28168" relation="include">
        </childnode>
        <childnode refid="28179" relation="include">
        </childnode>
      </node>
      <node id="28179">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28180" relation="include">
        </childnode>
        <childnode refid="28163" relation="include">
        </childnode>
      </node>
      <node id="28155">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="28144" relation="include">
        </childnode>
      </node>
      <node id="28186">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="28138" relation="include">
        </childnode>
        <childnode refid="28187" relation="include">
        </childnode>
        <childnode refid="28196" relation="include">
        </childnode>
        <childnode refid="28197" relation="include">
        </childnode>
        <childnode refid="28164" relation="include">
        </childnode>
      </node>
      <node id="28191">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="28173" relation="include">
        </childnode>
        <childnode refid="28178" relation="include">
        </childnode>
        <childnode refid="28158" relation="include">
        </childnode>
        <childnode refid="28160" relation="include">
        </childnode>
        <childnode refid="28141" relation="include">
        </childnode>
      </node>
      <node id="28202">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="28143" relation="include">
        </childnode>
        <childnode refid="28144" relation="include">
        </childnode>
        <childnode refid="28141" relation="include">
        </childnode>
      </node>
      <node id="28172">
        <label>math.h</label>
      </node>
      <node id="28170">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="28171" relation="include">
        </childnode>
        <childnode refid="28175" relation="include">
        </childnode>
      </node>
      <node id="28156">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="28144" relation="include">
        </childnode>
      </node>
      <node id="28134">
        <label>classify/trainingsampleset.h</label>
        <link refid="trainingsampleset.h"/>
        <childnode refid="28135" relation="include">
        </childnode>
        <childnode refid="28141" relation="include">
        </childnode>
        <childnode refid="28148" relation="include">
        </childnode>
        <childnode refid="28149" relation="include">
        </childnode>
        <childnode refid="28182" relation="include">
        </childnode>
        <childnode refid="28204" relation="include">
        </childnode>
      </node>
      <node id="28210">
        <label>picofeat.h</label>
        <link refid="picofeat_8h"/>
        <childnode refid="28206" relation="include">
        </childnode>
        <childnode refid="28164" relation="include">
        </childnode>
      </node>
      <node id="28181">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="28171" relation="include">
        </childnode>
      </node>
      <node id="28199">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="28172" relation="include">
        </childnode>
        <childnode refid="28198" relation="include">
        </childnode>
      </node>
      <node id="28187">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="28188" relation="include">
        </childnode>
        <childnode refid="28143" relation="include">
        </childnode>
      </node>
      <node id="28206">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="28198" relation="include">
        </childnode>
        <childnode refid="28137" relation="include">
        </childnode>
      </node>
      <node id="28164">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28141" relation="include">
        </childnode>
        <childnode refid="28161" relation="include">
        </childnode>
      </node>
      <node id="28141">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28142" relation="include">
        </childnode>
        <childnode refid="28143" relation="include">
        </childnode>
        <childnode refid="28144" relation="include">
        </childnode>
        <childnode refid="28145" relation="include">
        </childnode>
        <childnode refid="28147" relation="include">
        </childnode>
      </node>
      <node id="28153">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="28154" relation="include">
        </childnode>
        <childnode refid="28138" relation="include">
        </childnode>
      </node>
      <node id="28200">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="28201" relation="include">
        </childnode>
        <childnode refid="28188" relation="include">
        </childnode>
        <childnode refid="28158" relation="include">
        </childnode>
        <childnode refid="28202" relation="include">
        </childnode>
        <childnode refid="28164" relation="include">
        </childnode>
      </node>
      <node id="28204">
        <label>trainingsample.h</label>
        <link refid="trainingsample_8h"/>
        <childnode refid="28173" relation="include">
        </childnode>
        <childnode refid="28205" relation="include">
        </childnode>
        <childnode refid="28207" relation="include">
        </childnode>
        <childnode refid="28183" relation="include">
        </childnode>
        <childnode refid="28149" relation="include">
        </childnode>
        <childnode refid="28209" relation="include">
        </childnode>
        <childnode refid="28210" relation="include">
        </childnode>
        <childnode refid="28182" relation="include">
        </childnode>
        <childnode refid="28160" relation="include">
        </childnode>
      </node>
      <node id="28205">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="28206" relation="include">
        </childnode>
      </node>
      <node id="28173">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28138" relation="include">
        </childnode>
        <childnode refid="28152" relation="include">
        </childnode>
        <childnode refid="28156" relation="include">
        </childnode>
      </node>
      <node id="28160">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="28144" relation="include">
        </childnode>
        <childnode refid="28145" relation="include">
        </childnode>
        <childnode refid="28161" relation="include">
        </childnode>
        <childnode refid="28143" relation="include">
        </childnode>
        <childnode refid="28158" relation="include">
        </childnode>
        <childnode refid="28162" relation="include">
        </childnode>
      </node>
      <node id="28171">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28172" relation="include">
        </childnode>
        <childnode refid="28173" relation="include">
        </childnode>
        <childnode refid="28174" relation="include">
        </childnode>
      </node>
      <node id="28157">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="28178">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="28164" relation="include">
        </childnode>
      </node>
      <node id="28183">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="28164" relation="include">
        </childnode>
        <childnode refid="28184" relation="include">
        </childnode>
        <childnode refid="28203" relation="include">
        </childnode>
      </node>
      <node id="28138">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="28139" relation="include">
        </childnode>
      </node>
      <node id="28137">
        <label>stdio.h</label>
      </node>
      <node id="28148">
        <label>indexmapbidi.h</label>
        <link refid="indexmapbidi_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28141" relation="include">
        </childnode>
      </node>
      <node id="28149">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="28150" relation="include">
        </childnode>
        <childnode refid="28160" relation="include">
        </childnode>
      </node>
      <node id="28184">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="28141" relation="include">
        </childnode>
        <childnode refid="28185" relation="include">
        </childnode>
        <childnode refid="28186" relation="include">
        </childnode>
        <childnode refid="28200" relation="include">
        </childnode>
        <childnode refid="28177" relation="include">
        </childnode>
        <childnode refid="28160" relation="include">
        </childnode>
      </node>
      <node id="28192">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28138" relation="include">
        </childnode>
        <childnode refid="28178" relation="include">
        </childnode>
      </node>
      <node id="28208">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28138" relation="include">
        </childnode>
      </node>
      <node id="28161">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28146" relation="include">
        </childnode>
        <childnode refid="28139" relation="include">
        </childnode>
        <childnode refid="28153" relation="include">
        </childnode>
      </node>
      <node id="28198">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="28151" relation="include">
        </childnode>
        <childnode refid="28176" relation="include">
        </childnode>
        <childnode refid="28199" relation="include">
        </childnode>
      </node>
      <node id="28145">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="28137" relation="include">
        </childnode>
        <childnode refid="28146" relation="include">
        </childnode>
      </node>
      <node id="28180">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="28181" relation="include">
        </childnode>
        <childnode refid="28152" relation="include">
        </childnode>
        <childnode refid="28153" relation="include">
        </childnode>
        <childnode refid="28176" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="28219">
        <label>classify/sampleiterator.cpp</label>
        <link refid="sampleiterator_8cpp"/>
      </node>
      <node id="28214">
        <label>classify/mastertrainer.cpp</label>
        <link refid="mastertrainer_8cpp"/>
      </node>
      <node id="28216">
        <label>training/commontraining.cpp</label>
        <link refid="commontraining_8cpp"/>
      </node>
      <node id="28212">
        <label>classify/errorcounter.cpp</label>
        <link refid="errorcounter_8cpp"/>
      </node>
      <node id="28217">
        <label>training/mftraining.cpp</label>
        <link refid="mftraining_8cpp"/>
      </node>
      <node id="28220">
        <label>classify/trainingsampleset.cpp</label>
        <link refid="trainingsampleset_8cpp"/>
      </node>
      <node id="28211">
        <label>classify/trainingsampleset.h</label>
        <link refid="trainingsampleset.h"/>
        <childnode refid="28212" relation="include">
        </childnode>
        <childnode refid="28213" relation="include">
        </childnode>
        <childnode refid="28219" relation="include">
        </childnode>
        <childnode refid="28220" relation="include">
        </childnode>
      </node>
      <node id="28218">
        <label>training/shapeclustering.cpp</label>
        <link refid="shapeclustering_8cpp"/>
      </node>
      <node id="28215">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="28213">
        <label>classify/mastertrainer.h</label>
        <link refid="mastertrainer_8h"/>
        <childnode refid="28214" relation="include">
        </childnode>
        <childnode refid="28215" relation="include">
        </childnode>
        <childnode refid="28216" relation="include">
        </childnode>
        <childnode refid="28217" relation="include">
        </childnode>
        <childnode refid="28218" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_unicity_table" prot="public">UnicityTable</innerclass>
    <innerclass refid="classtesseract_1_1_training_sample_set" prot="public">tesseract::TrainingSampleSet</innerclass>
    <innerclass refid="structtesseract_1_1_training_sample_set_1_1_font_class_distance" prot="private">tesseract::TrainingSampleSet::FontClassDistance</innerclass>
    <innerclass refid="structtesseract_1_1_training_sample_set_1_1_font_class_info" prot="private">tesseract::TrainingSampleSet::FontClassInfo</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2010<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>rays@google.com<sp/>(Ray<sp/>Smith)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_TRAINING_TRAININGSAMPLESET_H__</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_TRAINING_TRAININGSAMPLESET_H__</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitvector_8h" kindref="compound">bitvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="genericvector_8h" kindref="compound">genericvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="indexmapbidi_8h" kindref="compound">indexmapbidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matrix_8h" kindref="compound">matrix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shapetable_8h" kindref="compound">shapetable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trainingsample_8h" kindref="compound">trainingsample.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_unicity_table" kindref="compound">UnicityTable</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">FontInfo;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IntFeatureMap;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">IntFeatureSpace;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TrainingSample;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UnicharAndFonts;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Collection<sp/>of<sp/>TrainingSample<sp/>used<sp/>for<sp/>training<sp/>or<sp/>testing<sp/>a<sp/>classifier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Provides<sp/>several<sp/>useful<sp/>methods<sp/>to<sp/>operate<sp/>on<sp/>the<sp/>collection<sp/>as<sp/>a<sp/>whole,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>including<sp/>outlier<sp/>detection<sp/>and<sp/>deletion,<sp/>providing<sp/>access<sp/>by<sp/>font<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class,<sp/>finding<sp/>the<sp/>canonical<sp/>sample,<sp/>finding<sp/>the<sp/>&quot;cloud&quot;<sp/>features<sp/>(OR<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>features<sp/>in<sp/>all<sp/>samples),<sp/>replication<sp/>of<sp/>samples,<sp/>caching<sp/>of<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>metrics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classtesseract_1_1_training_sample_set" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_training_sample_set" kindref="compound">TrainingSampleSet</ref><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a12d0f6b42d499e6c1e9a203280784153" kindref="member">TrainingSampleSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_unicity_table" kindref="compound">UnicityTable&lt;FontInfo&gt;</ref>&amp;<sp/>fontinfo_table);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_training_sample_set_1ad4a373a77c4484d2a5d294e62ea229fc" kindref="member">~TrainingSampleSet</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a68f083fa05878091a702900135658ee7" kindref="member">Serialize</ref>(FILE*<sp/>fp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a71116090704f3cea5b54b541460fe1e7" kindref="member">DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Accessors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classtesseract_1_1_training_sample_set_1a6d2560a4ae24102d9919eb961d0bca34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a6d2560a4ae24102d9919eb961d0bca34" kindref="member">num_samples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples_.size();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58" refid="classtesseract_1_1_training_sample_set_1af48888d68fc56c5b6911957530b59389" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1af48888d68fc56c5b6911957530b59389" kindref="member">num_raw_samples</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_raw_samples_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61" refid="classtesseract_1_1_training_sample_set_1a106d93e244deeb4e10818b80343914b5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a106d93e244deeb4e10818b80343914b5" kindref="member">NumFonts</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>font_id_map_.<ref refid="classtesseract_1_1_index_map_bi_di_1ae108e47d0f0049137072ad2bc1f6705d" kindref="member">SparseSize</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64" refid="classtesseract_1_1_training_sample_set_1aded0df876324870023182dc4e0a2b28b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/><ref refid="classtesseract_1_1_training_sample_set_1aded0df876324870023182dc4e0a2b28b" kindref="member">unicharset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unicharset_;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67" refid="classtesseract_1_1_training_sample_set_1a4c13c167bc217d3e2e519d746764de49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a4c13c167bc217d3e2e519d746764de49" kindref="member">charsetsize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>unicharset_size_;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Loads<sp/>an<sp/>initial<sp/>unicharset,<sp/>or<sp/>sets<sp/>one<sp/>up<sp/>if<sp/>the<sp/>file<sp/>cannot<sp/>be<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a7ea5c9008105e71b050cd8e6d528c7e8" kindref="member">LoadUnicharset</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetesseract-c__api-demo_1ab85cc7ce156038d7a91fc6b51085c72e" kindref="member">filename</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>character<sp/>sample<sp/>to<sp/>this<sp/>sample<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>unichar<sp/>is<sp/>not<sp/>already<sp/>in<sp/>the<sp/>local<sp/>unicharset,<sp/>it<sp/>is<sp/>added.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>unichar_id<sp/>of<sp/>the<sp/>added<sp/>sample,<sp/>from<sp/>the<sp/>local<sp/>unicharset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a277711d46f9298fb058502dbcae3560d" kindref="member">AddSample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>unichar,<sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="structsample" kindref="compound">sample</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>a<sp/>character<sp/>sample<sp/>to<sp/>this<sp/>sample<sp/>set<sp/>with<sp/>the<sp/>given<sp/>unichar_id,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>must<sp/>correspond<sp/>to<sp/>the<sp/>local<sp/>unicharset<sp/>(in<sp/>this).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a277711d46f9298fb058502dbcae3560d" kindref="member">AddSample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id,<sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="structsample" kindref="compound">sample</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>for<sp/>the<sp/>given<sp/>font,class<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>randomize<sp/>is<sp/>true,<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>accessible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>randomizing<sp/>on.<sp/>(Increases<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>if<sp/>small.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a7f5168960275b7cfed23408acd78d275" kindref="member">NumClassSamples</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>randomize)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>a<sp/>sample<sp/>by<sp/>its<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="classtesseract_1_1_training_sample_set_1a8fa00414deb6726dcf6b770df5af6e8a" kindref="member">GetSample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>a<sp/>sample<sp/>by<sp/>its<sp/>font,<sp/>class,<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="classtesseract_1_1_training_sample_set_1a8fa00414deb6726dcf6b770df5af6e8a" kindref="member">GetSample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>sample<sp/>by<sp/>its<sp/>font,<sp/>class,<sp/>index.<sp/>Does<sp/>not<sp/>randomize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="classtesseract_1_1_training_sample_set_1af960a1e74b485c6f7d0baad12c93a925" kindref="member">MutableSample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>string<sp/>debug<sp/>representation<sp/>of<sp/>the<sp/>given<sp/>sample:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>font,<sp/>unichar_str,<sp/>bounding<sp/>box,<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="classtesseract_1_1_training_sample_set_1a5e48aa19b8dcc15bdaca1fb0b5ec685c" kindref="member">SampleToString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>&amp;<sp/><ref refid="structsample" kindref="compound">sample</ref>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>combined<sp/>set<sp/>of<sp/>features<sp/>used<sp/>by<sp/>all<sp/>the<sp/>samples<sp/>of<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>font/class<sp/>combination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_bit_vector" kindref="compound">BitVector</ref>&amp;<sp/><ref refid="classtesseract_1_1_training_sample_set_1a75dac50ffd51d39ef76894e88aa1b8a2" kindref="member">GetCloudFeatures</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>indexed<sp/>features<sp/>of<sp/>the<sp/>canonical<sp/>sample<sp/>of<sp/>the<sp/>given</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>font/class<sp/>combination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref>&amp;<sp/><ref refid="classtesseract_1_1_training_sample_set_1aeff8d3e8f232385ffd02e859b77c0573" kindref="member">GetCanonicalFeatures</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>given<sp/>UniCharAndFonts<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>matched_fonts,<sp/>only<sp/>matching<sp/>fonts,<sp/>are<sp/>considered,<sp/>unless<sp/>that<sp/>yields</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>empty<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1afeb41df79aa69ffa132fc1a0e03cb040" kindref="member">UnicharDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_unichar_and_fonts" kindref="compound">UnicharAndFonts</ref>&amp;<sp/>uf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_unichar_and_fonts" kindref="compound">UnicharAndFonts</ref>&amp;<sp/>uf2,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matched_fonts,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_map" kindref="compound">IntFeatureMap</ref>&amp;<sp/>feature_map);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>given<sp/>pair<sp/>of<sp/>font/class<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>in<sp/>cache<sp/>or<sp/>computes<sp/>and<sp/>caches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ac43ab2ddfca3d7a77dfda920b65853ca" kindref="member">ClusterDistance</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id1,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id2,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_map" kindref="compound">IntFeatureMap</ref>&amp;<sp/>feature_map);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>given<sp/>pair<sp/>of<sp/>font/class<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1afa47d459869c3824552699a6965edd15" kindref="member">ComputeClusterDistance</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id1,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id2,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_map" kindref="compound">IntFeatureMap</ref>&amp;<sp/>feature_map)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>canonical<sp/>features<sp/>of<sp/>font/class<sp/>2<sp/>for<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>neither<sp/>the<sp/>feature<sp/>nor<sp/>any<sp/>of<sp/>its<sp/>near<sp/>neighbors<sp/>occurs<sp/>in<sp/>the<sp/>cloud</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>font/class<sp/>1.<sp/>Each<sp/>such<sp/>feature<sp/>is<sp/>a<sp/>reliable<sp/>separation<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>classes,<sp/>ASSUMING<sp/>that<sp/>the<sp/>canonical<sp/>sample<sp/>is<sp/>sufficiently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>representative<sp/>that<sp/>every<sp/>sample<sp/>has<sp/>a<sp/>feature<sp/>near<sp/>that<sp/>particular</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>feature.<sp/>To<sp/>check<sp/>that<sp/>this<sp/>is<sp/>so<sp/>on<sp/>the<sp/>fly<sp/>would<sp/>be<sp/>prohibitively</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>expensive,<sp/>but<sp/>it<sp/>might<sp/>be<sp/>possible<sp/>to<sp/>pre-qualify<sp/>the<sp/>canonical<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>include<sp/>only<sp/>those<sp/>for<sp/>which<sp/>this<sp/>assumption<sp/>is<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ComputeCanonicalFeatures<sp/>and<sp/>ComputeCloudFeatures<sp/>must<sp/>have<sp/>been<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>first,<sp/>or<sp/>the<sp/>results<sp/>will<sp/>be<sp/>nonsense.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a3b36d6df2a88be723a19bfb87cdde125" kindref="member">ReliablySeparable</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id1,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id2,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_map" kindref="compound">IntFeatureMap</ref>&amp;<sp/>feature_map,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>thorough)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>total<sp/>index<sp/>of<sp/>the<sp/>requested<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1addf858e6da214cd31161a270e4365fe1" kindref="member">GlobalSampleIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>canonical<sp/>sample<sp/>for<sp/>the<sp/>given<sp/>font,<sp/>class<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ComputeCanonicalSamples<sp/>must<sp/>have<sp/>been<sp/>called<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="classtesseract_1_1_training_sample_set_1a37f9b8b95e9cd6e221524bc94f401783" kindref="member">GetCanonicalSample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>max<sp/>distance<sp/>for<sp/>the<sp/>given<sp/>canonical<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ComputeCanonicalSamples<sp/>must<sp/>have<sp/>been<sp/>called<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a242c0410fb2460dc63fddd16e90b9c71" kindref="member">GetCanonicalDist</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>mutable<sp/>pointer<sp/>to<sp/>the<sp/>sample<sp/>with<sp/>the<sp/>given<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="classtesseract_1_1_training_sample_set_1ad753995a898fee6ac9ad58b7af4ffc7e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="classtesseract_1_1_training_sample_set_1ad753995a898fee6ac9ad58b7af4ffc7e" kindref="member">mutable_sample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples_[index];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gets<sp/>ownership<sp/>of<sp/>the<sp/>sample<sp/>with<sp/>the<sp/>given<sp/>index,<sp/>removing<sp/>it<sp/>from<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classtesseract_1_1_training_sample_set_1a1b0e7917a335f65e0d8196e42435e278" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="classtesseract_1_1_training_sample_set_1a1b0e7917a335f65e0d8196e42435e278" kindref="member">extract_sample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="structsample" kindref="compound">sample</ref><sp/>=<sp/>samples_[index];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>samples_[index]<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sample;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generates<sp/>indexed<sp/>features<sp/>for<sp/>all<sp/>samples<sp/>with<sp/>the<sp/>supplied<sp/>feature_space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a4743698b780df97c2a31e9f28a0c4791" kindref="member">IndexFeatures</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_space" kindref="compound">IntFeatureSpace</ref>&amp;<sp/>feature_space);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>outlier<sp/>samples<sp/>with<sp/>few<sp/>features<sp/>that<sp/>are<sp/>shared<sp/>with<sp/>others.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>IndexFeatures<sp/>must<sp/>have<sp/>been<sp/>called<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ae8670e468b3f35f4a0b961cdb0c31c52" kindref="member">DeleteOutliers</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_space" kindref="compound">IntFeatureSpace</ref>&amp;<sp/>feature_space,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Marks<sp/>the<sp/>given<sp/>sample<sp/>for<sp/>deletion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deletion<sp/>is<sp/>actually<sp/>completed<sp/>by<sp/>DeleteDeadSamples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a6902b0cc52ff89dc5c319473d56bc3b6" kindref="member">KillSample</ref>(<ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="structsample" kindref="compound">sample</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Deletes<sp/>all<sp/>samples<sp/>with<sp/>a<sp/>negative<sp/>sample<sp/>index<sp/>marked<sp/>by<sp/>KillSample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>be<sp/>called<sp/>before<sp/>OrganizeByFontAndClass,<sp/>and<sp/>OrganizeByFontAndClass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>must<sp/>be<sp/>called<sp/>after<sp/>as<sp/>the<sp/>samples<sp/>have<sp/>been<sp/>renumbered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a4c605d59170dc00ddeec919984f80918" kindref="member">DeleteDeadSamples</ref>();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Callback<sp/>function<sp/>returns<sp/>true<sp/>if<sp/>the<sp/>given<sp/>sample<sp/>is<sp/>to<sp/>be<sp/>deleted,<sp/>due</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>having<sp/>a<sp/>negative<sp/>classid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ab9a0b43789360afede97a841cb250dc6" kindref="member">DeleteableSample</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample" kindref="compound">TrainingSample</ref>*<sp/><ref refid="structsample" kindref="compound">sample</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>an<sp/>array<sp/>to<sp/>access<sp/>the<sp/>samples<sp/>by<sp/>font,class<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ab5d36eabedd79031e581e5d1b870de3a" kindref="member">OrganizeByFontAndClass</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructs<sp/>the<sp/>font_id_map_<sp/>which<sp/>maps<sp/>real<sp/>font_ids<sp/>(sparse)<sp/>to<sp/>a<sp/>compact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>for<sp/>the<sp/>font_class_array_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ac1003d7e28f5dfb893a88ac3f60de6e5" kindref="member">SetupFontIdMap</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>sample<sp/>for<sp/>each<sp/>font,<sp/>class<sp/>pair<sp/>that<sp/>has<sp/>least<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>distance<sp/>to<sp/>all<sp/>the<sp/>other<sp/>samples<sp/>of<sp/>the<sp/>same<sp/>font,<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>OrganizeByFontAndClass<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a6cb57b891087c2d21adca1fde83d8d6f" kindref="member">ComputeCanonicalSamples</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_map" kindref="compound">IntFeatureMap</ref>&amp;<sp/>map,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Replicates<sp/>the<sp/>samples<sp/>to<sp/>a<sp/>minimum<sp/>frequency<sp/>defined<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>*<sp/>kSampleRandomSize,<sp/>or<sp/>for<sp/>larger<sp/>counts<sp/>duplicates<sp/>all<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>replication,<sp/>the<sp/>replicated<sp/>samples<sp/>are<sp/>perturbed<sp/>slightly,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>predictable<sp/>and<sp/>repeatable<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>after<sp/>OrganizeByFontAndClass().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1ae0d3970c33eaf47e869d19293e5f1d2b" kindref="member">ReplicateAndRandomizeSamples</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Caches<sp/>the<sp/>indexed<sp/>features<sp/>of<sp/>the<sp/>canonical<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>ComputeCanonicalSamples<sp/>must<sp/>have<sp/>been<sp/>already<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1aa59d278ace2d056fede8cec5fa2d5d80" kindref="member">ComputeCanonicalFeatures</ref>();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>combined<sp/>set<sp/>of<sp/>features<sp/>used<sp/>by<sp/>all<sp/>the<sp/>samples<sp/>of<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>font/class<sp/>combination.<sp/>Use<sp/>after<sp/>ReplicateAndRandomizeSamples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a70b1a77e26913f05ea7be9d1cebc1f68" kindref="member">ComputeCloudFeatures</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feature_space_size);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Adds<sp/>all<sp/>fonts<sp/>of<sp/>the<sp/>given<sp/>class<sp/>to<sp/>the<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1aa8a7f48e7004b719d9ee2eb2d7c54511" kindref="member">AddAllFontsForClass</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id,<sp/><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>*<sp/>shape)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>samples<sp/>with<sp/>the<sp/>given<sp/>indexed<sp/>feature<sp/>that<sp/>also<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>given<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a0aa7725351aa2ea8a21c2abcae3a26db" kindref="member">DisplaySamplesWithFeature</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>f_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape" kindref="compound">Shape</ref>&amp;<sp/>shape,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_space" kindref="compound">IntFeatureSpace</ref>&amp;<sp/>feature_space,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Struct<sp/>to<sp/>store<sp/>a<sp/>triplet<sp/>of<sp/>unichar,<sp/>font,<sp/>distance<sp/>in<sp/>the<sp/>distance<sp/>cache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">FontClassDistance<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unichar_id;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id;<sp/><sp/></highlight><highlight class="comment">//<sp/>Real<sp/>font<sp/>id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>struct<sp/>to<sp/>store<sp/>information<sp/>related<sp/>to<sp/>each<sp/>font/class<sp/>combination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">FontClassInfo<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>FontClassInfo();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Writes<sp/>to<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a68f083fa05878091a702900135658ee7" kindref="member">Serialize</ref>(FILE*<sp/>fp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reads<sp/>from<sp/>the<sp/>given<sp/>file.<sp/>Returns<sp/>false<sp/>in<sp/>case<sp/>of<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>swap<sp/>is<sp/>true,<sp/>assumes<sp/>a<sp/>big/little-endian<sp/>swap<sp/>is<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_training_sample_set_1a71116090704f3cea5b54b541460fe1e7" kindref="member">DeSerialize</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>swap,<sp/>FILE*<sp/>fp);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>raw<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="classtesseract_1_1_training_sample_set_1af48888d68fc56c5b6911957530b59389" kindref="member">num_raw_samples</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>the<sp/>canonical<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>canonical_sample;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Max<sp/>distance<sp/>of<sp/>the<sp/>canonical<sp/>sample<sp/>from<sp/>any<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>canonical_dist;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sample<sp/>indices<sp/>for<sp/>the<sp/>samples,<sp/>including<sp/>replicated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;inT32&gt;</ref><sp/>samples;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-serialized<sp/>cache<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>features<sp/>of<sp/>the<sp/>canonical<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;int&gt;</ref><sp/>canonical_features;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>mapped<sp/>features<sp/>of<sp/>all<sp/>the<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>BitVector<sp/>cloud_features;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Caches<sp/>for<sp/>ClusterDistance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Caches<sp/>for<sp/>other<sp/>fonts<sp/>but<sp/>matching<sp/>this<sp/>unichar.<sp/>-1<sp/>indicates<sp/>not<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Indexed<sp/>by<sp/>compact<sp/>font<sp/>index<sp/>from<sp/>font_id_map_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;float&gt;</ref><sp/>font_distance_cache;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Caches<sp/>for<sp/>other<sp/>unichars<sp/>but<sp/>matching<sp/>this<sp/>font.<sp/>-1<sp/>indicates<sp/>not<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;float&gt;</ref><sp/>unichar_distance_cache;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>for<sp/>the<sp/>rest<sp/>(non<sp/>matching<sp/>font<sp/>and<sp/>unichar.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>cache<sp/>of<sp/>distances<sp/>computed<sp/>by<sp/>ReliablySeparable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_generic_vector" kindref="compound">GenericVector&lt;FontClassDistance&gt;</ref><sp/>distance_cache;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>PointerVector&lt;TrainingSample&gt;<sp/>samples_;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>samples<sp/>before<sp/>replication/randomization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_raw_samples_;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Character<sp/>set<sp/>we<sp/>are<sp/>training<sp/>for.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref><sp/>unicharset_;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Character<sp/>set<sp/>size<sp/>to<sp/>which<sp/>the<sp/>2-d<sp/>arrays<sp/>below<sp/>refer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unicharset_size_;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>to<sp/>allow<sp/>the<sp/>font_class_array_<sp/>below<sp/>to<sp/>be<sp/>compact.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>sparse<sp/>space<sp/>is<sp/>the<sp/>real<sp/>font_id,<sp/>used<sp/>in<sp/>samples_<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>compact<sp/>space<sp/>is<sp/>an<sp/>index<sp/>to<sp/>font_class_array_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>IndexMapBiDi<sp/>font_id_map_;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>2-d<sp/>array<sp/>of<sp/>FontClassInfo<sp/>holding<sp/>information<sp/>related<sp/>to<sp/>each</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>(font_id,<sp/>class_id)<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="class_g_e_n_e_r_i_c__2_d___a_r_r_a_y" kindref="compound">GENERIC_2D_ARRAY&lt;FontClassInfo&gt;</ref>*<sp/>font_class_array_;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reference<sp/>to<sp/>the<sp/>fontinfo_table_<sp/>in<sp/>MasterTrainer.<sp/>Provides<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>font_ids<sp/>in<sp/>the<sp/>samples.<sp/>Not<sp/>serialized!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_unicity_table" kindref="compound">UnicityTable&lt;FontInfo&gt;</ref>&amp;<sp/>fontinfo_table_;</highlight></codeline>
<codeline lineno="285"><highlight class="normal">};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TRAININGSAMPLESETSET_H_</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/trainingsampleset.h"/>
  </compounddef>
</doxygen>
