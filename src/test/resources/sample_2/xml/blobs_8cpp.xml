<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="blobs_8cpp" kind="file">
    <compoundname>blobs.cpp</compoundname>
    <includes refid="mfcpch_8h" local="yes">mfcpch.h</includes>
    <includes refid="blobs_8h" local="yes">blobs.h</includes>
    <includes refid="ccstruct_8h" local="yes">ccstruct.h</includes>
    <includes refid="clst_8h" local="yes">clst.h</includes>
    <includes refid="cutil_8h" local="yes">cutil.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="helpers_8h" local="yes">helpers.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includes refid="normalis_8h" local="yes">normalis.h</includes>
    <includes refid="ocrblock_8h" local="yes">ocrblock.h</includes>
    <includes refid="ocrrow_8h" local="yes">ocrrow.h</includes>
    <includes refid="points_8h" local="yes">points.h</includes>
    <includes refid="polyaprx_8h" local="yes">polyaprx.h</includes>
    <includes refid="structures_8h" local="yes">structures.h</includes>
    <includes refid="werd_8h" local="yes">werd.h</includes>
    <incdepgraph>
      <node id="6157">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="6158" relation="include">
        </childnode>
        <childnode refid="6167" relation="include">
        </childnode>
        <childnode refid="6153" relation="include">
        </childnode>
      </node>
      <node id="6168">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="6125">
        <label>ccstruct/blobs.cpp</label>
        <link refid="blobs.cpp"/>
        <childnode refid="6126" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6155" relation="include">
        </childnode>
        <childnode refid="6128" relation="include">
        </childnode>
        <childnode refid="6156" relation="include">
        </childnode>
        <childnode refid="6169" relation="include">
        </childnode>
        <childnode refid="6152" relation="include">
        </childnode>
        <childnode refid="6146" relation="include">
        </childnode>
        <childnode refid="6172" relation="include">
        </childnode>
        <childnode refid="6173" relation="include">
        </childnode>
        <childnode refid="6177" relation="include">
        </childnode>
        <childnode refid="6143" relation="include">
        </childnode>
        <childnode refid="6191" relation="include">
        </childnode>
        <childnode refid="6192" relation="include">
        </childnode>
        <childnode refid="6180" relation="include">
        </childnode>
      </node>
      <node id="6171">
        <label>assert.h</label>
      </node>
      <node id="6126">
        <label>mfcpch.h</label>
        <link refid="mfcpch_8h"/>
      </node>
      <node id="6192">
        <label>structures.h</label>
        <link refid="structures_8h"/>
        <childnode refid="6193" relation="include">
        </childnode>
        <childnode refid="6194" relation="include">
        </childnode>
        <childnode refid="6195" relation="include">
        </childnode>
      </node>
      <node id="6146">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="6167">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="6134">
        <label>stdlib.h</label>
      </node>
      <node id="6131">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="6132" relation="include">
        </childnode>
      </node>
      <node id="6183">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="6138" relation="include">
        </childnode>
      </node>
      <node id="6158">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="6159" relation="include">
        </childnode>
        <childnode refid="6138" relation="include">
        </childnode>
        <childnode refid="6153" relation="include">
        </childnode>
        <childnode refid="6164" relation="include">
        </childnode>
        <childnode refid="6149" relation="include">
        </childnode>
        <childnode refid="6162" relation="include">
        </childnode>
        <childnode refid="6165" relation="include">
        </childnode>
        <childnode refid="6166" relation="include">
        </childnode>
      </node>
      <node id="6147">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
      </node>
      <node id="6191">
        <label>polyaprx.h</label>
        <link refid="polyaprx_8h"/>
        <childnode refid="6127" relation="include">
        </childnode>
        <childnode refid="6185" relation="include">
        </childnode>
      </node>
      <node id="6133">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="6134" relation="include">
        </childnode>
        <childnode refid="6135" relation="include">
        </childnode>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6136" relation="include">
        </childnode>
        <childnode refid="6138" relation="include">
        </childnode>
        <childnode refid="6139" relation="include">
        </childnode>
      </node>
      <node id="6128">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
        <childnode refid="6133" relation="include">
        </childnode>
        <childnode refid="6140" relation="include">
        </childnode>
      </node>
      <node id="6155">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="6156" relation="include">
        </childnode>
        <childnode refid="6168" relation="include">
        </childnode>
      </node>
      <node id="6184">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="6185" relation="include">
        </childnode>
        <childnode refid="6141" relation="include">
        </childnode>
      </node>
      <node id="6137">
        <label>stddef.h</label>
      </node>
      <node id="6161">
        <label>memory.h</label>
      </node>
      <node id="6170">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="6171" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
        <childnode refid="6149" relation="include">
        </childnode>
        <childnode refid="6160" relation="include">
        </childnode>
      </node>
      <node id="6138">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="6130" relation="include">
        </childnode>
      </node>
      <node id="6189">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="6176" relation="include">
        </childnode>
        <childnode refid="6144" relation="include">
        </childnode>
        <childnode refid="6143" relation="include">
        </childnode>
        <childnode refid="6141" relation="include">
        </childnode>
        <childnode refid="6147" relation="include">
        </childnode>
        <childnode refid="6190" relation="include">
        </childnode>
      </node>
      <node id="6132">
        <label>limits.h</label>
      </node>
      <node id="6145">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="6142" relation="include">
        </childnode>
      </node>
      <node id="6187">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="6143" relation="include">
        </childnode>
      </node>
      <node id="6182">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
        <childnode refid="6133" relation="include">
        </childnode>
        <childnode refid="6140" relation="include">
        </childnode>
      </node>
      <node id="6165">
        <label>pthread.h</label>
      </node>
      <node id="6135">
        <label>string.h</label>
      </node>
      <node id="6163">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="6160" relation="include">
        </childnode>
      </node>
      <node id="6160">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="6161" relation="include">
        </childnode>
        <childnode refid="6135" relation="include">
        </childnode>
      </node>
      <node id="6156">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6135" relation="include">
        </childnode>
        <childnode refid="6134" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
        <childnode refid="6148" relation="include">
        </childnode>
        <childnode refid="6157" relation="include">
        </childnode>
      </node>
      <node id="6141">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="6142" relation="include">
        </childnode>
        <childnode refid="6143" relation="include">
        </childnode>
        <childnode refid="6146" relation="include">
        </childnode>
        <childnode refid="6147" relation="include">
        </childnode>
        <childnode refid="6148" relation="include">
        </childnode>
      </node>
      <node id="6181">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="6130" relation="include">
        </childnode>
      </node>
      <node id="6151">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="6130" relation="include">
        </childnode>
      </node>
      <node id="6166">
        <label>semaphore.h</label>
      </node>
      <node id="6185">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="6186" relation="include">
        </childnode>
        <childnode refid="6187" relation="include">
        </childnode>
        <childnode refid="6181" relation="include">
        </childnode>
        <childnode refid="6141" relation="include">
        </childnode>
        <childnode refid="6183" relation="include">
        </childnode>
        <childnode refid="6147" relation="include">
        </childnode>
      </node>
      <node id="6180">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="6149" relation="include">
        </childnode>
        <childnode refid="6181" relation="include">
        </childnode>
        <childnode refid="6182" relation="include">
        </childnode>
        <childnode refid="6153" relation="include">
        </childnode>
        <childnode refid="6183" relation="include">
        </childnode>
        <childnode refid="6184" relation="include">
        </childnode>
        <childnode refid="6177" relation="include">
        </childnode>
      </node>
      <node id="6195">
        <label>danerror.h</label>
        <link refid="danerror_8h"/>
      </node>
      <node id="6177">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6178" relation="include">
        </childnode>
        <childnode refid="6180" relation="include">
        </childnode>
      </node>
      <node id="6139">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="6138" relation="include">
        </childnode>
      </node>
      <node id="6159">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="6144" relation="include">
        </childnode>
        <childnode refid="6148" relation="include">
        </childnode>
        <childnode refid="6160" relation="include">
        </childnode>
        <childnode refid="6162" relation="include">
        </childnode>
        <childnode refid="6150" relation="include">
        </childnode>
      </node>
      <node id="6186">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="6143" relation="include">
        </childnode>
        <childnode refid="6187" relation="include">
        </childnode>
      </node>
      <node id="6142">
        <label>math.h</label>
      </node>
      <node id="6140">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="6138" relation="include">
        </childnode>
      </node>
      <node id="6179">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="6143" relation="include">
        </childnode>
      </node>
      <node id="6169">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="6130" relation="include">
        </childnode>
        <childnode refid="6170" relation="include">
        </childnode>
      </node>
      <node id="6154">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="6142" relation="include">
        </childnode>
        <childnode refid="6127" relation="include">
        </childnode>
      </node>
      <node id="6176">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="6193">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="6156" relation="include">
        </childnode>
        <childnode refid="6151" relation="include">
        </childnode>
      </node>
      <node id="6173">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="6174" relation="include">
        </childnode>
        <childnode refid="6175" relation="include">
        </childnode>
        <childnode refid="6177" relation="include">
        </childnode>
        <childnode refid="6188" relation="include">
        </childnode>
      </node>
      <node id="6149">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6150" relation="include">
        </childnode>
        <childnode refid="6153" relation="include">
        </childnode>
      </node>
      <node id="6150">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6134" relation="include">
        </childnode>
        <childnode refid="6151" relation="include">
        </childnode>
        <childnode refid="6138" relation="include">
        </childnode>
        <childnode refid="6152" relation="include">
        </childnode>
        <childnode refid="6146" relation="include">
        </childnode>
      </node>
      <node id="6136">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="6137" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
      </node>
      <node id="6194">
        <label>freelist.h</label>
        <link refid="freelist_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
      </node>
      <node id="6175">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="6176" relation="include">
        </childnode>
        <childnode refid="6144" relation="include">
        </childnode>
        <childnode refid="6153" relation="include">
        </childnode>
      </node>
      <node id="6144">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
        <childnode refid="6133" relation="include">
        </childnode>
        <childnode refid="6140" relation="include">
        </childnode>
      </node>
      <node id="6162">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="6138" relation="include">
        </childnode>
        <childnode refid="6152" relation="include">
        </childnode>
        <childnode refid="6153" relation="include">
        </childnode>
        <childnode refid="6151" relation="include">
        </childnode>
        <childnode refid="6160" relation="include">
        </childnode>
        <childnode refid="6163" relation="include">
        </childnode>
      </node>
      <node id="6143">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6142" relation="include">
        </childnode>
        <childnode refid="6144" relation="include">
        </childnode>
        <childnode refid="6145" relation="include">
        </childnode>
      </node>
      <node id="6174">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="6136" relation="include">
        </childnode>
      </node>
      <node id="6148">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="6149" relation="include">
        </childnode>
      </node>
      <node id="6190">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="6130">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="6131" relation="include">
        </childnode>
      </node>
      <node id="6188">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="6128" relation="include">
        </childnode>
        <childnode refid="6174" relation="include">
        </childnode>
        <childnode refid="6153" relation="include">
        </childnode>
        <childnode refid="6189" relation="include">
        </childnode>
        <childnode refid="6190" relation="include">
        </childnode>
      </node>
      <node id="6129">
        <label>stdio.h</label>
      </node>
      <node id="6164">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
        <childnode refid="6148" relation="include">
        </childnode>
      </node>
      <node id="6172">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6130" relation="include">
        </childnode>
      </node>
      <node id="6153">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6135" relation="include">
        </childnode>
        <childnode refid="6131" relation="include">
        </childnode>
        <childnode refid="6136" relation="include">
        </childnode>
      </node>
      <node id="6127">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="6128" relation="include">
        </childnode>
        <childnode refid="6141" relation="include">
        </childnode>
        <childnode refid="6154" relation="include">
        </childnode>
      </node>
      <node id="6152">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="6129" relation="include">
        </childnode>
        <childnode refid="6135" relation="include">
        </childnode>
      </node>
      <node id="6178">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="6179" relation="include">
        </childnode>
        <childnode refid="6133" relation="include">
        </childnode>
        <childnode refid="6136" relation="include">
        </childnode>
        <childnode refid="6141" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="blobs_8cpp_1a08e47d4b90d71096bdc2508f601ed5d0" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref></type>
        <definition>const TPOINT kDivisibleVerticalUpright(0, 1)</definition>
        <argsstring>(0, 1)</argsstring>
        <name>kDivisibleVerticalUpright</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="blobs_8cpp_1a0ce92f82149c2659d55bdb1d2687c8da" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref></type>
        <definition>const TPOINT kDivisibleVerticalItalic(1, 5)</definition>
        <argsstring>(1, 5)</argsstring>
        <name>kDivisibleVerticalItalic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" line="59" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="blobs_8cpp_1a86c2c9fb0d486d81debb51af2a19c955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CLISTIZE</definition>
        <argsstring>(EDGEPT)</argsstring>
        <name>CLISTIZE</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="blobs_8cpp_1afc899eceb2ede2838da4307362da783f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref> **</type>
        <definition>static TESSLINE** ApproximateOutlineList</definition>
        <argsstring>(C_OUTLINE_LIST *outlines, bool children, TESSLINE **tail)</argsstring>
        <name>ApproximateOutlineList</name>
        <param>
          <type>C_OUTLINE_LIST *</type>
          <declname>outlines</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>children</declname>
        </param>
        <param>
          <type><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref> **</type>
          <declname>tail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" line="250" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" bodystart="250" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="blobs_8cpp_1a0464f690c04a9aeb7710a6df1c0ba1fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void blob_origin</definition>
        <argsstring>(TBLOB *blob, TPOINT *origin)</argsstring>
        <name>blob_origin</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> *</type>
          <declname>origin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" line="537" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" bodystart="537" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="blobs_8cpp_1ac62acb187b8e5401eb56032b3eebef09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_w_i_d_t_h___r_e_c_o_r_d" kindref="compound">WIDTH_RECORD</ref> *</type>
        <definition>WIDTH_RECORD* blobs_widths</definition>
        <argsstring>(TBLOB *blobs)</argsstring>
        <name>blobs_widths</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" line="549" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" bodystart="549" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="blobs_8cpp_1aa8048f4c65af2775452ad5d4dfbca053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int count_blobs</definition>
        <argsstring>(TBLOB *blobs)</argsstring>
        <name>count_blobs</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" line="581" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" bodystart="581" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="blobs_8cpp_1aa87284f5696fb5dd745dafa85539d760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool divisible_blob</definition>
        <argsstring>(TBLOB *blob, bool italic_blob, TPOINT *location)</argsstring>
        <name>divisible_blob</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>italic_blob</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> *</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" line="596" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" bodystart="596" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="blobs_8cpp_1a2ab5e3b619507b26900a73919b165970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void divide_blobs</definition>
        <argsstring>(TBLOB *blob, TBLOB *other_blob, bool italic_blob, const TPOINT &amp;location)</argsstring>
        <name>divide_blobs</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>other_blob</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>italic_blob</declname>
        </param>
        <param>
          <type>const <ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref> &amp;</type>
          <declname>location</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" line="645" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp" bodystart="645" bodyend="683"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-C-*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blobs.c<sp/><sp/>(Formerly<sp/>blobs.c)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Description:<sp/><sp/>Blob<sp/>definition</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mark<sp/>Seaman,<sp/>OCR<sp/>Technology</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/>Fri<sp/>Oct<sp/>27<sp/>15:39:52<sp/>1989</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Modified:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Mar<sp/>28<sp/>15:33:26<sp/>1991<sp/>(Mark<sp/>Seaman)<sp/>marks@hpgrlt</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Language:<sp/><sp/><sp/><sp/><sp/>C</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Package:<sp/><sp/><sp/><sp/><sp/><sp/>N/A</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Status:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Experimental<sp/>(Do<sp/>Not<sp/>Distribute)</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Copyright<sp/>1989,<sp/>Hewlett-Packard<sp/>Company.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>n<sp/>c<sp/>l<sp/>u<sp/>d<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="28"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mfcpch_8h" kindref="compound">mfcpch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobs_8h" kindref="compound">blobs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ccstruct_8h" kindref="compound">ccstruct.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clst_8h" kindref="compound">clst.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cutil_8h" kindref="compound">cutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="helpers_8h" kindref="compound">helpers.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="normalis_8h" kindref="compound">normalis.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ocrblock_8h" kindref="compound">ocrblock.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ocrrow_8h" kindref="compound">ocrrow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="points_8h" kindref="compound">points.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="polyaprx_8h" kindref="compound">polyaprx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="structures_8h" kindref="compound">structures.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="werd_8h" kindref="compound">werd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_c_c_struct" kindref="compound">tesseract::CCStruct</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>Vector<sp/>representing<sp/>the<sp/>&quot;vertical&quot;<sp/>direction<sp/>when<sp/>measuring<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>divisiblity<sp/>of<sp/>blobs<sp/>into<sp/>multiple<sp/>blobs<sp/>just<sp/>by<sp/>separating<sp/>outlines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>divisible_blob<sp/>below<sp/>for<sp/>the<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/><ref refid="blobs_8cpp_1a08e47d4b90d71096bdc2508f601ed5d0" kindref="member">kDivisibleVerticalUpright</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>vector<sp/>representing<sp/>the<sp/>&quot;vertical&quot;<sp/>direction<sp/>for<sp/>italic<sp/>text<sp/>for<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>when<sp/>separating<sp/>outlines.<sp/>Using<sp/>it<sp/>actually<sp/>deteriorates<sp/>final<sp/>accuracy,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>it<sp/>is<sp/>only<sp/>used<sp/>for<sp/>ApplyBoxes<sp/>chopping<sp/>to<sp/>get<sp/>a<sp/>better<sp/>segmentation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/><ref refid="blobs_8cpp_1a0ce92f82149c2659d55bdb1d2687c8da" kindref="member">kDivisibleVerticalItalic</ref>(1,<sp/>5);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>u<sp/>n<sp/>c<sp/>t<sp/>i<sp/>o<sp/>n<sp/>s</highlight></codeline>
<codeline lineno="63"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="clst_8h_1a721c1e0acc4a882f9ea934613aee64be" kindref="member">CLISTIZE</ref>(<ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Consume<sp/>the<sp/>circular<sp/>list<sp/>of<sp/>EDGEPTs<sp/>to<sp/>make<sp/>a<sp/>TESSLINE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a4f658520b5d24846dfc329205ddca906" kindref="member">TESSLINE::BuildFromOutlineList</ref>(<ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>outline)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a6b7fcac9c93825cc85a07a359c26011e" kindref="member">TESSLINE</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref><sp/>=<sp/>outline;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>result-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a7d8f7d9d476d5d0aa6159094b4a90c6b" kindref="member">SetupFromPos</ref>();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>the<sp/>data<sp/>and<sp/>the<sp/>outline,<sp/>but<sp/>leaves<sp/>next<sp/>untouched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1ac875d4b786cc65c7e080eb80d9fda9a3" kindref="member">TESSLINE::CopyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a67510cd219e5b5891cd7a81904e8116d" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a1cc50129500062a2d984e459f89d7a5b" kindref="member">topleft</ref><sp/>=<sp/>src.<ref refid="struct_t_e_s_s_l_i_n_e_1a1cc50129500062a2d984e459f89d7a5b" kindref="member">topleft</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7abcd2efd1cd8cdc820e304cf8ae1f0c" kindref="member">botright</ref><sp/>=<sp/>src.<ref refid="struct_t_e_s_s_l_i_n_e_1a7abcd2efd1cd8cdc820e304cf8ae1f0c" kindref="member">botright</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a6eddfefc04de79fe19712d90925de2fb" kindref="member">start</ref><sp/>=<sp/>src.<ref refid="struct_t_e_s_s_l_i_n_e_1a6eddfefc04de79fe19712d90925de2fb" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a8af6c63b0dca8a993397d2f5f0bc5723" kindref="member">is_hole</ref><sp/>=<sp/>src.<ref refid="struct_t_e_s_s_l_i_n_e_1a8af6c63b0dca8a993397d2f5f0bc5723" kindref="member">is_hole</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.<ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>prevpt<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>newpt<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>srcpt<sp/>=<sp/>src.<ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newpt<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>(*srcpt);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevpt<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref><sp/>=<sp/>newpt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newpt-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref><sp/>=<sp/>prevpt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevpt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref><sp/>=<sp/>newpt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prevpt<sp/>=<sp/>newpt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>srcpt<sp/>=<sp/>srcpt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(srcpt<sp/>!=<sp/>src.<ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref><sp/>=<sp/>newpt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>newpt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref><sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>owned<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a67510cd219e5b5891cd7a81904e8116d" kindref="member">TESSLINE::Clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>this_edge<sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>next_edge<sp/>=<sp/>this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>this_edge;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>this_edge<sp/>=<sp/>next_edge;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(this_edge<sp/>!=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalize<sp/>in-place<sp/>using<sp/>the<sp/>DENORM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1afc8993988b0f056e152e75451920b56e" kindref="member">TESSLINE::Normalize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>pt<sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>denorm.<ref refid="class_d_e_n_o_r_m_1a379321502d4634137436539518311b9d" kindref="member">LocalNormTransform</ref>(pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>,<sp/>&amp;pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>pt<sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pt<sp/>!=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7d8f7d9d476d5d0aa6159094b4a90c6b" kindref="member">SetupFromPos</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotates<sp/>by<sp/>the<sp/>given<sp/>rotation<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a26992336d14162f1b9383e7094bca8bd" kindref="member">TESSLINE::Rotate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>rot)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>pt<sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(floor(pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>*<sp/>rot.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>-</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>*<sp/>rot.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>()<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(floor(pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>*<sp/>rot.<ref refid="class_f_c_o_o_r_d_1a9edadbfc357c730f62fa3c92677b0d58" kindref="member">x</ref>()<sp/>+</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>*<sp/>rot.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>()<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>pt<sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pt<sp/>!=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7d8f7d9d476d5d0aa6159094b4a90c6b" kindref="member">SetupFromPos</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Moves<sp/>by<sp/>the<sp/>given<sp/>vec<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a05de0084ef9c4cfc9ac78d4c58a1a476" kindref="member">TESSLINE::Move</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>pt<sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>+=<sp/>vec.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>+=<sp/>vec.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>pt<sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pt<sp/>!=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7d8f7d9d476d5d0aa6159094b4a90c6b" kindref="member">SetupFromPos</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scales<sp/>by<sp/>the<sp/>given<sp/>factor<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a1cb47a92c02161008bd483eb61e01b05" kindref="member">TESSLINE::Scale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>factor)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>pt<sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(floor(pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>*<sp/>factor<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(floor(pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>*<sp/>factor<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>pt<sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pt<sp/>!=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7d8f7d9d476d5d0aa6159094b4a90c6b" kindref="member">SetupFromPos</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>up<sp/>the<sp/>start<sp/>and<sp/>vec<sp/>members<sp/>of<sp/>the<sp/>loop<sp/>from<sp/>the<sp/>pos<sp/>members.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7d8f7d9d476d5d0aa6159094b4a90c6b" kindref="member">TESSLINE::SetupFromPos</ref>()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>pt<sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>-<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>-<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>pt<sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pt<sp/>!=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a6eddfefc04de79fe19712d90925de2fb" kindref="member">start</ref><sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1aacf6d56a8b92228f875e06d09c78eca5" kindref="member">ComputeBoundingBox</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recomputes<sp/>the<sp/>bounding<sp/>box<sp/>from<sp/>the<sp/>points<sp/>in<sp/>the<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1aacf6d56a8b92228f875e06d09c78eca5" kindref="member">TESSLINE::ComputeBoundingBox</ref>()<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minx<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>miny<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxx<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxy<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a6eddfefc04de79fe19712d90925de2fb" kindref="member">start</ref><sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>this_edge<sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1a7e6e4c9b9bcc3b1e66ab62bb7641c39a" kindref="member">IsHidden</ref>()<sp/>||<sp/>!this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1a7e6e4c9b9bcc3b1e66ab62bb7641c39a" kindref="member">IsHidden</ref>())<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>&lt;<sp/>minx)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minx<sp/>=<sp/>this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>&lt;<sp/>miny)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>miny<sp/>=<sp/>this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>&gt;<sp/>maxx)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxx<sp/>=<sp/>this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>&gt;<sp/>maxy)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxy<sp/>=<sp/>this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>this_edge<sp/>=<sp/>this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(this_edge<sp/>!=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a1cc50129500062a2d984e459f89d7a5b" kindref="member">topleft</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>minx;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a1cc50129500062a2d984e459f89d7a5b" kindref="member">topleft</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>maxy;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7abcd2efd1cd8cdc820e304cf8ae1f0c" kindref="member">botright</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>maxx;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7abcd2efd1cd8cdc820e304cf8ae1f0c" kindref="member">botright</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>miny;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>min<sp/>and<sp/>max<sp/>cross<sp/>product<sp/>of<sp/>the<sp/>outline<sp/>points<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>vec<sp/>and<sp/>returns<sp/>the<sp/>results<sp/>in<sp/>min_xp<sp/>and<sp/>max_xp.<sp/>Geometrically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>the<sp/>left<sp/>and<sp/>right<sp/>edge<sp/>of<sp/>the<sp/>outline<sp/>perpendicular<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>given<sp/>direction,<sp/>but<sp/>to<sp/>get<sp/>the<sp/>distance<sp/>units<sp/>correct,<sp/>you<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>have<sp/>to<sp/>divide<sp/>by<sp/>the<sp/>modulus<sp/>of<sp/>vec.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a07656107903637cebe59487cee9868ba" kindref="member">TESSLINE::MinMaxCrossProduct</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>vec,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>min_xp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>max_xp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>*min_xp<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>*max_xp<sp/>=<sp/><ref refid="host_8h_1ae6f88d5bb15e97510f484289f2fc89fd" kindref="member">MIN_INT32</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>this_edge<sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1a7e6e4c9b9bcc3b1e66ab62bb7641c39a" kindref="member">IsHidden</ref>()<sp/>||<sp/>!this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1a7e6e4c9b9bcc3b1e66ab62bb7641c39a" kindref="member">IsHidden</ref>())<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>product<sp/>=<sp/><ref refid="vecfuncs_8h_1aec4dedcf89534ed10f6107bf9c6418f3" kindref="member">CROSS</ref>(this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>,<sp/>vec);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(product,<sp/>min_xp,<sp/>max_xp);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>this_edge<sp/>=<sp/>this_edge-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(this_edge<sp/>!=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1af3c73d6ff3d1819730731391c5701778" kindref="member">TESSLINE::bounding_box</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>(<ref refid="struct_t_e_s_s_l_i_n_e_1a1cc50129500062a2d984e459f89d7a5b" kindref="member">topleft</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7abcd2efd1cd8cdc820e304cf8ae1f0c" kindref="member">botright</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>,<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a7abcd2efd1cd8cdc820e304cf8ae1f0c" kindref="member">botright</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a1cc50129500062a2d984e459f89d7a5b" kindref="member">topleft</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a32b0c2d11e9ebe59d1a1d8b3cf4c6d18" kindref="member">TESSLINE::plot</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window,<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>child_color)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e_1a8af6c63b0dca8a993397d2f5f0bc5723" kindref="member">is_hole</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(child_color);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(color);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a730b182e350dfe37b0986d7f0591fee5" kindref="member">SetCursor</ref>(<ref refid="struct_t_e_s_s_l_i_n_e_1a6eddfefc04de79fe19712d90925de2fb" kindref="member">start</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a6eddfefc04de79fe19712d90925de2fb" kindref="member">start</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>pt<sp/>=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prev_hidden<sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a7e6e4c9b9bcc3b1e66ab62bb7641c39a" kindref="member">IsHidden</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>pt<sp/>=<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_hidden)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a730b182e350dfe37b0986d7f0591fee5" kindref="member">SetCursor</ref>(pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window-&gt;<ref refid="class_scroll_view_1a101de80a4722fe821969f61f6e7303a6" kindref="member">DrawTo</ref>(pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>pt-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pt<sp/>!=<sp/><ref refid="struct_t_e_s_s_l_i_n_e_1a0ab1e26b1dae548f0bd3c096c6183b18" kindref="member">loop</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterate<sp/>the<sp/>given<sp/>list<sp/>of<sp/>outlines,<sp/>converting<sp/>to<sp/>TESSLINE<sp/>by<sp/>polygonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/>approximation<sp/>and<sp/>recursively<sp/>any<sp/>children,<sp/>returning<sp/>the<sp/>current<sp/>tail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>resulting<sp/>list<sp/>of<sp/>TESSLINEs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>**<sp/>ApproximateOutlineList(C_OUTLINE_LIST*<sp/>outlines,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>children,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>**<sp/>tail)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>C_OUTLINE_IT<sp/>ol_it(outlines);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ol_it.mark_cycle_pt();<sp/>!ol_it.cycled_list();<sp/>ol_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___o_u_t_l_i_n_e" kindref="compound">C_OUTLINE</ref>*<sp/>outline<sp/>=<sp/>ol_it.data();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>tessline<sp/>=<sp/><ref refid="polyaprx_8cpp_1a3733a7df874747afa66b2c6697413b86" kindref="member">ApproximateOutline</ref>(outline);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>tessline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a8af6c63b0dca8a993397d2f5f0bc5723" kindref="member">is_hole</ref><sp/>=<sp/>children;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>*tail<sp/>=<sp/>tessline;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>&amp;tessline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outline-&gt;<ref refid="class_c___o_u_t_l_i_n_e_1a87880b33bc69fa17ab37a93706ae8d84" kindref="member">child</ref>()-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>ApproximateOutlineList(outline-&gt;<ref refid="class_c___o_u_t_l_i_n_e_1a87880b33bc69fa17ab37a93706ae8d84" kindref="member">child</ref>(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>tail);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tail;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Factory<sp/>to<sp/>build<sp/>a<sp/>TBLOB<sp/>from<sp/>a<sp/>C_BLOB<sp/>with<sp/>polygonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>approximation<sp/>along<sp/>the<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/><ref refid="struct_t_b_l_o_b_1a49b1279a5ff4e05d6dd0beacd2d99395" kindref="member">TBLOB::PolygonalCopy</ref>(<ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>C_OUTLINE_IT<sp/>ol_it<sp/>=<sp/>src-&gt;<ref refid="class_c___b_l_o_b_1ae510f3d0e7398fbb46608082429eac89" kindref="member">out_list</ref>();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>tblob<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1aba17a476d90e090c542229a7930468ee" kindref="member">TBLOB</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>ApproximateOutlineList(src-&gt;<ref refid="class_c___b_l_o_b_1ae510f3d0e7398fbb46608082429eac89" kindref="member">out_list</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;tblob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tblob;</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalizes<sp/>the<sp/>blob<sp/>for<sp/>classification<sp/>only<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Normally<sp/>this<sp/>means<sp/>a<sp/>non-zero<sp/>classify<sp/>rotation.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>no<sp/>Normalization<sp/>is<sp/>needed,<sp/>then<sp/>NULL<sp/>is<sp/>returned,<sp/>and<sp/>the<sp/>denorm<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unchanged.<sp/>Otherwise<sp/>a<sp/>new<sp/>TBLOB<sp/>is<sp/>returned<sp/>and<sp/>the<sp/>denorm<sp/>points<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>new<sp/>DENORM.<sp/>In<sp/>this<sp/>case,<sp/>both<sp/>the<sp/>TBLOB<sp/>and<sp/>DENORM<sp/>must<sp/>be<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/><ref refid="struct_t_b_l_o_b_1a01a7a878b92170eaa04d65435b0ef4cc" kindref="member">TBLOB::ClassifyNormalizeIfNeeded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>**<sp/>denorm)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>rotated_blob<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>necessary,<sp/>copy<sp/>the<sp/>blob<sp/>and<sp/>rotate<sp/>it.<sp/>The<sp/>rotation<sp/>is<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>+/-<sp/>90<sp/>degrees,<sp/>as<sp/>180<sp/>was<sp/>already<sp/>taken<sp/>care<sp/>of.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*denorm)-&gt;block()<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*denorm)-&gt;block()-&gt;classify_rotation().y()<sp/>!=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/><ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x_middle<sp/>=<sp/>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_middle<sp/>=<sp/>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>rotated_blob<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1aba17a476d90e090c542229a7930468ee" kindref="member">TBLOB</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation<sp/>=<sp/>(*denorm)-&gt;block()-&gt;classify_rotation();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>norm<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>rotated<sp/>blob<sp/>back<sp/>to<sp/>the<sp/>same<sp/>y-position<sp/>so<sp/>that<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>still<sp/>distinguish<sp/>similar<sp/>glyphs<sp/>with<sp/>differeny<sp/>y-position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>target_y<sp/>=<sp/><ref refid="normalis_8h_1abe10ce41bf7240ae8a053dea471d6ed5" kindref="member">kBlnBaselineOffset</ref><sp/>+</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(rotation.<ref refid="class_f_c_o_o_r_d_1a397f7ce997b246df18e7bd5a20cc422e" kindref="member">y</ref>()<sp/>&gt;<sp/>0<sp/>?<sp/>x_middle<sp/>-<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>:<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>-<sp/>x_middle);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>norm-&gt;<ref refid="class_d_e_n_o_r_m_1ac667a208c574b073db800890e4e31255" kindref="member">SetupNormalization</ref>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;rotation,<sp/>*denorm,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_middle,<sp/>y_middle,<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>1.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>0.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>target_y);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_middle,<sp/>y_middle,<sp/>1.0f,<sp/>1.0f,<sp/>0.0f,<sp/>y_middle);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>rotated_blob-&gt;<ref refid="struct_t_b_l_o_b_1a6c4c913279ff695055baf11bedd4158d" kindref="member">Normalize</ref>(*norm);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>*denorm<sp/>=<sp/>norm;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rotated_blob;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>the<sp/>data<sp/>and<sp/>the<sp/>outline,<sp/>but<sp/>leaves<sp/>next<sp/>untouched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1a7ad2a4dac12684b1993868f88f77d200" kindref="member">TBLOB::CopyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b_1a3027cf384580fa412270a37fb78395cd" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>prev_outline<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>srcline<sp/>=<sp/>src.<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;<sp/>srcline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>srcline<sp/>=<sp/>srcline-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>new_outline<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>(*srcline);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outlines<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outlines<sp/>=<sp/>new_outline;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>=<sp/>new_outline;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_outline<sp/>=<sp/>new_outline;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>owned<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1a3027cf384580fa412270a37fb78395cd" kindref="member">TBLOB::Clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>next_outline<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outlines<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outlines<sp/>=<sp/>next_outline)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>next_outline<sp/>=<sp/>outlines-&gt;next;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalize<sp/>in-place<sp/>using<sp/>the<sp/>DENORM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1a6c4c913279ff695055baf11bedd4158d" kindref="member">TBLOB::Normalize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>outline-&gt;Normalize<sp/>is<sp/>more<sp/>accurate,<sp/>but<sp/>breaks<sp/>tests<sp/>due</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>changes<sp/>it<sp/>makes.<sp/>Reinstate<sp/>this<sp/>code<sp/>with<sp/>a<sp/>retraining.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1</highlight></codeline>
<codeline lineno="334"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline<sp/>=<sp/>outlines;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;Normalize(denorm);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>denorm.<ref refid="class_d_e_n_o_r_m_1a839db5a7d3cea12c736dcea5e42c16b0" kindref="member">LocalNormBlob</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="340"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotates<sp/>by<sp/>the<sp/>given<sp/>rotation<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1a6265072e245d6cc1ba1d03f1f1780145" kindref="member">TBLOB::Rotate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref><sp/>rotation)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline<sp/>=<sp/>outlines;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;Rotate(rotation);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Moves<sp/>by<sp/>the<sp/>given<sp/>vec<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1a2791f69f39f81c9e350abca4bb3fa87d" kindref="member">TBLOB::Move</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>vec)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline<sp/>=<sp/>outlines;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;Move(vec);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Scales<sp/>by<sp/>the<sp/>given<sp/>factor<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1ab4ca2b4e8d967347a522e77d27a7cda7" kindref="member">TBLOB::Scale</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>factor)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline<sp/>=<sp/>outlines;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;Scale(factor);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recomputes<sp/>the<sp/>bounding<sp/>boxes<sp/>of<sp/>the<sp/>outlines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1a7725f8aebcae59473e980b7e2aa5d0b0" kindref="member">TBLOB::ComputeBoundingBoxes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline<sp/>=<sp/>outlines;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;ComputeBoundingBox();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>outlines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1a7cc7be71e17444d728e9c68204bca007" kindref="member">TBLOB::NumOutlines</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline<sp/>=<sp/>outlines;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;next)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>++result;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>TBLOB::bounding_box()</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>Compute<sp/>the<sp/>bounding_box<sp/>of<sp/>a<sp/>compound<sp/>blob,<sp/>defined<sp/>to<sp/>be<sp/>the</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>union<sp/>of<sp/>all<sp/>top-level<sp/>outlines<sp/>in<sp/>the<sp/>blob.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/><ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">TBLOB::bounding_box</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outlines<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>(0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref><sp/>*outline<sp/>=<sp/><ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1af3c73d6ff3d1819730731391c5701778" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>box<sp/>+=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1af3c73d6ff3d1819730731391c5701778" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>box;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="396"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b_1aea2abdf5701d97f2aece1a5fbabaf77e" kindref="member">TBLOB::plot</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window,<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>child_color)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline<sp/>=<sp/>outlines;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a32b0c2d11e9ebe59d1a1d8b3cf4c6d18" kindref="member">plot</ref>(window,<sp/>color,<sp/>child_color);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="402"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Factory<sp/>to<sp/>build<sp/>a<sp/>TWERD<sp/>from<sp/>a<sp/>(C_BLOB)<sp/>WERD,<sp/>with<sp/>polygonal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>approximation<sp/>along<sp/>the<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref>*<sp/><ref refid="struct_t_w_e_r_d_1abbfaec0bb3aeb77965350aede324cb79" kindref="member">TWERD::PolygonalCopy</ref>(<ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref>*<sp/>tessword<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d_1a02cbf05084fd4a6fca24049cdaaf7dfa" kindref="member">TWERD</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>tessword-&gt;<ref refid="struct_t_w_e_r_d_1a408678da3281eb77874487aceb44b95c" kindref="member">latin_script</ref><sp/>=<sp/>src-&gt;<ref refid="class_w_e_r_d_1a81edde8597a3d9fd8a664d703d332c41" kindref="member">flag</ref>(<ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0bea8c3664a200b620de34a3cb691cb1e71c" kindref="member">W_SCRIPT_IS_LATIN</ref>);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>C_BLOB_IT<sp/>b_it(src-&gt;<ref refid="class_w_e_r_d_1a174baefaa99afbfdbf444e4199f3b529" kindref="member">cblob_list</ref>());</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*tail<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b_it.mark_cycle_pt();<sp/>!b_it.cycled_list();<sp/>b_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref>*<sp/>blob<sp/>=<sp/>b_it.data();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>tblob<sp/>=<sp/><ref refid="struct_t_b_l_o_b_1a49b1279a5ff4e05d6dd0beacd2d99395" kindref="member">TBLOB::PolygonalCopy</ref>(blob);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tessword-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref><sp/>=<sp/>tblob;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref><sp/>=<sp/>tblob;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>tblob;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tessword;</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalize<sp/>in-place<sp/>and<sp/>record<sp/>the<sp/>normalization<sp/>in<sp/>the<sp/>DENORM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d_1afbd0a7b21dd6c9fcbc265fb4b5117265" kindref="member">TWERD::SetupBLNormalize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_r_o_w" kindref="compound">ROW</ref>*<sp/>row,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x_height,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>numeric_mode,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_segments<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>*<sp/>segs<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numeric_mode)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>segs<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m___s_e_g" kindref="compound">DENORM_SEG</ref>[<ref refid="struct_t_w_e_r_d_1adfdef9868e61650e076775011382ec70" kindref="member">NumBlobs</ref>()];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>blob<sp/>=<sp/>blob-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box<sp/>=<sp/>blob-&gt;<ref refid="class_c___b_l_o_b_1a77e52e29e2c622a3a63bb7edb110f6ab" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>factor<sp/>=<sp/><ref refid="normalis_8h_1af974e6755e636c8bc7cbe57e3bcbdd73" kindref="member">kBlnXHeight</ref><sp/>/<sp/>x_height;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>factor<sp/>=<sp/><ref refid="helpers_8h_1af8739168d5b3235996eeb25dac3c4044" kindref="member">ClipToRange</ref>(<ref refid="normalis_8h_1af974e6755e636c8bc7cbe57e3bcbdd73" kindref="member">kBlnXHeight</ref><sp/>*<sp/>4.0<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>/<sp/>(3<sp/>*<sp/>blob_box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>()),</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor,<sp/>factor<sp/>*<sp/>1.5<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segs[num_segments].<ref refid="class_d_e_n_o_r_m___s_e_g_1a7e1cdd1b16c058a1228700f013c2efda" kindref="member">xstart</ref><sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segs[num_segments].<ref refid="class_d_e_n_o_r_m___s_e_g_1adc44d075bcf313a8c5cdf2ec690fdf96" kindref="member">ycoord</ref><sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segs[num_segments++].<ref refid="class_d_e_n_o_r_m___s_e_g_1a0c2c79c4f8220b6872b20eb58b0c5c18" kindref="member">scale_factor</ref><sp/>=<sp/>factor;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>denorm-&gt;<ref refid="class_d_e_n_o_r_m_1a27f4285da29912f3c42b44ebe46c7185" kindref="member">SetupBLNormalize</ref>(block,<sp/>row,<sp/>x_height,<sp/><ref refid="struct_t_w_e_r_d_1a8278c9db39975f181ad074bf343ea402" kindref="member">bounding_box</ref>(),</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_segments,<sp/>segs);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>segs;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalize<sp/>in-place<sp/>using<sp/>the<sp/>DENORM.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d_1a830ae54d262e8348e098b5bab2aa4985" kindref="member">TWERD::Normalize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>&amp;<sp/>denorm)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>blob<sp/>=<sp/>blob-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;Normalize(denorm);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>the<sp/>data<sp/>and<sp/>the<sp/>blobs,<sp/>but<sp/>leaves<sp/>next<sp/>untouched.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d_1a6fe65fc8837f845479901adb50e8017a" kindref="member">TWERD::CopyFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref>&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><ref refid="struct_t_w_e_r_d_1aaae5d4bddf965fc6f051ed99a9bd3607" kindref="member">Clear</ref>();</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><ref refid="struct_t_w_e_r_d_1a408678da3281eb77874487aceb44b95c" kindref="member">latin_script</ref><sp/>=<sp/>src.<ref refid="struct_t_w_e_r_d_1a408678da3281eb77874487aceb44b95c" kindref="member">latin_script</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>prev_blob<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>srcblob<sp/>=<sp/>src.<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>srcblob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>srcblob<sp/>=<sp/>srcblob-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>new_blob<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>(*srcblob);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref><sp/>=<sp/>new_blob;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref><sp/>=<sp/>new_blob;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_blob<sp/>=<sp/>new_blob;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>owned<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d_1aaae5d4bddf965fc6f051ed99a9bd3607" kindref="member">TWERD::Clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>next_blob<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref><sp/>=<sp/>next_blob)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>next_blob<sp/>=<sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recomputes<sp/>the<sp/>bounding<sp/>boxes<sp/>of<sp/>the<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d_1ab8aa2a1f2a0455c2fc353ea2748cff97" kindref="member">TWERD::ComputeBoundingBoxes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>blob<sp/>=<sp/>blob-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;ComputeBoundingBoxes();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/><ref refid="struct_t_w_e_r_d_1a8278c9db39975f181ad074bf343ea402" kindref="member">TWERD::bounding_box</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>result;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>blob<sp/>=<sp/>blob-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_c___b_l_o_b_1a77e52e29e2c622a3a63bb7edb110f6ab" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>box;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merges<sp/>the<sp/>blobs<sp/>from<sp/>start<sp/>to<sp/>end,<sp/>not<sp/>including<sp/>end,<sp/>and<sp/>deletes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>blobs<sp/>between<sp/>start<sp/>and<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d_1a02c386bc29fa18eafabdcef92fe7fed7" kindref="member">TWERD::MergeBlobs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>start<sp/>&amp;&amp;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>if<sp/>(blob<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>next_blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>start<sp/>+<sp/>1;<sp/>i<sp/>&lt;<sp/>end<sp/>&amp;&amp;<sp/>next_blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>outlines<sp/>from<sp/>the<sp/>next<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref><sp/>=<sp/>next_blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>=<sp/>next_blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next_blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>next<sp/>blob<sp/>and<sp/>move<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>dead_blob<sp/>=<sp/>next_blob;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>next_blob<sp/>=<sp/>next_blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref><sp/>=<sp/>next_blob;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>dead_blob;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="522"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d_1afe89f2f31b48fa578028f2527b55e144" kindref="member">TWERD::plot</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>window)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref><sp/>color<sp/>=<sp/><ref refid="class_w_e_r_d_1a05865f2b7c0365adaf4c76dd06dd0626" kindref="member">WERD::NextColor</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a38a1ed82a4151b9fa1d57620f5bc886c" kindref="member">ScrollView::BLACK</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/><ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1aea2abdf5701d97f2aece1a5fbabaf77e" kindref="member">plot</ref>(window,<sp/>color,<sp/><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a3147083bcb68eb690858099c736e6857" kindref="member">ScrollView::BROWN</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>color<sp/>=<sp/><ref refid="class_w_e_r_d_1a05865f2b7c0365adaf4c76dd06dd0626" kindref="member">WERD::NextColor</ref>(color);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="530"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*<sp/>blob_origin</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>*<sp/>Compute<sp/>the<sp/>origin<sp/>of<sp/>a<sp/>compound<sp/>blob,<sp/>define<sp/>to<sp/>be<sp/>the<sp/>centre</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>bounding<sp/>box.</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="blobs_8cpp_1a0464f690c04a9aeb7710a6df1c0ba1fb" kindref="member">blob_origin</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*blob<sp/>to<sp/>compute<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>*origin)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*return<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>bbox<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>*origin<sp/>=<sp/>(bbox.<ref refid="class_t_b_o_x_1ad6f19fe78e5fcc3a824310d3f75ad358" kindref="member">topleft</ref>()<sp/>+<sp/>bbox.<ref refid="class_t_b_o_x_1a24d69d48b18162bf1c8e9e62ec00ecfe" kindref="member">botright</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*<sp/>blobs_widths</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*<sp/>Compute<sp/>the<sp/>widths<sp/>of<sp/>a<sp/>list<sp/>of<sp/>blobs.<sp/>Return<sp/>an<sp/>array<sp/>of<sp/>the<sp/>widths</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*<sp/>and<sp/>gaps.</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><ref refid="struct_w_i_d_t_h___r_e_c_o_r_d" kindref="compound">WIDTH_RECORD</ref><sp/>*<ref refid="blobs_8cpp_1ac62acb187b8e5401eb56032b3eebef09" kindref="member">blobs_widths</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blobs)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*blob<sp/>to<sp/>compute<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><ref refid="struct_w_i_d_t_h___r_e_c_o_r_d" kindref="compound">WIDTH_RECORD</ref><sp/>*width_record;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>topleft;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*bounding<sp/>box<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>botright;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_end;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_blobs<sp/>=<sp/><ref refid="blobs_8cpp_1aa8048f4c65af2775452ad5d4dfbca053" kindref="member">count_blobs</ref><sp/>(blobs);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>width_record<sp/>=<sp/>(<ref refid="struct_w_i_d_t_h___r_e_c_o_r_d" kindref="compound">WIDTH_RECORD</ref><sp/>*)<sp/><ref refid="freelist_8cpp_1a5898fbe61f6ffe4c1be71a107193cdfd" kindref="member">memalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<sp/>num_blobs<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>width_record-&gt;<ref refid="struct_w_i_d_t_h___r_e_c_o_r_d_1ab6a41176580d08b8e2389aa9ce6e26ad" kindref="member">num_chars</ref><sp/>=<sp/>num_blobs;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>bbox<sp/>=<sp/>blobs-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>width_record-&gt;<ref refid="struct_w_i_d_t_h___r_e_c_o_r_d_1a3d7464eb423f5e10dbb3bb2d7b4b26f1" kindref="member">widths</ref>[i++]<sp/>=<sp/>bbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>width<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>blob_end<sp/>=<sp/>bbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/>blobs-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>curbox<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a8f1f8f110170fe12cf8147d504cd0ea2" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>width_record-&gt;<ref refid="struct_w_i_d_t_h___r_e_c_o_r_d_1a3d7464eb423f5e10dbb3bb2d7b4b26f1" kindref="member">widths</ref>[i++]<sp/>=<sp/>curbox.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>blob_end;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>width_record-&gt;<ref refid="struct_w_i_d_t_h___r_e_c_o_r_d_1a3d7464eb423f5e10dbb3bb2d7b4b26f1" kindref="member">widths</ref>[i++]<sp/>=<sp/>curbox.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>blob_end<sp/>=<sp/>curbox.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>width_record;</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/>count_blobs</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/>Return<sp/>a<sp/>count<sp/>of<sp/>the<sp/>number<sp/>of<sp/>blobs<sp/>attached<sp/>to<sp/>this<sp/>one.</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="blobs_8cpp_1aa8048f4c65af2775452ad5d4dfbca053" kindref="member">count_blobs</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blobs)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>b<sp/>=<sp/>blobs;<sp/>b<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>b<sp/>=<sp/>b-&gt;next)</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>x++;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>divisible_blob</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>blob<sp/>contains<sp/>multiple<sp/>outlines<sp/>than<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*<sp/>separated<sp/>using<sp/>divide_blobs.<sp/>Sets<sp/>the<sp/>location<sp/>to<sp/>be<sp/>used<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>call<sp/>to<sp/>divide_blobs.</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="blobs_8cpp_1aa87284f5696fb5dd745dafa85539d760" kindref="member">divisible_blob</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>italic_blob,<sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>*<sp/>location)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>at<sp/>least<sp/>2<sp/>outlines<sp/>for<sp/>it<sp/>to<sp/>be<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_gap<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>vertical<sp/>=<sp/>italic_blob<sp/>?<sp/><ref refid="blobs_8cpp_1a0ce92f82149c2659d55bdb1d2687c8da" kindref="member">kDivisibleVerticalItalic</ref></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="blobs_8cpp_1a08e47d4b90d71096bdc2508f601ed5d0" kindref="member">kDivisibleVerticalUpright</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline1<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;<sp/>outline1<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline1<sp/>=<sp/>outline1-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline1-&gt;is_hole)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Holes<sp/>do<sp/>not<sp/>count<sp/>as<sp/>separable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>mid_pt1(</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;inT16&gt;((outline1-&gt;topleft.x<sp/>+<sp/>outline1-&gt;botright.x)<sp/>/<sp/>2),</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;inT16&gt;((outline1-&gt;topleft.y<sp/>+<sp/>outline1-&gt;botright.y)<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_prod1<sp/>=<sp/><ref refid="vecfuncs_8h_1aec4dedcf89534ed10f6107bf9c6418f3" kindref="member">CROSS</ref>(mid_pt1,<sp/>vertical);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_prod1,<sp/>max_prod1;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>outline1-&gt;MinMaxCrossProduct(vertical,<sp/>&amp;min_prod1,<sp/>&amp;max_prod1);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline2<sp/>=<sp/>outline1-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>;<sp/>outline2<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline2<sp/>=<sp/>outline2-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline2-&gt;is_hole)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Holes<sp/>do<sp/>not<sp/>count<sp/>as<sp/>separable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>mid_pt2(</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;inT16&gt;((outline2-&gt;topleft.x<sp/>+<sp/>outline2-&gt;botright.x)<sp/>/<sp/>2),</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;inT16&gt;((outline2-&gt;topleft.y<sp/>+<sp/>outline2-&gt;botright.y)<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_prod2<sp/>=<sp/><ref refid="vecfuncs_8h_1aec4dedcf89534ed10f6107bf9c6418f3" kindref="member">CROSS</ref>(mid_pt2,<sp/>vertical);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_prod2,<sp/>max_prod2;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outline2-&gt;MinMaxCrossProduct(vertical,<sp/>&amp;min_prod2,<sp/>&amp;max_prod2);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_gap<sp/>=<sp/>abs(mid_prod2<sp/>-<sp/>mid_prod1);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overlap<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(max_prod1,<sp/>max_prod2)<sp/>-<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(min_prod1,<sp/>min_prod2);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid_gap<sp/>-<sp/>overlap<sp/>/<sp/>4<sp/>&gt;<sp/>max_gap)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_gap<sp/>=<sp/>mid_gap<sp/>-<sp/>overlap<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*location<sp/>=<sp/>mid_pt1;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*location<sp/>+=<sp/>mid_pt2;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*location<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>y<sp/>component<sp/>of<sp/>the<sp/>vertical<sp/>vector<sp/>as<sp/>an<sp/>approximation<sp/>to<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_gap<sp/>&gt;<sp/>vertical.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/>divide_blobs</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/>Create<sp/>two<sp/>blobs<sp/>by<sp/>grouping<sp/>the<sp/>outlines<sp/>in<sp/>the<sp/>appropriate<sp/>blob.</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*<sp/>The<sp/>outlines<sp/>that<sp/>are<sp/>beyond<sp/>the<sp/>location<sp/>point<sp/>are<sp/>moved<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*<sp/>other<sp/>blob.<sp/><sp/>The<sp/>ones<sp/>whose<sp/>x<sp/>location<sp/>is<sp/>less<sp/>than<sp/>that<sp/>point<sp/>are</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*<sp/>retained<sp/>in<sp/>the<sp/>original<sp/>blob.</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="blobs_8cpp_1a2ab5e3b619507b26900a73919b165970" kindref="member">divide_blobs</ref>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*blob,<sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref><sp/>*other_blob,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>italic_blob,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref>&amp;<sp/>location)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>vertical<sp/>=<sp/>italic_blob<sp/>?<sp/><ref refid="blobs_8cpp_1a0ce92f82149c2659d55bdb1d2687c8da" kindref="member">kDivisibleVerticalItalic</ref></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="blobs_8cpp_1a08e47d4b90d71096bdc2508f601ed5d0" kindref="member">kDivisibleVerticalUpright</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref><sp/>*outline1<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref><sp/>*outline2<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref><sp/>*outline<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>location_prod<sp/>=<sp/><ref refid="vecfuncs_8h_1aec4dedcf89534ed10f6107bf9c6418f3" kindref="member">CROSS</ref>(location,<sp/>vertical);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>mid_pt(</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;inT16&gt;((outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a1cc50129500062a2d984e459f89d7a5b" kindref="member">topleft</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>+<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a7abcd2efd1cd8cdc820e304cf8ae1f0c" kindref="member">botright</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>)<sp/>/<sp/>2),</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;inT16&gt;((outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a1cc50129500062a2d984e459f89d7a5b" kindref="member">topleft</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>+<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a7abcd2efd1cd8cdc820e304cf8ae1f0c" kindref="member">botright</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>)<sp/>/<sp/>2));</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_prod<sp/>=<sp/><ref refid="vecfuncs_8h_1aec4dedcf89534ed10f6107bf9c6418f3" kindref="member">CROSS</ref>(mid_pt,<sp/>vertical);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mid_prod<sp/>&lt;<sp/>location_prod)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Outline<sp/>is<sp/>in<sp/>left<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline1)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline1-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>=<sp/>outline;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref><sp/>=<sp/>outline;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outline1<sp/>=<sp/>outline;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Outline<sp/>is<sp/>in<sp/>right<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline2)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline2-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>=<sp/>outline;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_blob-&gt;<ref refid="struct_t_b_l_o_b_1a3c9282cad4102157d214bcc6311cda07" kindref="member">outlines</ref><sp/>=<sp/>outline;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outline2<sp/>=<sp/>outline;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>outline-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline1)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>outline1-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outline2)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>outline2-&gt;<ref refid="struct_t_e_s_s_l_i_n_e_1a0fb224d43ea53a791f0957fa92793bef" kindref="member">next</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/blobs.cpp"/>
  </compounddef>
</doxygen>
