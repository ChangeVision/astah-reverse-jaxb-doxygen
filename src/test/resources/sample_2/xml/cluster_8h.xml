<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="cluster_8h" kind="file">
    <compoundname>cluster.h</compoundname>
    <includes refid="kdtree_8h" local="yes">kdtree.h</includes>
    <includes refid="oldlist_8h" local="yes">oldlist.h</includes>
    <includedby refid="cluster_8cpp" local="yes">classify/cluster.cpp</includedby>
    <includedby refid="clusttool_8h" local="yes">classify/clusttool.h</includedby>
    <includedby refid="mastertrainer_8h" local="yes">classify/mastertrainer.h</includedby>
    <includedby refid="commontraining_8h" local="yes">training/commontraining.h</includedby>
    <includedby refid="cntraining_8cpp" local="yes">training/cntraining.cpp</includedby>
    <includedby refid="commontraining_8cpp" local="yes">training/commontraining.cpp</includedby>
    <includedby refid="mergenf_8h" local="yes">training/mergenf.h</includedby>
    <includedby refid="mergenf_8cpp" local="yes">training/mergenf.cpp</includedby>
    <includedby refid="mftraining_8cpp" local="yes">training/mftraining.cpp</includedby>
    <incdepgraph>
      <node id="23677">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="23678" relation="include">
        </childnode>
        <childnode refid="23691" relation="include">
        </childnode>
        <childnode refid="23674" relation="include">
        </childnode>
      </node>
      <node id="23673">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="23691">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="23666">
        <label>stdlib.h</label>
      </node>
      <node id="23661">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="23662" relation="include">
        </childnode>
      </node>
      <node id="23658">
        <label>classify/cluster.h</label>
        <link refid="cluster.h"/>
        <childnode refid="23659" relation="include">
        </childnode>
        <childnode refid="23701" relation="include">
        </childnode>
      </node>
      <node id="23678">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="23679" relation="include">
        </childnode>
        <childnode refid="23671" relation="include">
        </childnode>
        <childnode refid="23674" relation="include">
        </childnode>
        <childnode refid="23688" relation="include">
        </childnode>
        <childnode refid="23668" relation="include">
        </childnode>
        <childnode refid="23686" relation="include">
        </childnode>
        <childnode refid="23689" relation="include">
        </childnode>
        <childnode refid="23690" relation="include">
        </childnode>
      </node>
      <node id="23699">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
      </node>
      <node id="23681">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="23666" relation="include">
        </childnode>
        <childnode refid="23665" relation="include">
        </childnode>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23675" relation="include">
        </childnode>
        <childnode refid="23671" relation="include">
        </childnode>
        <childnode refid="23682" relation="include">
        </childnode>
      </node>
      <node id="23694">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23660" relation="include">
        </childnode>
        <childnode refid="23681" relation="include">
        </childnode>
        <childnode refid="23683" relation="include">
        </childnode>
      </node>
      <node id="23676">
        <label>stddef.h</label>
      </node>
      <node id="23685">
        <label>memory.h</label>
      </node>
      <node id="23671">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="23660" relation="include">
        </childnode>
      </node>
      <node id="23662">
        <label>limits.h</label>
      </node>
      <node id="23659">
        <label>kdtree.h</label>
        <link refid="kdtree_8h"/>
        <childnode refid="23660" relation="include">
        </childnode>
        <childnode refid="23663" relation="include">
        </childnode>
        <childnode refid="23692" relation="include">
        </childnode>
      </node>
      <node id="23698">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="23696" relation="include">
        </childnode>
      </node>
      <node id="23689">
        <label>pthread.h</label>
      </node>
      <node id="23665">
        <label>string.h</label>
      </node>
      <node id="23687">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="23684" relation="include">
        </childnode>
      </node>
      <node id="23684">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="23685" relation="include">
        </childnode>
        <childnode refid="23665" relation="include">
        </childnode>
      </node>
      <node id="23663">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23665" relation="include">
        </childnode>
        <childnode refid="23666" relation="include">
        </childnode>
        <childnode refid="23660" relation="include">
        </childnode>
        <childnode refid="23667" relation="include">
        </childnode>
        <childnode refid="23677" relation="include">
        </childnode>
      </node>
      <node id="23695">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="23696" relation="include">
        </childnode>
        <childnode refid="23697" relation="include">
        </childnode>
        <childnode refid="23673" relation="include">
        </childnode>
        <childnode refid="23699" relation="include">
        </childnode>
        <childnode refid="23667" relation="include">
        </childnode>
      </node>
      <node id="23670">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="23660" relation="include">
        </childnode>
      </node>
      <node id="23690">
        <label>semaphore.h</label>
      </node>
      <node id="23682">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="23671" relation="include">
        </childnode>
      </node>
      <node id="23679">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="23680" relation="include">
        </childnode>
        <childnode refid="23667" relation="include">
        </childnode>
        <childnode refid="23684" relation="include">
        </childnode>
        <childnode refid="23686" relation="include">
        </childnode>
        <childnode refid="23669" relation="include">
        </childnode>
      </node>
      <node id="23696">
        <label>math.h</label>
      </node>
      <node id="23683">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="23671" relation="include">
        </childnode>
      </node>
      <node id="23700">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="23696" relation="include">
        </childnode>
        <childnode refid="23693" relation="include">
        </childnode>
      </node>
      <node id="23701">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="23663" relation="include">
        </childnode>
        <childnode refid="23670" relation="include">
        </childnode>
      </node>
      <node id="23692">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="23693" relation="include">
        </childnode>
        <childnode refid="23664" relation="include">
        </childnode>
      </node>
      <node id="23668">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23669" relation="include">
        </childnode>
        <childnode refid="23674" relation="include">
        </childnode>
      </node>
      <node id="23669">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23666" relation="include">
        </childnode>
        <childnode refid="23670" relation="include">
        </childnode>
        <childnode refid="23671" relation="include">
        </childnode>
        <childnode refid="23672" relation="include">
        </childnode>
        <childnode refid="23673" relation="include">
        </childnode>
      </node>
      <node id="23675">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="23676" relation="include">
        </childnode>
        <childnode refid="23660" relation="include">
        </childnode>
      </node>
      <node id="23680">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23660" relation="include">
        </childnode>
        <childnode refid="23681" relation="include">
        </childnode>
        <childnode refid="23683" relation="include">
        </childnode>
      </node>
      <node id="23686">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="23671" relation="include">
        </childnode>
        <childnode refid="23672" relation="include">
        </childnode>
        <childnode refid="23674" relation="include">
        </childnode>
        <childnode refid="23670" relation="include">
        </childnode>
        <childnode refid="23684" relation="include">
        </childnode>
        <childnode refid="23687" relation="include">
        </childnode>
      </node>
      <node id="23697">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23696" relation="include">
        </childnode>
        <childnode refid="23680" relation="include">
        </childnode>
        <childnode refid="23698" relation="include">
        </childnode>
      </node>
      <node id="23667">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="23668" relation="include">
        </childnode>
      </node>
      <node id="23660">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="23661" relation="include">
        </childnode>
      </node>
      <node id="23664">
        <label>stdio.h</label>
      </node>
      <node id="23688">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23660" relation="include">
        </childnode>
        <childnode refid="23667" relation="include">
        </childnode>
      </node>
      <node id="23674">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23665" relation="include">
        </childnode>
        <childnode refid="23661" relation="include">
        </childnode>
        <childnode refid="23675" relation="include">
        </childnode>
      </node>
      <node id="23693">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="23694" relation="include">
        </childnode>
        <childnode refid="23695" relation="include">
        </childnode>
        <childnode refid="23700" relation="include">
        </childnode>
      </node>
      <node id="23672">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="23664" relation="include">
        </childnode>
        <childnode refid="23665" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23707">
        <label>classify/mfx.cpp</label>
        <link refid="mfx_8cpp"/>
      </node>
      <node id="23714">
        <label>classify/mastertrainer.cpp</label>
        <link refid="mastertrainer_8cpp"/>
      </node>
      <node id="23702">
        <label>classify/cluster.h</label>
        <link refid="cluster.h"/>
        <childnode refid="23703" relation="include">
        </childnode>
        <childnode refid="23704" relation="include">
        </childnode>
        <childnode refid="23713" relation="include">
        </childnode>
        <childnode refid="23717" relation="include">
        </childnode>
        <childnode refid="23709" relation="include">
        </childnode>
        <childnode refid="23710" relation="include">
        </childnode>
        <childnode refid="23718" relation="include">
        </childnode>
        <childnode refid="23711" relation="include">
        </childnode>
        <childnode refid="23712" relation="include">
        </childnode>
      </node>
      <node id="23710">
        <label>training/commontraining.cpp</label>
        <link refid="commontraining_8cpp"/>
      </node>
      <node id="23706">
        <label>classify/mfoutline.cpp</label>
        <link refid="mfoutline_8cpp"/>
      </node>
      <node id="23718">
        <label>training/mergenf.h</label>
        <link refid="mergenf_8h"/>
        <childnode refid="23711" relation="include">
        </childnode>
        <childnode refid="23712" relation="include">
        </childnode>
      </node>
      <node id="23704">
        <label>classify/clusttool.h</label>
        <link refid="clusttool_8h"/>
        <childnode refid="23705" relation="include">
        </childnode>
        <childnode refid="23706" relation="include">
        </childnode>
        <childnode refid="23707" relation="include">
        </childnode>
        <childnode refid="23708" relation="include">
        </childnode>
        <childnode refid="23709" relation="include">
        </childnode>
        <childnode refid="23710" relation="include">
        </childnode>
        <childnode refid="23711" relation="include">
        </childnode>
        <childnode refid="23712" relation="include">
        </childnode>
      </node>
      <node id="23708">
        <label>classify/normmatch.cpp</label>
        <link refid="normmatch_8cpp"/>
      </node>
      <node id="23711">
        <label>training/mergenf.cpp</label>
        <link refid="mergenf_8cpp"/>
      </node>
      <node id="23712">
        <label>training/mftraining.cpp</label>
        <link refid="mftraining_8cpp"/>
      </node>
      <node id="23709">
        <label>training/cntraining.cpp</label>
        <link refid="cntraining_8cpp"/>
      </node>
      <node id="23705">
        <label>classify/clusttool.cpp</label>
        <link refid="clusttool_8cpp"/>
      </node>
      <node id="23716">
        <label>training/shapeclustering.cpp</label>
        <link refid="shapeclustering_8cpp"/>
      </node>
      <node id="23715">
        <label>training/classifier_tester.cpp</label>
        <link refid="classifier__tester_8cpp"/>
      </node>
      <node id="23717">
        <label>training/commontraining.h</label>
        <link refid="commontraining_8h"/>
        <childnode refid="23715" relation="include">
        </childnode>
        <childnode refid="23709" relation="include">
        </childnode>
        <childnode refid="23710" relation="include">
        </childnode>
        <childnode refid="23712" relation="include">
        </childnode>
        <childnode refid="23716" relation="include">
        </childnode>
      </node>
      <node id="23703">
        <label>classify/cluster.cpp</label>
        <link refid="cluster_8cpp"/>
      </node>
      <node id="23713">
        <label>classify/mastertrainer.h</label>
        <link refid="mastertrainer_8h"/>
        <childnode refid="23714" relation="include">
        </childnode>
        <childnode refid="23715" relation="include">
        </childnode>
        <childnode refid="23710" relation="include">
        </childnode>
        <childnode refid="23712" relation="include">
        </childnode>
        <childnode refid="23716" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structsample" prot="public">sample</innerclass>
    <innerclass refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" prot="public">CLUSTERCONFIG</innerclass>
    <innerclass refid="union_f_l_o_a_t_u_n_i_o_n" prot="public">FLOATUNION</innerclass>
    <innerclass refid="struct_p_r_o_t_o_t_y_p_e" prot="public">PROTOTYPE</innerclass>
    <innerclass refid="struct_c_l_u_s_t_e_r_e_r" prot="public">CLUSTERER</innerclass>
    <innerclass refid="struct_s_a_m_p_l_e_l_i_s_t" prot="public">SAMPLELIST</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cluster_8h_1a759b3b99f54d92a0c6c5471a4c87c42b" prot="public" static="no">
        <name>MINBUCKETS</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="26" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cluster_8h_1a17645698964d2a3c89b72281594c58a3" prot="public" static="no">
        <name>MAXBUCKETS</name>
        <initializer>39</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="27" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cluster_8h_1af125589eadf8dca87cf904ebcb77c896" prot="public" static="no">
        <name>InitSampleSearch</name>
        <param><defname>S</defname></param>
        <param><defname>C</defname></param>
        <initializer>(((C)==<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)?(S=<ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>):(S=<ref refid="oldlist_8h_1a9c4294375af81ab4c133b6b5a3679a16" kindref="member">push</ref>(<ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>,(C))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="105" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cluster_8h_1aa086ccbc1343c3ac99987b23d500adab" prot="public" static="no">
        <name>ALREADYCLUSTERED</name>
        <initializer>4000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="133" column="9" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" prot="public" static="no">
        <name>PROTOSTYLE</name>
        <enumvalue id="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa93d6901f160899d15f69322530595f4f" prot="public">
          <name>spherical</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa39d32ff639641ca169c9729c58614459" prot="public">
          <name>elliptical</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaab164032fff82a847826b4887d9e7be58" prot="public">
          <name>mixed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa9761086e420b925e438327ad385b304d" prot="public">
          <name>automatic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.h" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0" prot="public" static="no">
        <name>DISTRIBUTION</name>
        <enumvalue id="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0aebc81705969b8c5ae986b0b2ec08d1d5" prot="public">
          <name>normal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a56013d9ac59a24fb94d9acb932a04b2f" prot="public">
          <name>uniform</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a21504929e31ddde091641bb817e32320" prot="public">
          <name>D_random</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a1223ae56d204b110bd185b7dbdda258e" prot="public">
          <name>DISTRIBUTION_COUNT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="58" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.h" bodystart="58" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cluster_8h_1a883b4f4e7113af06f96a7b11492256d1" prot="public" static="no">
        <type>struct <ref refid="structsample" kindref="compound">sample</ref></type>
        <definition>typedef struct sample  CLUSTER</definition>
        <argsstring></argsstring>
        <name>CLUSTER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="cluster_8h_1acb9fa31a4d774b3e8a3091c21486fa7a" prot="public" static="no">
        <type><ref refid="cluster_8h_1a883b4f4e7113af06f96a7b11492256d1" kindref="member">CLUSTER</ref></type>
        <definition>typedef CLUSTER SAMPLE</definition>
        <argsstring></argsstring>
        <name>SAMPLE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cluster_8h_1a93e53684b74358b68adf48b2ee32b042" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref> *</type>
        <definition>CLUSTERER* MakeClusterer</definition>
        <argsstring>(inT16 SampleSize, const PARAM_DESC ParamDesc[])</argsstring>
        <name>MakeClusterer</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>SampleSize</declname>
        </param>
        <param>
          <type>const <ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
          <declname>ParamDesc</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>MakeClusterer **********************************************************
</verbatim> Parameters: SampleSize number of dimensions in feature space ParamDesc description of each dimension Operation: This routine creates a new clusterer data structure, initializes it, and returns a pointer to it. Return: pointer to the new clusterer data structure Exceptions: None History: 5/29/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="110" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="395" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="cluster_8h_1ab3cc5ee277d4a2cf4000668b1ffbcf4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cluster_8h_1acb9fa31a4d774b3e8a3091c21486fa7a" kindref="member">SAMPLE</ref> *</type>
        <definition>SAMPLE* MakeSample</definition>
        <argsstring>(CLUSTERER *Clusterer, const FLOAT32 *Feature, inT32 CharID)</argsstring>
        <name>MakeSample</name>
        <param>
          <type><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref> *</type>
          <declname>Clusterer</declname>
        </param>
        <param>
          <type>const <ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref> *</type>
          <declname>Feature</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>CharID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>MakeSample ***********************************************************
</verbatim> Parameters: Clusterer clusterer data structure to add sample to Feature feature to be added to clusterer CharID unique ident. of char that sample came from Operation: This routine creates a new sample data structure to hold the specified feature. This sample is added to the clusterer data structure (so that it knows which samples are to be clustered later), and a pointer to the sample is returned to the caller. Return: Pointer to the new sample data structure Exceptions: ALREADYCLUSTERED MakeSample can&apos;t be called after ClusterSamples has been called History: 5/29/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="112" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="450" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="cluster_8h_1ac7c6943d214b9c60e0f37cbb1a2111b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
        <definition>LIST ClusterSamples</definition>
        <argsstring>(CLUSTERER *Clusterer, CLUSTERCONFIG *Config)</argsstring>
        <name>ClusterSamples</name>
        <param>
          <type><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref> *</type>
          <declname>Clusterer</declname>
        </param>
        <param>
          <type><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref> *</type>
          <declname>Config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>ClusterSamples ***********************************************************
</verbatim> Parameters: Clusterer data struct containing samples to be clustered Config parameters which control clustering process Operation: This routine first checks to see if the samples in this clusterer have already been clustered before; if so, it does not bother to recreate the cluster tree. It simply recomputes the prototypes based on the new Config info. If the samples have not been clustered before, the samples in the KD tree are formed into a cluster tree and then the prototypes are computed from the cluster tree. In either case this routine returns a pointer to a list of prototypes that best represent the samples given the constraints specified in Config. Return: Pointer to a list of prototypes Exceptions: None History: 5/29/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="114" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="504" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="cluster_8h_1aa5b6309260cd2d1acac25bd9cc9e9a66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeClusterer</definition>
        <argsstring>(CLUSTERER *Clusterer)</argsstring>
        <name>FreeClusterer</name>
        <param>
          <type><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref> *</type>
          <declname>Clusterer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>FreeClusterer *************************************************************
</verbatim> Parameters: Clusterer pointer to data structure to be freed Operation: This routine frees all of the memory allocated to the specified data structure. It will not, however, free the memory used by the prototype list. The pointers to the clusters for each prototype in the list will be set to NULL to indicate that the cluster data structures no longer exist. Any sample lists that have been obtained via calls to GetSamples are no longer valid. Return: None Exceptions: None History: 6/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="116" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="532" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="cluster_8h_1a7e5357920f0bded023b15d29ddf15ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeProtoList</definition>
        <argsstring>(LIST *ProtoList)</argsstring>
        <name>FreeProtoList</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> *</type>
          <declname>ProtoList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>FreeProtoList ************************************************************
</verbatim> Parameters: ProtoList pointer to list of prototypes to be freed Operation: This routine frees all of the memory allocated to the specified list of prototypes. The clusters which are pointed to by the prototypes are not freed. Return: None Exceptions: None History: 6/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="118" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="560" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="cluster_8h_1aa5d7083be183c7a4e2b2fa746a560a7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreePrototype</definition>
        <argsstring>(void *arg)</argsstring>
        <name>FreePrototype</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>FreePrototype ************************************************************
</verbatim> Parameters: Prototype prototype data structure to be deallocated Operation: This routine deallocates the memory consumed by the specified prototype and modifies the corresponding cluster so that it is no longer marked as a prototype. The cluster is NOT deallocated by this routine. Return: None Exceptions: None History: 5/30/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="120" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="575" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="cluster_8h_1abf5d9e3b151ac51b27bd9dc797ac261c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cluster_8h_1a883b4f4e7113af06f96a7b11492256d1" kindref="member">CLUSTER</ref> *</type>
        <definition>CLUSTER* NextSample</definition>
        <argsstring>(LIST *SearchState)</argsstring>
        <name>NextSample</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> *</type>
          <declname>SearchState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>NextSample ************************************************************
</verbatim> Parameters: SearchState ptr to list containing clusters to be searched Operation: This routine is used to find all of the samples which belong to a cluster. It starts by removing the top cluster on the cluster list (SearchState). If this cluster is a leaf it is returned. Otherwise, the right subcluster is pushed on the list and we continue the search in the left subcluster. This continues until a leaf is found. If all samples have been found, NULL is returned. <ref refid="cluster_8h_1af125589eadf8dca87cf904ebcb77c896" kindref="member">InitSampleSearch()</ref> must be called before <ref refid="cluster_8cpp_1abf5d9e3b151ac51b27bd9dc797ac261c" kindref="member">NextSample()</ref> to initialize the search. Return: Pointer to the next leaf cluster (sample) or NULL. Exceptions: None History: 6/16/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="122" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="614" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="cluster_8h_1ad99e1235a4e63880ab2f72bfdff26e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 Mean</definition>
        <argsstring>(PROTOTYPE *Proto, uinT16 Dimension)</argsstring>
        <name>Mean</name>
        <param>
          <type><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref> *</type>
          <declname>Proto</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>Dimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Mean ***********************************************************
</verbatim> Parameters: Proto prototype to return mean of Dimension dimension whose mean is to be returned Operation: This routine returns the mean of the specified prototype in the indicated dimension. Return: Mean of Prototype in Dimension Exceptions: none History: 7/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="124" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="639" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="cluster_8h_1a8bdd5efd86c814e7f069aa7674cd5178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 StandardDeviation</definition>
        <argsstring>(PROTOTYPE *Proto, uinT16 Dimension)</argsstring>
        <name>StandardDeviation</name>
        <param>
          <type><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref> *</type>
          <declname>Proto</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>Dimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>StandardDeviation *************************************************
</verbatim> Parameters: Proto prototype to return standard deviation of Dimension dimension whose stddev is to be returned Operation: This routine returns the standard deviation of the prototype in the indicated dimension. Return: Standard deviation of Prototype in Dimension Exceptions: none History: 7/6/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="126" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="653" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="cluster_8h_1a69b09f11067d2b087f4da951934ca556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 MergeClusters</definition>
        <argsstring>(inT16 N, PARAM_DESC ParamDesc[], inT32 n1, inT32 n2, FLOAT32 m[], FLOAT32 m1[], FLOAT32 m2[])</argsstring>
        <name>MergeClusters</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref></type>
          <declname>ParamDesc</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>n1</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>n2</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>m</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>m1</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>m2</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>MergeClusters ************************************************************
</verbatim> Parameters: N # of dimensions (size of arrays) ParamDesc array of dimension descriptions n1, n2 number of samples in each old cluster m array to hold mean of new cluster m1, m2 arrays containing means of old clusters Operation: This routine merges two clusters into one larger cluster. To do this it computes the number of samples in the new cluster and the mean of the new cluster. The ParamDesc information is used to ensure that circular dimensions are handled correctly. Return: The number of samples in the new cluster. Exceptions: None History: 5/31/89, DSJ, Created. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/cluster.h" line="128" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/cluster.cpp" bodystart="882" bodyend="913"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>**<sp/>Filename:<sp/><sp/><sp/>cluster.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>**<sp/>Purpose:<sp/><sp/><sp/><sp/>Definition<sp/>of<sp/>feature<sp/>space<sp/>clustering<sp/>routines</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>**<sp/>Author:<sp/><sp/><sp/><sp/><sp/>Dan<sp/>Johnson</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>**<sp/>History:<sp/><sp/><sp/><sp/>5/29/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>**<sp/>(c)<sp/>Copyright<sp/>Hewlett-Packard<sp/>Company,<sp/>1988.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/><sp/><sp/>CLUSTER_H</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/>CLUSTER_H</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="kdtree_8h" kindref="compound">kdtree.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="oldlist_8h" kindref="compound">oldlist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_b_u_c_k_e_t_s" kindref="compound">BUCKETS</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="cluster_8h_1a759b3b99f54d92a0c6c5471a4c87c42b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MINBUCKETS<sp/><sp/><sp/><sp/><sp/><sp/>5</highlight></codeline>
<codeline lineno="27" refid="cluster_8h_1a17645698964d2a3c89b72281594c58a3" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MAXBUCKETS<sp/><sp/><sp/><sp/><sp/><sp/>39</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Types</highlight></codeline>
<codeline lineno="31"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structsample" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsample" kindref="compound">sample</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="structsample_1aa6b39588394fbede2bdcac083bf3832d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structsample_1aa6b39588394fbede2bdcac083bf3832d" kindref="member">Clustered</ref>:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TRUE<sp/>if<sp/>included<sp/>in<sp/>a<sp/>higher<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structsample_1af0c82e552c662971cf574f9ee8bcb40f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structsample_1af0c82e552c662971cf574f9ee8bcb40f" kindref="member">Prototype</ref>:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TRUE<sp/>if<sp/>cluster<sp/>represented<sp/>by<sp/>a<sp/>proto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structsample_1a71cac0608666e1abfdfb3ab40e26b249" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structsample_1a71cac0608666e1abfdfb3ab40e26b249" kindref="member">SampleCount</ref>:30;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>samples<sp/>in<sp/>this<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structsample_1ae6abb40063761a77d4275c79c5c0bb49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsample" kindref="compound">sample</ref><sp/>*<ref refid="structsample_1ae6abb40063761a77d4275c79c5c0bb49" kindref="member">Left</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ptr<sp/>to<sp/>left<sp/>sub-cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structsample_1a2d66168da8fd6b92aed011277f54843a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsample" kindref="compound">sample</ref><sp/>*<ref refid="structsample_1a2d66168da8fd6b92aed011277f54843a" kindref="member">Right</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ptr<sp/>to<sp/>right<sp/>sub-cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structsample_1a564df9059b85a37e9f4e69843eec3e20" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="structsample_1a564df9059b85a37e9f4e69843eec3e20" kindref="member">CharID</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>identifier<sp/>of<sp/>char<sp/>sample<sp/>came<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="structsample_1ac4a33bc0bdd82dd732bbb2f7c593ec78" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="structsample_1ac4a33bc0bdd82dd732bbb2f7c593ec78" kindref="member">Mean</ref>[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mean<sp/>of<sp/>cluster<sp/>-<sp/>SampleSize<sp/>floats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">}<sp/><ref refid="cluster_8h_1a883b4f4e7113af06f96a7b11492256d1" kindref="member">CLUSTER</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="cluster_8h_1acb9fa31a4d774b3e8a3091c21486fa7a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structsample" kindref="compound">CLUSTER</ref><sp/><ref refid="cluster_8h_1acb9fa31a4d774b3e8a3091c21486fa7a" kindref="member">SAMPLE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>refer<sp/>to<sp/>as<sp/>either<sp/>sample<sp/>or<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="45" refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa93d6901f160899d15f69322530595f4f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa93d6901f160899d15f69322530595f4f" kindref="member">spherical</ref>,<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa39d32ff639641ca169c9729c58614459" kindref="member">elliptical</ref>,<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaab164032fff82a847826b4887d9e7be58" kindref="member">mixed</ref>,<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa9761086e420b925e438327ad385b304d" kindref="member">automatic</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" kindref="member">PROTOSTYLE</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameters<sp/>to<sp/>control<sp/>clustering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a53c426e655c701e99f7744a35ecced70" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9ea" kindref="member">PROTOSTYLE</ref><sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a53c426e655c701e99f7744a35ecced70" kindref="member">ProtoStyle</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specifies<sp/>types<sp/>of<sp/>protos<sp/>to<sp/>be<sp/>made</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a30f3f6f54aa8e9371a0398f04bca0de3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a30f3f6f54aa8e9371a0398f04bca0de3" kindref="member">MinSamples</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min<sp/>#<sp/>of<sp/>samples<sp/>per<sp/>proto<sp/>-<sp/>%<sp/>of<sp/>total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1aaf0758a0e763d9525d6d7781db8ade14" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1aaf0758a0e763d9525d6d7781db8ade14" kindref="member">MaxIllegal</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>percentage<sp/>of<sp/>samples<sp/>in<sp/>a<sp/>cluster<sp/>which<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>more<sp/>than<sp/>1<sp/>feature<sp/>in<sp/>that<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a77c7d2361e92592098a3287cabc26a6d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a77c7d2361e92592098a3287cabc26a6d" kindref="member">Independence</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>desired<sp/>independence<sp/>between<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a4758d8ddf0644e204132b779a786b6fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aa8336782d864ba03efadb73a51260961" kindref="member">FLOAT64</ref><sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a4758d8ddf0644e204132b779a786b6fb" kindref="member">Confidence</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>desired<sp/>confidence<sp/>in<sp/>prototypes<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a3578d77905f03b8d4321568be8f030c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a3578d77905f03b8d4321568be8f030c2" kindref="member">MagicSamples</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ideal<sp/>number<sp/>of<sp/>samples<sp/>in<sp/>a<sp/>cluster.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59" refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a56013d9ac59a24fb94d9acb932a04b2f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0aebc81705969b8c5ae986b0b2ec08d1d5" kindref="member">normal</ref>,<sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a56013d9ac59a24fb94d9acb932a04b2f" kindref="member">uniform</ref>,<sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a21504929e31ddde091641bb817e32320" kindref="member">D_random</ref>,<sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a1223ae56d204b110bd185b7dbdda258e" kindref="member">DISTRIBUTION_COUNT</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0" kindref="member">DISTRIBUTION</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="union_f_l_o_a_t_u_n_i_o_n" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63" refid="union_f_l_o_a_t_u_n_i_o_n_1ad883f0258d034e4fd77ce450c3e058d2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="union_f_l_o_a_t_u_n_i_o_n_1ad883f0258d034e4fd77ce450c3e058d2" kindref="member">Spherical</ref>;</highlight></codeline>
<codeline lineno="64" refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/><ref refid="union_f_l_o_a_t_u_n_i_o_n" kindref="compound">FLOATUNION</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="struct_p_r_o_t_o_t_y_p_e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="68" refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>Significant:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TRUE<sp/>if<sp/>prototype<sp/>is<sp/>significant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="struct_p_r_o_t_o_t_y_p_e_1a8e04c7f378d30c248bc6e55703ac69a6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>Merged:1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merged<sp/>after<sp/>clustering<sp/>so<sp/>do<sp/>not<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>kept<sp/>for<sp/>display<sp/>purposes.<sp/>If<sp/>it<sp/>has<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>samples<sp/>then<sp/>it<sp/>was<sp/>actually<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>it<sp/>matched<sp/>an<sp/>already<sp/>significant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>cluster.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="struct_p_r_o_t_o_t_y_p_e_1aad81f08b6e171698866b445c0b3d4b35" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>Style:2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spherical,<sp/>elliptical,<sp/>or<sp/>mixed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>NumSamples:28;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>samples<sp/>in<sp/>the<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="struct_p_r_o_t_o_t_y_p_e_1aff59384612de343b799b92a5d80282b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsample" kindref="compound">CLUSTER</ref><sp/>*<ref refid="struct_p_r_o_t_o_t_y_p_e_1aff59384612de343b799b92a5d80282b7" kindref="member">Cluster</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ptr<sp/>to<sp/>cluster<sp/>which<sp/>made<sp/>prototype</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0" kindref="member">DISTRIBUTION</ref><sp/>*<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>different<sp/>distribution<sp/>for<sp/>each<sp/>dimension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prototype<sp/>mean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>magnitude<sp/>over<sp/>all<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="struct_p_r_o_t_o_t_y_p_e_1aefd3ba15fc4dd0029aa9cda07092382b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e_1aefd3ba15fc4dd0029aa9cda07092382b" kindref="member">LogMagnitude</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>base<sp/>e<sp/>of<sp/>TotalMagnitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="union_f_l_o_a_t_u_n_i_o_n" kindref="compound">FLOATUNION</ref><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prototype<sp/>variance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="union_f_l_o_a_t_u_n_i_o_n" kindref="compound">FLOATUNION</ref><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>magnitude<sp/>of<sp/>density<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="union_f_l_o_a_t_u_n_i_o_n" kindref="compound">FLOATUNION</ref><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>weight<sp/>of<sp/>density<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="struct_c_l_u_s_t_e_r_e_r" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87" refid="struct_c_l_u_s_t_e_r_e_r_1ac78a1d40ce4bac0a156a21e2d987f394" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/><ref refid="struct_c_l_u_s_t_e_r_e_r_1ac78a1d40ce4bac0a156a21e2d987f394" kindref="member">SampleSize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>parameters<sp/>per<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_c_l_u_s_t_e_r_e_r_1af44850047e9f5b3648871d7517c04316" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref><sp/>*<ref refid="struct_c_l_u_s_t_e_r_e_r_1af44850047e9f5b3648871d7517c04316" kindref="member">ParamDesc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>description<sp/>of<sp/>each<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="struct_c_l_u_s_t_e_r_e_r_1a04b44b06900e7a0c8d8d4d4e5a00c3aa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="struct_c_l_u_s_t_e_r_e_r_1a04b44b06900e7a0c8d8d4d4e5a00c3aa" kindref="member">NumberOfSamples</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>total<sp/>number<sp/>of<sp/>samples<sp/>being<sp/>clustered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="struct_c_l_u_s_t_e_r_e_r_1af2c9040008b80775815320a327f21242" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_k_d_t_r_e_e" kindref="compound">KDTREE</ref><sp/>*<ref refid="struct_c_l_u_s_t_e_r_e_r_1af2c9040008b80775815320a327f21242" kindref="member">KDTree</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>optimal<sp/>nearest<sp/>neighbor<sp/>searching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="struct_c_l_u_s_t_e_r_e_r_1a0178d3dfedb397870384f599d809c54d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsample" kindref="compound">CLUSTER</ref><sp/>*<ref refid="struct_c_l_u_s_t_e_r_e_r_1a0178d3dfedb397870384f599d809c54d" kindref="member">Root</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ptr<sp/>to<sp/>root<sp/>cluster<sp/>of<sp/>cluster<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="struct_c_l_u_s_t_e_r_e_r_1af6bd9758400f9a886e8fde8d009de70f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><ref refid="struct_c_l_u_s_t_e_r_e_r_1af6bd9758400f9a886e8fde8d009de70f" kindref="member">ProtoList</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>list<sp/>of<sp/>prototypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="struct_c_l_u_s_t_e_r_e_r_1aa4a7b4654dcb4918ac9a282d976b72d9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="struct_c_l_u_s_t_e_r_e_r_1aa4a7b4654dcb4918ac9a282d976b72d9" kindref="member">NumChar</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#<sp/>of<sp/>characters<sp/>represented<sp/>by<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache<sp/>of<sp/>reusable<sp/>histograms<sp/>by<sp/>distribution<sp/>type<sp/>and<sp/>number<sp/>of<sp/>buckets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="struct_c_l_u_s_t_e_r_e_r_1a01b03fc9cf75b5bd7d11abde7405a23a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="struct_b_u_c_k_e_t_s" kindref="compound">BUCKETS</ref>*<sp/>bucket_cache[<ref refid="cluster_8h_1ade80fdcd8f2dde57393f56d0cdfaeed0a1223ae56d204b110bd185b7dbdda258e" kindref="member">DISTRIBUTION_COUNT</ref>][<ref refid="cluster_8h_1a17645698964d2a3c89b72281594c58a3" kindref="member">MAXBUCKETS</ref><sp/>+<sp/>1<sp/>-<sp/><ref refid="cluster_8h_1a759b3b99f54d92a0c6c5471a4c87c42b" kindref="member">MINBUCKETS</ref>];</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}<sp/><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="struct_s_a_m_p_l_e_l_i_s_t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="99" refid="struct_s_a_m_p_l_e_l_i_s_t_1a5f1cc4fb9ec4f7fb4955eb90e83ba182" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="struct_s_a_m_p_l_e_l_i_s_t_1a5f1cc4fb9ec4f7fb4955eb90e83ba182" kindref="member">NumSamples</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>samples<sp/>in<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="struct_s_a_m_p_l_e_l_i_s_t_1a2d52a197ab5cacdecef8ae9748834eb4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="struct_s_a_m_p_l_e_l_i_s_t_1a2d52a197ab5cacdecef8ae9748834eb4" kindref="member">MaxNumSamples</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maximum<sp/>size<sp/>of<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="struct_s_a_m_p_l_e_l_i_s_t_1aee7b23bef7e0cdd87974d3c9d36e9d73" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structsample" kindref="compound">SAMPLE</ref><sp/>*Sample[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>array<sp/>of<sp/>ptrs<sp/>to<sp/>sample<sp/>data<sp/>structures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/><ref refid="struct_s_a_m_p_l_e_l_i_s_t" kindref="compound">SAMPLELIST</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>low<sp/>level<sp/>cluster<sp/>tree<sp/>analysis<sp/>routines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="cluster_8h_1af125589eadf8dca87cf904ebcb77c896" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>InitSampleSearch(S,C)<sp/>(((C)==NULL)?(S=NIL_LIST):(S=push(NIL_LIST,(C))))</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Public<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="109"><highlight class="comment">--------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref><sp/>*<ref refid="cluster_8cpp_1a93e53684b74358b68adf48b2ee32b042" kindref="member">MakeClusterer</ref><sp/>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>SampleSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref><sp/>ParamDesc[]);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="structsample" kindref="compound">SAMPLE</ref><sp/>*<ref refid="cluster_8cpp_1ab3cc5ee277d4a2cf4000668b1ffbcf4a" kindref="member">MakeSample</ref>(<ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref><sp/>*<sp/>Clusterer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>*<sp/>Feature,<sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>CharID);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><ref refid="cluster_8cpp_1ac7c6943d214b9c60e0f37cbb1a2111b4" kindref="member">ClusterSamples</ref>(<ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref><sp/>*Clusterer,<sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref><sp/>*<ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cluster_8cpp_1aa5b6309260cd2d1acac25bd9cc9e9a66" kindref="member">FreeClusterer</ref>(<ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref><sp/>*Clusterer);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cluster_8cpp_1a7e5357920f0bded023b15d29ddf15ebf" kindref="member">FreeProtoList</ref>(<ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>*ProtoList);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cluster_8cpp_1aa5d7083be183c7a4e2b2fa746a560a7b" kindref="member">FreePrototype</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);<sp/><sp/></highlight><highlight class="comment">//<sp/>PROTOTYPE<sp/>*Prototype);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><ref refid="structsample" kindref="compound">CLUSTER</ref><sp/>*<ref refid="cluster_8cpp_1abf5d9e3b151ac51b27bd9dc797ac261c" kindref="member">NextSample</ref>(<ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>*SearchState);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="cluster_8cpp_1ad99e1235a4e63880ab2f72bfdff26e28" kindref="member">Mean</ref>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*Proto,<sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>Dimension);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/><ref refid="cluster_8cpp_1a8bdd5efd86c814e7f069aa7674cd5178" kindref="member">StandardDeviation</ref>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*Proto,<sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>Dimension);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="cluster_8cpp_1a13004a2cbbcf26c3d95fd207274823c9" kindref="member">MergeClusters</ref>(<ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref><sp/>N,<sp/><ref refid="struct_p_a_r_a_m___d_e_s_c" kindref="compound">PARAM_DESC</ref><sp/>ParamDesc[],<sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>n1,<sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>n2,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>m[],<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>m1[],<sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>m2[]);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//--------------Global<sp/>Data<sp/>Definitions<sp/>and<sp/>Declarations---------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>define<sp/>errors<sp/>that<sp/>can<sp/>be<sp/>trapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="cluster_8h_1aa086ccbc1343c3ac99987b23d500adab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ALREADYCLUSTERED<sp/><sp/>4000</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/cluster.h"/>
  </compounddef>
</doxygen>
