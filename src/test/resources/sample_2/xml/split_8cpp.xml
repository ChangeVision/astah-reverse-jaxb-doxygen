<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="split_8cpp" kind="file">
    <compoundname>split.cpp</compoundname>
    <includes refid="split_8h" local="yes">split.h</includes>
    <includes refid="structures_8h" local="yes">structures.h</includes>
    <includes refid="callcpp_8h" local="yes">callcpp.h</includes>
    <incdepgraph>
      <node id="12192">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="12193" relation="include">
        </childnode>
        <childnode refid="12202" relation="include">
        </childnode>
        <childnode refid="12188" relation="include">
        </childnode>
      </node>
      <node id="12160">
        <label>ccstruct/split.cpp</label>
        <link refid="split.cpp"/>
        <childnode refid="12161" relation="include">
        </childnode>
        <childnode refid="12203" relation="include">
        </childnode>
        <childnode refid="12206" relation="include">
        </childnode>
      </node>
      <node id="12207">
        <label>assert.h</label>
      </node>
      <node id="12203">
        <label>structures.h</label>
        <link refid="structures_8h"/>
        <childnode refid="12190" relation="include">
        </childnode>
        <childnode refid="12204" relation="include">
        </childnode>
        <childnode refid="12205" relation="include">
        </childnode>
      </node>
      <node id="12181">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="12202">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="12169">
        <label>stdlib.h</label>
      </node>
      <node id="12166">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="12167" relation="include">
        </childnode>
      </node>
      <node id="12193">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="12194" relation="include">
        </childnode>
        <childnode refid="12173" relation="include">
        </childnode>
        <childnode refid="12188" relation="include">
        </childnode>
        <childnode refid="12199" relation="include">
        </childnode>
        <childnode refid="12184" relation="include">
        </childnode>
        <childnode refid="12197" relation="include">
        </childnode>
        <childnode refid="12200" relation="include">
        </childnode>
        <childnode refid="12201" relation="include">
        </childnode>
      </node>
      <node id="12182">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
      </node>
      <node id="12168">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="12169" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12171" relation="include">
        </childnode>
        <childnode refid="12173" relation="include">
        </childnode>
        <childnode refid="12174" relation="include">
        </childnode>
      </node>
      <node id="12163">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12168" relation="include">
        </childnode>
        <childnode refid="12175" relation="include">
        </childnode>
      </node>
      <node id="12172">
        <label>stddef.h</label>
      </node>
      <node id="12196">
        <label>memory.h</label>
      </node>
      <node id="12206">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="12207" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12184" relation="include">
        </childnode>
        <childnode refid="12195" relation="include">
        </childnode>
      </node>
      <node id="12173">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="12165" relation="include">
        </childnode>
      </node>
      <node id="12167">
        <label>limits.h</label>
      </node>
      <node id="12180">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="12177" relation="include">
        </childnode>
      </node>
      <node id="12200">
        <label>pthread.h</label>
      </node>
      <node id="12170">
        <label>string.h</label>
      </node>
      <node id="12198">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="12195" relation="include">
        </childnode>
      </node>
      <node id="12195">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="12196" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
      </node>
      <node id="12191">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
        <childnode refid="12169" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12183" relation="include">
        </childnode>
        <childnode refid="12192" relation="include">
        </childnode>
      </node>
      <node id="12176">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="12177" relation="include">
        </childnode>
        <childnode refid="12178" relation="include">
        </childnode>
        <childnode refid="12181" relation="include">
        </childnode>
        <childnode refid="12182" relation="include">
        </childnode>
        <childnode refid="12183" relation="include">
        </childnode>
      </node>
      <node id="12186">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="12165" relation="include">
        </childnode>
      </node>
      <node id="12201">
        <label>semaphore.h</label>
      </node>
      <node id="12205">
        <label>danerror.h</label>
        <link refid="danerror_8h"/>
      </node>
      <node id="12174">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="12173" relation="include">
        </childnode>
      </node>
      <node id="12194">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="12179" relation="include">
        </childnode>
        <childnode refid="12183" relation="include">
        </childnode>
        <childnode refid="12195" relation="include">
        </childnode>
        <childnode refid="12197" relation="include">
        </childnode>
        <childnode refid="12185" relation="include">
        </childnode>
      </node>
      <node id="12177">
        <label>math.h</label>
      </node>
      <node id="12161">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="12162" relation="include">
        </childnode>
        <childnode refid="12190" relation="include">
        </childnode>
      </node>
      <node id="12175">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="12173" relation="include">
        </childnode>
      </node>
      <node id="12189">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="12177" relation="include">
        </childnode>
        <childnode refid="12162" relation="include">
        </childnode>
      </node>
      <node id="12190">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="12191" relation="include">
        </childnode>
        <childnode refid="12186" relation="include">
        </childnode>
      </node>
      <node id="12184">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12185" relation="include">
        </childnode>
        <childnode refid="12188" relation="include">
        </childnode>
      </node>
      <node id="12185">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12169" relation="include">
        </childnode>
        <childnode refid="12186" relation="include">
        </childnode>
        <childnode refid="12173" relation="include">
        </childnode>
        <childnode refid="12187" relation="include">
        </childnode>
        <childnode refid="12181" relation="include">
        </childnode>
      </node>
      <node id="12171">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="12172" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
      </node>
      <node id="12204">
        <label>freelist.h</label>
        <link refid="freelist_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
      </node>
      <node id="12179">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12168" relation="include">
        </childnode>
        <childnode refid="12175" relation="include">
        </childnode>
      </node>
      <node id="12197">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="12173" relation="include">
        </childnode>
        <childnode refid="12187" relation="include">
        </childnode>
        <childnode refid="12188" relation="include">
        </childnode>
        <childnode refid="12186" relation="include">
        </childnode>
        <childnode refid="12195" relation="include">
        </childnode>
        <childnode refid="12198" relation="include">
        </childnode>
      </node>
      <node id="12178">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12177" relation="include">
        </childnode>
        <childnode refid="12179" relation="include">
        </childnode>
        <childnode refid="12180" relation="include">
        </childnode>
      </node>
      <node id="12183">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="12184" relation="include">
        </childnode>
      </node>
      <node id="12165">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="12166" relation="include">
        </childnode>
      </node>
      <node id="12164">
        <label>stdio.h</label>
      </node>
      <node id="12199">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12165" relation="include">
        </childnode>
        <childnode refid="12183" relation="include">
        </childnode>
      </node>
      <node id="12188">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
        <childnode refid="12166" relation="include">
        </childnode>
        <childnode refid="12171" relation="include">
        </childnode>
      </node>
      <node id="12162">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="12163" relation="include">
        </childnode>
        <childnode refid="12176" relation="include">
        </childnode>
        <childnode refid="12189" relation="include">
        </childnode>
      </node>
      <node id="12187">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="12164" relation="include">
        </childnode>
        <childnode refid="12170" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="split_8cpp_1a092f1eae2faa258ff5b997b10ac7d9a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BOOL_VAR</definition>
        <argsstring>(wordrec_display_splits, 0,&quot;Display splits&quot;)</argsstring>
        <name>BOOL_VAR</name>
        <param>
          <type>wordrec_display_splits</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Display splits&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="split_8cpp_1a1ac5df4e3dcebd4d2faaa844bafba4c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>makestructure</definition>
        <argsstring>(newsplit, free_split, SPLIT)</argsstring>
        <name>makestructure</name>
        <param>
          <type>newsplit</type>
        </param>
        <param>
          <type>free_split</type>
        </param>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="split_8cpp_1a6462aa6ed767d7f46c4a72506cceaeeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delete_split</definition>
        <argsstring>(SPLIT *split)</argsstring>
        <name>delete_split</name>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="split_8cpp_1abe45460790758fd43e35acbad4eed1c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
        <definition>EDGEPT* make_edgept</definition>
        <argsstring>(int x, int y, EDGEPT *next, EDGEPT *prev)</argsstring>
        <name>make_edgept</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>next</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" line="65" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" bodystart="65" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="split_8cpp_1ada6ba0f2954768ab4b7d9d2cf165dee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remove_edgept</definition>
        <argsstring>(EDGEPT *point)</argsstring>
        <name>remove_edgept</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" line="90" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" bodystart="90" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="split_8cpp_1a1a2a3ae46393d911b723c12107dc0183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
        <definition>SPLIT* new_split</definition>
        <argsstring>(EDGEPT *point1, EDGEPT *point2)</argsstring>
        <name>new_split</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" line="106" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" bodystart="106" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="split_8cpp_1a24210aac50f8b01c1c50b94262865269" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_split</definition>
        <argsstring>(SPLIT *split)</argsstring>
        <name>print_split</name>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" line="121" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="split_8cpp_1ac76a475de30b432aa78727bd6b93a729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void split_outline</definition>
        <argsstring>(EDGEPT *join_point1, EDGEPT *join_point2)</argsstring>
        <name>split_outline</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>join_point1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>join_point2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" line="136" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" bodystart="136" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="split_8cpp_1a3c66a2f04c0878b8982e04d5a3d29e04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unsplit_outlines</definition>
        <argsstring>(EDGEPT *p1, EDGEPT *p2)</argsstring>
        <name>unsplit_outlines</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" line="158" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/split.cpp" bodystart="158" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-C-*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>split.c<sp/><sp/>(Formerly<sp/>split.c)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Description:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mark<sp/>Seaman,<sp/>OCR<sp/>Technology</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/>Fri<sp/>Oct<sp/>16<sp/>14:37:00<sp/>1987</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Modified:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>May<sp/>17<sp/>16:27:49<sp/>1991<sp/>(Mark<sp/>Seaman)<sp/>marks@hpgrlt</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Language:<sp/><sp/><sp/><sp/><sp/>C</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Package:<sp/><sp/><sp/><sp/><sp/><sp/>N/A</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Status:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reusable<sp/>Software<sp/>Component</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Copyright<sp/>1987,<sp/>Hewlett-Packard<sp/>Company.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>n<sp/>c<sp/>l<sp/>u<sp/>d<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="27"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="split_8h" kindref="compound">split.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="structures_8h" kindref="compound">structures.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callcpp_8h" kindref="compound">callcpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__UNIX__</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>a<sp/>r<sp/>i<sp/>a<sp/>b<sp/>l<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="38"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="params_8h_1a442e7f541a050acf5ebda026db177877" kindref="member">BOOL_VAR</ref>(wordrec_display_splits,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>splits&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="structures_8h_1a0fd8109d8986f1193f87ec26e0729d11" kindref="member">makestructure</ref>(newsplit,<sp/>free_split,<sp/><ref refid="structsplit__record" kindref="compound">SPLIT</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>u<sp/>n<sp/>c<sp/>t<sp/>i<sp/>o<sp/>n<sp/>s</highlight></codeline>
<codeline lineno="45"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>delete_split</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>Remove<sp/>this<sp/>split<sp/>from<sp/>existance.<sp/><sp/>Take<sp/>if<sp/>off<sp/>the<sp/>display<sp/>list<sp/>and</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>deallocate<sp/>its<sp/>memory.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="split_8cpp_1a6462aa6ed767d7f46c4a72506cceaeeb" kindref="member">delete_split</ref>(<ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*split)<sp/>{<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>free_split(split);<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>make_edgept</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>Create<sp/>an<sp/>EDGEPT<sp/>and<sp/>hook<sp/>it<sp/>into<sp/>an<sp/>existing<sp/>list<sp/>of<sp/>edge<sp/>points.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*<ref refid="split_8cpp_1abe45460790758fd43e35acbad4eed1c5" kindref="member">make_edgept</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*next,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*prev)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*this_edgept;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>this_edgept<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hook<sp/>it<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref><sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref><sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>prev-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref><sp/>=<sp/>this_edgept;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>next-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref><sp/>=<sp/>this_edgept;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>up<sp/>vec<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>-<sp/>x;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>x<sp/>-<sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>y<sp/>-<sp/>this_edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this_edgept);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>remove_edgept</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>Remove<sp/>a<sp/>given<sp/>EDGEPT<sp/>from<sp/>its<sp/>list<sp/>and<sp/>delete<sp/>it.</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="split_8cpp_1ada6ba0f2954768ab4b7d9d2cf165dee0" kindref="member">remove_edgept</ref>(<ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*point)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*prev<sp/>=<sp/>point-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*next<sp/>=<sp/>point-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>prev-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref><sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>next-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref><sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>prev-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>next-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>-<sp/>prev-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>prev-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>next-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>-<sp/>prev-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>point;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>new_split</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>Create<sp/>a<sp/>new<sp/>split<sp/>record<sp/>and<sp/>initialize<sp/>it.<sp/><sp/>Put<sp/>it<sp/>on<sp/>the<sp/>display</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>list.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*<ref refid="split_8cpp_1a1a2a3ae46393d911b723c12107dc0183" kindref="member">new_split</ref>(<ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*point1,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*point2)<sp/>{<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*s;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>s<sp/>=<sp/>(<ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*)<sp/>newsplit<sp/>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref><sp/>=<sp/>point1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>s-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref><sp/>=<sp/>point2;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(s);</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>print_split</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>Print<sp/>a<sp/>list<sp/>of<sp/>splits.<sp/><sp/>Show<sp/>the<sp/>coordinates<sp/>of<sp/>both<sp/>points<sp/>in</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>each<sp/>split.</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="split_8cpp_1a24210aac50f8b01c1c50b94262865269" kindref="member">print_split</ref>(<ref refid="structsplit__record" kindref="compound">SPLIT</ref><sp/>*split)<sp/>{<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;(%d,%d)--(%d,%d)&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>split-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>split-&gt;<ref refid="structsplit__record_1a2451170e7785bb495c0dd3d96fc71167" kindref="member">point1</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>split-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>split-&gt;<ref refid="structsplit__record_1adb5ec4152eddde15c1996133177a9a58" kindref="member">point2</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>split_outline</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>Split<sp/>between<sp/>these<sp/>two<sp/>edge<sp/>points.<sp/>Apply<sp/>a<sp/>split<sp/>and<sp/>return<sp/>a</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>pointer<sp/>to<sp/>the<sp/>other<sp/>side<sp/>of<sp/>the<sp/>split.</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="split_8cpp_1ac76a475de30b432aa78727bd6b93a729" kindref="member">split_outline</ref>(<ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*join_point1,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*join_point2)<sp/>{<sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*join_point1a;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*temp2;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*temp1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>assert<sp/>(join_point1<sp/>!=<sp/>join_point2);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>temp2<sp/>=<sp/>join_point2-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>temp1<sp/>=<sp/>join_point1-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Create<sp/>two<sp/>new<sp/>points<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>join_point1a<sp/>=<sp/><ref refid="split_8cpp_1abe45460790758fd43e35acbad4eed1c5" kindref="member">make_edgept</ref><sp/>(join_point1-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>join_point1-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>,<sp/>temp1,<sp/>join_point2);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="split_8cpp_1abe45460790758fd43e35acbad4eed1c5" kindref="member">make_edgept</ref><sp/>(join_point2-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>join_point2-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>,<sp/>temp2,<sp/>join_point1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>unsplit_outlines</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>Remove<sp/>the<sp/>split<sp/>that<sp/>was<sp/>put<sp/>between<sp/>these<sp/>two<sp/>points.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="split_8cpp_1a3c66a2f04c0878b8982e04d5a3d29e04" kindref="member">unsplit_outlines</ref>(<ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*p1,<sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*p2)<sp/>{<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*tmp1<sp/>=<sp/>p1-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref><sp/>*tmp2<sp/>=<sp/>p2-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>assert<sp/>(p1<sp/>!=<sp/>p2);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>tmp1-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref><sp/>=<sp/>p2;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>tmp2-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref><sp/>=<sp/>p1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>p1-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref><sp/>=<sp/>tmp2-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>p2-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref><sp/>=<sp/>tmp1-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmp1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmp2;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>p1-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>p1-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>-<sp/>p1-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>p1-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>p1-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>-<sp/>p1-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>p2-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>=<sp/>p2-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref><sp/>-<sp/>p2-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>p2-&gt;<ref refid="struct_e_d_g_e_p_t_1a6da204ff253a65e00daae7753b82c9f7" kindref="member">vec</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>=<sp/>p2-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref><sp/>-<sp/>p2-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/split.cpp"/>
  </compounddef>
</doxygen>
