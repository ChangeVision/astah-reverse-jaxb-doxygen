<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="char__bigrams_8cpp" kind="file">
    <compoundname>char_bigrams.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="char__bigrams_8h" local="yes">char_bigrams.h</includes>
    <includes refid="cube__utils_8h" local="yes">cube_utils.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includes refid="cube__const_8h" local="yes">cube_const.h</includes>
    <incdepgraph>
      <node id="28874">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="28885">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="28870">
        <label>stdlib.h</label>
      </node>
      <node id="28865">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="28866" relation="include">
        </childnode>
      </node>
      <node id="28884">
        <label>allheaders.h</label>
      </node>
      <node id="28856">
        <label>string</label>
      </node>
      <node id="28877">
        <label>stddef.h</label>
      </node>
      <node id="28880">
        <label>memory.h</label>
      </node>
      <node id="28872">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="28864" relation="include">
        </childnode>
      </node>
      <node id="28858">
        <label>char_bigrams.h</label>
        <link refid="char__bigrams_8h"/>
        <childnode refid="28856" relation="include">
        </childnode>
        <childnode refid="28859" relation="include">
        </childnode>
      </node>
      <node id="28866">
        <label>limits.h</label>
      </node>
      <node id="28853">
        <label>cube/char_bigrams.cpp</label>
        <link refid="char_bigrams.cpp"/>
        <childnode refid="28854" relation="include">
        </childnode>
        <childnode refid="28855" relation="include">
        </childnode>
        <childnode refid="28856" relation="include">
        </childnode>
        <childnode refid="28857" relation="include">
        </childnode>
        <childnode refid="28858" relation="include">
        </childnode>
        <childnode refid="28883" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
        <childnode refid="28882" relation="include">
        </childnode>
      </node>
      <node id="28886">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="28870" relation="include">
        </childnode>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28856" relation="include">
        </childnode>
        <childnode refid="28887" relation="include">
        </childnode>
        <childnode refid="28861" relation="include">
        </childnode>
      </node>
      <node id="28859">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="28860" relation="include">
        </childnode>
        <childnode refid="28856" relation="include">
        </childnode>
        <childnode refid="28854" relation="include">
        </childnode>
        <childnode refid="28861" relation="include">
        </childnode>
        <childnode refid="28862" relation="include">
        </childnode>
        <childnode refid="28878" relation="include">
        </childnode>
        <childnode refid="28882" relation="include">
        </childnode>
      </node>
      <node id="28860">
        <label>string.h</label>
      </node>
      <node id="28881">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="28879" relation="include">
        </childnode>
      </node>
      <node id="28879">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="28880" relation="include">
        </childnode>
        <childnode refid="28860" relation="include">
        </childnode>
      </node>
      <node id="28883">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="28857" relation="include">
        </childnode>
        <childnode refid="28856" relation="include">
        </childnode>
        <childnode refid="28884" relation="include">
        </childnode>
        <childnode refid="28885" relation="include">
        </childnode>
        <childnode refid="28859" relation="include">
        </childnode>
        <childnode refid="28886" relation="include">
        </childnode>
        <childnode refid="28890" relation="include">
        </childnode>
      </node>
      <node id="28857">
        <label>vector</label>
      </node>
      <node id="28871">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="28864" relation="include">
        </childnode>
      </node>
      <node id="28855">
        <label>math.h</label>
      </node>
      <node id="28868">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28869" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
      </node>
      <node id="28869">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28870" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28874" relation="include">
        </childnode>
      </node>
      <node id="28876">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="28877" relation="include">
        </childnode>
        <childnode refid="28864" relation="include">
        </childnode>
      </node>
      <node id="28887">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="28870" relation="include">
        </childnode>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28888" relation="include">
        </childnode>
        <childnode refid="28889" relation="include">
        </childnode>
      </node>
      <node id="28888">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="28878">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="28872" relation="include">
        </childnode>
        <childnode refid="28873" relation="include">
        </childnode>
        <childnode refid="28875" relation="include">
        </childnode>
        <childnode refid="28871" relation="include">
        </childnode>
        <childnode refid="28879" relation="include">
        </childnode>
        <childnode refid="28881" relation="include">
        </childnode>
      </node>
      <node id="28882">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="28890">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28867">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="28868" relation="include">
        </childnode>
      </node>
      <node id="28854">
        <label>algorithm</label>
      </node>
      <node id="28864">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="28865" relation="include">
        </childnode>
      </node>
      <node id="28889">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28856" relation="include">
        </childnode>
      </node>
      <node id="28863">
        <label>stdio.h</label>
      </node>
      <node id="28861">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="28860" relation="include">
        </childnode>
        <childnode refid="28856" relation="include">
        </childnode>
        <childnode refid="28854" relation="include">
        </childnode>
        <childnode refid="28857" relation="include">
        </childnode>
      </node>
      <node id="28862">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28864" relation="include">
        </childnode>
        <childnode refid="28867" relation="include">
        </childnode>
      </node>
      <node id="28875">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28860" relation="include">
        </childnode>
        <childnode refid="28865" relation="include">
        </childnode>
        <childnode refid="28876" relation="include">
        </childnode>
      </node>
      <node id="28873">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="28863" relation="include">
        </childnode>
        <childnode refid="28860" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_bigrams.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Implementation<sp/>of<sp/>a<sp/>Character<sp/>Bigrams<sp/>Class</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__bigrams_8h" kindref="compound">char_bigrams.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__utils_8h" kindref="compound">cube_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__const_8h" kindref="compound">cube_const.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classtesseract_1_1_char_bigrams_1a17e9f5a3b5a5dc9704b89c698e5db481" kindref="member">CharBigrams::CharBigrams</ref>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>memset(&amp;bigram_table_,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bigram_table_));</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="classtesseract_1_1_char_bigrams_1ae622fa52434296b70785149199b7007f" kindref="member">CharBigrams::~CharBigrams</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1aae8c431003254c08e6ec02d1309e2d65" kindref="member">char_bigram</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch1<sp/>=<sp/>0;<sp/>ch1<sp/>&lt;=<sp/>bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1adcb5fea862baff3582bcf5223218026d" kindref="member">max_char</ref>;<sp/>ch1++)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CharBigram<sp/>*char_bigram<sp/>=<sp/>bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1aae8c431003254c08e6ec02d1309e2d65" kindref="member">char_bigram</ref><sp/>+<sp/>ch1;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_bigram-&gt;bigram<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]char_bigram-&gt;<ref refid="structtesseract_1_1_char_bigram_1acf18b9398a62f9f184fdd18b8d91bdd8" kindref="member">bigram</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1aae8c431003254c08e6ec02d1309e2d65" kindref="member">char_bigram</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">CharBigrams<sp/>*<ref refid="classtesseract_1_1_char_bigrams_1a736a26176210da09fd5c57498de1cf77" kindref="member">CharBigrams::Create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>file_name;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>file_name<sp/>=<sp/>data_file_path<sp/>+<sp/><ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>file_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;.cube.bigrams&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>string<sp/>into<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_cube_utils_1ac5c5bf284cd96f78f62f19938bec750a" kindref="member">CubeUtils::ReadFileToString</ref>(file_name,<sp/>&amp;str))<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>construct<sp/>a<sp/>new<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_bigrams_1a17e9f5a3b5a5dc9704b89c698e5db481" kindref="member">CharBigrams</ref><sp/>*char_bigrams_obj<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_bigrams_1a17e9f5a3b5a5dc9704b89c698e5db481" kindref="member">CharBigrams</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_bigrams_obj<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharBigrams::Create):<sp/>could<sp/>not<sp/>create<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;character<sp/>bigrams<sp/>object.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>CharBigramTable<sp/>*table<sp/>=<sp/>&amp;char_bigrams_obj-&gt;bigram_table_;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>table-&gt;total_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>table-&gt;max_char<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>table-&gt;char_bigram<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>split<sp/>into<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>vector&lt;string&gt;<sp/>str_vec;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1af7dea4521db1e7099c93606d0f5bf4a4" kindref="member">CubeUtils::SplitStringUsing</ref>(str,<sp/></highlight><highlight class="stringliteral">&quot;\r\n&quot;</highlight><highlight class="normal">,<sp/>&amp;str_vec);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>big<sp/>=<sp/>0;<sp/>big<sp/>&lt;<sp/>str_vec.size();<sp/>big++)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>ch1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>ch2;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sscanf(str_vec[big].c_str(),<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%x<sp/>%x&quot;</highlight><highlight class="normal">,<sp/>&amp;cnt,<sp/>&amp;ch1,<sp/>&amp;ch2)<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharBigrams::Create):<sp/>invalid<sp/>format<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;reading<sp/>line:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str_vec[big].c_str());</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expand<sp/>the<sp/>bigram<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch1<sp/>&gt;<sp/>table-&gt;max_char)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CharBigram<sp/>*char_bigram<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CharBigram[ch1<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_bigram<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharBigrams::Create):<sp/>error<sp/>allocating<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;additional<sp/>memory<sp/>for<sp/>character<sp/>bigram<sp/>table.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;char_bigram<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>table-&gt;max_char<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(char_bigram,<sp/>table-&gt;char_bigram,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(table-&gt;max_char<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*char_bigram));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]table-&gt;char_bigram;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;char_bigram<sp/>=<sp/>char_bigram;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_big<sp/>=<sp/>table-&gt;max_char<sp/>+<sp/>1;<sp/>new_big<sp/>&lt;=<sp/>ch1;<sp/>new_big++)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;char_bigram[new_big].total_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;char_bigram[new_big].max_char<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;char_bigram[new_big].bigram<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;max_char<sp/>=<sp/>ch1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch2<sp/>&gt;<sp/>table-&gt;char_bigram[ch1].max_char)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Bigram<sp/>*bigram<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Bigram[ch2<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bigram<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharBigrams::Create):<sp/>error<sp/>allocating<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;memory<sp/>for<sp/>bigram.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;char_bigram[ch1].bigram<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;char_bigram[ch1].max_char<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(bigram,<sp/>table-&gt;char_bigram[ch1].bigram,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(table-&gt;char_bigram[ch1].max_char<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*bigram));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]table-&gt;char_bigram[ch1].bigram;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;char_bigram[ch1].bigram<sp/>=<sp/>bigram;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_big<sp/>=<sp/>table-&gt;char_bigram[ch1].max_char<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_big<sp/>&lt;=<sp/>ch2;<sp/>new_big++)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;char_bigram[ch1].bigram[new_big].cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;char_bigram[ch1].max_char<sp/>=<sp/>ch2;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;char_bigram[ch1].bigram[ch2].cnt<sp/>=<sp/>cnt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;char_bigram[ch1].total_cnt<sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;total_cnt<sp/>+=<sp/>cnt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>costs<sp/>(-log<sp/>probs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>table-&gt;worst_cost<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<ref refid="cube__const_8h_1ab1e863295c568a5acf35176a474a87a9" kindref="member">PROB2COST_SCALE</ref><sp/>*<sp/>log(0.5<sp/>/<sp/>table-&gt;total_cnt));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>ch1<sp/>=<sp/>0;<sp/>ch1<sp/>&lt;=<sp/>table-&gt;max_char;<sp/>ch1++)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>ch2<sp/>=<sp/>0;<sp/>ch2<sp/>&lt;=<sp/>table-&gt;char_bigram[ch1].max_char;<sp/>ch2++)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>table-&gt;char_bigram[ch1].bigram[ch2].cnt;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;char_bigram[ch1].bigram[ch2].cost<sp/>=</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(-<ref refid="cube__const_8h_1ab1e863295c568a5acf35176a474a87a9" kindref="member">PROB2COST_SCALE</ref><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log(<ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(0.5,<sp/>static_cast&lt;double&gt;(cnt))<sp/>/</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;total_cnt));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_bigrams_obj;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_bigrams_1acca74d8457ec604bc39f0f0b3a77443b" kindref="member">CharBigrams::PairCost</ref>(<ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>ch1,<sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>ch2)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch1<sp/>&gt;<sp/>bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1adcb5fea862baff3582bcf5223218026d" kindref="member">max_char</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1ac0c678c3fe7bd24f65b706e3fab1957b" kindref="member">worst_cost</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ch2<sp/>&gt;<sp/>bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1aae8c431003254c08e6ec02d1309e2d65" kindref="member">char_bigram</ref>[ch1].<ref refid="structtesseract_1_1_char_bigram_1a2e2bd3dc796213605662064c8c2bebc9" kindref="member">max_char</ref>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1ac0c678c3fe7bd24f65b706e3fab1957b" kindref="member">worst_cost</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1aae8c431003254c08e6ec02d1309e2d65" kindref="member">char_bigram</ref>[ch1].<ref refid="structtesseract_1_1_char_bigram_1acf18b9398a62f9f184fdd18b8d91bdd8" kindref="member">bigram</ref>[ch2].<ref refid="structtesseract_1_1_bigram_1ac82fdf747c4a7a4c5626964c635eb251" kindref="member">cost</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_bigrams_1a2a19105bd0f09a1c124a051c6514569e" kindref="member">CharBigrams::Cost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*char_32_ptr,<sp/>CharSet<sp/>*char_set)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!char_32_ptr<sp/>||<sp/>char_32_ptr[0]<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1ac0c678c3fe7bd24f65b706e3fab1957b" kindref="member">worst_cost</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/><ref refid="classtesseract_1_1_char_bigrams_1aad8d15924e4b9793972b1c7488cc8466" kindref="member">MeanCostWithSpaces</ref>(char_32_ptr);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_cube_utils_1a88fe596e3dcadab7909c0bff64f61f59" kindref="member">CubeUtils::StrLen</ref>(char_32_ptr)<sp/>&gt;=<sp/>kMinLengthCaseInvariant<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a0c67516e85144e0d736f30c21208aeda" kindref="member">CubeUtils::IsCaseInvariant</ref>(char_32_ptr,<sp/>char_set))<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*lower_32<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1ac051dbde8b019f824b1bd8ae8d69d10e" kindref="member">CubeUtils::ToLower</ref>(char_32_ptr,<sp/>char_set);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower_32<sp/>&amp;&amp;<sp/>lower_32[0]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cost_lower<sp/>=<sp/><ref refid="classtesseract_1_1_char_bigrams_1aad8d15924e4b9793972b1c7488cc8466" kindref="member">MeanCostWithSpaces</ref>(lower_32);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cost<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(cost,<sp/>cost_lower);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>lower_32;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*upper_32<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1ac5f9453d9b30ec4343940ad428a4638d" kindref="member">CubeUtils::ToUpper</ref>(char_32_ptr,<sp/>char_set);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper_32<sp/>&amp;&amp;<sp/>upper_32[0]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cost_upper<sp/>=<sp/><ref refid="classtesseract_1_1_char_bigrams_1aad8d15924e4b9793972b1c7488cc8466" kindref="member">MeanCostWithSpaces</ref>(upper_32);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cost<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(cost,<sp/>cost_upper);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>upper_32;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cost;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_bigrams_1aad8d15924e4b9793972b1c7488cc8466" kindref="member">CharBigrams::MeanCostWithSpaces</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*char_32_ptr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!char_32_ptr)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bigram_table_.<ref refid="structtesseract_1_1_char_bigram_table_1ac0c678c3fe7bd24f65b706e3fab1957b" kindref="member">worst_cost</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/><ref refid="classtesseract_1_1_cube_utils_1a88fe596e3dcadab7909c0bff64f61f59" kindref="member">CubeUtils::StrLen</ref>(char_32_ptr);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cost<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>cost<sp/>=<sp/><ref refid="classtesseract_1_1_char_bigrams_1acca74d8457ec604bc39f0f0b3a77443b" kindref="member">PairCost</ref>(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>char_32_ptr[0]);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(c<sp/>=<sp/>1;<sp/>c<sp/>&lt;<sp/>len;<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>cost<sp/>+=<sp/><ref refid="classtesseract_1_1_char_bigrams_1acca74d8457ec604bc39f0f0b3a77443b" kindref="member">PairCost</ref>(char_32_ptr[c<sp/>-<sp/>1],<sp/>char_32_ptr[c]);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>cost<sp/>+=<sp/><ref refid="classtesseract_1_1_char_bigrams_1acca74d8457ec604bc39f0f0b3a77443b" kindref="member">PairCost</ref>(char_32_ptr[len<sp/>-<sp/>1],<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(cost<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(len<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/char_bigrams.cpp"/>
  </compounddef>
</doxygen>
