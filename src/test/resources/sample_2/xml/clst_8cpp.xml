<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="clst_8cpp" kind="file">
    <compoundname>clst.cpp</compoundname>
    <includes refid="mfcpch_8h" local="yes">mfcpch.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="clst_8h" local="yes">clst.h</includes>
    <incdepgraph>
      <node id="14061">
        <label>mfcpch.h</label>
        <link refid="mfcpch_8h"/>
      </node>
      <node id="14062">
        <label>stdlib.h</label>
      </node>
      <node id="14066">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="14067" relation="include">
        </childnode>
      </node>
      <node id="14068">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="14062" relation="include">
        </childnode>
        <childnode refid="14069" relation="include">
        </childnode>
        <childnode refid="14064" relation="include">
        </childnode>
        <childnode refid="14070" relation="include">
        </childnode>
        <childnode refid="14072" relation="include">
        </childnode>
        <childnode refid="14073" relation="include">
        </childnode>
      </node>
      <node id="14063">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="14064" relation="include">
        </childnode>
        <childnode refid="14065" relation="include">
        </childnode>
        <childnode refid="14068" relation="include">
        </childnode>
        <childnode refid="14074" relation="include">
        </childnode>
      </node>
      <node id="14071">
        <label>stddef.h</label>
      </node>
      <node id="14072">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="14065" relation="include">
        </childnode>
      </node>
      <node id="14067">
        <label>limits.h</label>
      </node>
      <node id="14069">
        <label>string.h</label>
      </node>
      <node id="14073">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="14072" relation="include">
        </childnode>
      </node>
      <node id="14074">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="14072" relation="include">
        </childnode>
      </node>
      <node id="14070">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="14071" relation="include">
        </childnode>
        <childnode refid="14065" relation="include">
        </childnode>
      </node>
      <node id="14065">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="14066" relation="include">
        </childnode>
      </node>
      <node id="14064">
        <label>stdio.h</label>
      </node>
      <node id="14060">
        <label>ccutil/clst.cpp</label>
        <link refid="clst.cpp"/>
        <childnode refid="14061" relation="include">
        </childnode>
        <childnode refid="14062" relation="include">
        </childnode>
        <childnode refid="14063" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clst.c<sp/><sp/>(Formerly<sp/>clist.c)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>CONS<sp/>cell<sp/>list<sp/>handling<sp/>code<sp/>which<sp/>is<sp/>not<sp/>in<sp/>the<sp/>include<sp/>file.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Phil<sp/>Cheatle</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Mon<sp/>Jan<sp/>28<sp/>08:33:13<sp/>GMT<sp/>1991</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>1991,<sp/>Hewlett-Packard<sp/>Ltd.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<ref refid="mfcpch_8h" kindref="compound">mfcpch.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//precompiled<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clst_8h" kindref="compound">clst.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>MEMBER<sp/>FUNCTIONS<sp/>OF<sp/>CLASS:<sp/>CLIST</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>================================</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST::internal_deep_clear</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/><sp/>Used<sp/>by<sp/>the<sp/>&quot;deep_clear&quot;<sp/>member<sp/>function<sp/>of<sp/>derived<sp/>list</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>classes<sp/>to<sp/>destroy<sp/>all<sp/>the<sp/>elements<sp/>on<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>calling<sp/>function<sp/>passes<sp/>a<sp/>&quot;zapper&quot;<sp/>function<sp/>which<sp/>can<sp/>be<sp/>called<sp/>to</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>delete<sp/>each<sp/>data<sp/>element<sp/>of<sp/>the<sp/>list,<sp/>regardless<sp/>of<sp/>its<sp/>class.<sp/><sp/>This</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>technique<sp/>permits<sp/>a<sp/>generic<sp/>clear<sp/>function<sp/>to<sp/>destroy<sp/>elements<sp/>of</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>different<sp/>derived<sp/>types<sp/>correctly,<sp/>without<sp/>requiring<sp/>virtual<sp/>functions<sp/>and</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>consequential<sp/>memory<sp/>overhead.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="class_c_l_i_s_t_1af39a1aa5f39bdf731c52f93040a59833" kindref="member">CLIST::internal_deep_clear</ref><sp/>(<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//destroy<sp/>all<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*zapper)<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ptr<sp/>to<sp/>zapper<sp/>functn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref><sp/>*ptr;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref><sp/>*next;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST::internal_deep_clear&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_l_i_s_t_1abea2ae13be1c6124c36d118711c1f569" kindref="member">empty</ref><sp/>())<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>last-&gt;next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>to<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>last-&gt;next<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//break<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>list<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>ptr-&gt;next;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>zapper<sp/>(ptr-&gt;data);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST::shallow_clear</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/>Used<sp/>by<sp/>the<sp/>destructor<sp/>and<sp/>the<sp/>&quot;shallow_clear&quot;<sp/>member<sp/>function<sp/>of<sp/>derived</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/>list<sp/>classes<sp/>to<sp/>destroy<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>data<sp/>elements<sp/>are<sp/>NOT<sp/>destroyed.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_l_i_s_t_1a26d45a15761facd8e7ab567c0f70510b" kindref="member">CLIST::shallow_clear</ref>()<sp/>{<sp/><sp/></highlight><highlight class="comment">//destroy<sp/>all<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref><sp/>*ptr;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref><sp/>*next;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST::shallow_clear&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_l_i_s_t_1abea2ae13be1c6124c36d118711c1f569" kindref="member">empty</ref><sp/>())<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>last-&gt;next;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>to<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>last-&gt;next<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//break<sp/>circle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>list<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>ptr-&gt;next;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(ptr);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST::assign_to_sublist</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>list<sp/>is<sp/>set<sp/>to<sp/>a<sp/>sublist<sp/>of<sp/>another<sp/>list.<sp/><sp/>&quot;This&quot;<sp/>list<sp/>must<sp/>be<sp/>empty</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/><sp/>before<sp/>this<sp/>function<sp/>is<sp/>invoked.<sp/><sp/>The<sp/>two<sp/>iterators<sp/>passed<sp/>must<sp/>refer<sp/>to</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>same<sp/>list,<sp/>different<sp/>from<sp/>&quot;this&quot;<sp/>one.<sp/><sp/>The<sp/>sublist<sp/>removed<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/>inclusive<sp/>list<sp/>from<sp/>start_it&apos;s<sp/>current<sp/>position<sp/>to<sp/>end_it&apos;s<sp/>current</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/>position.<sp/><sp/>If<sp/>this<sp/>range<sp/>passes<sp/>over<sp/>the<sp/>end<sp/>of<sp/>the<sp/>source<sp/>list<sp/>then<sp/>the</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/>source<sp/>list<sp/>has<sp/>its<sp/>end<sp/>set<sp/>to<sp/>the<sp/>previous<sp/>element<sp/>of<sp/>start_it.<sp/><sp/>The</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/>extracted<sp/>sublist<sp/>is<sp/>unaffected<sp/>by<sp/>the<sp/>end<sp/>point<sp/>of<sp/>the<sp/>source<sp/>list,<sp/>its</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/>end<sp/>point<sp/>is<sp/>always<sp/>the<sp/>end_it<sp/>position.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_l_i_s_t_1a2be073a2db0e9ad7a4616ff80ef7ded0" kindref="member">CLIST::assign_to_sublist</ref>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>this<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>*start_it,<sp/><sp/></highlight><highlight class="comment">//from<sp/>list<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>*end_it)<sp/>{<sp/><sp/></highlight><highlight class="comment">//from<sp/>list<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_e_r_r_c_o_d_e" kindref="compound">ERRCODE</ref><sp/>LIST_NOT_EMPTY<sp/>=</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Destination<sp/>list<sp/>must<sp/>be<sp/>empty<sp/>before<sp/>extracting<sp/>a<sp/>sublist&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST::assign_to_sublist&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_c_l_i_s_t_1abea2ae13be1c6124c36d118711c1f569" kindref="member">empty</ref><sp/>())</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>LIST_NOT_EMPTY.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST.assign_to_sublist&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>last<sp/>=<sp/>start_it-&gt;extract_sublist<sp/>(end_it);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST::length</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/><sp/>Return<sp/>count<sp/>of<sp/>elements<sp/>on<sp/>list</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="class_c_l_i_s_t_1a50c68a9fed571b9d4036616f179f3ca2" kindref="member">CLIST::length</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">//count<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>it(const_cast&lt;CLIST*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST::length&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST::sort</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/><sp/>Sort<sp/>elements<sp/>on<sp/>list</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><ref refid="class_c_l_i_s_t_1a336224bea4c0eb090b8f5af08474a703" kindref="member">CLIST::sort</ref><sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sort<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comparator<sp/>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//comparison<sp/>routine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*))<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>it(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**base;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ptr<sp/>array<sp/>to<sp/>sort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**current;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>i;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST::sort&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>an<sp/>array<sp/>of<sp/>pointers,<sp/>one<sp/>per<sp/>list<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>count<sp/>=<sp/><ref refid="class_c_l_i_s_t_1a50c68a9fed571b9d4036616f179f3ca2" kindref="member">length</ref><sp/>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>base<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>malloc<sp/>(count<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extract<sp/>all<sp/>elements,<sp/>putting<sp/>the<sp/>pointers<sp/>in<sp/>the<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>current<sp/>=<sp/>base;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt<sp/>();<sp/>!it.cycled_list<sp/>();<sp/>it.forward<sp/>())<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>*current<sp/>=<sp/>it.extract<sp/>();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>current++;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sort<sp/>the<sp/>pointer<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>qsort<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>base,<sp/>count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(*base),<sp/>comparator);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Rebuild<sp/>the<sp/>list<sp/>from<sp/>the<sp/>sorted<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>current<sp/>=<sp/>base;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="oldlist_8cpp_1acd4ea858d7133e40518e0832ff9d94b2" kindref="member">count</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>it.add_to_end<sp/>(*current);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>current++;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>free(base);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assuming<sp/>list<sp/>has<sp/>been<sp/>sorted<sp/>already,<sp/>insert<sp/>new_data<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>keep<sp/>the<sp/>list<sp/>sorted<sp/>according<sp/>to<sp/>the<sp/>same<sp/>comparison<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Comparision<sp/>function<sp/>is<sp/>the<sp/>same<sp/>as<sp/>used<sp/>by<sp/>sort,<sp/>i.e.<sp/>uses<sp/>double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>indirection.<sp/>Time<sp/>is<sp/>O(1)<sp/>to<sp/>add<sp/>to<sp/>beginning<sp/>or<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Time<sp/>is<sp/>linear<sp/>to<sp/>add<sp/>pre-sorted<sp/>items<sp/>to<sp/>an<sp/>empty<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>unique,<sp/>then<sp/>don&apos;t<sp/>add<sp/>duplicate<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>element<sp/>was<sp/>added<sp/>to<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_l_i_s_t_1afae1f22a2fae0e890593501f6ddb48df" kindref="member">CLIST::add_sorted</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comparator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unique,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>new_data)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>adding<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>comparator(&amp;last-&gt;data,<sp/>&amp;new_data)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref>*<sp/>new_element<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>new_element-&gt;data<sp/>=<sp/>new_data;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_element-&gt;next<sp/>=<sp/>new_element;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_element-&gt;next<sp/>=<sp/>last-&gt;next;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last-&gt;next<sp/>=<sp/>new_element;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/>new_element;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!unique<sp/>||<sp/>last-&gt;data<sp/>!=<sp/>new_data)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>use<sp/>an<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>it(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/>new_data<sp/>&amp;&amp;<sp/>unique)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(comparator(&amp;data,<sp/>&amp;new_data)<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.cycled_list())</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.add_to_end(new_data);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.add_before_then_move(new_data);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Assuming<sp/>that<sp/>the<sp/>minuend<sp/>and<sp/>subtrahend<sp/>are<sp/>already<sp/>sorted<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>comparison<sp/>function,<sp/>shallow<sp/>clears<sp/>this<sp/>and<sp/>then<sp/>copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>set<sp/>difference<sp/>minuend<sp/>-<sp/>subtrahend<sp/>to<sp/>this,<sp/>being<sp/>the<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>minuend<sp/>that<sp/>do<sp/>not<sp/>compare<sp/>equal<sp/>to<sp/>anything<sp/>in<sp/>subtrahend.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>unique<sp/>is<sp/>true,<sp/>any<sp/>duplicates<sp/>in<sp/>minuend<sp/>are<sp/>also<sp/>eliminated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_l_i_s_t_1ad72452d15c1233bceaa9bcdd56a6b007" kindref="member">CLIST::set_subtract</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comparator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*),</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>unique,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_l_i_s_t" kindref="compound">CLIST</ref>*<sp/>minuend,<sp/><ref refid="class_c_l_i_s_t" kindref="compound">CLIST</ref>*<sp/>subtrahend)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t_1a26d45a15761facd8e7ab567c0f70510b" kindref="member">shallow_clear</ref>();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>m_it(minuend);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>s_it(subtrahend);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>both<sp/>lists<sp/>are<sp/>sorted,<sp/>finding<sp/>the<sp/>subtras<sp/>that<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>minus<sp/>is<sp/>a<sp/>case<sp/>of<sp/>a<sp/>parallel<sp/>iteration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(m_it.mark_cycle_pt();<sp/>!m_it.cycled_list();<sp/>m_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>minu<sp/>=<sp/>m_it.data();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>subtra<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s_it.empty())<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subtra<sp/>=<sp/>s_it.data();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!s_it.at_last()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comparator(&amp;subtra,<sp/>&amp;minu)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_it.forward();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtra<sp/>=<sp/>s_it.data();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subtra<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>comparator(&amp;subtra,<sp/>&amp;minu)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_l_i_s_t_1afae1f22a2fae0e890593501f6ddb48df" kindref="member">add_sorted</ref>(comparator,<sp/>unique,<sp/>minu);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/><sp/>MEMBER<sp/>FUNCTIONS<sp/>OF<sp/>CLASS:<sp/>CLIST_ITERATOR</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/><sp/>=========================================</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST_ITERATOR::forward</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/><sp/>Move<sp/>the<sp/>iterator<sp/>to<sp/>the<sp/>next<sp/>element<sp/>of<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/><sp/>REMEMBER:<sp/>ALL<sp/>LISTS<sp/>ARE<sp/>CIRCULAR.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r_1ab3de1742b70955c03da651a1535c5582" kindref="member">CLIST_ITERATOR::forward</ref>()<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::forward&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!list)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aaffb45f5550e84f2443ffb2585055ffd" kindref="member">NO_LIST</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::forward&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="class_c_l_i_s_t_1abea2ae13be1c6124c36d118711c1f569" kindref="member">empty</ref><sp/>())</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//not<sp/>removed<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>previous</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>started_cycling<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>next<sp/>is<sp/>deleted<sp/>by<sp/>another<sp/>iterator,<sp/>get<sp/>next<sp/>from<sp/>current.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>current-&gt;next;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ex_current_was_cycle_pt)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cycle_pt<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>next<sp/>=<sp/>current-&gt;next;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="298"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!current)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1a8104a8aded87671d4ddbf6be9a172666" kindref="member">NULL_DATA</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::forward&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!next)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1a835c8893f8804ece0a468f5649966fd3" kindref="member">NULL_NEXT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::forward&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is:<sp/>%p<sp/><sp/>Current<sp/>is:<sp/>%p&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>current);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current-&gt;data;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST_ITERATOR::data_relative</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/><sp/>Return<sp/>the<sp/>data<sp/>pointer<sp/>to<sp/>the<sp/>element<sp/>&quot;offset&quot;<sp/>elements<sp/>from<sp/>current.</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/><sp/>&quot;offset&quot;<sp/>must<sp/>not<sp/>be<sp/>less<sp/>than<sp/>-1.</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/><sp/>(This<sp/>function<sp/>can&apos;t<sp/>be<sp/>INLINEd<sp/>because<sp/>it<sp/>contains<sp/>a<sp/>loop)</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r_1afed4d591f7d00a9217f321a554e5b521" kindref="member">CLIST_ITERATOR::data_relative</ref>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>data<sp/>+<sp/>or<sp/>-<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a46145b78ae1e821253ef36fd03661208" kindref="member">inT8</ref><sp/>offset)<sp/>{<sp/><sp/></highlight><highlight class="comment">//offset<sp/>from<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref><sp/>*ptr;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="321"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::data_relative&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!list)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aaffb45f5550e84f2443ffb2585055ffd" kindref="member">NO_LIST</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::data_relative&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="class_c_l_i_s_t_1abea2ae13be1c6124c36d118711c1f569" kindref="member">empty</ref><sp/>())</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1ac1f578a70f3eaeca57b7e6ea1a00fd8a" kindref="member">EMPTY_LIST</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::data_relative&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&lt;<sp/>-1)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1a55134ddce5fbe49d262fefe6e9f1eb8b" kindref="member">BAD_PARAMETER</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::data_relative&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;offset<sp/>&lt;<sp/>-l&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="331"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ptr<sp/>=<sp/>current<sp/>?<sp/>current<sp/>:<sp/>prev;<sp/>offset--<sp/>&gt;<sp/>0;<sp/>ptr<sp/>=<sp/>ptr-&gt;next);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="338"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1a8104a8aded87671d4ddbf6be9a172666" kindref="member">NULL_DATA</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::data_relative&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;data;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST_ITERATOR::move_to_last()</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/><sp/>Move<sp/>current<sp/>so<sp/>that<sp/>it<sp/>is<sp/>set<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/><sp/>Return<sp/>data<sp/>just<sp/>in<sp/>case<sp/>anyone<sp/>wants<sp/>it.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/><sp/>(This<sp/>function<sp/>can&apos;t<sp/>be<sp/>INLINEd<sp/>because<sp/>it<sp/>contains<sp/>a<sp/>loop)</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r_1aa6fce48d43c54e48f9a9284faa0ddfc1" kindref="member">CLIST_ITERATOR::move_to_last</ref>()<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="356"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::move_to_last&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!list)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aaffb45f5550e84f2443ffb2585055ffd" kindref="member">NO_LIST</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::move_to_last&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="361"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>!=<sp/>list-&gt;last)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r_1ab3de1742b70955c03da651a1535c5582" kindref="member">forward</ref>();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>current-&gt;data;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST_ITERATOR::exchange()</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/><sp/>Given<sp/>another<sp/>iterator,<sp/>whose<sp/>current<sp/>element<sp/>is<sp/>a<sp/>different<sp/>element<sp/>on</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>same<sp/>list<sp/>list<sp/>OR<sp/>an<sp/>element<sp/>of<sp/>another<sp/>list,<sp/>exchange<sp/>the<sp/>two<sp/>current</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/><sp/>elements.<sp/><sp/>On<sp/>return,<sp/>each<sp/>iterator<sp/>points<sp/>to<sp/>the<sp/>element<sp/>which<sp/>was<sp/>the</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/><sp/>other<sp/>iterators<sp/>current<sp/>on<sp/>entry.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/><sp/>(This<sp/>function<sp/>hasn&apos;t<sp/>been<sp/>in-lined<sp/>because<sp/>its<sp/>a<sp/>bit<sp/>big!)</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r_1ab8af30148ecba75428295f871cd971cc" kindref="member">CLIST_ITERATOR::exchange</ref>(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//positions<sp/>of<sp/>2<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>*other_it)<sp/>{<sp/><sp/></highlight><highlight class="comment">//other<sp/>iterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_e_r_r_c_o_d_e" kindref="compound">ERRCODE</ref><sp/>DONT_EXCHANGE_DELETED<sp/>=</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>exchange<sp/>deleted<sp/>elements<sp/>of<sp/>lists&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref><sp/>*old_current;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="390"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::exchange&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!list)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aaffb45f5550e84f2443ffb2585055ffd" kindref="member">NO_LIST</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::exchange&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!other_it)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1a55134ddce5fbe49d262fefe6e9f1eb8b" kindref="member">BAD_PARAMETER</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::exchange&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;other_it<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(other_it-&gt;list))</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aaffb45f5550e84f2443ffb2585055ffd" kindref="member">NO_LIST</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::exchange&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;other_it&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="399"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>nothing<sp/>if<sp/>either<sp/>list<sp/>is<sp/>empty<sp/>or<sp/>if<sp/>both<sp/>iterators<sp/>reference<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/><sp/>link<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((list-&gt;<ref refid="class_c_l_i_s_t_1abea2ae13be1c6124c36d118711c1f569" kindref="member">empty</ref><sp/>())<sp/>||</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>(other_it-&gt;list-&gt;<ref refid="class_c_l_i_s_t_1abea2ae13be1c6124c36d118711c1f569" kindref="member">empty</ref><sp/>())<sp/>||<sp/>(current<sp/>==<sp/>other_it-&gt;current))</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>if<sp/>either<sp/>current<sp/>element<sp/>is<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!current<sp/>||<sp/>!other_it-&gt;current)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>DONT_EXCHANGE_DELETED.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR.exchange&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>handle<sp/>the<sp/>4<sp/>cases:<sp/>doubleton<sp/>list;<sp/>non-doubleton<sp/>adjacent<sp/>elements</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/>(other<sp/>before<sp/>this);<sp/>non-doubleton<sp/>adjacent<sp/>elements<sp/>(this<sp/>before<sp/>other);</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/><sp/>non-adjacent<sp/>elements.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//adjacent<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((next<sp/>==<sp/>other_it-&gt;current)<sp/>||</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/>(other_it-&gt;next<sp/>==<sp/>current))<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//doubleton<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((next<sp/>==<sp/>other_it-&gt;current)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>(other_it-&gt;next<sp/>==<sp/>current))<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>next<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other_it-&gt;prev<sp/>=<sp/>other_it-&gt;next<sp/>=<sp/>other_it-&gt;current;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//non-doubleton<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//adjacent<sp/>links</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//other<sp/>before<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other_it-&gt;next<sp/>==<sp/>current)<sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_it-&gt;prev-&gt;next<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_it-&gt;current-&gt;next<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;next<sp/>=<sp/>other_it-&gt;current;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_it-&gt;next<sp/>=<sp/>other_it-&gt;current;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>before<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev-&gt;next<sp/>=<sp/>other_it-&gt;current;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current-&gt;next<sp/>=<sp/>other_it-&gt;next;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_it-&gt;current-&gt;next<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other_it-&gt;prev<sp/>=<sp/>other_it-&gt;current;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>prev-&gt;next<sp/>=<sp/>other_it-&gt;current;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>current-&gt;next<sp/>=<sp/>other_it-&gt;next;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>other_it-&gt;prev-&gt;next<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>other_it-&gt;current-&gt;next<sp/>=<sp/>next;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>end<sp/>of<sp/>list<sp/>pointer<sp/>when<sp/>necessary<sp/>(remember<sp/>that<sp/>the<sp/>2<sp/>iterators</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/><sp/><sp/><sp/>may<sp/>iterate<sp/>over<sp/>different<sp/>lists!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;last<sp/>==<sp/>current)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;last<sp/>=<sp/>other_it-&gt;current;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other_it-&gt;list-&gt;last<sp/>==<sp/>other_it-&gt;current)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>other_it-&gt;list-&gt;last<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(current<sp/>==<sp/>cycle_pt)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>cycle_pt<sp/>=<sp/>other_it-&gt;cycle_pt;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other_it-&gt;current<sp/>==<sp/>other_it-&gt;cycle_pt)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>other_it-&gt;cycle_pt<sp/>=<sp/>cycle_pt;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>actual<sp/>exchange<sp/>-<sp/>in<sp/>all<sp/>cases*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>old_current<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>current<sp/>=<sp/>other_it-&gt;current;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>other_it-&gt;current<sp/>=<sp/>old_current;</highlight></codeline>
<codeline lineno="469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************************</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLIST_ITERATOR::extract_sublist()</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>is<sp/>a<sp/>private<sp/>member,<sp/>used<sp/>only<sp/>by<sp/>CLIST::assign_to_sublist.</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/><sp/>Given<sp/>another<sp/>iterator<sp/>for<sp/>the<sp/>same<sp/>list,<sp/>extract<sp/>the<sp/>links<sp/>from<sp/>THIS<sp/>to</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/><sp/>OTHER<sp/>inclusive,<sp/>link<sp/>them<sp/>into<sp/>a<sp/>new<sp/>circular<sp/>list,<sp/>and<sp/>return<sp/>a</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/><sp/>pointer<sp/>to<sp/>the<sp/>last<sp/>element.</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/><sp/>(Can&apos;t<sp/>inline<sp/>this<sp/>function<sp/>because<sp/>it<sp/>contains<sp/>a<sp/>loop)</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref><sp/>*CLIST_ITERATOR::extract_sublist(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//from<sp/>this<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>*other_it)<sp/>{<sp/><sp/></highlight><highlight class="comment">//to<sp/>other<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r" kindref="compound">CLIST_ITERATOR</ref><sp/>temp_it<sp/>=<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><ref refid="class_c_l_i_s_t___l_i_n_k" kindref="compound">CLIST_LINK</ref><sp/>*end_of_new_list;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_e_r_r_c_o_d_e" kindref="compound">ERRCODE</ref><sp/>BAD_SUBLIST<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>find<sp/>sublist<sp/>end<sp/>point<sp/>in<sp/>original<sp/>list&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>NDEBUG</highlight></codeline>
<codeline lineno="489"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_e_r_r_c_o_d_e" kindref="compound">ERRCODE</ref><sp/>BAD_EXTRACTION_PTS<sp/>=</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>extract<sp/>sublist<sp/>from<sp/>points<sp/>on<sp/>different<sp/>lists&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_e_r_r_c_o_d_e" kindref="compound">ERRCODE</ref><sp/>DONT_EXTRACT_DELETED<sp/>=</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>extract<sp/>a<sp/>sublist<sp/>marked<sp/>by<sp/>deleted<sp/>points&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">this</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aa905f4edc3563a45c13d5067f6398d6a" kindref="member">NULL_OBJECT</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::extract_sublist&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!other_it)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1a55134ddce5fbe49d262fefe6e9f1eb8b" kindref="member">BAD_PARAMETER</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::extract_sublist&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;other_it<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!list)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1aaffb45f5550e84f2443ffb2585055ffd" kindref="member">NO_LIST</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::extract_sublist&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list<sp/>!=<sp/>other_it-&gt;list)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>BAD_EXTRACTION_PTS.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR.extract_sublist&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="class_c_l_i_s_t_1abea2ae13be1c6124c36d118711c1f569" kindref="member">empty</ref><sp/>())</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lsterr_8h_1ac1f578a70f3eaeca57b7e6ea1a00fd8a" kindref="member">EMPTY_LIST</ref>.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR::extract_sublist&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!current<sp/>||<sp/>!other_it-&gt;current)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>DONT_EXTRACT_DELETED.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR.extract_sublist&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="510"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>ex_current_was_last<sp/>=<sp/>other_it-&gt;ex_current_was_last<sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/>ex_current_was_cycle_pt<sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>other_it-&gt;ex_current_was_cycle_pt<sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>temp_it.<ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r_1a8a28143baa40de9cb12b5cb1b0b7144c" kindref="member">mark_cycle_pt</ref><sp/>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//walk<sp/>sublist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_it.<ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r_1a7655a052d155957d883793b9952159d7" kindref="member">cycled_list</ref><sp/>())<sp/><sp/></highlight><highlight class="comment">//cant<sp/>find<sp/>end<sp/>pt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>BAD_SUBLIST.<ref refid="class_e_r_r_c_o_d_e_1abc4cc64aad0ddb74c02523b69c95a1c1" kindref="member">error</ref><sp/>(</highlight><highlight class="stringliteral">&quot;CLIST_ITERATOR.extract_sublist&quot;</highlight><highlight class="normal">,<sp/><ref refid="errcode_8h_1a8a3a2e51383909b357fcdf8eda803637a781ad2788df9e25c59a70894c7832096" kindref="member">ABORT</ref>,<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_it.<ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r_1a1f2078025e73479e509f3a82746b4d60" kindref="member">at_last</ref><sp/>())<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>list-&gt;last<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ex_current_was_last<sp/>=<sp/>other_it-&gt;ex_current_was_last<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_it.current<sp/>==<sp/>cycle_pt)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ex_current_was_cycle_pt<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_it.current<sp/>==<sp/>other_it-&gt;cycle_pt)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>other_it-&gt;ex_current_was_cycle_pt<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>temp_it.<ref refid="class_c_l_i_s_t___i_t_e_r_a_t_o_r_1ab3de1742b70955c03da651a1535c5582" kindref="member">forward</ref><sp/>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(temp_it.prev<sp/>!=<sp/>other_it-&gt;current);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//circularise<sp/>sublist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>other_it-&gt;current-&gt;next<sp/>=<sp/>current;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>end_of_new_list<sp/>=<sp/>other_it-&gt;current;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sublist<sp/>=<sp/>whole<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev<sp/>==<sp/>other_it-&gt;current)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;last<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>current<sp/>=<sp/>next<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>other_it-&gt;prev<sp/>=<sp/>other_it-&gt;current<sp/>=<sp/>other_it-&gt;next<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>prev-&gt;next<sp/>=<sp/>other_it-&gt;next;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>other_it-&gt;current<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>next<sp/>=<sp/>other_it-&gt;next;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>other_it-&gt;prev<sp/>=<sp/>prev;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_of_new_list;</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccutil/clst.cpp"/>
  </compounddef>
</doxygen>
