<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="boxword_8cpp" kind="file">
    <compoundname>boxword.cpp</compoundname>
    <includes refid="blobs_8h" local="yes">blobs.h</includes>
    <includes refid="boxword_8h" local="yes">boxword.h</includes>
    <includes refid="normalis_8h" local="yes">normalis.h</includes>
    <includes refid="ocrblock_8h" local="yes">ocrblock.h</includes>
    <includes refid="pageres_8h" local="yes">pageres.h</includes>
    <incdepgraph>
      <node id="6617">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="6618" relation="include">
        </childnode>
        <childnode refid="6623" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
      </node>
      <node id="6606">
        <label>assert.h</label>
      </node>
      <node id="6574">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="6612">
        <label>rejctmap.h</label>
        <link refid="rejctmap_8h"/>
        <childnode refid="6564" relation="include">
        </childnode>
        <childnode refid="6593" relation="include">
        </childnode>
        <childnode refid="6577" relation="include">
        </childnode>
        <childnode refid="6607" relation="include">
        </childnode>
      </node>
      <node id="6623">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="6562">
        <label>stdlib.h</label>
      </node>
      <node id="6559">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="6560" relation="include">
        </childnode>
      </node>
      <node id="6595">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="6566" relation="include">
        </childnode>
      </node>
      <node id="6618">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="6619" relation="include">
        </childnode>
        <childnode refid="6566" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
        <childnode refid="6620" relation="include">
        </childnode>
        <childnode refid="6577" relation="include">
        </childnode>
        <childnode refid="6610" relation="include">
        </childnode>
        <childnode refid="6621" relation="include">
        </childnode>
        <childnode refid="6622" relation="include">
        </childnode>
      </node>
      <node id="6575">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
      </node>
      <node id="6561">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="6562" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6564" relation="include">
        </childnode>
        <childnode refid="6566" relation="include">
        </childnode>
        <childnode refid="6567" relation="include">
        </childnode>
      </node>
      <node id="6624">
        <label>tessarray.h</label>
        <link refid="tessarray_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
      </node>
      <node id="6556">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6558" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6568" relation="include">
        </childnode>
      </node>
      <node id="6596">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="6597" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
      </node>
      <node id="6605">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="6606" relation="include">
        </childnode>
        <childnode refid="6556" relation="include">
        </childnode>
        <childnode refid="6578" relation="include">
        </childnode>
        <childnode refid="6607" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
        <childnode refid="6610" relation="include">
        </childnode>
        <childnode refid="6592" relation="include">
        </childnode>
      </node>
      <node id="6565">
        <label>stddef.h</label>
      </node>
      <node id="6609">
        <label>memory.h</label>
      </node>
      <node id="6566">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="6558" relation="include">
        </childnode>
      </node>
      <node id="6601">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="6588" relation="include">
        </childnode>
        <childnode refid="6572" relation="include">
        </childnode>
        <childnode refid="6571" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6575" relation="include">
        </childnode>
        <childnode refid="6602" relation="include">
        </childnode>
      </node>
      <node id="6560">
        <label>limits.h</label>
      </node>
      <node id="6604">
        <label>params_training_featdef.h</label>
        <link refid="params__training__featdef_8h"/>
        <childnode refid="6578" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
      </node>
      <node id="6554">
        <label>ccstruct/boxword.cpp</label>
        <link refid="boxword.cpp"/>
        <childnode refid="6555" relation="include">
        </childnode>
        <childnode refid="6583" relation="include">
        </childnode>
        <childnode refid="6584" relation="include">
        </childnode>
        <childnode refid="6585" relation="include">
        </childnode>
        <childnode refid="6603" relation="include">
        </childnode>
      </node>
      <node id="6573">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="6570" relation="include">
        </childnode>
      </node>
      <node id="6599">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="6571" relation="include">
        </childnode>
      </node>
      <node id="6594">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6558" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6568" relation="include">
        </childnode>
      </node>
      <node id="6621">
        <label>pthread.h</label>
      </node>
      <node id="6563">
        <label>string.h</label>
      </node>
      <node id="6611">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="6608" relation="include">
        </childnode>
      </node>
      <node id="6583">
        <label>boxword.h</label>
        <link refid="boxword_8h"/>
        <childnode refid="6578" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
      </node>
      <node id="6608">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="6609" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
      </node>
      <node id="6616">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6562" relation="include">
        </childnode>
        <childnode refid="6558" relation="include">
        </childnode>
        <childnode refid="6576" relation="include">
        </childnode>
        <childnode refid="6617" relation="include">
        </childnode>
      </node>
      <node id="6569">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="6570" relation="include">
        </childnode>
        <childnode refid="6571" relation="include">
        </childnode>
        <childnode refid="6574" relation="include">
        </childnode>
        <childnode refid="6575" relation="include">
        </childnode>
        <childnode refid="6576" relation="include">
        </childnode>
      </node>
      <node id="6593">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="6558" relation="include">
        </childnode>
      </node>
      <node id="6579">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="6558" relation="include">
        </childnode>
      </node>
      <node id="6622">
        <label>semaphore.h</label>
      </node>
      <node id="6597">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="6598" relation="include">
        </childnode>
        <childnode refid="6599" relation="include">
        </childnode>
        <childnode refid="6593" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6595" relation="include">
        </childnode>
        <childnode refid="6575" relation="include">
        </childnode>
      </node>
      <node id="6592">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="6577" relation="include">
        </childnode>
        <childnode refid="6593" relation="include">
        </childnode>
        <childnode refid="6594" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
        <childnode refid="6595" relation="include">
        </childnode>
        <childnode refid="6596" relation="include">
        </childnode>
        <childnode refid="6589" relation="include">
        </childnode>
      </node>
      <node id="6589">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6590" relation="include">
        </childnode>
        <childnode refid="6592" relation="include">
        </childnode>
      </node>
      <node id="6567">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="6566" relation="include">
        </childnode>
      </node>
      <node id="6619">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="6572" relation="include">
        </childnode>
        <childnode refid="6576" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
        <childnode refid="6610" relation="include">
        </childnode>
        <childnode refid="6578" relation="include">
        </childnode>
      </node>
      <node id="6598">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="6571" relation="include">
        </childnode>
        <childnode refid="6599" relation="include">
        </childnode>
      </node>
      <node id="6570">
        <label>math.h</label>
      </node>
      <node id="6614">
        <label>split.h</label>
        <link refid="split_8h"/>
        <childnode refid="6555" relation="include">
        </childnode>
        <childnode refid="6615" relation="include">
        </childnode>
      </node>
      <node id="6568">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="6566" relation="include">
        </childnode>
      </node>
      <node id="6591">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="6571" relation="include">
        </childnode>
      </node>
      <node id="6582">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="6570" relation="include">
        </childnode>
        <childnode refid="6555" relation="include">
        </childnode>
      </node>
      <node id="6588">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="6615">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="6616" relation="include">
        </childnode>
        <childnode refid="6579" relation="include">
        </childnode>
      </node>
      <node id="6585">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="6586" relation="include">
        </childnode>
        <childnode refid="6587" relation="include">
        </childnode>
        <childnode refid="6589" relation="include">
        </childnode>
        <childnode refid="6600" relation="include">
        </childnode>
      </node>
      <node id="6577">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6578" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
      </node>
      <node id="6578">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6562" relation="include">
        </childnode>
        <childnode refid="6579" relation="include">
        </childnode>
        <childnode refid="6566" relation="include">
        </childnode>
        <childnode refid="6580" relation="include">
        </childnode>
        <childnode refid="6574" relation="include">
        </childnode>
      </node>
      <node id="6564">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="6565" relation="include">
        </childnode>
        <childnode refid="6558" relation="include">
        </childnode>
      </node>
      <node id="6603">
        <label>pageres.h</label>
        <link refid="pageres_8h"/>
        <childnode refid="6555" relation="include">
        </childnode>
        <childnode refid="6583" relation="include">
        </childnode>
        <childnode refid="6572" relation="include">
        </childnode>
        <childnode refid="6578" relation="include">
        </childnode>
        <childnode refid="6584" relation="include">
        </childnode>
        <childnode refid="6585" relation="include">
        </childnode>
        <childnode refid="6589" relation="include">
        </childnode>
        <childnode refid="6604" relation="include">
        </childnode>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6612" relation="include">
        </childnode>
        <childnode refid="6613" relation="include">
        </childnode>
        <childnode refid="6592" relation="include">
        </childnode>
      </node>
      <node id="6587">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="6588" relation="include">
        </childnode>
        <childnode refid="6572" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
      </node>
      <node id="6572">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6558" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6568" relation="include">
        </childnode>
      </node>
      <node id="6610">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="6566" relation="include">
        </childnode>
        <childnode refid="6580" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
        <childnode refid="6579" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
        <childnode refid="6611" relation="include">
        </childnode>
      </node>
      <node id="6613">
        <label>seam.h</label>
        <link refid="seam_8h"/>
        <childnode refid="6555" relation="include">
        </childnode>
        <childnode refid="6614" relation="include">
        </childnode>
        <childnode refid="6624" relation="include">
        </childnode>
      </node>
      <node id="6571">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6570" relation="include">
        </childnode>
        <childnode refid="6572" relation="include">
        </childnode>
        <childnode refid="6573" relation="include">
        </childnode>
      </node>
      <node id="6607">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="6586">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="6564" relation="include">
        </childnode>
      </node>
      <node id="6576">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="6577" relation="include">
        </childnode>
      </node>
      <node id="6602">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="6558">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="6559" relation="include">
        </childnode>
      </node>
      <node id="6600">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="6556" relation="include">
        </childnode>
        <childnode refid="6586" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
        <childnode refid="6601" relation="include">
        </childnode>
        <childnode refid="6602" relation="include">
        </childnode>
      </node>
      <node id="6557">
        <label>stdio.h</label>
      </node>
      <node id="6620">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6558" relation="include">
        </childnode>
        <childnode refid="6576" relation="include">
        </childnode>
      </node>
      <node id="6584">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6558" relation="include">
        </childnode>
      </node>
      <node id="6581">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6559" relation="include">
        </childnode>
        <childnode refid="6564" relation="include">
        </childnode>
      </node>
      <node id="6555">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="6556" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6582" relation="include">
        </childnode>
      </node>
      <node id="6580">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
      </node>
      <node id="6590">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="6591" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6564" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxword.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Class<sp/>to<sp/>represent<sp/>the<sp/>bounding<sp/>boxes<sp/>of<sp/>the<sp/>output.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Tue<sp/>May<sp/>25<sp/>14:18:14<sp/>PDT<sp/>2010</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2010,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobs_8h" kindref="compound">blobs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="boxword_8h" kindref="compound">boxword.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="normalis_8h" kindref="compound">normalis.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ocrblock_8h" kindref="compound">ocrblock.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pageres_8h" kindref="compound">pageres.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clip<sp/>output<sp/>boxes<sp/>to<sp/>input<sp/>blob<sp/>boxes<sp/>for<sp/>bounds<sp/>that<sp/>are<sp/>within<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tolerance.<sp/>Otherwise,<sp/>the<sp/>blob<sp/>may<sp/>be<sp/>chopped<sp/>and<sp/>we<sp/>have<sp/>to<sp/>just<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>word<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a03af8c63d879bb74722a52f7bee8c5de" kindref="member">kBoxClipTolerance</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>offset<sp/>in<sp/>baseline-normalized<sp/>coords<sp/>to<sp/>make<sp/>a<sp/>character<sp/>a<sp/>subscript.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ade0750d1a21114a42d54a11b903ad72a" kindref="member">kMinSubscriptOffset</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>offset<sp/>in<sp/>baseline-normalized<sp/>coords<sp/>to<sp/>make<sp/>a<sp/>character<sp/>a<sp/>superscript.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aee3f1b44d026b8de929a0ba25591cc85" kindref="member">kMinSuperscriptOffset</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>y<sp/>of<sp/>bottom<sp/>of<sp/>a<sp/>drop-cap<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a084fccc7b63dce7abd842e07877397c6" kindref="member">kMaxDropCapBottom</ref><sp/>=<sp/>-128;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="classtesseract_1_1_box_word_1a7467dd28609edc0c8635c6e2a53184ae" kindref="member">BoxWord::BoxWord</ref>()<sp/>:<sp/>length_(0)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">BoxWord::BoxWord(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxWord&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>CopyFrom(src);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">BoxWord::~BoxWord()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">BoxWord&amp;<sp/>BoxWord::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxWord&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>CopyFrom(src);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoxWord::CopyFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BoxWord&amp;<sp/>src)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>bbox_<sp/>=<sp/>src.bbox_;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>length_<sp/>=<sp/>src.length_;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>boxes_.clear();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>boxes_.reserve(length_);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length_;<sp/>++i)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_.push_back(src.boxes_[i]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Factory<sp/>to<sp/>build<sp/>a<sp/>BoxWord<sp/>from<sp/>a<sp/>TWERD<sp/>and<sp/>the<sp/>DENORM<sp/>to<sp/>switch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>original<sp/>image<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>denorm<sp/>is<sp/>not<sp/>NULL,<sp/>then<sp/>the<sp/>output<sp/>is<sp/>denormalized<sp/>and<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>back<sp/>to<sp/>the<sp/>original<sp/>image<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">BoxWord*<sp/>BoxWord::CopyFromNormalized(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref>*<sp/>denorm,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref>*<sp/>tessword)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>BoxWord*<sp/>boxword<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>BoxWord();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>boxword-&gt;length_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>tblob<sp/>=<sp/>tessword-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>tblob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>tblob<sp/>=<sp/>tblob-&gt;next)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>++boxword-&gt;length_;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>boxword-&gt;boxes_.reserve(boxword-&gt;length_);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>tblob<sp/>=<sp/>tessword-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>tblob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>tblob<sp/>=<sp/>tblob-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref>*<sp/>outline<sp/>=<sp/>tblob-&gt;outlines;<sp/>outline<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outline<sp/>=<sp/>outline-&gt;next)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>*<sp/>edgept<sp/>=<sp/>outline-&gt;loop;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>edges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a7e6e4c9b9bcc3b1e66ab62bb7641c39a" kindref="member">IsHidden</ref>()<sp/>||<sp/>!edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a8326da8daf597bcdc5a05064a37cbbb1" kindref="member">prev</ref>-&gt;<ref refid="struct_e_d_g_e_p_t_1a7e6e4c9b9bcc3b1e66ab62bb7641c39a" kindref="member">IsHidden</ref>())<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>pos(edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>,<sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(denorm<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref><sp/>denormed;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denorm-&gt;<ref refid="class_d_e_n_o_r_m_1a7f208ca46e4fc576432c16bf16a504f0" kindref="member">DenormTransform</ref>(edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1adee462d390e637a8393ba373c8d2a1bb" kindref="member">pos</ref>,<sp/>&amp;denormed);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.set_x(denormed.<ref refid="struct_t_p_o_i_n_t_1aa9c98655c3a2a0437821e5a3d3418b0f" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos.set_y(denormed.<ref refid="struct_t_p_o_i_n_t_1a6d62f015b74612e43975e439a096039c" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>pt_box(pos,<sp/>pos);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_box<sp/>+=<sp/>pt_box;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>edgept<sp/>=<sp/>edgept-&gt;<ref refid="struct_e_d_g_e_p_t_1a196f7786194752f89e364a586d24884d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(edgept<sp/>!=<sp/>outline-&gt;loop);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>boxword-&gt;boxes_.push_back(blob_box);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>boxword-&gt;ComputeBoundingBox();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boxword;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>up<sp/>the<sp/>script_pos_<sp/>member<sp/>using<sp/>the<sp/>tessword<sp/>to<sp/>get<sp/>the<sp/>bln</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bounding<sp/>boxes,<sp/>the<sp/>best_choice<sp/>to<sp/>get<sp/>the<sp/>unichars,<sp/>and<sp/>the<sp/>unicharset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>get<sp/>the<sp/>target<sp/>positions.<sp/>If<sp/>small_caps<sp/>is<sp/>true,<sp/>sub/super<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>considered,<sp/>but<sp/>dropcaps<sp/>are.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoxWord::SetScriptPositions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>small_caps,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref>*<sp/>tessword,<sp/><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref>*<sp/>best_choice)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>script_pos_.init_to_size(length_,<sp/><ref refid="namespacetesseract_1a496c25ad3b69eb36c48ae9cbf15f2fe2a4aa5a5c8505a529a803f4a837d54c526" kindref="member">SP_NORMAL</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blob_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>tblob<sp/>=<sp/>tessword-&gt;<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;<sp/>tblob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>tblob<sp/>=<sp/>tblob-&gt;next,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++blob_index)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>class_id<sp/>=<sp/>best_choice-&gt;<ref refid="class_w_e_r_d___c_h_o_i_c_e_1a6b917b2e6157f7956ff53ca230425ed3" kindref="member">unichar_id</ref>(blob_index);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box<sp/>=<sp/>tblob-&gt;bounding_box();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>blob_box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_bottom,<sp/>max_bottom,<sp/>min_top,<sp/>max_top;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1af2e0d12e80aa3aa985652d73eaf1e95f" kindref="member">get_top_bottom</ref>(class_id,<sp/>&amp;min_bottom,<sp/>&amp;max_bottom,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;min_top,<sp/>&amp;max_top);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottom<sp/>&lt;=<sp/><ref refid="namespacetesseract_1a084fccc7b63dce7abd842e07877397c6" kindref="member">kMaxDropCapBottom</ref>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>script_pos_[blob_index]<sp/>=<sp/><ref refid="namespacetesseract_1a496c25ad3b69eb36c48ae9cbf15f2fe2a39a9b42f2bd03c3cb815dcf93b3d00d4" kindref="member">SP_DROPCAP</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!small_caps)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top<sp/>+<sp/><ref refid="namespacetesseract_1ade0750d1a21114a42d54a11b903ad72a" kindref="member">kMinSubscriptOffset</ref><sp/>&lt;<sp/>min_top)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script_pos_[blob_index]<sp/>=<sp/><ref refid="namespacetesseract_1a496c25ad3b69eb36c48ae9cbf15f2fe2a0018c0645e510228c6701ff42d36bd01" kindref="member">SP_SUBSCRIPT</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottom<sp/>-<sp/><ref refid="namespacetesseract_1aee3f1b44d026b8de929a0ba25591cc85" kindref="member">kMinSuperscriptOffset</ref><sp/>&gt;<sp/>max_bottom)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>script_pos_[blob_index]<sp/>=<sp/><ref refid="namespacetesseract_1a496c25ad3b69eb36c48ae9cbf15f2fe2a6160fc6d2a9bba3b56e3f673f84b24b8" kindref="member">SP_SUPERSCRIPT</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>the<sp/>bounding<sp/>boxes<sp/>from<sp/>the<sp/>polygonal<sp/>approximation<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expanding<sp/>slightly,<sp/>then<sp/>clipping<sp/>to<sp/>the<sp/>blobs<sp/>from<sp/>the<sp/>original_word</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>overlap.<sp/>If<sp/>not<sp/>null,<sp/>the<sp/>block<sp/>provides<sp/>the<sp/>inverse<sp/>rotation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoxWord::ClipToOriginalWord(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_b_l_o_c_k" kindref="compound">BLOCK</ref>*<sp/>block,<sp/><ref refid="class_w_e_r_d" kindref="compound">WERD</ref>*<sp/>original_word)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length_;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>boxes_[i];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Expand<sp/>by<sp/>a<sp/>single<sp/>pixel,<sp/>as<sp/>the<sp/>poly<sp/>approximation<sp/>error<sp/>is<sp/>1<sp/>pixel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>box<sp/>=<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>-<sp/>1,<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>+<sp/>1,<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>find<sp/>the<sp/>original<sp/>box<sp/>that<sp/>matches.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>original_box;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>C_BLOB_IT<sp/>b_it(original_word-&gt;<ref refid="class_w_e_r_d_1a174baefaa99afbfdbf444e4199f3b529" kindref="member">cblob_list</ref>());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(b_it.mark_cycle_pt();<sp/>!b_it.cycled_list();<sp/>b_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box<sp/>=<sp/>b_it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blob_box.<ref refid="class_t_b_o_x_1a428e14544aeb44064bc8637d920211a0" kindref="member">rotate</ref>(block-&gt;<ref refid="class_b_l_o_c_k_1a820d5ff979ad26219ad3914551d70881" kindref="member">re_rotation</ref>());</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_box.<ref refid="class_t_b_o_x_1aeabe87a0ee3912ca63550ffee4fb4115" kindref="member">major_overlap</ref>(box))<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>original_box<sp/>+=<sp/>blob_box;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!original_box.null_box())<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NearlyEqual&lt;int&gt;(original_box.left(),<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/><ref refid="namespacetesseract_1a03af8c63d879bb74722a52f7bee8c5de" kindref="member">kBoxClipTolerance</ref>))</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1ae6151cd794841e100d8a346a0c4a46e6" kindref="member">set_left</ref>(original_box.left());</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NearlyEqual&lt;int&gt;(original_box.right(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a03af8c63d879bb74722a52f7bee8c5de" kindref="member">kBoxClipTolerance</ref>))</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a2246293d3667b28c52a52353a2d5caea" kindref="member">set_right</ref>(original_box.right());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NearlyEqual&lt;int&gt;(original_box.top(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/><ref refid="namespacetesseract_1a03af8c63d879bb74722a52f7bee8c5de" kindref="member">kBoxClipTolerance</ref>))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a7f40dfd290a907200bdc98c196f63f45" kindref="member">set_top</ref>(original_box.top());</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NearlyEqual&lt;int&gt;(original_box.bottom(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a03af8c63d879bb74722a52f7bee8c5de" kindref="member">kBoxClipTolerance</ref>))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a6f803b24b046883cb0f3882dc3d92302" kindref="member">set_bottom</ref>(original_box.bottom());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>original_box<sp/>=<sp/>original_word-&gt;<ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>original_box.<ref refid="class_t_b_o_x_1a428e14544aeb44064bc8637d920211a0" kindref="member">rotate</ref>(block-&gt;<ref refid="class_b_l_o_c_k_1a820d5ff979ad26219ad3914551d70881" kindref="member">re_rotation</ref>());</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_[i]<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a33e45c7389737cdf1a908bca0af315c4" kindref="member">intersection</ref>(original_box);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>ComputeBoundingBox();</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merges<sp/>the<sp/>boxes<sp/>from<sp/>start<sp/>to<sp/>end,<sp/>not<sp/>including<sp/>end,<sp/>and<sp/>deletes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>boxes<sp/>between<sp/>start<sp/>and<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoxWord::MergeBoxes(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/><ref refid="helpers_8h_1af8739168d5b3235996eeb25dac3c4044" kindref="member">ClipToRange</ref>(start,<sp/>0,<sp/>length_);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>end<sp/>=<sp/><ref refid="helpers_8h_1af8739168d5b3235996eeb25dac3c4044" kindref="member">ClipToRange</ref>(end,<sp/>0,<sp/>length_);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>&lt;=<sp/>start<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>start<sp/>+<sp/>1;<sp/>i<sp/>&lt;<sp/>end;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_[start]<sp/>+=<sp/>boxes_[i];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shrinkage<sp/>=<sp/>end<sp/>-<sp/>1<sp/>-<sp/>start;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>length_<sp/>-=<sp/>shrinkage;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>start<sp/>+<sp/>1;<sp/>i<sp/>&lt;<sp/>length_;<sp/>++i)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_[i]<sp/>=<sp/>boxes_[i<sp/>+<sp/>shrinkage];</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>boxes_.truncate(length_);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Inserts<sp/>a<sp/>new<sp/>box<sp/>before<sp/>the<sp/>given<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recomputes<sp/>the<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoxWord::InsertBox(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>length_)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_.insert(box,<sp/>index);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes_.push_back(box);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>length_<sp/>=<sp/>boxes_.size();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>ComputeBoundingBox();</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>the<sp/>box<sp/>with<sp/>the<sp/>given<sp/>index,<sp/>and<sp/>shuffles<sp/>up<sp/>the<sp/>rest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Recomputes<sp/>the<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoxWord::DeleteBox(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(0<sp/>&lt;=<sp/>index<sp/>&amp;&amp;<sp/>index<sp/>&lt;<sp/>length_);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>boxes_.remove(index);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>--length_;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>ComputeBoundingBox();</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deletes<sp/>all<sp/>the<sp/>boxes<sp/>stored<sp/>in<sp/>BoxWord.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoxWord::DeleteAllBoxes()<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>length_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>boxes_.clear();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>bbox_<sp/>=<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>the<sp/>word.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoxWord::ComputeBoundingBox()<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>bbox_<sp/>=<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length_;<sp/>++i)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>bbox_<sp/>+=<sp/>boxes_[i];</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>and<sp/>other<sp/>putatively<sp/>are<sp/>the<sp/>same,<sp/>so<sp/>call<sp/>the<sp/>(permanent)<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>blob<sp/>index<sp/>where<sp/>the<sp/>bounding<sp/>boxes<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>callback<sp/>is<sp/>deleted<sp/>on<sp/>completion.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BoxWord::ProcessMatchedBlobs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref>&amp;<sp/>other,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tess_callback1" kindref="compound">TessCallback1&lt;int&gt;</ref>*<sp/>cb)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref>*<sp/>blob<sp/>=<sp/>other.<ref refid="struct_t_w_e_r_d_1aeec31d57df04c8dac1cf3e6990d358a7" kindref="member">blobs</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length_<sp/>&amp;&amp;<sp/>blob<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>++i,<sp/>blob<sp/>=<sp/>blob-&gt;<ref refid="struct_t_b_l_o_b_1a88a541f55c8bfd63a9f0c419189499bb" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>blob_box<sp/>=<sp/>blob-&gt;bounding_box();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob_box<sp/>==<sp/>boxes_[i])</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cb-&gt;<ref refid="class_tess_callback1_1a88dffeb940aea354ff6e4783ae33c260" kindref="member">Run</ref>(i);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cb;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/boxword.cpp"/>
  </compounddef>
</doxygen>
