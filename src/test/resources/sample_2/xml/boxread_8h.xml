<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="boxread_8h" kind="file">
    <compoundname>boxread.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="strngs_8h" local="yes">strngs.h</includes>
    <includedby refid="applybox_8cpp" local="yes">ccmain/applybox.cpp</includedby>
    <includedby refid="recogtraining_8cpp" local="yes">ccmain/recogtraining.cpp</includedby>
    <includedby refid="boxread_8cpp" local="yes">ccstruct/boxread.cpp</includedby>
    <includedby refid="mastertrainer_8cpp" local="yes">classify/mastertrainer.cpp</includedby>
    <includedby refid="trainingsampleset_8cpp" local="yes">classify/trainingsampleset.cpp</includedby>
    <includedby refid="unicharset__extractor_8cpp" local="yes">training/unicharset_extractor.cpp</includedby>
    <incdepgraph>
      <node id="6542">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="6543" relation="include">
        </childnode>
      </node>
      <node id="6545">
        <label>stddef.h</label>
      </node>
      <node id="6543">
        <label>limits.h</label>
      </node>
      <node id="6541">
        <label>string.h</label>
      </node>
      <node id="6538">
        <label>ccstruct/boxread.h</label>
        <link refid="boxread.h"/>
        <childnode refid="6539" relation="include">
        </childnode>
        <childnode refid="6540" relation="include">
        </childnode>
      </node>
      <node id="6544">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="6545" relation="include">
        </childnode>
        <childnode refid="6546" relation="include">
        </childnode>
      </node>
      <node id="6546">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="6542" relation="include">
        </childnode>
      </node>
      <node id="6539">
        <label>stdio.h</label>
      </node>
      <node id="6540">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="6539" relation="include">
        </childnode>
        <childnode refid="6541" relation="include">
        </childnode>
        <childnode refid="6542" relation="include">
        </childnode>
        <childnode refid="6544" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6551">
        <label>classify/mastertrainer.cpp</label>
        <link refid="mastertrainer_8cpp"/>
      </node>
      <node id="6548">
        <label>ccmain/applybox.cpp</label>
        <link refid="applybox_8cpp"/>
      </node>
      <node id="6550">
        <label>ccstruct/boxread.cpp</label>
        <link refid="boxread_8cpp"/>
      </node>
      <node id="6547">
        <label>ccstruct/boxread.h</label>
        <link refid="boxread.h"/>
        <childnode refid="6548" relation="include">
        </childnode>
        <childnode refid="6549" relation="include">
        </childnode>
        <childnode refid="6550" relation="include">
        </childnode>
        <childnode refid="6551" relation="include">
        </childnode>
        <childnode refid="6552" relation="include">
        </childnode>
        <childnode refid="6553" relation="include">
        </childnode>
      </node>
      <node id="6552">
        <label>classify/trainingsampleset.cpp</label>
        <link refid="trainingsampleset_8cpp"/>
      </node>
      <node id="6553">
        <label>training/unicharset_extractor.cpp</label>
        <link refid="unicharset__extractor_8cpp"/>
      </node>
      <node id="6549">
        <label>ccmain/recogtraining.cpp</label>
        <link refid="recogtraining_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="boxread_8h_1a6a24b858ccf4e9eb9e163b5bcc04b682" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int kBoxReadBufSize</definition>
        <argsstring></argsstring>
        <name>kBoxReadBufSize</name>
        <initializer>= 1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.h" line="30" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="boxread_8h_1af8f00c0aa1951fff65cff5802879a91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE* OpenBoxFile</definition>
        <argsstring>(const STRING &amp;fname)</argsstring>
        <name>OpenBoxFile</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.h" line="33" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="33" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="boxread_8h_1a8236e051549f8174e263196602edadc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReadNextBox</definition>
        <argsstring>(int *line_number, FILE *box_file, STRING *utf8_str, TBOX *bounding_box)</argsstring>
        <name>ReadNextBox</name>
        <param>
          <type>int *</type>
          <declname>line_number</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>box_file</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>utf8_str</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.h" line="43" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="boxread_8h_1a566c682100d2b5f0a20f39bf99ad2d30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ReadNextBox</definition>
        <argsstring>(int target_page, int *line_number, FILE *box_file, STRING *utf8_str, TBOX *bounding_box)</argsstring>
        <name>ReadNextBox</name>
        <param>
          <type>int</type>
          <declname>target_page</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>line_number</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>box_file</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>utf8_str</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.h" line="48" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="67" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="boxread_8h_1acd464bb54397318c2f6fb8db9e644fd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ParseBoxFileStr</definition>
        <argsstring>(const char *boxfile_str, int *page_number, STRING *utf8_str, TBOX *bounding_box)</argsstring>
        <name>ParseBoxFileStr</name>
        <param>
          <type>const char *</type>
          <declname>boxfile_str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>page_number</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>utf8_str</declname>
        </param>
        <param>
          <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
          <declname>bounding_box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.h" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="105" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="boxread_8h_1a12d56f93e661ff006a382fb8d7314898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MakeBoxFileStr</definition>
        <argsstring>(const char *unichar_str, const TBOX &amp;box, int page_num, STRING *box_str)</argsstring>
        <name>MakeBoxFileStr</name>
        <param>
          <type>const char *</type>
          <declname>unichar_str</declname>
        </param>
        <param>
          <type>const <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &amp;</type>
          <declname>box</declname>
        </param>
        <param>
          <type>int</type>
          <declname>page_num</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>box_str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.h" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/boxread.cpp" bodystart="155" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxread.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Read<sp/>data<sp/>from<sp/>a<sp/>box<sp/>file.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>Aug<sp/>24<sp/>17:47:23<sp/>PDT<sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2007,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TESSERACT_CCUTIL_BOXREAD_H__</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TESSERACT_CCUTIL_BOXREAD_H__</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="strngs_8h" kindref="compound">strngs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Size<sp/>of<sp/>buffer<sp/>used<sp/>to<sp/>read<sp/>a<sp/>line<sp/>from<sp/>a<sp/>box<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="boxread_8h_1a6a24b858ccf4e9eb9e163b5bcc04b682" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="boxread_8h_1a6a24b858ccf4e9eb9e163b5bcc04b682" kindref="member">kBoxReadBufSize</ref><sp/>=<sp/>1024;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Open<sp/>the<sp/>boxfile<sp/>based<sp/>on<sp/>the<sp/>given<sp/>image<sp/>filename.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">FILE*<sp/><ref refid="boxread_8cpp_1af8f00c0aa1951fff65cff5802879a91d" kindref="member">OpenBoxFile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/>fname);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ReadNextBox<sp/>factors<sp/>out<sp/>the<sp/>code<sp/>to<sp/>interpret<sp/>a<sp/>line<sp/>of<sp/>a<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>file<sp/>so<sp/>that<sp/>applybox<sp/>and<sp/>unicharset_extractor<sp/>interpret<sp/>the<sp/>same<sp/>way.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>returns<sp/>the<sp/>next<sp/>valid<sp/>box<sp/>file<sp/>utf8<sp/>string<sp/>and<sp/>coords</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>returns<sp/>true,<sp/>or<sp/>false<sp/>on<sp/>eof<sp/>(and<sp/>closes<sp/>the<sp/>file).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>ignores<sp/>the<sp/>utf8<sp/>file<sp/>signature<sp/>ByteOrderMark<sp/>(U+FEFF=EF<sp/>BB<sp/>BF),<sp/>checks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>valid<sp/>utf-8<sp/>and<sp/>allows<sp/>space<sp/>or<sp/>tab<sp/>between<sp/>fields.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>utf8_str<sp/>is<sp/>set<sp/>with<sp/>the<sp/>unichar<sp/>string,<sp/>and<sp/>bounding<sp/>box<sp/>with<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>page<sp/>numbers<sp/>in<sp/>the<sp/>file,<sp/>it<sp/>reads<sp/>them<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="boxread_8cpp_1a8236e051549f8174e263196602edadc5" kindref="member">ReadNextBox</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*line_number,<sp/>FILE*<sp/>box_file,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>utf8_str,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bounding_box);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>ReadNextBox<sp/>above,<sp/>but<sp/>get<sp/>a<sp/>specific<sp/>page<sp/>number.<sp/>(0-based)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>-1<sp/>to<sp/>read<sp/>any<sp/>page<sp/>number.<sp/>Files<sp/>without<sp/>page<sp/>number<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>read<sp/>as<sp/>if<sp/>they<sp/>are<sp/>page<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="boxread_8cpp_1a8236e051549f8174e263196602edadc5" kindref="member">ReadNextBox</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target_page,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*line_number,<sp/>FILE*<sp/>box_file,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>utf8_str,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bounding_box);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parses<sp/>the<sp/>given<sp/>box<sp/>file<sp/>string<sp/>into<sp/>a<sp/>page_number,<sp/>utf8_str,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bounding_box.<sp/>Returns<sp/>true<sp/>on<sp/>a<sp/>successful<sp/>parse.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="boxread_8cpp_1acd464bb54397318c2f6fb8db9e644fd0" kindref="member">ParseBoxFileStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>boxfile_str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>page_number,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>utf8_str,<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>bounding_box);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>box<sp/>file<sp/>string<sp/>from<sp/>a<sp/>unichar<sp/>string,<sp/>TBOX<sp/>and<sp/>page<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="boxread_8cpp_1a12d56f93e661ff006a382fb8d7314898" kindref="member">MakeBoxFileStr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>unichar_str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>page_num,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>box_str);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>TESSERACT_CCUTIL_BOXREAD_H__</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/boxread.h"/>
  </compounddef>
</doxygen>
