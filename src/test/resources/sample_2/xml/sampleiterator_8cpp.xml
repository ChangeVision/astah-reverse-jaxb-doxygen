<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="sampleiterator_8cpp" kind="file">
    <compoundname>sampleiterator.cpp</compoundname>
    <includes refid="sampleiterator_8h" local="yes">sampleiterator.h</includes>
    <includes refid="indexmapbidi_8h" local="yes">indexmapbidi.h</includes>
    <includes refid="shapetable_8h" local="yes">shapetable.h</includes>
    <includes refid="trainingsample_8h" local="yes">trainingsample.h</includes>
    <includes refid="trainingsampleset_8h" local="yes">trainingsampleset.h</includes>
    <incdepgraph>
      <node id="27484">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="27485" relation="include">
        </childnode>
        <childnode refid="27496" relation="include">
        </childnode>
        <childnode refid="27473" relation="include">
        </childnode>
      </node>
      <node id="27456">
        <label>classify/sampleiterator.cpp</label>
        <link refid="sampleiterator.cpp"/>
        <childnode refid="27457" relation="include">
        </childnode>
        <childnode refid="27458" relation="include">
        </childnode>
        <childnode refid="27470" relation="include">
        </childnode>
        <childnode refid="27511" relation="include">
        </childnode>
        <childnode refid="27533" relation="include">
        </childnode>
      </node>
      <node id="27518">
        <label>assert.h</label>
      </node>
      <node id="27457">
        <label>sampleiterator.h</label>
        <link refid="sampleiterator_8h"/>
      </node>
      <node id="27469">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="27496">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="27461">
        <label>stdlib.h</label>
      </node>
      <node id="27464">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="27465" relation="include">
        </childnode>
      </node>
      <node id="27508">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="27463" relation="include">
        </childnode>
      </node>
      <node id="27523">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="27466" relation="include">
        </childnode>
      </node>
      <node id="27485">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="27486" relation="include">
        </childnode>
        <childnode refid="27466" relation="include">
        </childnode>
        <childnode refid="27473" relation="include">
        </childnode>
        <childnode refid="27493" relation="include">
        </childnode>
        <childnode refid="27472" relation="include">
        </childnode>
        <childnode refid="27491" relation="include">
        </childnode>
        <childnode refid="27494" relation="include">
        </childnode>
        <childnode refid="27495" relation="include">
        </childnode>
      </node>
      <node id="27505">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
      </node>
      <node id="27488">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="27461" relation="include">
        </childnode>
        <childnode refid="27468" relation="include">
        </childnode>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27474" relation="include">
        </childnode>
        <childnode refid="27466" relation="include">
        </childnode>
        <childnode refid="27489" relation="include">
        </childnode>
      </node>
      <node id="27501">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27463" relation="include">
        </childnode>
        <childnode refid="27488" relation="include">
        </childnode>
        <childnode refid="27490" relation="include">
        </childnode>
      </node>
      <node id="27534">
        <label>bitvector.h</label>
        <link refid="bitvector_8h"/>
        <childnode refid="27518" relation="include">
        </childnode>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27463" relation="include">
        </childnode>
      </node>
      <node id="27499">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="27463" relation="include">
        </childnode>
        <childnode refid="27500" relation="include">
        </childnode>
        <childnode refid="27472" relation="include">
        </childnode>
      </node>
      <node id="27531">
        <label>mf.h</label>
        <link refid="mf_8h"/>
        <childnode refid="27513" relation="include">
        </childnode>
        <childnode refid="27500" relation="include">
        </childnode>
      </node>
      <node id="27524">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="27525" relation="include">
        </childnode>
        <childnode refid="27502" relation="include">
        </childnode>
      </node>
      <node id="27517">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="27518" relation="include">
        </childnode>
        <childnode refid="27501" relation="include">
        </childnode>
        <childnode refid="27460" relation="include">
        </childnode>
        <childnode refid="27519" relation="include">
        </childnode>
        <childnode refid="27478" relation="include">
        </childnode>
        <childnode refid="27491" relation="include">
        </childnode>
        <childnode refid="27520" relation="include">
        </childnode>
      </node>
      <node id="27475">
        <label>stddef.h</label>
      </node>
      <node id="27479">
        <label>memory.h</label>
      </node>
      <node id="27510">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="27477" relation="include">
        </childnode>
      </node>
      <node id="27497">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="27463" relation="include">
        </childnode>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27498" relation="include">
        </childnode>
      </node>
      <node id="27466">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="27463" relation="include">
        </childnode>
      </node>
      <node id="27477">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="27463" relation="include">
        </childnode>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27478" relation="include">
        </childnode>
      </node>
      <node id="27465">
        <label>limits.h</label>
      </node>
      <node id="27470">
        <label>shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="27460" relation="include">
        </childnode>
        <childnode refid="27471" relation="include">
        </childnode>
      </node>
      <node id="27514">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="27500" relation="include">
        </childnode>
        <childnode refid="27476" relation="include">
        </childnode>
        <childnode refid="27515" relation="include">
        </childnode>
        <childnode refid="27498" relation="include">
        </childnode>
      </node>
      <node id="27504">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="27498" relation="include">
        </childnode>
      </node>
      <node id="27527">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="27503" relation="include">
        </childnode>
      </node>
      <node id="27522">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27463" relation="include">
        </childnode>
        <childnode refid="27488" relation="include">
        </childnode>
        <childnode refid="27490" relation="include">
        </childnode>
      </node>
      <node id="27494">
        <label>pthread.h</label>
      </node>
      <node id="27468">
        <label>string.h</label>
      </node>
      <node id="27492">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="27478" relation="include">
        </childnode>
      </node>
      <node id="27478">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="27479" relation="include">
        </childnode>
        <childnode refid="27468" relation="include">
        </childnode>
      </node>
      <node id="27482">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27468" relation="include">
        </childnode>
        <childnode refid="27461" relation="include">
        </childnode>
        <childnode refid="27463" relation="include">
        </childnode>
        <childnode refid="27483" relation="include">
        </childnode>
        <childnode refid="27484" relation="include">
        </childnode>
      </node>
      <node id="27502">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="27498" relation="include">
        </childnode>
        <childnode refid="27503" relation="include">
        </childnode>
        <childnode refid="27469" relation="include">
        </childnode>
        <childnode refid="27505" relation="include">
        </childnode>
        <childnode refid="27483" relation="include">
        </childnode>
      </node>
      <node id="27521">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="27463" relation="include">
        </childnode>
      </node>
      <node id="27462">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="27463" relation="include">
        </childnode>
      </node>
      <node id="27495">
        <label>semaphore.h</label>
      </node>
      <node id="27525">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="27526" relation="include">
        </childnode>
        <childnode refid="27527" relation="include">
        </childnode>
        <childnode refid="27521" relation="include">
        </childnode>
        <childnode refid="27502" relation="include">
        </childnode>
        <childnode refid="27523" relation="include">
        </childnode>
        <childnode refid="27505" relation="include">
        </childnode>
      </node>
      <node id="27520">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="27472" relation="include">
        </childnode>
        <childnode refid="27521" relation="include">
        </childnode>
        <childnode refid="27522" relation="include">
        </childnode>
        <childnode refid="27473" relation="include">
        </childnode>
        <childnode refid="27523" relation="include">
        </childnode>
        <childnode refid="27524" relation="include">
        </childnode>
        <childnode refid="27528" relation="include">
        </childnode>
      </node>
      <node id="27528">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27529" relation="include">
        </childnode>
        <childnode refid="27520" relation="include">
        </childnode>
      </node>
      <node id="27489">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="27466" relation="include">
        </childnode>
      </node>
      <node id="27480">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="27463" relation="include">
        </childnode>
        <childnode refid="27481" relation="include">
        </childnode>
        <childnode refid="27497" relation="include">
        </childnode>
        <childnode refid="27499" relation="include">
        </childnode>
        <childnode refid="27472" relation="include">
        </childnode>
      </node>
      <node id="27486">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="27487" relation="include">
        </childnode>
        <childnode refid="27483" relation="include">
        </childnode>
        <childnode refid="27478" relation="include">
        </childnode>
        <childnode refid="27491" relation="include">
        </childnode>
        <childnode refid="27460" relation="include">
        </childnode>
      </node>
      <node id="27509">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="27462" relation="include">
        </childnode>
        <childnode refid="27466" relation="include">
        </childnode>
        <childnode refid="27460" relation="include">
        </childnode>
      </node>
      <node id="27526">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="27503" relation="include">
        </childnode>
        <childnode refid="27527" relation="include">
        </childnode>
      </node>
      <node id="27498">
        <label>math.h</label>
      </node>
      <node id="27490">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="27466" relation="include">
        </childnode>
      </node>
      <node id="27533">
        <label>trainingsampleset.h</label>
        <link refid="trainingsampleset_8h"/>
        <childnode refid="27534" relation="include">
        </childnode>
        <childnode refid="27460" relation="include">
        </childnode>
        <childnode refid="27458" relation="include">
        </childnode>
        <childnode refid="27516" relation="include">
        </childnode>
        <childnode refid="27470" relation="include">
        </childnode>
        <childnode refid="27511" relation="include">
        </childnode>
      </node>
      <node id="27532">
        <label>picofeat.h</label>
        <link refid="picofeat_8h"/>
        <childnode refid="27513" relation="include">
        </childnode>
        <childnode refid="27472" relation="include">
        </childnode>
      </node>
      <node id="27530">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="27503" relation="include">
        </childnode>
      </node>
      <node id="27506">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="27498" relation="include">
        </childnode>
        <childnode refid="27500" relation="include">
        </childnode>
      </node>
      <node id="27481">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="27482" relation="include">
        </childnode>
        <childnode refid="27462" relation="include">
        </childnode>
      </node>
      <node id="27513">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="27500" relation="include">
        </childnode>
        <childnode refid="27459" relation="include">
        </childnode>
      </node>
      <node id="27472">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27460" relation="include">
        </childnode>
        <childnode refid="27473" relation="include">
        </childnode>
      </node>
      <node id="27460">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27461" relation="include">
        </childnode>
        <childnode refid="27462" relation="include">
        </childnode>
        <childnode refid="27466" relation="include">
        </childnode>
        <childnode refid="27467" relation="include">
        </childnode>
        <childnode refid="27469" relation="include">
        </childnode>
      </node>
      <node id="27474">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="27475" relation="include">
        </childnode>
        <childnode refid="27463" relation="include">
        </childnode>
      </node>
      <node id="27507">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="27508" relation="include">
        </childnode>
        <childnode refid="27482" relation="include">
        </childnode>
        <childnode refid="27478" relation="include">
        </childnode>
        <childnode refid="27509" relation="include">
        </childnode>
        <childnode refid="27472" relation="include">
        </childnode>
      </node>
      <node id="27511">
        <label>trainingsample.h</label>
        <link refid="trainingsample_8h"/>
        <childnode refid="27487" relation="include">
        </childnode>
        <childnode refid="27512" relation="include">
        </childnode>
        <childnode refid="27514" relation="include">
        </childnode>
        <childnode refid="27471" relation="include">
        </childnode>
        <childnode refid="27516" relation="include">
        </childnode>
        <childnode refid="27531" relation="include">
        </childnode>
        <childnode refid="27532" relation="include">
        </childnode>
        <childnode refid="27470" relation="include">
        </childnode>
        <childnode refid="27491" relation="include">
        </childnode>
      </node>
      <node id="27512">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="27513" relation="include">
        </childnode>
      </node>
      <node id="27487">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27463" relation="include">
        </childnode>
        <childnode refid="27488" relation="include">
        </childnode>
        <childnode refid="27490" relation="include">
        </childnode>
      </node>
      <node id="27491">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="27466" relation="include">
        </childnode>
        <childnode refid="27467" relation="include">
        </childnode>
        <childnode refid="27473" relation="include">
        </childnode>
        <childnode refid="27462" relation="include">
        </childnode>
        <childnode refid="27478" relation="include">
        </childnode>
        <childnode refid="27492" relation="include">
        </childnode>
      </node>
      <node id="27503">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27498" relation="include">
        </childnode>
        <childnode refid="27487" relation="include">
        </childnode>
        <childnode refid="27504" relation="include">
        </childnode>
      </node>
      <node id="27519">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="27483">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="27472" relation="include">
        </childnode>
      </node>
      <node id="27471">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="27472" relation="include">
        </childnode>
        <childnode refid="27476" relation="include">
        </childnode>
        <childnode refid="27510" relation="include">
        </childnode>
      </node>
      <node id="27463">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="27464" relation="include">
        </childnode>
      </node>
      <node id="27459">
        <label>stdio.h</label>
      </node>
      <node id="27458">
        <label>indexmapbidi.h</label>
        <link refid="indexmapbidi_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27460" relation="include">
        </childnode>
      </node>
      <node id="27516">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="27517" relation="include">
        </childnode>
        <childnode refid="27491" relation="include">
        </childnode>
      </node>
      <node id="27476">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="27460" relation="include">
        </childnode>
        <childnode refid="27477" relation="include">
        </childnode>
        <childnode refid="27480" relation="include">
        </childnode>
        <childnode refid="27507" relation="include">
        </childnode>
        <childnode refid="27505" relation="include">
        </childnode>
        <childnode refid="27491" relation="include">
        </childnode>
      </node>
      <node id="27493">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27463" relation="include">
        </childnode>
        <childnode refid="27483" relation="include">
        </childnode>
      </node>
      <node id="27515">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27463" relation="include">
        </childnode>
      </node>
      <node id="27473">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27468" relation="include">
        </childnode>
        <childnode refid="27464" relation="include">
        </childnode>
        <childnode refid="27474" relation="include">
        </childnode>
      </node>
      <node id="27500">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="27501" relation="include">
        </childnode>
        <childnode refid="27502" relation="include">
        </childnode>
        <childnode refid="27506" relation="include">
        </childnode>
      </node>
      <node id="27467">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="27459" relation="include">
        </childnode>
        <childnode refid="27468" relation="include">
        </childnode>
      </node>
      <node id="27529">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="27530" relation="include">
        </childnode>
        <childnode refid="27488" relation="include">
        </childnode>
        <childnode refid="27474" relation="include">
        </childnode>
        <childnode refid="27502" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2011<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>rays@google.com<sp/>(Ray<sp/>Smith)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sampleiterator_8h" kindref="compound">sampleiterator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="indexmapbidi_8h" kindref="compound">indexmapbidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shapetable_8h" kindref="compound">shapetable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trainingsample_8h" kindref="compound">trainingsample.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trainingsampleset_8h" kindref="compound">trainingsampleset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==================<sp/>SampleIterator<sp/>Implementation<sp/>=================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><ref refid="classtesseract_1_1_sample_iterator_1a9789d39f648bb3942e69fb42402b173c" kindref="member">SampleIterator::SampleIterator</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>:<sp/>charset_map_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_table_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>sample_set_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>randomize_(false),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_shape_table_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>num_shapes_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>Begin();</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">SampleIterator::~SampleIterator()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SampleIterator::Clear()<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>owned_shape_table_;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>owned_shape_table_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>class<sp/>comment<sp/>for<sp/>arguments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SampleIterator::Init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IndexMapBiDi*<sp/>charset_map,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ShapeTable*<sp/>shape_table,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>randomize,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TrainingSampleSet*<sp/>sample_set)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>charset_map_<sp/>=<sp/>charset_map;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>shape_table_<sp/>=<sp/>shape_table;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>sample_set_<sp/>=<sp/>sample_set;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>randomize_<sp/>=<sp/>randomize;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>charset_map_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>caller<sp/>wishes<sp/>to<sp/>iterate<sp/>by<sp/>class.<sp/>The<sp/>easiest<sp/>way<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>to<sp/>create<sp/>a<sp/>dummy<sp/>shape_table_<sp/>that<sp/>we<sp/>will<sp/>own.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_fonts<sp/>=<sp/>sample_set_-&gt;NumFonts();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>owned_shape_table_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ShapeTable(sample_set_-&gt;unicharset());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>charsetsize<sp/>=<sp/>sample_set_-&gt;unicharset().size();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>charsetsize;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>always<sp/>add<sp/>a<sp/>shape<sp/>for<sp/>each<sp/>character<sp/>to<sp/>keep<sp/>the<sp/>index<sp/>in<sp/>sync</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>unichar_id.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shape_id<sp/>=<sp/>owned_shape_table_-&gt;AddShape(c,<sp/>0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>=<sp/>1;<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref><sp/>&lt;<sp/>num_fonts;<sp/>++<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample_set_-&gt;NumClassSamples(<ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>,<sp/>c,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>owned_shape_table_-&gt;AddToShape(shape_id,<sp/>c,<sp/><ref refid="imgscale_8cpp_1a469169df397b589e709dc744f1346831" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_table_<sp/>=<sp/>owned_shape_table_;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>num_shapes_<sp/>=<sp/>shape_table_-&gt;NumShapes();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>num_shapes_<sp/>=<sp/>randomize<sp/>?<sp/>sample_set_-&gt;num_samples()</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sample_set_-&gt;num_raw_samples();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>Begin();</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Iterator<sp/>functions<sp/>designed<sp/>for<sp/>use<sp/>with<sp/>a<sp/>simple<sp/>for<sp/>loop:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>(it.Begin();<sp/>!it.AtEnd();<sp/>it.Next())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>const<sp/>TrainingSample&amp;<sp/>sample<sp/>=<sp/>it.GetSample();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SampleIterator::Begin()<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>shape_index_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>shape_char_index_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>num_shape_chars_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>shape_font_index_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>num_shape_fonts_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>sample_index_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>num_samples_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>indexable<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>Next();</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>SampleIterator::AtEnd()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_index_<sp/>&gt;=<sp/>num_shapes_;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample&amp;<sp/>SampleIterator::GetSample()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnicharAndFonts*<sp/>shape_entry<sp/>=<sp/>GetShapeEntry();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_id<sp/>=<sp/>shape_entry-&gt;unichar_id;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>shape_entry-&gt;font_ids[shape_font_index_];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*sample_set_-&gt;GetSample(font_id,<sp/>char_id,<sp/>sample_index_);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*sample_set_-&gt;GetSample(shape_index_);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">TrainingSample*<sp/>SampleIterator::MutableSample()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnicharAndFonts*<sp/>shape_entry<sp/>=<sp/>GetShapeEntry();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_id<sp/>=<sp/>shape_entry-&gt;unichar_id;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>shape_entry-&gt;font_ids[shape_font_index_];</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sample_set_-&gt;MutableSample(font_id,<sp/>char_id,<sp/>sample_index_);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sample_set_-&gt;mutable_sample(shape_index_);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>total<sp/>index<sp/>(from<sp/>the<sp/>original<sp/>set<sp/>of<sp/>samples)<sp/>of<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SampleIterator::GlobalSampleIndex()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnicharAndFonts*<sp/>shape_entry<sp/>=<sp/>GetShapeEntry();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_id<sp/>=<sp/>shape_entry-&gt;unichar_id;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>shape_entry-&gt;font_ids[shape_font_index_];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sample_set_-&gt;GlobalSampleIndex(font_id,<sp/>char_id,<sp/>sample_index_);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_index_;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>index<sp/>of<sp/>the<sp/>current<sp/>sample<sp/>in<sp/>compact<sp/>charset<sp/>space,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>2-class<sp/>problem<sp/>between<sp/>x<sp/>and<sp/>y,<sp/>the<sp/>returned<sp/>indices<sp/>will<sp/>all<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>0<sp/>or<sp/>1,<sp/>and<sp/>have<sp/>nothing<sp/>to<sp/>do<sp/>with<sp/>the<sp/>unichar_ids.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>charset_map_<sp/>is<sp/>NULL,<sp/>then<sp/>this<sp/>is<sp/>equal<sp/>to<sp/>GetSparseClassID().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SampleIterator::GetCompactClassID()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>charset_map_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>charset_map_-&gt;SparseToCompact(shape_index_)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>GetSparseClassID();</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>index<sp/>of<sp/>the<sp/>current<sp/>sample<sp/>in<sp/>sparse<sp/>charset<sp/>space,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>a<sp/>2-class<sp/>problem<sp/>between<sp/>x<sp/>and<sp/>y,<sp/>the<sp/>returned<sp/>indices<sp/>will<sp/>all<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>x<sp/>or<sp/>y,<sp/>where<sp/>x<sp/>and<sp/>y<sp/>may<sp/>be<sp/>unichar_ids<sp/>(no<sp/>shape_table_)<sp/>or<sp/>shape_ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>a<sp/>shape_table_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SampleIterator::GetSparseClassID()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_table_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>shape_index_<sp/>:<sp/>GetSample().class_id();</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Moves<sp/>on<sp/>to<sp/>the<sp/>next<sp/>indexable<sp/>sample.<sp/>If<sp/>the<sp/>end<sp/>is<sp/>reached,<sp/>leaves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>state<sp/>such<sp/>that<sp/>AtEnd()<sp/>is<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SampleIterator::Next()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>sample<sp/>in<sp/>this<sp/>class/font<sp/>combination.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>++sample_index_;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample_index_<sp/>&lt;<sp/>num_samples_)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>font<sp/>in<sp/>this<sp/>class<sp/>in<sp/>this<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>sample_index_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++shape_font_index_;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_font_index_<sp/>&gt;=<sp/>num_shape_fonts_)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>unichar<sp/>in<sp/>this<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_font_index_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++shape_char_index_;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_char_index_<sp/>&gt;=<sp/>num_shape_chars_)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>next<sp/>shape<sp/>that<sp/>is<sp/>mapped<sp/>in<sp/>the<sp/>charset_map_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_char_index_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++shape_index_;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(shape_index_<sp/>&lt;<sp/>num_shapes_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charset_map_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charset_map_-&gt;SparseToCompact(shape_index_)<sp/>&lt;<sp/>0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_index_<sp/>&gt;=<sp/>num_shapes_)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_shape_chars_<sp/>=<sp/>shape_table_-&gt;GetShape(shape_index_).size();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnicharAndFonts*<sp/>shape_entry<sp/>=<sp/>GetShapeEntry();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_shape_fonts_<sp/>=<sp/>shape_entry-&gt;font_ids.size();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>char_id<sp/>=<sp/>shape_entry-&gt;unichar_id;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>font_id<sp/>=<sp/>shape_entry-&gt;font_ids[shape_font_index_];</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num_samples_<sp/>=<sp/>sample_set_-&gt;NumClassSamples(font_id,<sp/>char_id,<sp/>randomize_);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(num_samples_<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>just<sp/>iterating<sp/>over<sp/>the<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>++shape_index_;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>size<sp/>of<sp/>the<sp/>compact<sp/>charset<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SampleIterator::CompactCharsetSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>charset_map_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>charset_map_-&gt;CompactSize()</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>SparseCharsetSize();</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>size<sp/>of<sp/>the<sp/>sparse<sp/>charset<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SampleIterator::SparseCharsetSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>charset_map_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>charset_map_-&gt;SparseSize()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(shape_table_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>?<sp/>shape_table_-&gt;NumShapes()</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>sample_set_-&gt;charsetsize());</highlight></codeline>
<codeline lineno="207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Apply<sp/>the<sp/>supplied<sp/>feature_space/feature_map<sp/>transform<sp/>to<sp/>all<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>accessed<sp/>by<sp/>this<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SampleIterator::MapSampleFeatures(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IntFeatureMap&amp;<sp/>feature_map)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Begin();<sp/>!AtEnd();<sp/>Next())<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>TrainingSample*<sp/><ref refid="structsample" kindref="compound">sample</ref><sp/>=<sp/>MutableSample();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;MapFeatures(feature_map);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>weights<sp/>of<sp/>all<sp/>the<sp/>samples<sp/>to<sp/>be<sp/>uniform<sp/>in<sp/>the<sp/>given<sp/>charset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>in<sp/>the<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SampleIterator::UniformSamples()<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_good_samples<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Begin();<sp/>!AtEnd();<sp/>Next())<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>TrainingSample*<sp/><ref refid="structsample" kindref="compound">sample</ref><sp/>=<sp/>MutableSample();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>sample-&gt;set_weight(1.0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>++num_good_samples;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>NormalizeSamples();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>num_good_samples;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Normalize<sp/>the<sp/>weights<sp/>of<sp/>all<sp/>the<sp/>samples<sp/>in<sp/>the<sp/>charset_map<sp/>so<sp/>they<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>1.<sp/>Returns<sp/>the<sp/>minimum<sp/>assigned<sp/>sample<sp/>weight.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>SampleIterator::NormalizeSamples()<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>total_weight<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Begin();<sp/>!AtEnd();<sp/>Next())<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TrainingSample&amp;<sp/><ref refid="structsample" kindref="compound">sample</ref><sp/>=<sp/>GetSample();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>total_weight<sp/>+=<sp/>sample.weight();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>++sample_count;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_assigned_sample_weight<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(total_weight<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Begin();<sp/>!AtEnd();<sp/>Next())<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>TrainingSample*<sp/>sample<sp/>=<sp/>MutableSample();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight<sp/>=<sp/>sample-&gt;weight()<sp/>/<sp/>total_weight;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(weight<sp/>&lt;<sp/>min_assigned_sample_weight)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_assigned_sample_weight<sp/>=<sp/>weight;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sample-&gt;set_weight(weight);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min_assigned_sample_weight;</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>returns<sp/>the<sp/>current<sp/>UnicharAndFont<sp/>shape_entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UnicharAndFonts*<sp/>SampleIterator::GetShapeEntry()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Shape&amp;<sp/>shape<sp/>=<sp/>shape_table_-&gt;GetShape(shape_index_);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;shape[shape_char_index_];</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/classify/sampleiterator.cpp"/>
  </compounddef>
</doxygen>
