<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classtesseract_1_1_wordrec" kind="class" prot="public">
    <compoundname>tesseract::Wordrec</compoundname>
    <basecompoundref refid="classtesseract_1_1_classify" prot="public" virt="non-virtual">tesseract::Classify</basecompoundref>
    <derivedcompoundref refid="classtesseract_1_1_tesseract" prot="public" virt="non-virtual">tesseract::Tesseract</derivedcompoundref>
    <includes refid="wordrec_8h" local="no">wordrec.h</includes>
      <sectiondef kind="user-defined">
      <header>best_first_search</header>
      <description><para>Find the best segmentation by doing a best first search of the solution space. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a17730ff30d62f74a4a14904664bd8656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
        <definition>BLOB_CHOICE_LIST_VECTOR * tesseract::Wordrec::evaluate_chunks</definition>
        <argsstring>(CHUNKS_RECORD *chunks_record, SEARCH_STATE search_state, BlamerBundle *blamer_bundle)</argsstring>
        <name>evaluate_chunks</name>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="states_8h_1afeb312869cc56f5a20c6f3dcb65644cc" kindref="member">SEARCH_STATE</ref></type>
          <declname>search_state</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>evaluate_chunks</para><para>A particular word level segmentation has been chosen. Evaluation this to find the word list that corresponds to it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="211" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="203" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ad717bb181d1b89496be0b042347d9753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::best_first_search</definition>
        <argsstring>(CHUNKS_RECORD *chunks_record, BLOB_CHOICE_LIST_VECTOR *best_char_choices, WERD_RES *word, STATE *state, DANGERR *fixpt, STATE *best_state)</argsstring>
        <name>best_first_search</name>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>best_char_choices</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1ab342921d3994b07a86ad1c5e4e8dd7c5" kindref="member">DANGERR</ref> *</type>
          <declname>fixpt</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>best_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="227" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="88" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a138fe5d0ffacb19535094f221a9e6511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::delete_search</definition>
        <argsstring>(SEARCH_RECORD *the_search)</argsstring>
        <name>delete_search</name>
        <param>
          <type><ref refid="struct_s_e_a_r_c_h___r_e_c_o_r_d" kindref="compound">SEARCH_RECORD</ref> *</type>
          <declname>the_search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete_search</para><para>Terminate the current search and free all the memory involved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="233" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="179" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>evaluate_state</header>
      <description><para>Evaluate the segmentation that is represented by this state in the best first search. Add this state to the &quot;states_seen&quot; list. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ad9eb2175e0e99588f283809bea8cdf2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 tesseract::Wordrec::evaluate_state</definition>
        <argsstring>(CHUNKS_RECORD *chunks_record, SEARCH_RECORD *the_search, DANGERR *fixpt, BlamerBundle *blamer_bundle)</argsstring>
        <name>evaluate_state</name>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="struct_s_e_a_r_c_h___r_e_c_o_r_d" kindref="compound">SEARCH_RECORD</ref> *</type>
          <declname>the_search</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1ab342921d3994b07a86ad1c5e4e8dd7c5" kindref="member">DANGERR</ref> *</type>
          <declname>fixpt</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="217" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="256" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a540decbb88b2e701402b80fd7395d03e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
        <definition>BLOB_CHOICE_LIST_VECTOR * tesseract::Wordrec::rebuild_current_state</definition>
        <argsstring>(WERD_RES *word, STATE *state, BLOB_CHOICE_LIST_VECTOR *char_choices, MATRIX *ratings)</argsstring>
        <name>rebuild_current_state</name>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>char_choices</declname>
          <defname>old_choices</defname>
        </param>
        <param>
          <type><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> *</type>
          <declname>ratings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rebuild_current_state</para><para>Transfers the given state to the word&apos;s output fields: rebuild_word, best_state, box_word, and returns the corresponding blob choices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="241" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="332" bodyend="490"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>expand_node</header>
      <description><para>Create the states that are attached to this one. Check to see that each one has not already been visited. If not add it to the priority queue. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a03931abc6310dd587fdaff3ccf272887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::expand_node</definition>
        <argsstring>(FLOAT32 worst_priority, CHUNKS_RECORD *chunks_record, SEARCH_RECORD *the_search)</argsstring>
        <name>expand_node</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>worst_priority</declname>
        </param>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="struct_s_e_a_r_c_h___r_e_c_o_r_d" kindref="compound">SEARCH_RECORD</ref> *</type>
          <declname>the_search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="234" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="499" bodyend="561"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>new_search</header>
      <description><para>Create and initialize a new search record. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a6532056b5f7dcdff1a64898d1c3b6bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_s_e_a_r_c_h___r_e_c_o_r_d" kindref="compound">SEARCH_RECORD</ref> *</type>
        <definition>SEARCH_RECORD * tesseract::Wordrec::new_search</definition>
        <argsstring>(CHUNKS_RECORD *chunks_record, int num_joints, BLOB_CHOICE_LIST_VECTOR *best_char_choices, WERD_CHOICE *best_choice, WERD_CHOICE *raw_choice, STATE *state)</argsstring>
        <name>new_search</name>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_joints</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>best_char_choices</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>raw_choice</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="221" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="568" bodyend="599"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>pop_queue</header>
      <description><para>Get this state from the priority queue. It should be the state that has the greatest urgency to be evaluated. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a24a13455e56ef38b4270f672fa639d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
        <definition>STATE * tesseract::Wordrec::pop_queue</definition>
        <argsstring>(HEAP *queue)</argsstring>
        <name>pop_queue</name>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="264" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="607" bodyend="622"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>push_queue</header>
      <description><para>Add this state into the priority queue. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aeec11442b97898cd44ddfe568dd9ee0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::push_queue</definition>
        <argsstring>(HEAP *queue, STATE *state, FLOAT32 worst_priority, FLOAT32 priority, bool debug)</argsstring>
        <name>push_queue</name>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>queue</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>worst_priority</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>priority</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="265" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="629" bodyend="643"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>replace_char_widths</header>
      <description><para>Replace the value of the char_width field in the chunks_record with the updated width measurements from the last_segmentation. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a35746f8e970b19443f459c060a8775c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::replace_char_widths</definition>
        <argsstring>(CHUNKS_RECORD *chunks_record, SEARCH_STATE state)</argsstring>
        <name>replace_char_widths</name>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="states_8h_1afeb312869cc56f5a20c6f3dcb65644cc" kindref="member">SEARCH_STATE</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="237" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="651" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1afba032e7e9cea932a806e56424966237" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref> *</type>
        <definition>BLOB_CHOICE * tesseract::Wordrec::rebuild_fragments</definition>
        <argsstring>(const char *unichar, const char *expanded_fragment_lengths, int choice_index, BLOB_CHOICE_LIST_VECTOR *old_choices)</argsstring>
        <name>rebuild_fragments</name>
        <param>
          <type>const char *</type>
          <declname>unichar</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>expanded_fragment_lengths</declname>
        </param>
        <param>
          <type>int</type>
          <declname>choice_index</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>old_choices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="253" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="680" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aad7c820e5bb342d7ea7743269e160a20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BLOB_CHOICE_LIST *</type>
        <definition>BLOB_CHOICE_LIST * tesseract::Wordrec::join_blobs_and_classify</definition>
        <argsstring>(WERD_RES *word, int x, int y, int choice_index, MATRIX *ratings, BLOB_CHOICE_LIST_VECTOR *old_choices)</argsstring>
        <name>join_blobs_and_classify</name>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>choice_index</declname>
        </param>
        <param>
          <type><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> *</type>
          <declname>ratings</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>old_choices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="261" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/bestfirst.cpp" bodystart="730" bodyend="770"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>point_priority</header>
      <description><para>Assign a priority to and edge point that might be used as part of a split. The argument should be of type <ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref>. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1adfe6b5aa74fe948a11bf631af18e7494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
        <definition>PRIORITY tesseract::Wordrec::point_priority</definition>
        <argsstring>(EDGEPT *point)</argsstring>
        <name>point_priority</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="321" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="55" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>add_point_to_list</header>
      <description><para>Add an edge point to a POINT_GROUP containg a list of other points. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a6b73b33a1a883abc117c676b64816c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::add_point_to_list</definition>
        <argsstring>(POINT_GROUP point_list, EDGEPT *point)</argsstring>
        <name>add_point_to_list</name>
        <param>
          <type><ref refid="chop_8h_1a55d3249c77c934468c72f606ce08354f" kindref="member">POINT_GROUP</ref></type>
          <declname>point_list</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="322" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="65" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>angle_change</header>
      <description><para>Return the change in angle (degrees) of the line segments between points one and two, and two and three. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a6cad89fa254226bb11cc6eacfd7f0ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Wordrec::angle_change</definition>
        <argsstring>(EDGEPT *point1, EDGEPT *point2, EDGEPT *point3)</argsstring>
        <name>angle_change</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point2</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="323" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="87" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>is_little_chunk</header>
      <description><para>Return TRUE if one of the pieces resulting from this split would less than some number of edge points. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ada66e05fa0ae8dc79b9de78f5f6efadf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Wordrec::is_little_chunk</definition>
        <argsstring>(EDGEPT *point1, EDGEPT *point2)</argsstring>
        <name>is_little_chunk</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="324" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="123" bodyend="150"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>is_small_area</header>
      <description><para>Test the area defined by a split accross this outline. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a71c9cce736fd886763722cf34ddd0ab7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Wordrec::is_small_area</definition>
        <argsstring>(EDGEPT *point1, EDGEPT *point2)</argsstring>
        <name>is_small_area</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="325" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="158" bodyend="173"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>pick_close_point</header>
      <description><para>Choose the edge point that is closest to the critical point. This point may not be exactly vertical from the critical point. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a79aec1d9a1c9c001a24838117585091a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
        <definition>EDGEPT * tesseract::Wordrec::pick_close_point</definition>
        <argsstring>(EDGEPT *critical_point, EDGEPT *vertical_point, int *best_dist)</argsstring>
        <name>pick_close_point</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>critical_point</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>vertical_point</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>best_dist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="326" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="182" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>prioritize_points</header>
      <description><para>Find a list of edge points from the outer outline of this blob. For each of these points assign a priority. Sort these points using a heap structure so that they can be visited in order. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a52f6801a630c7418855f469233b3cf38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::prioritize_points</definition>
        <argsstring>(TESSLINE *outline, POINT_GROUP points)</argsstring>
        <name>prioritize_points</name>
        <param>
          <type><ref refid="struct_t_e_s_s_l_i_n_e" kindref="compound">TESSLINE</ref> *</type>
          <declname>outline</declname>
        </param>
        <param>
          <type><ref refid="chop_8h_1a55d3249c77c934468c72f606ce08354f" kindref="member">POINT_GROUP</ref></type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="329" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="220" bodyend="269"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>new_min_point</header>
      <description><para>Found a new minimum point try to decide whether to save it or not. Return the new value for the local minimum. If a point is saved then the local minimum is reset to NULL. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a597a95a38f3461c79c3f3970c4d69b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::new_min_point</definition>
        <argsstring>(EDGEPT *local_min, POINT_GROUP points)</argsstring>
        <name>new_min_point</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>local_min</declname>
        </param>
        <param>
          <type><ref refid="chop_8h_1a55d3249c77c934468c72f606ce08354f" kindref="member">POINT_GROUP</ref></type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="330" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="279" bodyend="293"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>new_max_point</header>
      <description><para>Found a new minimum point try to decide whether to save it or not. Return the new value for the local minimum. If a point is saved then the local minimum is reset to NULL. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a3d80d69436770f158bcea457afb6c81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::new_max_point</definition>
        <argsstring>(EDGEPT *local_max, POINT_GROUP points)</argsstring>
        <name>new_max_point</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>local_max</declname>
        </param>
        <param>
          <type><ref refid="chop_8h_1a55d3249c77c934468c72f606ce08354f" kindref="member">POINT_GROUP</ref></type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="331" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="303" bodyend="317"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>vertical_projection_point</header>
      <description><para>For one point on the outline, find the corresponding point on the other side of the outline that is a likely projection for a split point. This is done by iterating through the edge points until the X value of the point being looked at is greater than the X value of the split point. Ensure that the point being returned is not right next to the split point. Return the edge point in *best_point as a result, and any points that were newly created are also saved on the new_points list. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ac3557f7f8e9b02f6b2fea05e2320cd1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::vertical_projection_point</definition>
        <argsstring>(EDGEPT *split_point, EDGEPT *target_point, EDGEPT **best_point, EDGEPT_CLIST *new_points)</argsstring>
        <name>vertical_projection_point</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>split_point</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>target_point</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> **</type>
          <declname>best_point</declname>
        </param>
        <param>
          <type>EDGEPT_CLIST *</type>
          <declname>new_points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="332" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chop.cpp" bodystart="332" bodyend="369"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>improve_one_blob</header>
      <description><para>Start with the current word of blobs and its classification. Find the worst blobs and try to divide it up to improve the ratings. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1acdc368cd46083bdc4c321dd0a42533a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Wordrec::improve_one_blob</definition>
        <argsstring>(WERD_RES *word_res, BLOB_CHOICE_LIST_VECTOR *char_choices, inT32 *blob_number, SEAMS *seam_list, DANGERR *fixpt, bool split_next_to_fragment, BlamerBundle *blamer_bundle)</argsstring>
        <name>improve_one_blob</name>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word_res</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref> *</type>
          <declname>blob_number</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref> *</type>
          <declname>seam_list</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1ab342921d3994b07a86ad1c5e4e8dd7c5" kindref="member">DANGERR</ref> *</type>
          <declname>fixpt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>split_next_to_fragment</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="344" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="332" bodyend="394"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>modify_blob_choice</header>
      <description><para>Takes a blob and its chop index, converts that chop index to a unichar_id, and stores the chop index in place of the blob&apos;s original unichar_id. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a30984c34a31ca6ef5ee363fc5ebfeff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::modify_blob_choice</definition>
        <argsstring>(BLOB_CHOICE_LIST *answer, int chop_index)</argsstring>
        <name>modify_blob_choice</name>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>answer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chop_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="351" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="403" bodyend="431"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>chop_one_blob</header>
      <description><para>Start with the current one-blob word and its classification. Find the worst blobs and try to divide it up to improve the ratings. Used for testing chopper. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a3649b7ab00c4d5947904af99716c6b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Wordrec::chop_one_blob</definition>
        <argsstring>(TWERD *word, BLOB_CHOICE_LIST_VECTOR *char_choices, inT32 *blob_number, SEAMS *seam_list, int *right_chop_index)</argsstring>
        <name>chop_one_blob</name>
        <param>
          <type><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref> *</type>
          <declname>blob_number</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref> *</type>
          <declname>seam_list</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>right_chop_index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="353" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="441" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1adb4cc59f6e9cca86fbba44ad483ab0b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Wordrec::chop_one_blob2</definition>
        <argsstring>(const GenericVector&lt; TBOX &gt; &amp;boxes, WERD_RES *word_res, SEAMS *seam_list)</argsstring>
        <name>chop_one_blob2</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &gt; &amp;</type>
          <declname>boxes</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word_res</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref> *</type>
          <declname>seam_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="358" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="502" bodyend="528"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>chop_word_main</header>
      <description><para><ref refid="classtesseract_1_1_classify" kindref="compound">Classify</ref> the blobs in this word and permute the results. Find the worst blob in the word and chop it up. Continue this process until a good answer has been found or all the blobs have been chopped up enough. Return the word level ratings. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ae9a055f84d35a4f9752f6c838afa11b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
        <definition>BLOB_CHOICE_LIST_VECTOR * tesseract::Wordrec::chop_word_main</definition>
        <argsstring>(WERD_RES *word)</argsstring>
        <name>chop_word_main</name>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="360" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="583" bodyend="728"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>improve_by_chopping</header>
      <description><para>Start with the current word of blobs and its classification. Find the worst blobs and try to divide them up to improve the ratings. As long as ratings are produced by the new blob splitting. When all the splitting has been accomplished all the ratings memory is reclaimed. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ad1164fd07a17960ed06585f0c8aadcdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::improve_by_chopping</definition>
        <argsstring>(WERD_RES *word, BLOB_CHOICE_LIST_VECTOR *char_choices, STATE *best_state, BLOB_CHOICE_LIST_VECTOR *best_char_choices, DANGERR *fixpt, bool *updated_best_choice)</argsstring>
        <name>improve_by_chopping</name>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>best_state</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>best_char_choices</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1ab342921d3994b07a86ad1c5e4e8dd7c5" kindref="member">DANGERR</ref> *</type>
          <declname>fixpt</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>updated_best_choice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="361" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="741" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a3581245a7778654f6fd22c4b3721cf06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> *</type>
        <definition>MATRIX * tesseract::Wordrec::word_associator</definition>
        <argsstring>(bool only_create_ratings_matrtix, WERD_RES *word, STATE *state, BLOB_CHOICE_LIST_VECTOR *best_char_choices, DANGERR *fixpt, STATE *best_state)</argsstring>
        <name>word_associator</name>
        <param>
          <type>bool</type>
          <declname>only_create_ratings_matrtix</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>best_char_choices</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1ab342921d3994b07a86ad1c5e4e8dd7c5" kindref="member">DANGERR</ref> *</type>
          <declname>fixpt</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>best_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="367" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="984" bodyend="1040"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a8fd3e86b711ba9d54c7eb500eb99c1c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 tesseract::Wordrec::select_blob_to_split</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, float rating_ceiling, bool split_next_to_fragment)</argsstring>
        <name>select_blob_to_split</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rating_ceiling</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>split_next_to_fragment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="373" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="801" bodyend="889"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a457f1ea04bad00c6e40883869700defb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 tesseract::Wordrec::select_blob_to_split_from_fixpt</definition>
        <argsstring>(DANGERR *fixpt)</argsstring>
        <name>select_blob_to_split_from_fixpt</name>
        <param>
          <type><ref refid="stopper_8h_1ab342921d3994b07a86ad1c5e4e8dd7c5" kindref="member">DANGERR</ref> *</type>
          <declname>fixpt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="376" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="898" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a2ed3fab8407177af31d446a794617149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::set_chopper_blame</definition>
        <argsstring>(WERD_RES *word)</argsstring>
        <name>set_chopper_blame</name>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="377" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="917" bodyend="976"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>program_editup</header>
      <description><para>Initialize all the things in the program that need to be initialized. init_permute determines whether to initialize the permute functions and <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> models. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a318cffefddd77027079285472c9c54a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::program_editup</definition>
        <argsstring>(const char *textbase, bool init_classifier, bool init_permute)</argsstring>
        <name>program_editup</name>
        <param>
          <type>const char *</type>
          <declname>textbase</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init_classifier</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>init_permute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="189" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/tface.cpp" bodystart="50" bodyend="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>end_recog</header>
      <description><para>Cleanup and exit the recog program. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ae0e2f8d5761f19008b20943a6e8ba130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Wordrec::end_recog</definition>
        <argsstring>()</argsstring>
        <name>end_recog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="196" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/tface.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>program_editdown</header>
      <description><para>This function holds any nessessary post processing for the Wise Owl program. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a5b44d020ea7f9d19d2e8f71b4e83113c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::program_editdown</definition>
        <argsstring>(inT32 elasped_time)</argsstring>
        <name>program_editdown</name>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>elasped_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="193" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/tface.cpp" bodystart="80" bodyend="85"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>set_pass1</header>
      <description><para>Get ready to do some pass 1 stuff. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a15740f1d66aa061522c69b948e901e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::set_pass1</definition>
        <argsstring>()</argsstring>
        <name>set_pass1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="194" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/tface.cpp" bodystart="93" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>set_pass2</header>
      <description><para>Get ready to do some pass 2 stuff. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a883211e914cb31146b8dd9ace419c843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::set_pass2</definition>
        <argsstring>()</argsstring>
        <name>set_pass2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="195" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/tface.cpp" bodystart="105" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>cc_recog</header>
      <description><para>Recognize a word. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ad5643a29cad973e306bb84fb843397af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
        <definition>BLOB_CHOICE_LIST_VECTOR * tesseract::Wordrec::cc_recog</definition>
        <argsstring>(WERD_RES *word)</argsstring>
        <name>cc_recog</name>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="192" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/tface.cpp" bodystart="117" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>dict_word()</header>
      <description><para>Test the dictionaries, returning NO_PERM (0) if not found, or one of the PermuterType values if found, according to the dictionary. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a13f2efa710b3a68e30e8bc2f69bee578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Wordrec::dict_word</definition>
        <argsstring>(const WERD_CHOICE &amp;word)</argsstring>
        <name>dict_word</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="198" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/tface.cpp" bodystart="133" bodyend="135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>call_matcher</header>
      <description><para>Called from Tess with a blob in tess form. The blob may need rotating to the correct orientation for classification. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a2399813e1c656f6638ce7d09ac3a101b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BLOB_CHOICE_LIST *</type>
        <definition>BLOB_CHOICE_LIST * tesseract::Wordrec::call_matcher</definition>
        <argsstring>(const DENORM *denorm, TBLOB *blob)</argsstring>
        <name>call_matcher</name>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> *</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="197" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/tface.cpp" bodystart="143" bodyend="156"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>classify_blob</header>
      <description><para><ref refid="classtesseract_1_1_classify" kindref="compound">Classify</ref> the this blob if it is not already recorded in the match table. Attempt to recognize this blob as a character. The recognition rating for this blob will be stored as a part of the blob. This value will also be returned to the caller. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blob</parametername>
</parameternamelist>
<parameterdescription>
<para>Current blob </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to display in <ref refid="class_scroll_view" kindref="compound">ScrollView</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>The colour to use when displayed with <ref refid="class_scroll_view" kindref="compound">ScrollView</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a7127d481d5ea12e3253fb3719fd2170c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BLOB_CHOICE_LIST *</type>
        <definition>BLOB_CHOICE_LIST * tesseract::Wordrec::classify_blob</definition>
        <argsstring>(TBLOB *blob, const DENORM &amp;denorm, const char *string, C_COL color, BlamerBundle *blamer_bundle)</argsstring>
        <name>classify_blob</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> &amp;</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type><ref refid="callcpp_8h_1a17bc059e437838f094a5a25c2d5ab88f" kindref="member">C_COL</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="200" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordclass.cpp" bodystart="62" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ae15505acaad8195b1b96de4a393bfc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BLOB_CHOICE_LIST *</type>
        <definition>BLOB_CHOICE_LIST * tesseract::Wordrec::fake_classify_blob</definition>
        <argsstring>(UNICHAR_ID class_id, float rating, float certainty)</argsstring>
        <name>fake_classify_blob</name>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>class_id</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rating</declname>
        </param>
        <param>
          <type>float</type>
          <declname>certainty</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="205" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordclass.cpp" bodystart="136" bodyend="144"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>update_blob_classifications</header>
      <description><para>For each blob in the given word update match_table with the corresponding BLOB_CHOICES_LIST from choices. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a63db9b85fa1350dfccfd4d6e548290d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::update_blob_classifications</definition>
        <argsstring>(TWERD *word, const BLOB_CHOICE_LIST_VECTOR &amp;choices)</argsstring>
        <name>update_blob_classifications</name>
        <param>
          <type><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>choices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="207" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordclass.cpp" bodystart="152" bodyend="160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1a3d9fc3b086e0f174a2cd602ea8f421c6" prot="public" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_language_model" kindref="compound">LanguageModel</ref> *</type>
        <definition>LanguageModel* tesseract::Wordrec::language_model_</definition>
        <argsstring></argsstring>
        <name>language_model_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="495" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1a671c4b102b976c600adc3bf60ee44323" prot="public" static="no" mutable="no">
        <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
        <definition>PRIORITY tesseract::Wordrec::pass2_ok_split</definition>
        <argsstring></argsstring>
        <name>pass2_ok_split</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="496" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1ade3cecfe9b377045db0abe2d06762c1e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::Wordrec::pass2_seg_states</definition>
        <argsstring></argsstring>
        <name>pass2_seg_states</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="497" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1a488e4047c19dcd34c6ce55fa08731565" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::Wordrec::num_joints</definition>
        <argsstring></argsstring>
        <name>num_joints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="498" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1af285813a72895f9b09f4e0f3021e721c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::Wordrec::num_pushed</definition>
        <argsstring></argsstring>
        <name>num_pushed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="499" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1abc8f5ea0bc5278f6a3ba1f91b3e797e3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::Wordrec::num_popped</definition>
        <argsstring></argsstring>
        <name>num_popped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="500" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1a7518e041a8ddab1d1a2b7e609553b8e3" prot="public" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_blob_match_table" kindref="compound">BlobMatchTable</ref></type>
        <definition>BlobMatchTable tesseract::Wordrec::blob_match_table</definition>
        <argsstring></argsstring>
        <name>blob_match_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="501" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="501" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1af7a36436e7e7fd0691bc093814fc2b62" prot="public" static="no" mutable="no">
        <type><ref refid="associate_8h_1ab48ca2435a6b02cde81b7554ce0160e3" kindref="member">EVALUATION_ARRAY</ref></type>
        <definition>EVALUATION_ARRAY tesseract::Wordrec::last_segmentation</definition>
        <argsstring></argsstring>
        <name>last_segmentation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="502" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="502" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1a143608f482c6c0c4f312740e6a5f5fd9" prot="public" static="no" mutable="no">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE* tesseract::Wordrec::prev_word_best_choice_</definition>
        <argsstring></argsstring>
        <name>prev_word_best_choice_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="506" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="506" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1acd86faf2d9076330828b3738d39c6ecd" prot="public" static="no" mutable="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; int &gt;</type>
        <definition>GenericVector&lt;int&gt; tesseract::Wordrec::blame_reasons_</definition>
        <argsstring></argsstring>
        <name>blame_reasons_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="508" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_wordrec_1a7a4f5e2cb7957a5decbc91eb2d31f87c" prot="public" static="no" mutable="no">
        <type>void(Wordrec::*</type>
        <definition>void(Wordrec::* tesseract::Wordrec::fill_lattice_)(const MATRIX &amp;ratings, const LIST &amp;best_choices, const UNICHARSET &amp;unicharset, BlamerBundle *blamer_bundle)</definition>
        <argsstring>)(const MATRIX &amp;ratings, const LIST &amp;best_choices, const UNICHARSET &amp;unicharset, BlamerBundle *blamer_bundle)</argsstring>
        <name>fill_lattice_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="510" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aca61d1d30212bf01d01ca58a9363a3cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(merge_fragments_in_matrix, TRUE,&quot;Merge the fragments in the ratings matrix and delete them &quot;&quot;after merging&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>merge_fragments_in_matrix</type>
        </param>
        <param>
          <type><ref refid="cutil_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref></type>
        </param>
        <param>
          <type>&quot;Merge the fragments in the ratings matrix and delete them &quot;&quot;after merging&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1af553093c70aef780547ccaa0e5c8425e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(wordrec_no_block, FALSE,&quot;Don&apos;t output block information&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>wordrec_no_block</type>
        </param>
        <param>
          <type><ref refid="cutil_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></type>
        </param>
        <param>
          <type>&quot;Don&apos;t output block information&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1af90985dec561f01b8bcf663eac9a7e4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(wordrec_enable_assoc, TRUE,&quot;Associator Enable&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>wordrec_enable_assoc</type>
        </param>
        <param>
          <type><ref refid="cutil_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref></type>
        </param>
        <param>
          <type>&quot;Associator Enable&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a8cd0fde170ea554219c6a96d81dccb1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(force_word_assoc, FALSE,&quot;force associator to run regardless of what enable_assoc is.&quot;&quot;This is used for CJK where component grouping is necessary.&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>force_word_assoc</type>
        </param>
        <param>
          <type><ref refid="cutil_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></type>
        </param>
        <param>
          <type>&quot;force associator to run regardless of what enable_assoc is.&quot;&quot;This is used for CJK where component grouping is necessary.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ac0bb307c164db16cf4d2593b7659947e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(wordrec_num_seg_states, 30,&quot;Segmentation states&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>wordrec_num_seg_states</type>
        </param>
        <param>
          <type>30</type>
        </param>
        <param>
          <type>&quot;Segmentation states&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a9cf24f0f146f8060b3797d5f6daa001c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(wordrec_worst_state, 1,&quot;Worst segmentation state&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>wordrec_worst_state</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>&quot;Worst segmentation state&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a9301f18706cea5f1a7f149da613e9c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(fragments_guide_chopper, FALSE,&quot;Use information from fragments to guide chopping process&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>fragments_guide_chopper</type>
        </param>
        <param>
          <type><ref refid="cutil_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></type>
        </param>
        <param>
          <type>&quot;Use information from fragments to guide chopping process&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ae22029ad4f420f8b3db874dfead8b82b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(repair_unchopped_blobs, 1,&quot;Fix blobs that aren&apos;t chopped&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>repair_unchopped_blobs</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>&quot;Fix blobs that aren&apos;t chopped&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a185a24dac40597daad9f918dd3e2c16e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(tessedit_certainty_threshold,-2.25,&quot;Good blob limit&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>tessedit_certainty_threshold</type>
        </param>
        <param>
          <type>-2.</type>
          <declname>25</declname>
        </param>
        <param>
          <type>&quot;Good blob limit&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a25ddcb73694e2cb319f3aaa542353a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(chop_debug, 0,&quot;Chop debug&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>chop_debug</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Chop debug&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a42bf5f92e78808e874b77645b565be33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(chop_enable, 1,&quot;Chop enable&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>chop_enable</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>&quot;Chop enable&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ab6885d2d94f906a0fb4a1f1b9e905033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(chop_vertical_creep, 0,&quot;Vertical creep&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>chop_vertical_creep</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Vertical creep&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a61cdb82edd1294fa168b389a755f7891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(chop_split_length, 10000,&quot;Split Length&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>chop_split_length</type>
        </param>
        <param>
          <type>10000</type>
        </param>
        <param>
          <type>&quot;Split Length&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1adee4757623dd62f839099c5f0626b891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(chop_same_distance, 2,&quot;Same distance&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>chop_same_distance</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>&quot;Same distance&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a9adb05d392fd12b52439d23636720204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(chop_min_outline_points, 6,&quot;Min Number of Points on Outline&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>chop_min_outline_points</type>
        </param>
        <param>
          <type>6</type>
        </param>
        <param>
          <type>&quot;Min Number of Points on Outline&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a5216f1cc7eae6d0b2ff54e93f5525a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(chop_inside_angle,-50,&quot;Min Inside Angle Bend&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>chop_inside_angle</type>
        </param>
        <param>
          <type>-</type>
          <declname>50</declname>
        </param>
        <param>
          <type>&quot;Min Inside Angle Bend&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a76f16d724024a6902147011c68736b5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(chop_min_outline_area, 2000,&quot;Min Outline Area&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>chop_min_outline_area</type>
        </param>
        <param>
          <type>2000</type>
        </param>
        <param>
          <type>&quot;Min Outline Area&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a324eb604e7406795daf4c0358ce9e40c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(chop_split_dist_knob, 0.5,&quot;Split length adjustment&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>chop_split_dist_knob</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Split length adjustment&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a71e1a180c8b55a1232258b60e5cfceca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(chop_overlap_knob, 0.9,&quot;Split overlap adjustment&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>chop_overlap_knob</type>
        </param>
        <param>
          <type>0.</type>
          <declname>9</declname>
        </param>
        <param>
          <type>&quot;Split overlap adjustment&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1af25322f7aade3556b0d1fe8514bdd5ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(chop_center_knob, 0.15,&quot;Split center adjustment&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>chop_center_knob</type>
        </param>
        <param>
          <type>0.</type>
          <declname>15</declname>
        </param>
        <param>
          <type>&quot;Split center adjustment&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aed904284b9b99fa1c73990e5a2ea03b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(chop_sharpness_knob, 0.06,&quot;Split sharpness adjustment&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>chop_sharpness_knob</type>
        </param>
        <param>
          <type>0.</type>
          <declname>06</declname>
        </param>
        <param>
          <type>&quot;Split sharpness adjustment&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a132c86b9bfdb87ba57bda6d87cd395e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(chop_width_change_knob, 5.0,&quot;Width change adjustment&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>chop_width_change_knob</type>
        </param>
        <param>
          <type>5.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Width change adjustment&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aef36d84aaedbe7e4a7513e12517e11d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(chop_ok_split, 100.0,&quot;OK split limit&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>chop_ok_split</type>
        </param>
        <param>
          <type>100.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;OK split limit&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aa14391e0d690ee3a8dc736be8e6c32a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(chop_good_split, 50.0,&quot;Good split limit&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>chop_good_split</type>
        </param>
        <param>
          <type>50.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Good split limit&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a1515d62d7f1ff1642e78d89e9ee2fb23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(chop_x_y_weight, 3,&quot;X / Y  length weight&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>chop_x_y_weight</type>
        </param>
        <param>
          <type>3</type>
        </param>
        <param>
          <type>&quot;X / Y length weight&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1acb0338ed28d5b4f557dbfc0986d26fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(segment_adjust_debug, 0,&quot;Segmentation adjustment debug&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>segment_adjust_debug</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Segmentation adjustment debug&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a6545fe0ff123615a321322c1f305717a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(assume_fixed_pitch_char_segment, FALSE,&quot;include fixed-pitch heuristics in char segmentation&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>assume_fixed_pitch_char_segment</type>
        </param>
        <param>
          <type><ref refid="cutil_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></type>
        </param>
        <param>
          <type>&quot;include fixed-pitch heuristics in char segmentation&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1af063e7a6d5a55cc5e3e50e7e33cc3cd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(use_new_state_cost, FALSE,&quot;use new state cost heuristics for segmentation state evaluation&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>use_new_state_cost</type>
        </param>
        <param>
          <type><ref refid="cutil_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></type>
        </param>
        <param>
          <type>&quot;use new state cost heuristics for segmentation state evaluation&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a3d785b47191664670345ad1eaf72aace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(heuristic_segcost_rating_base, 1.25,&quot;base factor for adding segmentation cost into word rating.&quot;&quot;It&apos;s a multiplying factor, the larger the value above 1, &quot;&quot;the bigger the effect of segmentation cost.&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>heuristic_segcost_rating_base</type>
        </param>
        <param>
          <type>1.</type>
          <declname>25</declname>
        </param>
        <param>
          <type>&quot;base factor for adding segmentation cost into word rating.&quot;&quot;It&apos;s a multiplying</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>the larger the value above</type>
          <declname>1</declname>
        </param>
        <param>
          <type>&quot;&quot;the bigger the effect of segmentation cost.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a0dfcdd786d3335a89a5ca2f2f359a404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(heuristic_weight_rating, 1,&quot;weight associated with char rating in combined cost of state&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>heuristic_weight_rating</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>&quot;weight associated with char rating in combined cost of state&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a87de7f1e30e0d14ceac7b72b2bbaa672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(heuristic_weight_width, 0,&quot;weight associated with width evidence in combined cost of state&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>heuristic_weight_width</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;weight associated with width evidence in combined cost of state&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a4b479d2e35639961dc60160c06be16ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(heuristic_weight_seamcut, 0,&quot;weight associated with seam cut in combined cost of state&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>heuristic_weight_seamcut</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;weight associated with seam cut in combined cost of state&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1acf890dfc6eb5c02b175d5db03fe2c6d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(heuristic_max_char_wh_ratio, 2.0,&quot;max char width-to-height ratio allowed in segmentation&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>heuristic_max_char_wh_ratio</type>
        </param>
        <param>
          <type>2.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;max char width-to-height ratio allowed in segmentation&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a3de07d95cc00fe4452e596a2c7b93c7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(wordrec_debug_level, 0,&quot;Debug level for wordrec&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>wordrec_debug_level</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Debug level for wordrec&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a5756a66b09cfe3beb7bbfe06a5a7e4e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(wordrec_debug_blamer, false,&quot;Print blamer debug messages&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>wordrec_debug_blamer</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Print blamer debug messages&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aa32bda211c726c0448dffa461e7174ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(wordrec_run_blamer, false,&quot;Try to set the blame for errors&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>wordrec_run_blamer</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Try to set the blame for errors&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a488abd7f7863ed11e8824d50ae7998db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(enable_new_segsearch, false,&quot;Enable new segmentation search path.&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>enable_new_segsearch</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Enable new segmentation <ref refid="oldlist_8h_1a67eeada788d8089e16bb36133ee8def1" kindref="member">search</ref> path.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a914ac4865b08dda6e1ab205b424cf0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(segsearch_debug_level, 0,&quot;SegSearch debug level&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>segsearch_debug_level</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;SegSearch debug level&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1afa899a870d4b15f9f620b893d6421ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(segsearch_max_pain_points, 2000,&quot;Maximum number of pain points stored in the queue&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>segsearch_max_pain_points</type>
        </param>
        <param>
          <type>2000</type>
        </param>
        <param>
          <type>&quot;Maximum number of pain points stored in the queue&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ac91f7eded8f5977563014ef2152a7c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::INT_VAR_H</definition>
        <argsstring>(segsearch_max_futile_classifications, 10,&quot;Maximum number of pain point classifications per word.&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>segsearch_max_futile_classifications</type>
        </param>
        <param>
          <type>10</type>
        </param>
        <param>
          <type>&quot;Maximum number of pain point classifications per word.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ae7010ea1fb4be19b025d75ee71794299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(segsearch_max_char_wh_ratio, 2.0,&quot;Maximum character width-to-height ratio&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segsearch_max_char_wh_ratio</type>
        </param>
        <param>
          <type>2.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Maximum <ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref> width-to-height ratio&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a85976adb597f013c315d589dc0144297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::double_VAR_H</definition>
        <argsstring>(segsearch_max_fixed_pitch_char_wh_ratio, 2.0,&quot;Maximum character width-to-height ratio for&quot;&quot;fixed pitch fonts&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segsearch_max_fixed_pitch_char_wh_ratio</type>
        </param>
        <param>
          <type>2.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Maximum <ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref> width-to-height ratio for&quot;&quot;fixed pitch fonts&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a8459083319d6819b73c98a5fe30644eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::BOOL_VAR_H</definition>
        <argsstring>(save_alt_choices, false,&quot;Save alternative paths found during chopping &quot;&quot;and segmentation search&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>save_alt_choices</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Save alternative paths found during chopping &quot;&quot;and segmentation <ref refid="oldlist_8h_1a67eeada788d8089e16bb36133ee8def1" kindref="member">search</ref>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a05c88ec72e6bc64cc79471145906ab12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Wordrec::Wordrec</definition>
        <argsstring>()</argsstring>
        <name>Wordrec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="161" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.cpp" bodystart="26" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1acaace271520291eb5c8d5cd02fbe2ed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>tesseract::Wordrec::~Wordrec</definition>
        <argsstring>()</argsstring>
        <name>~Wordrec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="162" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.cpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a6e9f488de12a12cd99ae4c2c55c87bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::CopyCharChoices</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;from, BLOB_CHOICE_LIST_VECTOR *to)</argsstring>
        <name>CopyCharChoices</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="164" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.cpp" bodystart="148" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ac05db9a605bcb460b6b1abdaf03ee6c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Wordrec::ChoiceIsCorrect</definition>
        <argsstring>(const UNICHARSET &amp;uni_set, const WERD_CHOICE *choice, const GenericVector&lt; STRING &gt; &amp;truth_text)</argsstring>
        <name>ChoiceIsCorrect</name>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>uni_set</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>choice</declname>
        </param>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &gt; &amp;</type>
          <declname>truth_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="168" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.cpp" bodystart="159" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a3e07fc3051cf28bed0511983b8f8b69d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::SaveAltChoices</definition>
        <argsstring>(const LIST &amp;best_choices, WERD_RES *word)</argsstring>
        <name>SaveAltChoices</name>
        <param>
          <type>const <ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> &amp;</type>
          <declname>best_choices</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="174" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.cpp" bodystart="173" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a7b5bc2e6f3a8666f5bcb4a539c29c823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::FillLattice</definition>
        <argsstring>(const MATRIX &amp;ratings, const LIST &amp;best_choices, const UNICHARSET &amp;unicharset, BlamerBundle *blamer_bundle)</argsstring>
        <name>FillLattice</name>
        <param>
          <type>const <ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> &amp;</type>
          <declname>ratings</declname>
        </param>
        <param>
          <type>const <ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> &amp;</type>
          <declname>best_choices</declname>
        </param>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a57cb744b40e142b6cb03de0e8998dafc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::CallFillLattice</definition>
        <argsstring>(const MATRIX &amp;ratings, const LIST &amp;best_choices, const UNICHARSET &amp;unicharset, BlamerBundle *blamer_bundle)</argsstring>
        <name>CallFillLattice</name>
        <param>
          <type>const <ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> &amp;</type>
          <declname>ratings</declname>
        </param>
        <param>
          <type>const <ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> &amp;</type>
          <declname>best_choices</declname>
        </param>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="183" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a1a00e14baaad0a404bb90ac8fe4663f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::update_ratings</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;new_choices, const CHUNKS_RECORD *chunks_record, const SEARCH_STATE search_state)</argsstring>
        <name>update_ratings</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>new_choices</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type>const <ref refid="states_8h_1afeb312869cc56f5a20c6f3dcb65644cc" kindref="member">SEARCH_STATE</ref></type>
          <declname>search_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aea3997058b7c1683957d275d17bc20d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::SegSearch</definition>
        <argsstring>(CHUNKS_RECORD *chunks_record, WERD_CHOICE *best_choice, BLOB_CHOICE_LIST_VECTOR *best_char_choices, WERD_CHOICE *raw_choice, STATE *output_best_state, BlamerBundle *blamer_bundle)</argsstring>
        <name>SegSearch</name>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>best_char_choices</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>raw_choice</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>output_best_state</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="313" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/segsearch.cpp" bodystart="35" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a488dbf71180ee93aec63ad825be08444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
        <definition>SEAM * tesseract::Wordrec::attempt_blob_chop</definition>
        <argsstring>(TWERD *word, TBLOB *blob, inT32 blob_number, bool italic_blob, SEAMS seam_list)</argsstring>
        <name>attempt_blob_chop</name>
        <param>
          <type><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>blob_number</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>italic_blob</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seam_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="337" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="146" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ab39c4eff1c3255a37a38f5f32956e6c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
        <definition>SEAM * tesseract::Wordrec::chop_numbered_blob</definition>
        <argsstring>(TWERD *word, inT32 blob_number, bool italic_blob, SEAMS seam_list)</argsstring>
        <name>chop_numbered_blob</name>
        <param>
          <type><ref refid="struct_t_w_e_r_d" kindref="compound">TWERD</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>blob_number</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>italic_blob</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seam_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="339" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="219" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a60f3ee36bfbef64013dd7b199248cf0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
        <definition>SEAM * tesseract::Wordrec::chop_overlapping_blob</definition>
        <argsstring>(const GenericVector&lt; TBOX &gt; &amp;boxes, WERD_RES *word_res, inT32 *blob_number, bool italic_blob, SEAMS seam_list)</argsstring>
        <name>chop_overlapping_blob</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> &gt; &amp;</type>
          <declname>boxes</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___r_e_s" kindref="compound">WERD_RES</ref> *</type>
          <declname>word_res</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref> *</type>
          <declname>blob_number</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>italic_blob</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seam_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="341" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/chopper.cpp" bodystart="233" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a5b02ea635cd52437ade4200ed2734941" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::junk_worst_seam</definition>
        <argsstring>(SEAM_QUEUE seams, SEAM *new_seam, float new_priority)</argsstring>
        <name>junk_worst_seam</name>
        <param>
          <type><ref refid="findseam_8h_1a0d8a3b6851b93dea4e0b7e7713ccf100" kindref="member">SEAM_QUEUE</ref></type>
          <declname>seams</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>new_seam</declname>
        </param>
        <param>
          <type>float</type>
          <declname>new_priority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="380" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/findseam.cpp" bodystart="148" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1afa230ef31fc03aff58ebd4d2de2df68b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::choose_best_seam</definition>
        <argsstring>(SEAM_QUEUE seam_queue, SEAM_PILE *seam_pile, SPLIT *split, PRIORITY priority, SEAM **seam_result, TBLOB *blob)</argsstring>
        <name>choose_best_seam</name>
        <param>
          <type><ref refid="findseam_8h_1a0d8a3b6851b93dea4e0b7e7713ccf100" kindref="member">SEAM_QUEUE</ref></type>
          <declname>seam_queue</declname>
        </param>
        <param>
          <type><ref refid="findseam_8h_1aead75573de3ab18b80b22a97ca124d99" kindref="member">SEAM_PILE</ref> *</type>
          <declname>seam_pile</declname>
        </param>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
          <declname>priority</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> **</type>
          <declname>seam_result</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="381" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/findseam.cpp" bodystart="178" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a11c3678047ab91731c5628c49e0b9858" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::combine_seam</definition>
        <argsstring>(SEAM_QUEUE seam_queue, SEAM_PILE seam_pile, SEAM *seam)</argsstring>
        <name>combine_seam</name>
        <param>
          <type><ref refid="findseam_8h_1a0d8a3b6851b93dea4e0b7e7713ccf100" kindref="member">SEAM_QUEUE</ref></type>
          <declname>seam_queue</declname>
        </param>
        <param>
          <type><ref refid="findseam_8h_1aead75573de3ab18b80b22a97ca124d99" kindref="member">SEAM_PILE</ref></type>
          <declname>seam_pile</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>tessedit_fix_sideways_chops || </para>        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="387" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/findseam.cpp" bodystart="259" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ab304a891354f890ed124488273b57b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 tesseract::Wordrec::constrained_split</definition>
        <argsstring>(SPLIT *split, TBLOB *blob)</argsstring>
        <name>constrained_split</name>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="388" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/findseam.cpp" bodystart="343" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a15fb0ba7f97dd0ad49f30fb7861717c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::delete_seam_pile</definition>
        <argsstring>(SEAM_PILE seam_pile)</argsstring>
        <name>delete_seam_pile</name>
        <param>
          <type><ref refid="findseam_8h_1aead75573de3ab18b80b22a97ca124d99" kindref="member">SEAM_PILE</ref></type>
          <declname>seam_pile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="389" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/findseam.cpp" bodystart="365" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1adeb84d8b94a6c87354fc452461de3b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
        <definition>SEAM * tesseract::Wordrec::pick_good_seam</definition>
        <argsstring>(TBLOB *blob)</argsstring>
        <name>pick_good_seam</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="390" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/findseam.cpp" bodystart="380" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a239d08f59bdd41a53ab489ca138fa989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
        <definition>PRIORITY tesseract::Wordrec::seam_priority</definition>
        <argsstring>(SEAM *seam, inT16 xmin, inT16 xmax)</argsstring>
        <name>seam_priority</name>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> *</type>
          <declname>seam</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>xmin</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>xmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="391" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/findseam.cpp" bodystart="474" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a0a876c211a99a5a60107bb83461a1656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::try_point_pairs</definition>
        <argsstring>(EDGEPT *points[50], inT16 num_points, SEAM_QUEUE seam_queue, SEAM_PILE *seam_pile, SEAM **seam, TBLOB *blob)</argsstring>
        <name>try_point_pairs</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>points</declname>
          <array>[50]</array>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>num_points</declname>
        </param>
        <param>
          <type><ref refid="findseam_8h_1a0d8a3b6851b93dea4e0b7e7713ccf100" kindref="member">SEAM_QUEUE</ref></type>
          <declname>seam_queue</declname>
        </param>
        <param>
          <type><ref refid="findseam_8h_1aead75573de3ab18b80b22a97ca124d99" kindref="member">SEAM_PILE</ref> *</type>
          <declname>seam_pile</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> **</type>
          <declname>seam</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="392" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/findseam.cpp" bodystart="512" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a89206f4ad5d082a9528aa19b7bbdc78d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::try_vertical_splits</definition>
        <argsstring>(EDGEPT *points[50], inT16 num_points, EDGEPT_CLIST *new_points, SEAM_QUEUE seam_queue, SEAM_PILE *seam_pile, SEAM **seam, TBLOB *blob)</argsstring>
        <name>try_vertical_splits</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>points</declname>
          <array>[50]</array>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>num_points</declname>
        </param>
        <param>
          <type>EDGEPT_CLIST *</type>
          <declname>new_points</declname>
        </param>
        <param>
          <type><ref refid="findseam_8h_1a0d8a3b6851b93dea4e0b7e7713ccf100" kindref="member">SEAM_QUEUE</ref></type>
          <declname>seam_queue</declname>
        </param>
        <param>
          <type><ref refid="findseam_8h_1aead75573de3ab18b80b22a97ca124d99" kindref="member">SEAM_PILE</ref> *</type>
          <declname>seam_pile</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1a7f3de671d0bee84bd93f4814ca3b7e88" kindref="member">SEAM</ref> **</type>
          <declname>seam</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="396" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/findseam.cpp" bodystart="554" bodyend="586"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a409c4fc630ecbc283e3a6aa1b08debf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
        <definition>PRIORITY tesseract::Wordrec::full_split_priority</definition>
        <argsstring>(SPLIT *split, inT16 xmin, inT16 xmax)</argsstring>
        <name>full_split_priority</name>
        <param>
          <type><ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>xmin</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>xmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="403" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/gradechop.cpp" bodystart="74" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1abbeec661b51bf52c5dd3ccbb64567690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
        <definition>PRIORITY tesseract::Wordrec::grade_center_of_blob</definition>
        <argsstring>(register BOUNDS_RECT rect)</argsstring>
        <name>grade_center_of_blob</name>
        <param>
          <type>register <ref refid="gradechop_8h_1a45f650fd29e2e9bb1c3480d126a955e9" kindref="member">BOUNDS_RECT</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="404" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/gradechop.cpp" bodystart="95" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a483f88dc4b24f7055448259c42e1867d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
        <definition>PRIORITY tesseract::Wordrec::grade_overlap</definition>
        <argsstring>(register BOUNDS_RECT rect)</argsstring>
        <name>grade_overlap</name>
        <param>
          <type>register <ref refid="gradechop_8h_1a45f650fd29e2e9bb1c3480d126a955e9" kindref="member">BOUNDS_RECT</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="405" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/gradechop.cpp" bodystart="115" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a26ed8c156b2be0e7e38bd5437b71c10f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
        <definition>PRIORITY tesseract::Wordrec::grade_split_length</definition>
        <argsstring>(register SPLIT *split)</argsstring>
        <name>grade_split_length</name>
        <param>
          <type>register <ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="406" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/gradechop.cpp" bodystart="145" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ab3df13db044c39b2d9aa4e6bf105d309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
        <definition>PRIORITY tesseract::Wordrec::grade_sharpness</definition>
        <argsstring>(register SPLIT *split)</argsstring>
        <name>grade_sharpness</name>
        <param>
          <type>register <ref refid="split_8h_1a8caa4994d858ff69cd340ac6f89731cb" kindref="member">SPLIT</ref> *</type>
          <declname>split</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="407" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/gradechop.cpp" bodystart="168" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a03ae9b642499f15b4fe4348d9d0ee3c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="seam_8h_1a39b235b77c0838c8a1f197ffe83d5ce8" kindref="member">PRIORITY</ref></type>
        <definition>PRIORITY tesseract::Wordrec::grade_width_change</definition>
        <argsstring>(register BOUNDS_RECT rect)</argsstring>
        <name>grade_width_change</name>
        <param>
          <type>register <ref refid="gradechop_8h_1a45f650fd29e2e9bb1c3480d126a955e9" kindref="member">BOUNDS_RECT</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="408" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/gradechop.cpp" bodystart="191" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a764fd79db0c80638187f4751626bb12e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::set_outline_bounds</definition>
        <argsstring>(register EDGEPT *point1, register EDGEPT *point2, BOUNDS_RECT rect)</argsstring>
        <name>set_outline_bounds</name>
        <param>
          <type>register <ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point1</declname>
        </param>
        <param>
          <type>register <ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point2</declname>
        </param>
        <param>
          <type><ref refid="gradechop_8h_1a45f650fd29e2e9bb1c3480d126a955e9" kindref="member">BOUNDS_RECT</ref></type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="409" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/gradechop.cpp" bodystart="213" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a6ad6a99cdee8d3a3ceaec40afade8714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Wordrec::crosses_outline</definition>
        <argsstring>(EDGEPT *p0, EDGEPT *p1, EDGEPT *outline)</argsstring>
        <name>crosses_outline</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>p0</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="414" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/outlines.cpp" bodystart="48" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1af5466c6b57ff40780c0be86b1330f1cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Wordrec::is_crossed</definition>
        <argsstring>(TPOINT a0, TPOINT a1, TPOINT b0, TPOINT b1)</argsstring>
        <name>is_crossed</name>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref></type>
          <declname>a0</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref></type>
          <declname>a1</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref></type>
          <declname>b0</declname>
        </param>
        <param>
          <type><ref refid="struct_t_p_o_i_n_t" kindref="compound">TPOINT</ref></type>
          <declname>b1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="415" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/outlines.cpp" bodystart="70" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a67574237703ce6757f28d9cdcef7d301" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Wordrec::is_same_edgept</definition>
        <argsstring>(EDGEPT *p1, EDGEPT *p2)</argsstring>
        <name>is_same_edgept</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="416" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/outlines.cpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a746f8a2ed6b50a3669a2fe6dcd053eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Wordrec::near_point</definition>
        <argsstring>(EDGEPT *point, EDGEPT *line_pt_0, EDGEPT *line_pt_1, EDGEPT **near_pt)</argsstring>
        <name>near_point</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>line_pt_0</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>line_pt_1</declname>
        </param>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> **</type>
          <declname>near_pt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="417" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/outlines.cpp" bodystart="116" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ad88a55a41c46135e8173fd81cbeb1751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::reverse_outline</definition>
        <argsstring>(EDGEPT *outline)</argsstring>
        <name>reverse_outline</name>
        <param>
          <type><ref refid="struct_e_d_g_e_p_t" kindref="compound">EDGEPT</ref> *</type>
          <declname>outline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="419" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/outlines.cpp" bodystart="164" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ad59946532b08a90f940ecfa994b06653" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>BLOB_CHOICE_LIST *</type>
        <definition>BLOB_CHOICE_LIST * tesseract::Wordrec::classify_piece</definition>
        <argsstring>(TBLOB *pieces, const DENORM &amp;denorm, SEAMS seams, inT16 start, inT16 end, BlamerBundle *blamer_bundle)</argsstring>
        <name>classify_piece</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>pieces</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> &amp;</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seams</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="422" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="75" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a60e821ddb0f98741bb729c5163e1189c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::merge_fragments</definition>
        <argsstring>(MATRIX *ratings, inT16 num_blobs)</argsstring>
        <name>merge_fragments</name>
        <param>
          <type><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> *</type>
          <declname>ratings</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>num_blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="430" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="324" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a53e7fd43e3657ffc3bc76a18f4e52291" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::get_fragment_lists</definition>
        <argsstring>(inT16 current_frag, inT16 current_row, inT16 start, inT16 num_frag_parts, inT16 num_blobs, MATRIX *ratings, BLOB_CHOICE_LIST *choice_lists)</argsstring>
        <name>get_fragment_lists</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>current_frag</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>current_row</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>num_frag_parts</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>num_blobs</declname>
        </param>
        <param>
          <type><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> *</type>
          <declname>ratings</declname>
        </param>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>choice_lists</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="440" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="292" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1af657001729e7bc45e381614497adcc19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::merge_and_put_fragment_lists</definition>
        <argsstring>(inT16 row, inT16 column, inT16 num_frag_parts, BLOB_CHOICE_LIST *choice_lists, MATRIX *ratings)</argsstring>
        <name>merge_and_put_fragment_lists</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>num_frag_parts</declname>
        </param>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>choice_lists</declname>
        </param>
        <param>
          <type><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> *</type>
          <declname>ratings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="449" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="169" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a82e3d17abe8744c66fe3aa67fe2ea0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::fill_filtered_fragment_list</definition>
        <argsstring>(BLOB_CHOICE_LIST *choices, int fragment_pos, int num_frag_parts, BLOB_CHOICE_LIST *filtered_choices)</argsstring>
        <name>fill_filtered_fragment_list</name>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>choices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fragment_pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_frag_parts</declname>
        </param>
        <param>
          <type>BLOB_CHOICE_LIST *</type>
          <declname>filtered_choices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="460" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="136" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aab16c53ccf9c888874c2e7ae65b6ed04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>BLOB_CHOICE_LIST *</type>
        <definition>BLOB_CHOICE_LIST * tesseract::Wordrec::get_piece_rating</definition>
        <argsstring>(MATRIX *ratings, TBLOB *blobs, const DENORM &amp;denorm, SEAMS seams, inT16 start, inT16 end, BlamerBundle *blamer_bundle)</argsstring>
        <name>get_piece_rating</name>
        <param>
          <type><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> *</type>
          <declname>ratings</declname>
        </param>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blobs</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_e_n_o_r_m" kindref="compound">DENORM</ref> &amp;</type>
          <declname>denorm</declname>
        </param>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seams</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="464" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="362" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aa635d222f122122d4abad1b883d92fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref> *</type>
        <definition>TBOX * tesseract::Wordrec::record_blob_bounds</definition>
        <argsstring>(TBLOB *blobs)</argsstring>
        <name>record_blob_bounds</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="472" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="393" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a9f070b021f06de480fda80a61a772d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_m_a_t_r_i_x" kindref="compound">MATRIX</ref> *</type>
        <definition>MATRIX * tesseract::Wordrec::record_piece_ratings</definition>
        <argsstring>(TBLOB *blobs)</argsstring>
        <name>record_piece_ratings</name>
        <param>
          <type><ref refid="struct_t_b_l_o_b" kindref="compound">TBLOB</ref> *</type>
          <declname>blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="473" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/pieces.cpp" bodystart="414" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a20332a4dd1d38ef7c6bf04d8dd4a98b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_w_i_d_t_h___r_e_c_o_r_d" kindref="compound">WIDTH_RECORD</ref> *</type>
        <definition>WIDTH_RECORD * tesseract::Wordrec::state_char_widths</definition>
        <argsstring>(WIDTH_RECORD *chunk_widths, STATE *state, int num_joints)</argsstring>
        <name>state_char_widths</name>
        <param>
          <type><ref refid="struct_w_i_d_t_h___r_e_c_o_r_d" kindref="compound">WIDTH_RECORD</ref> *</type>
          <declname>chunk_widths</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_joints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="476" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/heuristic.cpp" bodystart="58" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ac0868afc87448dc583dad4d67dd8b1a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 tesseract::Wordrec::get_width_variance</definition>
        <argsstring>(WIDTH_RECORD *wrec, float norm_height)</argsstring>
        <name>get_width_variance</name>
        <param>
          <type><ref refid="struct_w_i_d_t_h___r_e_c_o_r_d" kindref="compound">WIDTH_RECORD</ref> *</type>
          <declname>wrec</declname>
        </param>
        <param>
          <type>float</type>
          <declname>norm_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="479" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/heuristic.cpp" bodystart="96" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ad77b8ca8f655ae0bfe16f352f3d01830" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 tesseract::Wordrec::get_gap_variance</definition>
        <argsstring>(WIDTH_RECORD *wrec, float norm_height)</argsstring>
        <name>get_gap_variance</name>
        <param>
          <type><ref refid="struct_w_i_d_t_h___r_e_c_o_r_d" kindref="compound">WIDTH_RECORD</ref> *</type>
          <declname>wrec</declname>
        </param>
        <param>
          <type>float</type>
          <declname>norm_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="480" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/heuristic.cpp" bodystart="111" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a5ad58d7dcf5cbe7852aefb3b35a9ce33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 tesseract::Wordrec::prioritize_state</definition>
        <argsstring>(CHUNKS_RECORD *chunks_record, SEARCH_RECORD *the_search)</argsstring>
        <name>prioritize_state</name>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="struct_s_e_a_r_c_h___r_e_c_o_r_d" kindref="compound">SEARCH_RECORD</ref> *</type>
          <declname>the_search</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="481" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/heuristic.cpp" bodystart="289" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a6e963a2c089d890de52254b85b2c0cac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 tesseract::Wordrec::width_priority</definition>
        <argsstring>(CHUNKS_RECORD *chunks_record, STATE *state, int num_joints)</argsstring>
        <name>width_priority</name>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_joints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="483" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/heuristic.cpp" bodystart="222" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1aa5fd4729ef162689b68d20f9bdeb0c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 tesseract::Wordrec::seamcut_priority</definition>
        <argsstring>(SEAMS seams, STATE *state, int num_joints)</argsstring>
        <name>seamcut_priority</name>
        <param>
          <type><ref refid="seam_8h_1adee8715ab68f92e7f3cfa8de202d5a30" kindref="member">SEAMS</ref></type>
          <declname>seams</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_joints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="486" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/heuristic.cpp" bodystart="142" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a1dd426293ba3d6d90f8740285190336f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 tesseract::Wordrec::rating_priority</definition>
        <argsstring>(CHUNKS_RECORD *chunks_record, STATE *state, int num_joints)</argsstring>
        <name>rating_priority</name>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_joints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="489" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/heuristic.cpp" bodystart="175" bodyend="208"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a904762fe91430c5094ccecb7e690e0e5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Wordrec::SegSearchDone</definition>
        <argsstring>(int num_futile_classifications)</argsstring>
        <name>SegSearchDone</name>
        <param>
          <type>int</type>
          <declname>num_futile_classifications</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="516" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="516" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a6bac0a6462577e2e1057057f03901a33" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::UpdateSegSearchNodes</definition>
        <argsstring>(int starting_col, SEG_SEARCH_PENDING_LIST *pending[], BestPathByColumn *best_path_by_column[], CHUNKS_RECORD *chunks_record, HEAP *pain_points, BestChoiceBundle *best_choice_bundle, BlamerBundle *blamer_bundle)</argsstring>
        <name>UpdateSegSearchNodes</name>
        <param>
          <type>int</type>
          <declname>starting_col</declname>
        </param>
        <param>
          <type>SEG_SEARCH_PENDING_LIST *</type>
          <declname>pending</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="structtesseract_1_1_best_path_by_column" kindref="compound">BestPathByColumn</ref> *</type>
          <declname>best_path_by_column</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>pain_points</declname>
        </param>
        <param>
          <type><ref refid="structtesseract_1_1_best_choice_bundle" kindref="compound">BestChoiceBundle</ref> *</type>
          <declname>best_choice_bundle</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="547" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/segsearch.cpp" bodystart="186" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1ab9f95be1d701222b62b7f8920f5cb9e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::ProcessSegSearchPainPoint</definition>
        <argsstring>(float pain_point_priority, const MATRIX_COORD &amp;pain_point, const WERD_CHOICE *best_choice, SEG_SEARCH_PENDING_LIST *pending[], CHUNKS_RECORD *chunks_record, HEAP *pain_points, BlamerBundle *blamer_bundle)</argsstring>
        <name>ProcessSegSearchPainPoint</name>
        <param>
          <type>float</type>
          <declname>pain_point_priority</declname>
        </param>
        <param>
          <type>const <ref refid="struct_m_a_t_r_i_x___c_o_o_r_d" kindref="compound">MATRIX_COORD</ref> &amp;</type>
          <declname>pain_point</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type>SEG_SEARCH_PENDING_LIST *</type>
          <declname>pending</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>pain_points</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="557" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/segsearch.cpp" bodystart="257" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1a8580282cf87b0e054ac1410cf4ffa0e2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::InitBlamerForSegSearch</definition>
        <argsstring>(const WERD_CHOICE *best_choice, CHUNKS_RECORD *chunks_record, HEAP *pain_points, BlamerBundle *blamer_bundle, STRING *blamer_debug)</argsstring>
        <name>InitBlamerForSegSearch</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type><ref refid="struct_c_h_u_n_k_s___r_e_c_o_r_d" kindref="compound">CHUNKS_RECORD</ref> *</type>
          <declname>chunks_record</declname>
        </param>
        <param>
          <type><ref refid="struct_h_e_a_p" kindref="compound">HEAP</ref> *</type>
          <declname>pain_points</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>blamer_debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="568" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/segsearch.cpp" bodystart="331" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_wordrec_1abbb02091c23e7be9370055704526102f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Wordrec::FinishBlamerForSegSearch</definition>
        <argsstring>(const WERD_CHOICE *best_choice, BlamerBundle *blamer_bundle, STRING *blamer_debug)</argsstring>
        <name>FinishBlamerForSegSearch</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type><ref refid="struct_blamer_bundle" kindref="compound">BlamerBundle</ref> *</type>
          <declname>blamer_bundle</declname>
        </param>
        <param>
          <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> *</type>
          <declname>blamer_debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="575" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/segsearch.cpp" bodystart="376" bodyend="421"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2512">
        <label>tesseract::Wordrec</label>
        <link refid="classtesseract_1_1_wordrec"/>
        <childnode refid="2513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2516">
        <label>tesseract::CCUtil</label>
        <link refid="classtesseract_1_1_c_c_util"/>
      </node>
      <node id="2514">
        <label>tesseract::CCStruct</label>
        <link refid="classtesseract_1_1_c_c_struct"/>
        <childnode refid="2515" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2515">
        <label>tesseract::CUtil</label>
        <link refid="classtesseract_1_1_c_util"/>
        <childnode refid="2516" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2513">
        <label>tesseract::Classify</label>
        <link refid="classtesseract_1_1_classify"/>
        <childnode refid="2514" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2517">
        <label>tesseract::Tesseract</label>
        <link refid="classtesseract_1_1_tesseract"/>
        <childnode refid="2512" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2518">
        <label>tesseract::Wordrec</label>
        <link refid="classtesseract_1_1_wordrec"/>
        <childnode refid="2519" relation="public-inheritance">
        </childnode>
        <childnode refid="2554" relation="usage">
          <edgelabel>prev_word_best_choice_</edgelabel>
        </childnode>
        <childnode refid="2555" relation="usage">
          <edgelabel>last_segmentation</edgelabel>
        </childnode>
        <childnode refid="2556" relation="usage">
          <edgelabel>blob_match_table</edgelabel>
        </childnode>
        <childnode refid="2557" relation="usage">
          <edgelabel>language_model_</edgelabel>
        </childnode>
        <childnode refid="2568" relation="usage">
          <edgelabel>blame_reasons_</edgelabel>
        </childnode>
      </node>
      <node id="2537">
        <label>list_rec</label>
        <link refid="structlist__rec"/>
        <childnode refid="2537" relation="usage">
          <edgelabel>node</edgelabel>
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="2536">
        <label>TEMP_CONFIG_STRUCT</label>
        <link refid="struct_t_e_m_p___c_o_n_f_i_g___s_t_r_u_c_t"/>
        <childnode refid="2537" relation="usage">
          <edgelabel>ContextsSeen</edgelabel>
        </childnode>
      </node>
      <node id="2525">
        <label>STRING</label>
        <link refid="class_s_t_r_i_n_g"/>
      </node>
      <node id="2566">
        <label>TessResultCallback2&lt; bool, bool *const &amp;, bool *const &amp; &gt;</label>
        <link refid="class_tess_result_callback2"/>
      </node>
      <node id="2543">
        <label>NORM_PROTOS</label>
        <link refid="struct_n_o_r_m___p_r_o_t_o_s"/>
        <childnode refid="2537" relation="usage">
          <edgelabel>Protos</edgelabel>
        </childnode>
        <childnode refid="2544" relation="usage">
          <edgelabel>ParamDesc</edgelabel>
        </childnode>
      </node>
      <node id="2535">
        <label>PERM_CONFIG_STRUCT</label>
        <link refid="struct_p_e_r_m___c_o_n_f_i_g___s_t_r_u_c_t"/>
      </node>
      <node id="2558">
        <label>tesseract::Dict</label>
        <link refid="classtesseract_1_1_dict"/>
      </node>
      <node id="2551">
        <label>FEATURE_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t"/>
        <childnode refid="2552" relation="usage">
          <edgelabel>Type</edgelabel>
        </childnode>
      </node>
      <node id="2546">
        <label>tesseract::ShapeTable</label>
        <link refid="classtesseract_1_1_shape_table"/>
      </node>
      <node id="2522">
        <label>tesseract::CCUtil</label>
        <link refid="classtesseract_1_1_c_c_util"/>
        <childnode refid="2523" relation="usage">
          <edgelabel>use_definite_ambigs_for_classifier</edgelabel>
          <edgelabel>use_ambigs_for_adaption</edgelabel>
        </childnode>
        <childnode refid="2525" relation="usage">
          <edgelabel>directory</edgelabel>
          <edgelabel>language_data_path_prefix</edgelabel>
          <edgelabel>imagebasename</edgelabel>
          <edgelabel>datadir</edgelabel>
          <edgelabel>imagefile</edgelabel>
          <edgelabel>lang</edgelabel>
        </childnode>
        <childnode refid="2526" relation="usage">
          <edgelabel>unicharset</edgelabel>
        </childnode>
        <childnode refid="2527" relation="usage">
          <edgelabel>tessdata_manager</edgelabel>
        </childnode>
        <childnode refid="2528" relation="usage">
          <edgelabel>m_data_sub_dir</edgelabel>
        </childnode>
        <childnode refid="2529" relation="usage">
          <edgelabel>unichar_ambigs</edgelabel>
        </childnode>
        <childnode refid="2530" relation="usage">
          <edgelabel>ambigs_debug_level</edgelabel>
        </childnode>
      </node>
      <node id="2552">
        <label>FEATURE_DESC_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t"/>
        <childnode refid="2544" relation="usage">
          <edgelabel>ParamDesc</edgelabel>
        </childnode>
      </node>
      <node id="2565">
        <label>GenericVector&lt; bool * &gt;</label>
        <link refid="class_generic_vector"/>
        <childnode refid="2566" relation="usage">
          <edgelabel>compare_cb_</edgelabel>
        </childnode>
        <childnode refid="2567" relation="usage">
          <edgelabel>clear_cb_</edgelabel>
        </childnode>
      </node>
      <node id="2555">
        <label>EVALUATION_RECORD</label>
        <link refid="struct_e_v_a_l_u_a_t_i_o_n___r_e_c_o_r_d"/>
      </node>
      <node id="2527">
        <label>tesseract::TessdataManager</label>
        <link refid="classtesseract_1_1_tessdata_manager"/>
      </node>
      <node id="2554">
        <label>WERD_CHOICE</label>
        <link refid="class_w_e_r_d___c_h_o_i_c_e"/>
      </node>
      <node id="2540">
        <label>PROTO_SET_STRUCT</label>
        <link refid="struct_p_r_o_t_o___s_e_t___s_t_r_u_c_t"/>
        <childnode refid="2541" relation="usage">
          <edgelabel>Protos</edgelabel>
        </childnode>
      </node>
      <node id="2550">
        <label>FEATURE_SET_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t"/>
        <childnode refid="2551" relation="usage">
          <edgelabel>Features</edgelabel>
        </childnode>
      </node>
      <node id="2520">
        <label>tesseract::CCStruct</label>
        <link refid="classtesseract_1_1_c_c_struct"/>
        <childnode refid="2521" relation="public-inheritance">
        </childnode>
        <childnode refid="2531" relation="usage">
          <edgelabel>image_</edgelabel>
        </childnode>
      </node>
      <node id="2559">
        <label>tesseract::DawgInfoVector</label>
        <link refid="classtesseract_1_1_dawg_info_vector"/>
        <childnode refid="2560" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2567">
        <label>TessCallback1&lt; bool * &gt;</label>
        <link refid="class_tess_callback1"/>
      </node>
      <node id="2569">
        <label>TessResultCallback2&lt; bool, intconst &amp;, intconst &amp; &gt;</label>
        <link refid="class_tess_result_callback2"/>
      </node>
      <node id="2561">
        <label>tesseract::DawgInfo</label>
        <link refid="structtesseract_1_1_dawg_info"/>
      </node>
      <node id="2549">
        <label>FEATURE_EXT_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___e_x_t___s_t_r_u_c_t"/>
        <childnode refid="2550" relation="usage">
          <edgelabel>Extractor</edgelabel>
        </childnode>
      </node>
      <node id="2564">
        <label>tesseract::DawgArgs</label>
        <link refid="structtesseract_1_1_dawg_args"/>
        <childnode refid="2559" relation="usage">
          <edgelabel>updated_active_dawgs</edgelabel>
          <edgelabel>constraints</edgelabel>
          <edgelabel>updated_constraints</edgelabel>
          <edgelabel>active_dawgs</edgelabel>
        </childnode>
      </node>
      <node id="2570">
        <label>TessCallback1&lt; int &gt;</label>
        <link refid="class_tess_callback1"/>
      </node>
      <node id="2548">
        <label>FEATURE_DEFS_STRUCT</label>
        <link refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t"/>
        <childnode refid="2549" relation="usage">
          <edgelabel>FeatureExtractors</edgelabel>
        </childnode>
        <childnode refid="2552" relation="usage">
          <edgelabel>FeatureDesc</edgelabel>
        </childnode>
      </node>
      <node id="2557">
        <label>tesseract::LanguageModel</label>
        <link refid="classtesseract_1_1_language_model"/>
        <childnode refid="2558" relation="usage">
          <edgelabel>dict_</edgelabel>
        </childnode>
        <childnode refid="2525" relation="usage">
          <edgelabel>prev_word_str_</edgelabel>
        </childnode>
        <childnode refid="2559" relation="usage">
          <edgelabel>fixed_length_beginning_active_dawgs_</edgelabel>
          <edgelabel>empty_dawg_info_vec_</edgelabel>
          <edgelabel>beginning_active_dawgs_</edgelabel>
          <edgelabel>beginning_constraints_</edgelabel>
        </childnode>
        <childnode refid="2564" relation="usage">
          <edgelabel>dawg_args_</edgelabel>
        </childnode>
        <childnode refid="2565" relation="usage">
          <edgelabel>updated_flags_</edgelabel>
        </childnode>
        <childnode refid="2547" relation="usage">
          <edgelabel>fontinfo_table_</edgelabel>
        </childnode>
      </node>
      <node id="2524">
        <label>tesseract::Param</label>
        <link refid="classtesseract_1_1_param"/>
      </node>
      <node id="2521">
        <label>tesseract::CUtil</label>
        <link refid="classtesseract_1_1_c_util"/>
        <childnode refid="2522" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2519">
        <label>tesseract::Classify</label>
        <link refid="classtesseract_1_1_classify"/>
        <childnode refid="2520" relation="public-inheritance">
        </childnode>
        <childnode refid="2532" relation="usage">
          <edgelabel>AdaptedTemplates</edgelabel>
        </childnode>
        <childnode refid="2538" relation="usage">
          <edgelabel>PreTrainedTemplates</edgelabel>
        </childnode>
        <childnode refid="2543" relation="usage">
          <edgelabel>NormProtos</edgelabel>
        </childnode>
        <childnode refid="2545" relation="usage">
          <edgelabel>fontset_table_</edgelabel>
        </childnode>
        <childnode refid="2546" relation="usage">
          <edgelabel>shape_table_</edgelabel>
        </childnode>
        <childnode refid="2547" relation="usage">
          <edgelabel>fontinfo_table_</edgelabel>
        </childnode>
        <childnode refid="2548" relation="usage">
          <edgelabel>feature_defs_</edgelabel>
        </childnode>
        <childnode refid="2553" relation="usage">
          <edgelabel>im_</edgelabel>
        </childnode>
      </node>
      <node id="2544">
        <label>PARAM_DESC</label>
        <link refid="struct_p_a_r_a_m___d_e_s_c"/>
      </node>
      <node id="2563">
        <label>TessResultCallback2&lt; bool, DawgInfoconst &amp;, DawgInfoconst &amp; &gt;</label>
        <link refid="class_tess_result_callback2"/>
      </node>
      <node id="2541">
        <label>INT_PROTO_STRUCT</label>
        <link refid="struct_i_n_t___p_r_o_t_o___s_t_r_u_c_t"/>
      </node>
      <node id="2532">
        <label>ADAPT_TEMPLATES_STRUCT</label>
        <link refid="struct_a_d_a_p_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t"/>
        <childnode refid="2533" relation="usage">
          <edgelabel>Class</edgelabel>
        </childnode>
        <childnode refid="2538" relation="usage">
          <edgelabel>Templates</edgelabel>
        </childnode>
      </node>
      <node id="2560">
        <label>GenericVector&lt; DawgInfo &gt;</label>
        <link refid="class_generic_vector"/>
        <childnode refid="2561" relation="usage">
          <edgelabel>data_</edgelabel>
        </childnode>
        <childnode refid="2562" relation="usage">
          <edgelabel>clear_cb_</edgelabel>
        </childnode>
        <childnode refid="2563" relation="usage">
          <edgelabel>compare_cb_</edgelabel>
        </childnode>
      </node>
      <node id="2529">
        <label>tesseract::UnicharAmbigs</label>
        <link refid="classtesseract_1_1_unichar_ambigs"/>
      </node>
      <node id="2528">
        <label>tesseract::StringParam</label>
        <link refid="classtesseract_1_1_string_param"/>
        <childnode refid="2524" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2562">
        <label>TessCallback1&lt; DawgInfo &gt;</label>
        <link refid="class_tess_callback1"/>
      </node>
      <node id="2538">
        <label>INT_TEMPLATES_STRUCT</label>
        <link refid="struct_i_n_t___t_e_m_p_l_a_t_e_s___s_t_r_u_c_t"/>
        <childnode refid="2539" relation="usage">
          <edgelabel>Class</edgelabel>
        </childnode>
        <childnode refid="2542" relation="usage">
          <edgelabel>ClassPruners</edgelabel>
        </childnode>
      </node>
      <node id="2526">
        <label>UNICHARSET</label>
        <link refid="class_u_n_i_c_h_a_r_s_e_t"/>
      </node>
      <node id="2523">
        <label>tesseract::BoolParam</label>
        <link refid="classtesseract_1_1_bool_param"/>
        <childnode refid="2524" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2568">
        <label>GenericVector&lt; int &gt;</label>
        <link refid="class_generic_vector"/>
        <childnode refid="2569" relation="usage">
          <edgelabel>compare_cb_</edgelabel>
        </childnode>
        <childnode refid="2570" relation="usage">
          <edgelabel>clear_cb_</edgelabel>
        </childnode>
      </node>
      <node id="2530">
        <label>tesseract::IntParam</label>
        <link refid="classtesseract_1_1_int_param"/>
        <childnode refid="2524" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2533">
        <label>ADAPT_CLASS_STRUCT</label>
        <link refid="struct_a_d_a_p_t___c_l_a_s_s___s_t_r_u_c_t"/>
        <childnode refid="2534" relation="usage">
          <edgelabel>Config</edgelabel>
        </childnode>
        <childnode refid="2537" relation="usage">
          <edgelabel>TempProtos</edgelabel>
        </childnode>
      </node>
      <node id="2556">
        <label>tesseract::BlobMatchTable</label>
        <link refid="classtesseract_1_1_blob_match_table"/>
      </node>
      <node id="2534">
        <label>ADAPTED_CONFIG</label>
        <link refid="union_a_d_a_p_t_e_d___c_o_n_f_i_g"/>
        <childnode refid="2535" relation="usage">
          <edgelabel>Perm</edgelabel>
        </childnode>
        <childnode refid="2536" relation="usage">
          <edgelabel>Temp</edgelabel>
        </childnode>
      </node>
      <node id="2531">
        <label>tesseract::Image</label>
        <link refid="classtesseract_1_1_image"/>
      </node>
      <node id="2547">
        <label>UnicityTable&lt; tesseract::FontInfo &gt;</label>
        <link refid="class_unicity_table"/>
      </node>
      <node id="2539">
        <label>INT_CLASS_STRUCT</label>
        <link refid="struct_i_n_t___c_l_a_s_s___s_t_r_u_c_t"/>
        <childnode refid="2540" relation="usage">
          <edgelabel>ProtoSets</edgelabel>
        </childnode>
      </node>
      <node id="2542">
        <label>CLASS_PRUNER_STRUCT</label>
        <link refid="struct_c_l_a_s_s___p_r_u_n_e_r___s_t_r_u_c_t"/>
      </node>
      <node id="2553">
        <label>IntegerMatcher</label>
        <link refid="class_integer_matcher"/>
      </node>
      <node id="2545">
        <label>UnicityTable&lt; tesseract::FontSet &gt;</label>
        <link refid="class_unicity_table"/>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" line="91" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/wordrec.h" bodystart="91" bodyend="579"/>
    <listofallmembers>
      <member refid="classtesseract_1_1_classify_1ac1f369f9a59739a588a4d84f60bac6c1" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AdaptableWord</name></member>
      <member refid="classtesseract_1_1_classify_1a49c2bec2694a12cb6518001d8193d58d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AdaptedTemplates</name></member>
      <member refid="classtesseract_1_1_classify_1a1f058451e32538b4dc2c853b82bc6600" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AdaptiveClassifier</name></member>
      <member refid="classtesseract_1_1_classify_1aa2f1ff296efea11aabd476cba49a39c5" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AdaptiveClassifierIsFull</name></member>
      <member refid="classtesseract_1_1_classify_1a53629ef3f5562677ae096bbce864e5ab" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AdaptToChar</name></member>
      <member refid="classtesseract_1_1_classify_1a7d9076164677e7e5a863a8a5d265b957" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AdaptToPunc</name></member>
      <member refid="classtesseract_1_1_wordrec_1a6b73b33a1a883abc117c676b64816c6f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>add_point_to_list</name></member>
      <member refid="classtesseract_1_1_classify_1a3681915077046082b4d99532a3f3da61" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AddNewResult</name></member>
      <member refid="classtesseract_1_1_classify_1a974e5b3b4ee8b184a3af4ba782750dd7" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AllConfigsOff</name></member>
      <member refid="classtesseract_1_1_classify_1ada1ef7ff613927daa2838ba41eaa055f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AllConfigsOn</name></member>
      <member refid="classtesseract_1_1_classify_1a04608dab39f896c0358b42c228a7ef32" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AllProtosOff</name></member>
      <member refid="classtesseract_1_1_classify_1a08295fdeacbf1d536337f542320e86e2" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AllProtosOn</name></member>
      <member refid="classtesseract_1_1_classify_1ac7501f294525f6dd7fca4a3512ae0dcf" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>AmbigClassifier</name></member>
      <member refid="classtesseract_1_1_c_c_util_1afe4ad8fd6975657f7b931638862c1b9c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ambigs_debug_level</name></member>
      <member refid="classtesseract_1_1_wordrec_1a6cad89fa254226bb11cc6eacfd7f0ffa" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>angle_change</name></member>
      <member refid="classtesseract_1_1_wordrec_1a488dbf71180ee93aec63ad825be08444" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>attempt_blob_chop</name></member>
      <member refid="classtesseract_1_1_classify_1ab7022031939236cac2fe6b661e6f657b" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BaselineClassifier</name></member>
      <member refid="classtesseract_1_1_wordrec_1ad717bb181d1b89496be0b042347d9753" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>best_first_search</name></member>
      <member refid="classtesseract_1_1_wordrec_1acd86faf2d9076330828b3738d39c6ecd" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>blame_reasons_</name></member>
      <member refid="classtesseract_1_1_wordrec_1a7518e041a8ddab1d1a2b7e609553b8e3" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>blob_match_table</name></member>
      <member refid="classtesseract_1_1_wordrec_1aca61d1d30212bf01d01ca58a9363a3cb" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1af553093c70aef780547ccaa0e5c8425e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1af90985dec561f01b8bcf663eac9a7e4f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a8cd0fde170ea554219c6a96d81dccb1c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a9301f18706cea5f1a7f149da613e9c0f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a42bf5f92e78808e874b77645b565be33" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1ab6885d2d94f906a0fb4a1f1b9e905033" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a6545fe0ff123615a321322c1f305717a" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1af063e7a6d5a55cc5e3e50e7e33cc3cd8" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a5756a66b09cfe3beb7bbfe06a5a7e4e4" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1aa32bda211c726c0448dffa461e7174ba" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a488abd7f7863ed11e8824d50ae7998db" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a8459083319d6819b73c98a5fe30644eb" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1ac3a7992c4a976e8c13032f466bbd6325" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a1ca4ac4e5ca91d747a014363b12038e0" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1afb129415c0a278bf25af618ba6efb72c" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1ac5ee505129a57940d17fb26e21ae362f" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1aac971def19a61264c26c895689f37789" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a4c1592b0fcae11d219a8370894f113a0" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a2ea6c277addea769804cf2ec8584ae88" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a00efcf64a1cd659755679db8c4e36079" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1ae5311d7dd3ec374de10dc73bd8ff352c" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a36aa6b12cb8f85dab9e61ab974be97c9" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a690f4b25f132503e84acffb1ee2d6b25" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a15f078d14a7df04d9f8adad7750536af" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a2399813e1c656f6638ce7d09ac3a101b" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>call_matcher</name></member>
      <member refid="classtesseract_1_1_wordrec_1a57cb744b40e142b6cb03de0e8998dafc" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>CallFillLattice</name></member>
      <member refid="classtesseract_1_1_wordrec_1ad5643a29cad973e306bb84fb843397af" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>cc_recog</name></member>
      <member refid="classtesseract_1_1_c_c_struct_1a1623ce99161fc99916a04260cf25ccd8" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>CCStruct</name></member>
      <member refid="classtesseract_1_1_c_c_util_1af688e380af69364e79fddf43c3197e3c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>CCUtil</name></member>
      <member refid="classtesseract_1_1_classify_1a0e552819a03cc6f169e18a58b16696a6" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>CharNormClassifier</name></member>
      <member refid="classtesseract_1_1_classify_1aa3907b770bdeb45e652e0ab122568cf4" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>CharNormTrainingSample</name></member>
      <member refid="classtesseract_1_1_wordrec_1ac05db9a605bcb460b6b1abdaf03ee6c4" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ChoiceIsCorrect</name></member>
      <member refid="classtesseract_1_1_wordrec_1afa230ef31fc03aff58ebd4d2de2df68b" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>choose_best_seam</name></member>
      <member refid="classtesseract_1_1_wordrec_1ab39c4eff1c3255a37a38f5f32956e6c2" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>chop_numbered_blob</name></member>
      <member refid="classtesseract_1_1_wordrec_1a3649b7ab00c4d5947904af99716c6b20" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>chop_one_blob</name></member>
      <member refid="classtesseract_1_1_wordrec_1adb4cc59f6e9cca86fbba44ad483ab0b1" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>chop_one_blob2</name></member>
      <member refid="classtesseract_1_1_wordrec_1a60f3ee36bfbef64013dd7b199248cf0e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>chop_overlapping_blob</name></member>
      <member refid="classtesseract_1_1_wordrec_1ae9a055f84d35a4f9752f6c838afa11b0" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>chop_word_main</name></member>
      <member refid="classtesseract_1_1_classify_1a1002c7f80352c6ceac4af82ee35e5e06" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ClassAndConfigIDToFontOrShapeID</name></member>
      <member refid="classtesseract_1_1_classify_1a6fc9e3752efb2fe0d74920e082a59bd7" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ClassIDToDebugStr</name></member>
      <member refid="classtesseract_1_1_classify_1ac4c2dfe9aa3c463964fdc61faec56a67" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>Classify</name></member>
      <member refid="classtesseract_1_1_wordrec_1a7127d481d5ea12e3253fb3719fd2170c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>classify_blob</name></member>
      <member refid="classtesseract_1_1_wordrec_1ad59946532b08a90f940ecfa994b06653" prot="public" virt="virtual"><scope>tesseract::Wordrec</scope><name>classify_piece</name></member>
      <member refid="classtesseract_1_1_classify_1a8a68035cfc5ee866f2d39360072ab77c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ClassifyAsNoise</name></member>
      <member refid="classtesseract_1_1_classify_1ac0de90c99552cdc286f934d344790085" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ClearCharNormArray</name></member>
      <member refid="classtesseract_1_1_wordrec_1a11c3678047ab91731c5628c49e0b9858" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>combine_seam</name></member>
      <member refid="classtesseract_1_1_classify_1a8f49de2f8da7b066bd8ece0641edcca1" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ComputeCharNormArrays</name></member>
      <member refid="classtesseract_1_1_classify_1a7c6031863d4dafb400551cc4f151f3b5" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ComputeCorrectedRating</name></member>
      <member refid="classtesseract_1_1_classify_1a3abc0b280fe8a88d57a35d2d578ef47a" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ComputeIntCharNormArray</name></member>
      <member refid="classtesseract_1_1_classify_1ae1f3fc88bf28a4a169273bcf2515610e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ComputeIntFeatures</name></member>
      <member refid="classtesseract_1_1_classify_1a3205427bd0f3abae31ab6c3092ca0662" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ComputeNormMatch</name></member>
      <member refid="classtesseract_1_1_wordrec_1ab304a891354f890ed124488273b57b19" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>constrained_split</name></member>
      <member refid="classtesseract_1_1_classify_1af1f1f794092ce44dff7c242822b6cf68" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ConvertMatchesToChoices</name></member>
      <member refid="classtesseract_1_1_classify_1af27d604585502bd447d52bf5daf15d0d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ConvertProto</name></member>
      <member refid="classtesseract_1_1_wordrec_1a6e9f488de12a12cd99ae4c2c55c87bc6" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>CopyCharChoices</name></member>
      <member refid="classtesseract_1_1_classify_1af3d15c15c9f2dce72a400233d4bf366f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>CreateIntTemplates</name></member>
      <member refid="classtesseract_1_1_wordrec_1a6ad6a99cdee8d3a3ceaec40afade8714" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>crosses_outline</name></member>
      <member refid="classtesseract_1_1_c_util_1a2c90e0e7fb8ec596ecb98e096eb7c418" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>CUtil</name></member>
      <member refid="classtesseract_1_1_c_c_util_1a4932d2070d3b91264958078abc991b17" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>datadir</name></member>
      <member refid="classtesseract_1_1_classify_1af9a9def4a6b3bb1a2e36bceff2976c2c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>DebugAdaptiveClassifier</name></member>
      <member refid="classtesseract_1_1_wordrec_1a15fb0ba7f97dd0ad49f30fb7861717c4" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>delete_seam_pile</name></member>
      <member refid="classtesseract_1_1_wordrec_1a138fe5d0ffacb19535094f221a9e6511" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>delete_search</name></member>
      <member refid="classtesseract_1_1_wordrec_1a13f2efa710b3a68e30e8bc2f69bee578" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>dict_word</name></member>
      <member refid="classtesseract_1_1_c_c_util_1abcd5aabcb868a669c468c8c3ddd0ca73" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>directory</name></member>
      <member refid="classtesseract_1_1_classify_1aaa7b4a01a6f9bd1f088982a4011274e5" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>DisplayAdaptedChar</name></member>
      <member refid="classtesseract_1_1_classify_1a8575af5f97d4037d4fdd2e21b477dd38" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>DoAdaptiveMatch</name></member>
      <member refid="classtesseract_1_1_wordrec_1a9cf24f0f146f8060b3797d5f6daa001c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a185a24dac40597daad9f918dd3e2c16e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a324eb604e7406795daf4c0358ce9e40c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a71e1a180c8b55a1232258b60e5cfceca" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1af25322f7aade3556b0d1fe8514bdd5ff" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1aed904284b9b99fa1c73990e5a2ea03b0" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a132c86b9bfdb87ba57bda6d87cd395e2" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1aef36d84aaedbe7e4a7513e12517e11d4" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1aa14391e0d690ee3a8dc736be8e6c32a0" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a3d785b47191664670345ad1eaf72aace" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a0dfcdd786d3335a89a5ca2f2f359a404" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a87de7f1e30e0d14ceac7b72b2bbaa672" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a4b479d2e35639961dc60160c06be16ac" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1acf890dfc6eb5c02b175d5db03fe2c6d3" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1ae7010ea1fb4be19b025d75ee71794299" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a85976adb597f013c315d589dc0144297" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a9b30d9e69cbab064bb64f308282253b1" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1ae7f051dd6f6a9c3c2796033fa44da205" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1aa4c5da7c638e833c1923d4ae0eb1d4b8" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a29705fef02da95d5d1ca9e57b35117ac" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a9a81245acd8b6e947e178ee4719b3e48" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a11d6b1ede8e900798c1896be2c1ba7fd" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a3299d357a0c2297940525200f7f2821d" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1ab5fd085492771e8e797c4b5876659b2e" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a3af2d1779411f1c56c970ccded7cab0c" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a21415c32ace975dedc862b46384315b2" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a076648daf7965ebfc05aa9598ca7fdc0" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a36b92a3b67b1d5a663ae2d2bc10951d6" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1aa48244c93b730889fbfd7cfe44b54e3e" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a5daa351779bf9aaa770c5a3061afacb5" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1acf92ee50de869b39649d113a841e0edf" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a78017208c388e4de73a7639ad5690039" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1aa418c315637e7d0c635ccf34663eddb0" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a7d0ccfd06421346d8cda0f1b76fd8516" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>EnableLearning</name></member>
      <member refid="classtesseract_1_1_wordrec_1ae0e2f8d5761f19008b20943a6e8ba130" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>end_recog</name></member>
      <member refid="classtesseract_1_1_classify_1ae5e4880c5acc91b77308fbd6ab706b13" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>EndAdaptiveClassifier</name></member>
      <member refid="classtesseract_1_1_wordrec_1a17730ff30d62f74a4a14904664bd8656" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>evaluate_chunks</name></member>
      <member refid="classtesseract_1_1_wordrec_1ad9eb2175e0e99588f283809bea8cdf2b" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>evaluate_state</name></member>
      <member refid="classtesseract_1_1_wordrec_1a03931abc6310dd587fdaff3ccf272887" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>expand_node</name></member>
      <member refid="classtesseract_1_1_classify_1a7d663f1e02d6e7b2d1783fdca6154a4d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ExpandShapesAndApplyCorrections</name></member>
      <member refid="classtesseract_1_1_classify_1af1ef43f77139dc879d27a510adcb4bb3" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ExtractOutlineFeatures</name></member>
      <member refid="classtesseract_1_1_classify_1ad6d1f9f29655ffe18fab3832b113e00b" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ExtractPicoFeatures</name></member>
      <member refid="classtesseract_1_1_wordrec_1ae15505acaad8195b1b96de4a393bfc3e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>fake_classify_blob</name></member>
      <member refid="classtesseract_1_1_classify_1a6ebcfd2968c704f99efd40075ecdb138" prot="protected" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>feature_defs_</name></member>
      <member refid="classtesseract_1_1_wordrec_1a82e3d17abe8744c66fe3aa67fe2ea0f3" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>fill_filtered_fragment_list</name></member>
      <member refid="classtesseract_1_1_wordrec_1a7a4f5e2cb7957a5decbc91eb2d31f87c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>fill_lattice_</name></member>
      <member refid="classtesseract_1_1_wordrec_1a7b5bc2e6f3a8666f5bcb4a539c29c823" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>FillLattice</name></member>
      <member refid="classtesseract_1_1_wordrec_1abbb02091c23e7be9370055704526102f" prot="protected" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>FinishBlamerForSegSearch</name></member>
      <member refid="classtesseract_1_1_classify_1ae6dea981b2f591921d798ea83b0fa455" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>fontinfo_table_</name></member>
      <member refid="classtesseract_1_1_classify_1a74a007a46ac907d2c8f61e9885143465" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>fontset_table_</name></member>
      <member refid="classtesseract_1_1_classify_1ab6e270cecf7e7c62e1319e7889caf716" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>FreeNormProtos</name></member>
      <member refid="classtesseract_1_1_wordrec_1a409c4fc630ecbc283e3a6aa1b08debf7" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>full_split_priority</name></member>
      <member refid="classtesseract_1_1_classify_1a62597f182a5e23c3b8a030c06e699e99" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>get_fontinfo_table</name></member>
      <member refid="classtesseract_1_1_classify_1a84d0021ef7ddbc98196801f9808fa33d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>get_fontset_table</name></member>
      <member refid="classtesseract_1_1_wordrec_1a53e7fd43e3657ffc3bc76a18f4e52291" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>get_fragment_lists</name></member>
      <member refid="classtesseract_1_1_wordrec_1ad77b8ca8f655ae0bfe16f352f3d01830" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>get_gap_variance</name></member>
      <member refid="classtesseract_1_1_wordrec_1aab16c53ccf9c888874c2e7ae65b6ed04" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>get_piece_rating</name></member>
      <member refid="classtesseract_1_1_wordrec_1ac0868afc87448dc583dad4d67dd8b1a8" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>get_width_variance</name></member>
      <member refid="classtesseract_1_1_classify_1a1f21b989c93ff1d297b5bde442fc430c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>GetAdaptiveFeatures</name></member>
      <member refid="classtesseract_1_1_classify_1a57d34f380d093913f3c3e74f7a7a9840" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>GetAdaptThresholds</name></member>
      <member refid="classtesseract_1_1_classify_1af4c186f6ec1019d17912d2cf36326f1f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>GetAmbiguities</name></member>
      <member refid="classtesseract_1_1_classify_1a4bf0e47e0ae00a0cec215a887cef8c65" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>GetBaselineFeatures</name></member>
      <member refid="classtesseract_1_1_classify_1a1076d5d08686e48d39ef3eb07e711fb6" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>GetCharNormFeatures</name></member>
      <member refid="classtesseract_1_1_classify_1a76f4e180bcab3a7cd2da75d42b524eba" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>GetClassToDebug</name></member>
      <member refid="classtesseract_1_1_classify_1a83e4207353a1bb07adfaa6a82a74c9ce" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>getDict</name></member>
      <member refid="classtesseract_1_1_classify_1afae8a55c28ee68de92ab1b1dd37c6905" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>GetFontinfoId</name></member>
      <member refid="classtesseract_1_1_wordrec_1abbeec661b51bf52c5dd3ccbb64567690" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>grade_center_of_blob</name></member>
      <member refid="classtesseract_1_1_wordrec_1a483f88dc4b24f7055448259c42e1867d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>grade_overlap</name></member>
      <member refid="classtesseract_1_1_wordrec_1ab3df13db044c39b2d9aa4e6bf105d309" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>grade_sharpness</name></member>
      <member refid="classtesseract_1_1_wordrec_1a26ed8c156b2be0e7e38bd5437b71c10f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>grade_split_length</name></member>
      <member refid="classtesseract_1_1_wordrec_1a03ae9b642499f15b4fe4348d9d0ee3c2" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>grade_width_change</name></member>
      <member refid="classtesseract_1_1_classify_1a093af2c004819e86bfff80ad88f10c37" prot="protected" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>im_</name></member>
      <member refid="classtesseract_1_1_c_c_struct_1af0134325da282ba2dacbb034cf59dde0" prot="protected" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>image_</name></member>
      <member refid="classtesseract_1_1_c_c_util_1a83b53925c7f421533b5f382c9a36ab1d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>imagebasename</name></member>
      <member refid="classtesseract_1_1_c_c_util_1a5eea0d996032e28207d801a1ee92d388" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>imagefile</name></member>
      <member refid="classtesseract_1_1_wordrec_1ad1164fd07a17960ed06585f0c8aadcdc" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>improve_by_chopping</name></member>
      <member refid="classtesseract_1_1_wordrec_1acdc368cd46083bdc4c321dd0a42533a0" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>improve_one_blob</name></member>
      <member refid="classtesseract_1_1_classify_1aee9e5bd336bf1a37a7a1f3b712eb045d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>InitAdaptedClass</name></member>
      <member refid="classtesseract_1_1_classify_1a2f9389a2d855d2a59e7892d3ba884887" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>InitAdaptiveClassifier</name></member>
      <member refid="classtesseract_1_1_wordrec_1a8580282cf87b0e054ac1410cf4ffa0e2" prot="protected" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>InitBlamerForSegSearch</name></member>
      <member refid="classtesseract_1_1_wordrec_1ac0bb307c164db16cf4d2593b7659947e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1ae22029ad4f420f8b3db874dfead8b82b" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a25ddcb73694e2cb319f3aaa542353a3d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a61cdb82edd1294fa168b389a755f7891" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1adee4757623dd62f839099c5f0626b891" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a9adb05d392fd12b52439d23636720204" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a5216f1cc7eae6d0b2ff54e93f5525a80" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a76f16d724024a6902147011c68736b5a" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a1515d62d7f1ff1642e78d89e9ee2fb23" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1acb0338ed28d5b4f557dbfc0986d26fe3" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a3de07d95cc00fe4452e596a2c7b93c7a" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1a914ac4865b08dda6e1ab205b424cf0f3" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1afa899a870d4b15f9f620b893d6421ba0" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1ac91f7eded8f5977563014ef2152a7c24" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a78237516883f141f0f2f2b81a88dc7d5" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1aa3ca8b987244da7eb2d651a1387838ba" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a4c31c41113fc3c808298c8d65143bc3a" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a109361f3a013a7eb29ffdfcc5f859ff4" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a741ce5afa3897f6f5fedf3ca62fb57cc" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a64b171ab4872f933fc194c933da6fadc" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a3085fb94b97512a6853c65913dadefef" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a5b47d139528e39589358dbed7f3593b7" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a70176fd471cc1a8099f8ded206525bea" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a74e61ea0e3da0c2a99204aa09d7db71b" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1ab1e8bd80e90a2ac5386dcbfc036c3531" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a22d58d61c508eb299d408f34f4c48809" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a78bd071af735e55b9ac020edfba60557" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a17d8071dfd17e0e1ba98df86930603f9" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a134344f0ecc505887441e1fba477b9c7" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a33d550f8acc5fb2d81b7a646cad21694" prot="public" virt="non-virtual" ambiguityscope="tesseract::Classify::"><scope>tesseract::Wordrec</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_wordrec_1af5466c6b57ff40780c0be86b1330f1cf" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>is_crossed</name></member>
      <member refid="classtesseract_1_1_wordrec_1ada66e05fa0ae8dc79b9de78f5f6efadf" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>is_little_chunk</name></member>
      <member refid="classtesseract_1_1_wordrec_1a67574237703ce6757f28d9cdcef7d301" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>is_same_edgept</name></member>
      <member refid="classtesseract_1_1_wordrec_1a71c9cce736fd886763722cf34ddd0ab7" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>is_small_area</name></member>
      <member refid="classtesseract_1_1_wordrec_1aad7c820e5bb342d7ea7743269e160a20" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>join_blobs_and_classify</name></member>
      <member refid="classtesseract_1_1_wordrec_1a5b02ea635cd52437ade4200ed2734941" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>junk_worst_seam</name></member>
      <member refid="classtesseract_1_1_c_c_struct_1a9d71fddad74d9418e106713cd643b919" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>kAscenderFraction</name></member>
      <member refid="classtesseract_1_1_c_c_struct_1a7e8a361df0831d295edf1c150c3ca3a3" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>kDescenderFraction</name></member>
      <member refid="classtesseract_1_1_c_c_struct_1a594719f667105487f0c3f78de6f85f77" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>kXHeightCapRatio</name></member>
      <member refid="classtesseract_1_1_c_c_struct_1a737fdb37b9401ad3d04371c1bd4a0b17" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>kXHeightFraction</name></member>
      <member refid="classtesseract_1_1_c_c_util_1ae453cbd7e4899ebfc5cc3831e5a8dd66" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>lang</name></member>
      <member refid="classtesseract_1_1_c_c_util_1a259fbb37f1e940892938c71496c4d6ba" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>language_data_path_prefix</name></member>
      <member refid="classtesseract_1_1_wordrec_1a3d9fc3b086e0f174a2cd602ea8f421c6" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>language_model_</name></member>
      <member refid="classtesseract_1_1_wordrec_1af7a36436e7e7fd0691bc093814fc2b62" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>last_segmentation</name></member>
      <member refid="classtesseract_1_1_classify_1a0a6455e61097b98b01d180cd0b2748c9" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>LearnPieces</name></member>
      <member refid="classtesseract_1_1_classify_1abbbd86871758c036d7ba2af682abb45f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>LearnWord</name></member>
      <member refid="classtesseract_1_1_classify_1ab72f687048a2e1eba44b8ae2cfb07fa9" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>LooksLikeGarbage</name></member>
      <member refid="classtesseract_1_1_c_c_util_1a16a50e3bd10d48993a0a5d23882c2b01" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>m_data_sub_dir</name></member>
      <member refid="classtesseract_1_1_c_c_util_1ac50cd898d98a54cec02689858f515728" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>main_setup</name></member>
      <member refid="classtesseract_1_1_classify_1a59900939784eac1e2e6ebfec1f82bb58" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>MakeNewTemporaryConfig</name></member>
      <member refid="classtesseract_1_1_classify_1adc0facdf672d23f65612b56b4a5f523a" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>MakeNewTempProtos</name></member>
      <member refid="classtesseract_1_1_classify_1aefb0cfe284dd67601798f7ae510b787f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>MakePermanent</name></member>
      <member refid="classtesseract_1_1_classify_1a9df3ff8623acd0ab30286ace7362045c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>MasterMatcher</name></member>
      <member refid="classtesseract_1_1_wordrec_1af657001729e7bc45e381614497adcc19" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>merge_and_put_fragment_lists</name></member>
      <member refid="classtesseract_1_1_wordrec_1a60e821ddb0f98741bb729c5163e1189c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>merge_fragments</name></member>
      <member refid="classtesseract_1_1_wordrec_1a30984c34a31ca6ef5ee363fc5ebfeff4" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>modify_blob_choice</name></member>
      <member refid="classtesseract_1_1_wordrec_1a746f8a2ed6b50a3669a2fe6dcd053eec" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>near_point</name></member>
      <member refid="classtesseract_1_1_wordrec_1a3d80d69436770f158bcea457afb6c81d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>new_max_point</name></member>
      <member refid="classtesseract_1_1_wordrec_1a597a95a38f3461c79c3f3970c4d69b69" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>new_min_point</name></member>
      <member refid="classtesseract_1_1_wordrec_1a6532056b5f7dcdff1a64898d1c3b6bfc" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>new_search</name></member>
      <member refid="classtesseract_1_1_classify_1a28ddc270cb5d2613f5f0f24ad53a5a21" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>NewAdaptedTemplates</name></member>
      <member refid="classtesseract_1_1_classify_1a8cbc3c255f888cc49c713c0a7408d2ad" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>NormalizeOutlines</name></member>
      <member refid="classtesseract_1_1_classify_1ad4c94be5d5738afb4115a12cad2e3efa" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>NormProtos</name></member>
      <member refid="classtesseract_1_1_wordrec_1a488e4047c19dcd34c6ce55fa08731565" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>num_joints</name></member>
      <member refid="classtesseract_1_1_wordrec_1abc8f5ea0bc5278f6a3ba1f91b3e797e3" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>num_popped</name></member>
      <member refid="classtesseract_1_1_wordrec_1af285813a72895f9b09f4e0f3021e721c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>num_pushed</name></member>
      <member refid="classtesseract_1_1_c_c_util_1ac993425386ae1f73762107299ee8a114" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>params</name></member>
      <member refid="classtesseract_1_1_wordrec_1a671c4b102b976c600adc3bf60ee44323" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>pass2_ok_split</name></member>
      <member refid="classtesseract_1_1_wordrec_1ade3cecfe9b377045db0abe2d06762c1e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>pass2_seg_states</name></member>
      <member refid="classtesseract_1_1_wordrec_1a79aec1d9a1c9c001a24838117585091a" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>pick_close_point</name></member>
      <member refid="classtesseract_1_1_wordrec_1adeb84d8b94a6c87354fc452461de3b39" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>pick_good_seam</name></member>
      <member refid="classtesseract_1_1_wordrec_1adfe6b5aa74fe948a11bf631af18e7494" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>point_priority</name></member>
      <member refid="classtesseract_1_1_wordrec_1a24a13455e56ef38b4270f672fa639d62" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>pop_queue</name></member>
      <member refid="classtesseract_1_1_classify_1a64383806f917e682c4a644efdd71d530" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>PreTrainedTemplates</name></member>
      <member refid="classtesseract_1_1_wordrec_1a143608f482c6c0c4f312740e6a5f5fd9" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>prev_word_best_choice_</name></member>
      <member refid="classtesseract_1_1_classify_1a15d6951abc586793270de0825bdb7dd7" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>PrintAdaptedTemplates</name></member>
      <member refid="classtesseract_1_1_classify_1aad46f714847619694546e9ea2784402c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>PrintAdaptiveMatchResults</name></member>
      <member refid="classtesseract_1_1_classify_1a8c350afec3f633660d20eb98226a40d1" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>PrintAdaptiveStatistics</name></member>
      <member refid="classtesseract_1_1_wordrec_1a52f6801a630c7418855f469233b3cf38" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>prioritize_points</name></member>
      <member refid="classtesseract_1_1_wordrec_1a5ad58d7dcf5cbe7852aefb3b35a9ce33" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>prioritize_state</name></member>
      <member refid="classtesseract_1_1_wordrec_1ab9f95be1d701222b62b7f8920f5cb9e5" prot="protected" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ProcessSegSearchPainPoint</name></member>
      <member refid="classtesseract_1_1_wordrec_1a5b44d020ea7f9d19d2e8f71b4e83113c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>program_editdown</name></member>
      <member refid="classtesseract_1_1_wordrec_1a318cffefddd77027079285472c9c54a2" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>program_editup</name></member>
      <member refid="classtesseract_1_1_classify_1af60b52006bbea0cc1727d543c3fcd1ad" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>PruneClasses</name></member>
      <member refid="classtesseract_1_1_classify_1a3306f7dc2f0df8c08a9933493262a2c9" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>PrunedProtos</name></member>
      <member refid="classtesseract_1_1_wordrec_1aeec11442b97898cd44ddfe568dd9ee0f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>push_queue</name></member>
      <member refid="classtesseract_1_1_wordrec_1a1dd426293ba3d6d90f8740285190336f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>rating_priority</name></member>
      <member refid="classtesseract_1_1_c_util_1a4fc3c25333d98fa5d7d8b899724bb8ab" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>read_variables</name></member>
      <member refid="classtesseract_1_1_classify_1aa74ebd96d85efc39d71c37985e50c8aa" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ReadAdaptedTemplates</name></member>
      <member refid="classtesseract_1_1_classify_1a3cc9d5fe19f6d641fdfb133179ea70a4" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ReadClassFile</name></member>
      <member refid="classtesseract_1_1_classify_1a98459996e5e6ab1dc1de71411fd32b89" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ReadIntTemplates</name></member>
      <member refid="classtesseract_1_1_classify_1a49a37c1ce02f5e114f0d57e49871b802" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ReadNewCutoffs</name></member>
      <member refid="classtesseract_1_1_classify_1aabd742c09ff530922005e015a9e8bc2b" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ReadNormProtos</name></member>
      <member refid="classtesseract_1_1_wordrec_1a540decbb88b2e701402b80fd7395d03e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>rebuild_current_state</name></member>
      <member refid="classtesseract_1_1_wordrec_1afba032e7e9cea932a806e56424966237" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>rebuild_fragments</name></member>
      <member refid="classtesseract_1_1_wordrec_1aa635d222f122122d4abad1b883d92fb5" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>record_blob_bounds</name></member>
      <member refid="classtesseract_1_1_wordrec_1a9f070b021f06de480fda80a61a772d47" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>record_piece_ratings</name></member>
      <member refid="classtesseract_1_1_classify_1a6e36e01c8147d95bbd64c6609e1b8f45" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>RefreshDebugWindow</name></member>
      <member refid="classtesseract_1_1_classify_1a0e35029ac0c77ad18d35f08c27c99d15" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>RemoveBadMatches</name></member>
      <member refid="classtesseract_1_1_classify_1af15e83a02b369b820d40c8920b4275e8" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>RemoveExtraPuncs</name></member>
      <member refid="classtesseract_1_1_wordrec_1a35746f8e970b19443f459c060a8775c9" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>replace_char_widths</name></member>
      <member refid="classtesseract_1_1_classify_1a350f6cb6e7ce9f53ae468908a91c6148" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ResetAdaptiveClassifierInternal</name></member>
      <member refid="classtesseract_1_1_classify_1a62ffff7932680b25784bfca5079ce347" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ResetFeaturesHaveBeenExtracted</name></member>
      <member refid="classtesseract_1_1_wordrec_1ad88a55a41c46135e8173fd81cbeb1751" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>reverse_outline</name></member>
      <member refid="classtesseract_1_1_wordrec_1a3e07fc3051cf28bed0511983b8f8b69d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>SaveAltChoices</name></member>
      <member refid="classtesseract_1_1_wordrec_1a239d08f59bdd41a53ab489ca138fa989" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>seam_priority</name></member>
      <member refid="classtesseract_1_1_wordrec_1aa5fd4729ef162689b68d20f9bdeb0c3e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>seamcut_priority</name></member>
      <member refid="classtesseract_1_1_wordrec_1aea3997058b7c1683957d275d17bc20d6" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>SegSearch</name></member>
      <member refid="classtesseract_1_1_wordrec_1a904762fe91430c5094ccecb7e690e0e5" prot="protected" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>SegSearchDone</name></member>
      <member refid="classtesseract_1_1_wordrec_1a8fd3e86b711ba9d54c7eb500eb99c1c4" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>select_blob_to_split</name></member>
      <member refid="classtesseract_1_1_wordrec_1a457f1ea04bad00c6e40883869700defb" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>select_blob_to_split_from_fixpt</name></member>
      <member refid="classtesseract_1_1_wordrec_1a2ed3fab8407177af31d446a794617149" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>set_chopper_blame</name></member>
      <member refid="classtesseract_1_1_wordrec_1a764fd79db0c80638187f4751626bb12e" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>set_outline_bounds</name></member>
      <member refid="classtesseract_1_1_wordrec_1a15740f1d66aa061522c69b948e901e70" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>set_pass1</name></member>
      <member refid="classtesseract_1_1_wordrec_1a883211e914cb31146b8dd9ace419c843" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>set_pass2</name></member>
      <member refid="classtesseract_1_1_classify_1a5a3045639a3db979a8d1eb6dc4343e3b" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>SetAdaptiveThreshold</name></member>
      <member refid="classtesseract_1_1_classify_1ae66827073cdeea6a59dd16fd7cf5d297" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>SettupPass1</name></member>
      <member refid="classtesseract_1_1_classify_1a5ad207ab75e8a69c35c225313268788b" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>SettupPass2</name></member>
      <member refid="classtesseract_1_1_classify_1a5d8e80f8bd4a5779921f543c6eef796c" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>shape_table</name></member>
      <member refid="classtesseract_1_1_classify_1a471b3e8f03ddc5281c167b37d8ddc5b5" prot="protected" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>shape_table_</name></member>
      <member refid="classtesseract_1_1_classify_1a319cfe59c8e82e697375a351e3c604b3" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ShapeIDToClassID</name></member>
      <member refid="classtesseract_1_1_classify_1abf81bc54d31591d9da5f95529583b99d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ShowBestMatchFor</name></member>
      <member refid="classtesseract_1_1_classify_1a44e1b8840fb841e621b902f3abdd8522" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>ShowMatchDisplay</name></member>
      <member refid="classtesseract_1_1_wordrec_1a20332a4dd1d38ef7c6bf04d8dd4a98b7" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>state_char_widths</name></member>
      <member refid="classtesseract_1_1_classify_1a7b7aea0c954a1511d50142036bc4511f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>STRING_VAR_H</name></member>
      <member refid="classtesseract_1_1_classify_1a786c5f6e2a5cd8aac2ed4dd89af84fea" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>TempConfigReliable</name></member>
      <member refid="classtesseract_1_1_classify_1a26b1c76382f418bf5a78bad15b23b8ad" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>TempProtoMask</name></member>
      <member refid="classtesseract_1_1_c_c_util_1a4a585cb38d5b19b5caedb7aded4a679a" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>tessdata_manager</name></member>
      <member refid="classtesseract_1_1_wordrec_1a0a876c211a99a5a60107bb83461a1656" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>try_point_pairs</name></member>
      <member refid="classtesseract_1_1_wordrec_1a89206f4ad5d082a9528aa19b7bbdc78d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>try_vertical_splits</name></member>
      <member refid="classtesseract_1_1_c_c_util_1aea55f12febe34f7fec0f2300ef5ab418" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>unichar_ambigs</name></member>
      <member refid="classtesseract_1_1_c_c_util_1a69c5179ac5f10a24f3f97e16ca09460f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>unicharset</name></member>
      <member refid="classtesseract_1_1_wordrec_1a63db9b85fa1350dfccfd4d6e548290d4" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>update_blob_classifications</name></member>
      <member refid="classtesseract_1_1_wordrec_1a1a00e14baaad0a404bb90ac8fe4663f6" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>update_ratings</name></member>
      <member refid="classtesseract_1_1_classify_1a954c9085f840572567462c9e0ff3551a" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>UpdateAmbigsGroup</name></member>
      <member refid="classtesseract_1_1_wordrec_1a6bac0a6462577e2e1057057f03901a33" prot="protected" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>UpdateSegSearchNodes</name></member>
      <member refid="classtesseract_1_1_c_c_util_1a108356fffcf862f73e0851bc4aea3e6f" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>use_ambigs_for_adaption</name></member>
      <member refid="classtesseract_1_1_c_c_util_1a80674e812635d43aede79974e34d37d0" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>use_definite_ambigs_for_classifier</name></member>
      <member refid="classtesseract_1_1_wordrec_1ac3557f7f8e9b02f6b2fea05e2320cd1d" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>vertical_projection_point</name></member>
      <member refid="classtesseract_1_1_wordrec_1a6e963a2c089d890de52254b85b2c0cac" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>width_priority</name></member>
      <member refid="classtesseract_1_1_wordrec_1a3581245a7778654f6fd22c4b3721cf06" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>word_associator</name></member>
      <member refid="classtesseract_1_1_wordrec_1a05c88ec72e6bc64cc79471145906ab12" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>Wordrec</name></member>
      <member refid="classtesseract_1_1_classify_1a1718afe45a09c6631f11ae224e6d5db6" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>WriteAdaptedTemplates</name></member>
      <member refid="classtesseract_1_1_classify_1a81e8a5e5adfc60146ea3eb5b60936dd9" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>WriteIntTemplates</name></member>
      <member refid="classtesseract_1_1_c_c_struct_1aee94dd326def50877bc7fb76ba5277c9" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>~CCStruct</name></member>
      <member refid="classtesseract_1_1_c_c_util_1adeaf195d61d6a5eaab4bcbb27a6f1af5" prot="public" virt="virtual"><scope>tesseract::Wordrec</scope><name>~CCUtil</name></member>
      <member refid="classtesseract_1_1_classify_1a4a3fe30721c7f945fb4c5ebfe421639c" prot="public" virt="virtual"><scope>tesseract::Wordrec</scope><name>~Classify</name></member>
      <member refid="classtesseract_1_1_c_util_1af7acf39fa169851db30363d8b06a77b6" prot="public" virt="non-virtual"><scope>tesseract::Wordrec</scope><name>~CUtil</name></member>
      <member refid="classtesseract_1_1_wordrec_1acaace271520291eb5c8d5cd02fbe2ed4" prot="public" virt="virtual"><scope>tesseract::Wordrec</scope><name>~Wordrec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
