<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="hybrid__neural__net__classifier_8h" kind="file">
    <compoundname>hybrid_neural_net_classifier.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="char__samp_8h" local="yes">char_samp.h</includes>
    <includes refid="char__altlist_8h" local="yes">char_altlist.h</includes>
    <includes refid="char__set_8h" local="yes">char_set.h</includes>
    <includes refid="classifier__base_8h" local="yes">classifier_base.h</includes>
    <includes refid="feature__base_8h" local="yes">feature_base.h</includes>
    <includes refid="lang__model_8h" local="yes">lang_model.h</includes>
    <includes refid="neural__net_8h" local="yes">neural_net.h</includes>
    <includes refid="tuning__params_8h" local="yes">tuning_params.h</includes>
    <includedby refid="classifier__factory_8cpp" local="yes">cube/classifier_factory.cpp</includedby>
    <includedby refid="hybrid__neural__net__classifier_8cpp" local="yes">cube/hybrid_neural_net_classifier.cpp</includedby>
    <incdepgraph>
      <node id="30964">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="30952">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="30939">
        <label>stdlib.h</label>
      </node>
      <node id="30977">
        <label>lang_model.h</label>
        <link refid="lang__model_8h"/>
        <childnode refid="30978" relation="include">
        </childnode>
        <childnode refid="30947" relation="include">
        </childnode>
        <childnode refid="30953" relation="include">
        </childnode>
        <childnode refid="30976" relation="include">
        </childnode>
      </node>
      <node id="30956">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="30957" relation="include">
        </childnode>
      </node>
      <node id="30981">
        <label>neuron.h</label>
        <link refid="neuron_8h"/>
        <childnode refid="30949" relation="include">
        </childnode>
        <childnode refid="30937" relation="include">
        </childnode>
      </node>
      <node id="30951">
        <label>allheaders.h</label>
      </node>
      <node id="30980">
        <label>neural_net.h</label>
        <link refid="neural__net_8h"/>
        <childnode refid="30936" relation="include">
        </childnode>
        <childnode refid="30937" relation="include">
        </childnode>
        <childnode refid="30981" relation="include">
        </childnode>
        <childnode refid="30982" relation="include">
        </childnode>
      </node>
      <node id="30936">
        <label>string</label>
      </node>
      <node id="30967">
        <label>stddef.h</label>
      </node>
      <node id="30970">
        <label>memory.h</label>
      </node>
      <node id="30976">
        <label>tuning_params.h</label>
        <link refid="tuning__params_8h"/>
        <childnode refid="30936" relation="include">
        </childnode>
      </node>
      <node id="30975">
        <label>feature_base.h</label>
        <link refid="feature__base_8h"/>
        <childnode refid="30938" relation="include">
        </childnode>
        <childnode refid="30976" relation="include">
        </childnode>
      </node>
      <node id="30962">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="30955" relation="include">
        </childnode>
      </node>
      <node id="30974">
        <label>classifier_base.h</label>
        <link refid="classifier__base_8h"/>
        <childnode refid="30936" relation="include">
        </childnode>
        <childnode refid="30938" relation="include">
        </childnode>
        <childnode refid="30947" relation="include">
        </childnode>
        <childnode refid="30953" relation="include">
        </childnode>
        <childnode refid="30975" relation="include">
        </childnode>
        <childnode refid="30977" relation="include">
        </childnode>
        <childnode refid="30976" relation="include">
        </childnode>
      </node>
      <node id="30957">
        <label>limits.h</label>
      </node>
      <node id="30938">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="30939" relation="include">
        </childnode>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30936" relation="include">
        </childnode>
        <childnode refid="30941" relation="include">
        </childnode>
        <childnode refid="30944" relation="include">
        </childnode>
      </node>
      <node id="30935">
        <label>cube/hybrid_neural_net_classifier.h</label>
        <link refid="hybrid_neural_net_classifier.h"/>
        <childnode refid="30936" relation="include">
        </childnode>
        <childnode refid="30937" relation="include">
        </childnode>
        <childnode refid="30938" relation="include">
        </childnode>
        <childnode refid="30947" relation="include">
        </childnode>
        <childnode refid="30953" relation="include">
        </childnode>
        <childnode refid="30974" relation="include">
        </childnode>
        <childnode refid="30975" relation="include">
        </childnode>
        <childnode refid="30977" relation="include">
        </childnode>
        <childnode refid="30980" relation="include">
        </childnode>
        <childnode refid="30976" relation="include">
        </childnode>
      </node>
      <node id="30953">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="30945" relation="include">
        </childnode>
        <childnode refid="30936" relation="include">
        </childnode>
        <childnode refid="30946" relation="include">
        </childnode>
        <childnode refid="30944" relation="include">
        </childnode>
        <childnode refid="30954" relation="include">
        </childnode>
        <childnode refid="30968" relation="include">
        </childnode>
        <childnode refid="30972" relation="include">
        </childnode>
      </node>
      <node id="30945">
        <label>string.h</label>
      </node>
      <node id="30971">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="30969" relation="include">
        </childnode>
      </node>
      <node id="30969">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="30970" relation="include">
        </childnode>
        <childnode refid="30945" relation="include">
        </childnode>
      </node>
      <node id="30950">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="30937" relation="include">
        </childnode>
        <childnode refid="30936" relation="include">
        </childnode>
        <childnode refid="30951" relation="include">
        </childnode>
        <childnode refid="30952" relation="include">
        </childnode>
        <childnode refid="30953" relation="include">
        </childnode>
        <childnode refid="30938" relation="include">
        </childnode>
        <childnode refid="30973" relation="include">
        </childnode>
      </node>
      <node id="30937">
        <label>vector</label>
      </node>
      <node id="30961">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="30955" relation="include">
        </childnode>
      </node>
      <node id="30949">
        <label>math.h</label>
      </node>
      <node id="30978">
        <label>lang_mod_edge.h</label>
        <link refid="lang__mod__edge_8h"/>
        <childnode refid="30979" relation="include">
        </childnode>
        <childnode refid="30953" relation="include">
        </childnode>
      </node>
      <node id="30959">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30960" relation="include">
        </childnode>
        <childnode refid="30965" relation="include">
        </childnode>
      </node>
      <node id="30960">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30939" relation="include">
        </childnode>
        <childnode refid="30961" relation="include">
        </childnode>
        <childnode refid="30962" relation="include">
        </childnode>
        <childnode refid="30963" relation="include">
        </childnode>
        <childnode refid="30964" relation="include">
        </childnode>
      </node>
      <node id="30966">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="30967" relation="include">
        </childnode>
        <childnode refid="30955" relation="include">
        </childnode>
      </node>
      <node id="30941">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="30939" relation="include">
        </childnode>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30942" relation="include">
        </childnode>
        <childnode refid="30943" relation="include">
        </childnode>
      </node>
      <node id="30942">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="30979">
        <label>cube_tuning_params.h</label>
        <link refid="cube__tuning__params_8h"/>
        <childnode refid="30936" relation="include">
        </childnode>
        <childnode refid="30976" relation="include">
        </childnode>
      </node>
      <node id="30968">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="30962" relation="include">
        </childnode>
        <childnode refid="30963" relation="include">
        </childnode>
        <childnode refid="30965" relation="include">
        </childnode>
        <childnode refid="30961" relation="include">
        </childnode>
        <childnode refid="30969" relation="include">
        </childnode>
        <childnode refid="30971" relation="include">
        </childnode>
      </node>
      <node id="30947">
        <label>char_altlist.h</label>
        <link refid="char__altlist_8h"/>
        <childnode refid="30948" relation="include">
        </childnode>
        <childnode refid="30953" relation="include">
        </childnode>
      </node>
      <node id="30972">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="30973">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="30966" relation="include">
        </childnode>
      </node>
      <node id="30958">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="30959" relation="include">
        </childnode>
      </node>
      <node id="30946">
        <label>algorithm</label>
      </node>
      <node id="30955">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="30956" relation="include">
        </childnode>
      </node>
      <node id="30943">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30936" relation="include">
        </childnode>
      </node>
      <node id="30940">
        <label>stdio.h</label>
      </node>
      <node id="30982">
        <label>input_file_buffer.h</label>
        <link refid="input__file__buffer_8h"/>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30936" relation="include">
        </childnode>
      </node>
      <node id="30944">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="30945" relation="include">
        </childnode>
        <childnode refid="30936" relation="include">
        </childnode>
        <childnode refid="30946" relation="include">
        </childnode>
        <childnode refid="30937" relation="include">
        </childnode>
      </node>
      <node id="30954">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30955" relation="include">
        </childnode>
        <childnode refid="30958" relation="include">
        </childnode>
      </node>
      <node id="30965">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30945" relation="include">
        </childnode>
        <childnode refid="30956" relation="include">
        </childnode>
        <childnode refid="30966" relation="include">
        </childnode>
      </node>
      <node id="30948">
        <label>altlist.h</label>
        <link refid="altlist_8h"/>
        <childnode refid="30949" relation="include">
        </childnode>
        <childnode refid="30950" relation="include">
        </childnode>
      </node>
      <node id="30963">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30945" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="30983">
        <label>cube/hybrid_neural_net_classifier.h</label>
        <link refid="hybrid_neural_net_classifier.h"/>
        <childnode refid="30984" relation="include">
        </childnode>
        <childnode refid="30985" relation="include">
        </childnode>
      </node>
      <node id="30985">
        <label>cube/hybrid_neural_net_classifier.cpp</label>
        <link refid="hybrid__neural__net__classifier_8cpp"/>
      </node>
      <node id="30984">
        <label>cube/classifier_factory.cpp</label>
        <link refid="classifier__factory_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtesseract_1_1_hybrid_neural_net_char_classifier" prot="public">tesseract::HybridNeuralNetCharClassifier</innerclass>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conv_net_classifier.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Declaration<sp/>of<sp/>Convolutional-NeuralNet<sp/>Character<sp/>Classifier</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HYBRID_NEURAL_NET_CLASSIFIER_H</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>HYBRID_NEURAL_NET_CLASSIFIER_H</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__samp_8h" kindref="compound">char_samp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__altlist_8h" kindref="compound">char_altlist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__set_8h" kindref="compound">char_set.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classifier__base_8h" kindref="compound">classifier_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="feature__base_8h" kindref="compound">feature_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lang__model_8h" kindref="compound">lang_model.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="neural__net_8h" kindref="compound">neural_net.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tuning__params_8h" kindref="compound">tuning_params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Folding<sp/>Ratio<sp/>is<sp/>the<sp/>ratio<sp/>of<sp/>the<sp/>max-activation<sp/>of<sp/>members<sp/>of<sp/>a<sp/>folding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>that<sp/>is<sp/>used<sp/>to<sp/>compute<sp/>the<sp/>min-activation<sp/>of<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>const<sp/>float<sp/>kFoldingRatio<sp/>=<sp/>0.75;<sp/><sp/>//<sp/>see<sp/>conv_net_classifier.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classtesseract_1_1_hybrid_neural_net_char_classifier" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtesseract_1_1_hybrid_neural_net_char_classifier" kindref="compound">HybridNeuralNetCharClassifier</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_classifier" kindref="compound">CharClassifier</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_hybrid_neural_net_char_classifier_1a6aa8970f515e25fe73f78d6090ca429a" kindref="member">HybridNeuralNetCharClassifier</ref>(<ref refid="classtesseract_1_1_char_set" kindref="compound">CharSet</ref><sp/>*char_set,<sp/><ref refid="classtesseract_1_1_tuning_params" kindref="compound">TuningParams</ref><sp/>*params,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_feature_base" kindref="compound">FeatureBase</ref><sp/>*feat_extract);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_hybrid_neural_net_char_classifier_1a31fa85b80a1d3c9b848f5f6c07116668" kindref="member">~HybridNeuralNetCharClassifier</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>main<sp/>training<sp/>function.<sp/>Given<sp/>a<sp/>sample<sp/>and<sp/>a<sp/>class<sp/>ID<sp/>the<sp/>classifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>updates<sp/>its<sp/>parameters<sp/>according<sp/>to<sp/>its<sp/>learning<sp/>algorithm.<sp/>This<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>currently<sp/>not<sp/>implemented.<sp/>TODO(ahmadab):<sp/>implement<sp/>end-2-end<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_hybrid_neural_net_char_classifier_1a6e125be18d21d23d7a29afd4a4f28cd3" kindref="member">Train</ref>(<ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>*char_samp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ClassID);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>secondary<sp/>function<sp/>needed<sp/>for<sp/>training.<sp/>Allows<sp/>the<sp/>trainer<sp/>to<sp/>set<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>of<sp/>any<sp/>train-time<sp/>paramter.<sp/>This<sp/>function<sp/>is<sp/>currently<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>implemented.<sp/>TODO(ahmadab):<sp/>implement<sp/>end-2-end<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_hybrid_neural_net_char_classifier_1a478d8fc444aeaa8dec5ec4e97022815c" kindref="member">SetLearnParam</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*var_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Externally<sp/>sets<sp/>the<sp/>Neural<sp/>Net<sp/>used<sp/>by<sp/>the<sp/>classifier.<sp/>Used<sp/>for<sp/>training</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_hybrid_neural_net_char_classifier_1a19971a87d8827525263c7aac31218a91" kindref="member">SetNet</ref>(<ref refid="classtesseract_1_1_neural_net" kindref="compound">tesseract::NeuralNet</ref><sp/>*net);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Classifies<sp/>an<sp/>input<sp/>charsamp<sp/>and<sp/>return<sp/>a<sp/>CharAltList<sp/>object<sp/>containing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>possible<sp/>candidates<sp/>and<sp/>corresponding<sp/>scores</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_alt_list" kindref="compound">CharAltList</ref><sp/>*<ref refid="classtesseract_1_1_hybrid_neural_net_char_classifier_1a3b175fef9547b38b35fd032c3fbf0262" kindref="member">Classify</ref>(<ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>*char_samp);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Computes<sp/>the<sp/>cost<sp/>of<sp/>a<sp/>specific<sp/>charsamp<sp/>being<sp/>a<sp/>character<sp/>(versus<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>non-character:<sp/>part-of-a-character<sp/>OR<sp/>more-than-one-character)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_hybrid_neural_net_char_classifier_1a4e1a28c102ef21d438cff5416b8da991" kindref="member">CharCost</ref>(<ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>*char_samp);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Neural<sp/>Net<sp/>object<sp/>used<sp/>for<sp/>classification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>vector&lt;tesseract::NeuralNet<sp/>*&gt;<sp/>nets_;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>vector&lt;float&gt;<sp/>net_wgts_;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>buffers<sp/>used<sp/>to<sp/>hold<sp/>Neural<sp/>Net<sp/>inputs<sp/>and<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*net_input_;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*net_output_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Init<sp/>the<sp/>classifier<sp/>provided<sp/>a<sp/>data-path<sp/>and<sp/>a<sp/>language<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;<ref refid="namespacetesseract-c__api-demo_1a5f5eb917f55d9d6ccaa95131ae5d171c" kindref="member">lang</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_lang_model" kindref="compound">LangModel</ref><sp/>*lang_mod);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Loads<sp/>the<sp/>NeuralNets<sp/>needed<sp/>for<sp/>the<sp/>classifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LoadNets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;lang);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>folding<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>returns<sp/>true<sp/>on<sp/>success<sp/>or<sp/>if<sp/>the<sp/>file<sp/>can&apos;t<sp/>be<sp/>read,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>false<sp/>if<sp/>an<sp/>error<sp/>is<sp/>encountered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>LoadFoldingSets(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;data_file_path,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;lang,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_lang_model" kindref="compound">LangModel</ref><sp/>*lang_mod);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Folds<sp/>the<sp/>output<sp/>of<sp/>the<sp/>NeuralNet<sp/>using<sp/>the<sp/>loaded<sp/>folding<sp/>sets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Fold();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Scales<sp/>the<sp/>input<sp/>char_samp<sp/>and<sp/>feeds<sp/>it<sp/>to<sp/>the<sp/>NeuralNet<sp/>as<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RunNets(<ref refid="classtesseract_1_1_char_samp" kindref="compound">CharSamp</ref><sp/>*char_samp);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>HYBRID_NEURAL_NET_CLASSIFIER_H</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/hybrid_neural_net_classifier.h"/>
  </compounddef>
</doxygen>
