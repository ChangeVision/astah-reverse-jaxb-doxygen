<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_s_t_r_i_n_g" kind="class" prot="public">
    <compoundname>STRING</compoundname>
    <includes refid="strngs_8h" local="no">strngs.h</includes>
    <innerclass refid="struct_s_t_r_i_n_g_1_1_s_t_r_i_n_g___h_e_a_d_e_r" prot="private">STRING::STRING_HEADER</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_s_t_r_i_n_g_1aa452ad82cba5f42179db37da8a9cef92" prot="private" static="no">
        <type>struct STRING::STRING_HEADER</type>
        <definition>typedef struct STRING::STRING_HEADER  STRING::STRING_HEADER</definition>
        <argsstring></argsstring>
        <name>STRING_HEADER</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_s_t_r_i_n_g_1a8120eed50cfcfc18a07b1e6e0f0dd6fa" prot="private" static="no" mutable="no">
        <type>STRING_HEADER *</type>
        <definition>STRING_HEADER* STRING::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="124" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a1c63ec33ab6f6afeb82827be3d4e6ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STRING::STRING</definition>
        <argsstring>()</argsstring>
        <name>STRING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="43" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a6a78dbb21ad4450d44e833a21ec6576c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STRING::STRING</definition>
        <argsstring>(const STRING &amp;string)</argsstring>
        <name>STRING</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="44" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="103" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1aa23a4d1cacabbf5361a5ea641fb141e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STRING::STRING</definition>
        <argsstring>(const char *string)</argsstring>
        <name>STRING</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="45" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="112" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a21efec4fdaf6c7bc96be3c634b4f6b7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>STRING::~STRING</definition>
        <argsstring>()</argsstring>
        <name>~STRING</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="46" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1ad2e7e107c5f78f7f716e7688b1cc2d4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool STRING::Serialize</definition>
        <argsstring>(FILE *fp) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="49" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="129" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1addf44387285a0498e500b934eb7825f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool STRING::DeSerialize</definition>
        <argsstring>(bool swap, FILE *fp)</argsstring>
        <name>DeSerialize</name>
        <param>
          <type>bool</type>
          <declname>swap</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="137" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1ad4c1a804168d9442f125944e7eb5159d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 STRING::contains</definition>
        <argsstring>(const char c) const </argsstring>
        <name>contains</name>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="54" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a168505a533eda60219c93e25adf4cdc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 STRING::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="55" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a0c93665497f997cdd426cc8bfb1955e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 STRING::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * STRING::string</definition>
        <argsstring>() const </argsstring>
        <name>string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="57" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="156" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a8bc37495184603e527daece60b4d265d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* STRING::strdup</definition>
        <argsstring>() const </argsstring>
        <name>strdup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="59" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a936654344db4a72af300d466b88b7aa8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>char &amp;</type>
        <definition>char &amp; STRING::operator[]</definition>
        <argsstring>(inT32 index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="70" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="230" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a70cb880f818d4af4a4f4036032c3e9dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void STRING::split</definition>
        <argsstring>(const char c, GenericVector&lt; STRING &gt; *splited)</argsstring>
        <name>split</name>
        <param>
          <type>const char</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &gt; *</type>
          <declname>splited</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="72" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="238" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a0d5a6c456f8e3ef4b4a5077031573df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void STRING::truncate_at</definition>
        <argsstring>(inT32 index)</argsstring>
        <name>truncate_at</name>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="73" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="223" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a69fa65451960a21d0555da5ae2cad9b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 STRING::operator==</definition>
        <argsstring>(const STRING &amp;string) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="75" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="258" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a7de200e4b367759b370e9b610de05490" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 STRING::operator!=</definition>
        <argsstring>(const STRING &amp;string) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="76" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="270" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1ac6ed1c0f65f7fa05e2fea9e9d21b87d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 STRING::operator!=</definition>
        <argsstring>(const char *string) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="77" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="282" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a6db60c4e6e34865155a64e1b1fdca5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
        <definition>STRING &amp; STRING::operator=</definition>
        <argsstring>(const char *string)</argsstring>
        <name>operator=</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="79" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="344" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1afcf3d146103695be14189118b7ddc2c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
        <definition>STRING &amp; STRING::operator=</definition>
        <argsstring>(const STRING &amp;string)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="80" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="295" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a7072304f2deae96e520b93b44a37424b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref></type>
        <definition>STRING STRING::operator+</definition>
        <argsstring>(const STRING &amp;string) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="82" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="378" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a8313e59dfb842b027a228d4444ee2a55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref></type>
        <definition>STRING STRING::operator+</definition>
        <argsstring>(const char ch) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="83" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="387" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1af223fab2ff1f3ff775308cd615705b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
        <definition>STRING &amp; STRING::operator+=</definition>
        <argsstring>(const char *string)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="85" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="407" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1ab10c5d733cd8dd0c6245873032579214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
        <definition>STRING &amp; STRING::operator+=</definition>
        <argsstring>(const STRING &amp;string)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="86" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="311" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a5f9408cef7ba8108ba67bd7086f07dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
        <definition>STRING &amp; STRING::operator+=</definition>
        <argsstring>(const char ch)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="87" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="432" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a8cfe836a7f55f4761936ea2231b6b9d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void STRING::assign</definition>
        <argsstring>(const char *cstr, int len)</argsstring>
        <name>assign</name>
        <param>
          <type>const char *</type>
          <declname>cstr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="90" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="365" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void STRING::add_str_int</definition>
        <argsstring>(const char *str, int number)</argsstring>
        <name>add_str_int</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="96" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="334" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a776bc24b07f530e0310041e5b6677dc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void STRING::ensure</definition>
        <argsstring>(inT32 min_capacity)</argsstring>
        <name>ensure</name>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>min_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="99" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="99" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a6f4dd330ecf1428d6a754d8bab18c1c4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>STRING_HEADER *</type>
        <definition>STRING_HEADER* STRING::GetHeader</definition>
        <argsstring>()</argsstring>
        <name>GetHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="127" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1aca1e1cec0725d57e9cc82d46ce011870" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const STRING_HEADER *</type>
        <definition>const STRING_HEADER* STRING::GetHeader</definition>
        <argsstring>() const </argsstring>
        <name>GetHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="130" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a507bd4e8972dc8b3199f590cdb42f4c8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* STRING::GetCStr</definition>
        <argsstring>()</argsstring>
        <name>GetCStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="135" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a9d43cef8eb49283c1a84da08100a4483" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* STRING::GetCStr</definition>
        <argsstring>() const </argsstring>
        <name>GetCStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="139" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a81d67657b3a2d1a68612210db0eb34a0" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool STRING::InvariantOk</definition>
        <argsstring>() const </argsstring>
        <name>InvariantOk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="142" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a485680a2341c046fba9053db2cae971d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * STRING::ensure_cstr</definition>
        <argsstring>(inT32 min_capacity)</argsstring>
        <name>ensure_cstr</name>
        <param>
          <type><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
          <declname>min_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="154" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="63" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a498fd5c72721546d43edec0111c3454c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void STRING::FixHeader</definition>
        <argsstring>() const </argsstring>
        <name>FixHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="156" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1ada44c7da3dbe90af83b02736c5d05dd4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * STRING::AllocData</definition>
        <argsstring>(int used, int capacity)</argsstring>
        <name>AllocData</name>
        <param>
          <type>int</type>
          <declname>used</declname>
        </param>
        <param>
          <type>int</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="158" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="47" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_s_t_r_i_n_g_1a245046f68fabad459bb833384f02ab60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void STRING::DiscardData</definition>
        <argsstring>()</argsstring>
        <name>DiscardData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="159" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/ccutil/strngs.h" line="41" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccutil/strngs.h" bodystart="40" bodyend="160"/>
    <listofallmembers>
      <member refid="class_s_t_r_i_n_g_1a779cd637dd42d58d5500a3a657077e84" prot="public" virt="non-virtual"><scope>STRING</scope><name>add_str_int</name></member>
      <member refid="class_s_t_r_i_n_g_1ada44c7da3dbe90af83b02736c5d05dd4" prot="private" virt="non-virtual"><scope>STRING</scope><name>AllocData</name></member>
      <member refid="class_s_t_r_i_n_g_1a8cfe836a7f55f4761936ea2231b6b9d2" prot="public" virt="non-virtual"><scope>STRING</scope><name>assign</name></member>
      <member refid="class_s_t_r_i_n_g_1ad4c1a804168d9442f125944e7eb5159d" prot="public" virt="non-virtual"><scope>STRING</scope><name>contains</name></member>
      <member refid="class_s_t_r_i_n_g_1a8120eed50cfcfc18a07b1e6e0f0dd6fa" prot="private" virt="non-virtual"><scope>STRING</scope><name>data_</name></member>
      <member refid="class_s_t_r_i_n_g_1addf44387285a0498e500b934eb7825f8" prot="public" virt="non-virtual"><scope>STRING</scope><name>DeSerialize</name></member>
      <member refid="class_s_t_r_i_n_g_1a245046f68fabad459bb833384f02ab60" prot="private" virt="non-virtual"><scope>STRING</scope><name>DiscardData</name></member>
      <member refid="class_s_t_r_i_n_g_1a776bc24b07f530e0310041e5b6677dc9" prot="public" virt="non-virtual"><scope>STRING</scope><name>ensure</name></member>
      <member refid="class_s_t_r_i_n_g_1a485680a2341c046fba9053db2cae971d" prot="private" virt="non-virtual"><scope>STRING</scope><name>ensure_cstr</name></member>
      <member refid="class_s_t_r_i_n_g_1a498fd5c72721546d43edec0111c3454c" prot="private" virt="non-virtual"><scope>STRING</scope><name>FixHeader</name></member>
      <member refid="class_s_t_r_i_n_g_1a507bd4e8972dc8b3199f590cdb42f4c8" prot="private" virt="non-virtual"><scope>STRING</scope><name>GetCStr</name></member>
      <member refid="class_s_t_r_i_n_g_1a9d43cef8eb49283c1a84da08100a4483" prot="private" virt="non-virtual"><scope>STRING</scope><name>GetCStr</name></member>
      <member refid="class_s_t_r_i_n_g_1a6f4dd330ecf1428d6a754d8bab18c1c4" prot="private" virt="non-virtual"><scope>STRING</scope><name>GetHeader</name></member>
      <member refid="class_s_t_r_i_n_g_1aca1e1cec0725d57e9cc82d46ce011870" prot="private" virt="non-virtual"><scope>STRING</scope><name>GetHeader</name></member>
      <member refid="class_s_t_r_i_n_g_1a81d67657b3a2d1a68612210db0eb34a0" prot="private" virt="non-virtual"><scope>STRING</scope><name>InvariantOk</name></member>
      <member refid="class_s_t_r_i_n_g_1a168505a533eda60219c93e25adf4cdc5" prot="public" virt="non-virtual"><scope>STRING</scope><name>length</name></member>
      <member refid="class_s_t_r_i_n_g_1a7de200e4b367759b370e9b610de05490" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator!=</name></member>
      <member refid="class_s_t_r_i_n_g_1ac6ed1c0f65f7fa05e2fea9e9d21b87d4" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator!=</name></member>
      <member refid="class_s_t_r_i_n_g_1a7072304f2deae96e520b93b44a37424b" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator+</name></member>
      <member refid="class_s_t_r_i_n_g_1a8313e59dfb842b027a228d4444ee2a55" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator+</name></member>
      <member refid="class_s_t_r_i_n_g_1af223fab2ff1f3ff775308cd615705b3f" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator+=</name></member>
      <member refid="class_s_t_r_i_n_g_1ab10c5d733cd8dd0c6245873032579214" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator+=</name></member>
      <member refid="class_s_t_r_i_n_g_1a5f9408cef7ba8108ba67bd7086f07dde" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator+=</name></member>
      <member refid="class_s_t_r_i_n_g_1a6db60c4e6e34865155a64e1b1fdca5cb" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator=</name></member>
      <member refid="class_s_t_r_i_n_g_1afcf3d146103695be14189118b7ddc2c8" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator=</name></member>
      <member refid="class_s_t_r_i_n_g_1a69fa65451960a21d0555da5ae2cad9b2" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator==</name></member>
      <member refid="class_s_t_r_i_n_g_1a936654344db4a72af300d466b88b7aa8" prot="public" virt="non-virtual"><scope>STRING</scope><name>operator[]</name></member>
      <member refid="class_s_t_r_i_n_g_1ad2e7e107c5f78f7f716e7688b1cc2d4a" prot="public" virt="non-virtual"><scope>STRING</scope><name>Serialize</name></member>
      <member refid="class_s_t_r_i_n_g_1a0c93665497f997cdd426cc8bfb1955e6" prot="public" virt="non-virtual"><scope>STRING</scope><name>size</name></member>
      <member refid="class_s_t_r_i_n_g_1a70cb880f818d4af4a4f4036032c3e9dc" prot="public" virt="non-virtual"><scope>STRING</scope><name>split</name></member>
      <member refid="class_s_t_r_i_n_g_1a8bc37495184603e527daece60b4d265d" prot="public" virt="non-virtual"><scope>STRING</scope><name>strdup</name></member>
      <member refid="class_s_t_r_i_n_g_1a1c63ec33ab6f6afeb82827be3d4e6ab0" prot="public" virt="non-virtual"><scope>STRING</scope><name>STRING</name></member>
      <member refid="class_s_t_r_i_n_g_1a6a78dbb21ad4450d44e833a21ec6576c" prot="public" virt="non-virtual"><scope>STRING</scope><name>STRING</name></member>
      <member refid="class_s_t_r_i_n_g_1aa23a4d1cacabbf5361a5ea641fb141e0" prot="public" virt="non-virtual"><scope>STRING</scope><name>STRING</name></member>
      <member refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" prot="public" virt="non-virtual"><scope>STRING</scope><name>string</name></member>
      <member refid="class_s_t_r_i_n_g_1aa452ad82cba5f42179db37da8a9cef92" prot="private" virt="non-virtual"><scope>STRING</scope><name>STRING_HEADER</name></member>
      <member refid="class_s_t_r_i_n_g_1a0d5a6c456f8e3ef4b4a5077031573df8" prot="public" virt="non-virtual"><scope>STRING</scope><name>truncate_at</name></member>
      <member refid="class_s_t_r_i_n_g_1a21efec4fdaf6c7bc96be3c634b4f6b7f" prot="public" virt="non-virtual"><scope>STRING</scope><name>~STRING</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
