<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="tabvector_8cpp" kind="file">
    <compoundname>tabvector.cpp</compoundname>
    <includes refid="tabvector_8h" local="yes">tabvector.h</includes>
    <includes refid="blobbox_8h" local="yes">blobbox.h</includes>
    <includes refid="colfind_8h" local="yes">colfind.h</includes>
    <includes refid="colpartitionset_8h" local="yes">colpartitionset.h</includes>
    <includes refid="detlinefit_8h" local="yes">detlinefit.h</includes>
    <includes refid="statistc_8h" local="yes">statistc.h</includes>
    <incdepgraph>
      <node id="39749">
        <label>colfind.h</label>
        <link refid="colfind_8h"/>
        <childnode refid="39750" relation="include">
        </childnode>
        <childnode refid="39753" relation="include">
        </childnode>
        <childnode refid="39754" relation="include">
        </childnode>
        <childnode refid="39756" relation="include">
        </childnode>
        <childnode refid="39741" relation="include">
        </childnode>
        <childnode refid="39757" relation="include">
        </childnode>
      </node>
      <node id="39734">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="39702" relation="include">
        </childnode>
        <childnode refid="39735" relation="include">
        </childnode>
        <childnode refid="39736" relation="include">
        </childnode>
        <childnode refid="39741" relation="include">
        </childnode>
        <childnode refid="39748" relation="include">
        </childnode>
      </node>
      <node id="39699">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="39700" relation="include">
        </childnode>
        <childnode refid="39702" relation="include">
        </childnode>
        <childnode refid="39719" relation="include">
        </childnode>
        <childnode refid="39735" relation="include">
        </childnode>
        <childnode refid="39723" relation="include">
        </childnode>
        <childnode refid="39701" relation="include">
        </childnode>
      </node>
      <node id="39724">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="39701">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="39702" relation="include">
        </childnode>
        <childnode refid="39715" relation="include">
        </childnode>
        <childnode refid="39723" relation="include">
        </childnode>
        <childnode refid="39725" relation="include">
        </childnode>
        <childnode refid="39733" relation="include">
        </childnode>
      </node>
      <node id="39748">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39704" relation="include">
        </childnode>
        <childnode refid="39725" relation="include">
        </childnode>
      </node>
      <node id="39708">
        <label>stdlib.h</label>
      </node>
      <node id="39705">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="39706" relation="include">
        </childnode>
      </node>
      <node id="39758">
        <label>detlinefit.h</label>
        <link refid="detlinefit_8h"/>
        <childnode refid="39717" relation="include">
        </childnode>
      </node>
      <node id="39732">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="39712" relation="include">
        </childnode>
      </node>
      <node id="39733">
        <label>allheaders.h</label>
      </node>
      <node id="39725">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
      </node>
      <node id="39707">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="39708" relation="include">
        </childnode>
        <childnode refid="39709" relation="include">
        </childnode>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39710" relation="include">
        </childnode>
        <childnode refid="39712" relation="include">
        </childnode>
        <childnode refid="39713" relation="include">
        </childnode>
      </node>
      <node id="39702">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39704" relation="include">
        </childnode>
        <childnode refid="39707" relation="include">
        </childnode>
        <childnode refid="39714" relation="include">
        </childnode>
      </node>
      <node id="39737">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="39715" relation="include">
        </childnode>
        <childnode refid="39723" relation="include">
        </childnode>
      </node>
      <node id="39711">
        <label>stddef.h</label>
      </node>
      <node id="39712">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="39704" relation="include">
        </childnode>
      </node>
      <node id="39746">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="39744" relation="include">
        </childnode>
        <childnode refid="39719" relation="include">
        </childnode>
        <childnode refid="39717" relation="include">
        </childnode>
        <childnode refid="39723" relation="include">
        </childnode>
        <childnode refid="39725" relation="include">
        </childnode>
        <childnode refid="39747" relation="include">
        </childnode>
      </node>
      <node id="39706">
        <label>limits.h</label>
      </node>
      <node id="39751">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="39701" relation="include">
        </childnode>
        <childnode refid="39734" relation="include">
        </childnode>
        <childnode refid="39731" relation="include">
        </childnode>
        <childnode refid="39699" relation="include">
        </childnode>
      </node>
      <node id="39720">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="39718" relation="include">
        </childnode>
      </node>
      <node id="39721">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="39717" relation="include">
        </childnode>
      </node>
      <node id="39735">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39704" relation="include">
        </childnode>
        <childnode refid="39707" relation="include">
        </childnode>
        <childnode refid="39714" relation="include">
        </childnode>
      </node>
      <node id="39709">
        <label>string.h</label>
      </node>
      <node id="39757">
        <label>textlineprojection.h</label>
        <link refid="textlineprojection_8h"/>
        <childnode refid="39700" relation="include">
        </childnode>
      </node>
      <node id="39723">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="39718" relation="include">
        </childnode>
        <childnode refid="39717" relation="include">
        </childnode>
        <childnode refid="39724" relation="include">
        </childnode>
        <childnode refid="39725" relation="include">
        </childnode>
        <childnode refid="39726" relation="include">
        </childnode>
      </node>
      <node id="39722">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="39704" relation="include">
        </childnode>
      </node>
      <node id="39752">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="39729">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="39704" relation="include">
        </childnode>
      </node>
      <node id="39698">
        <label>textord/tabvector.cpp</label>
        <link refid="tabvector.cpp"/>
        <childnode refid="39699" relation="include">
        </childnode>
        <childnode refid="39734" relation="include">
        </childnode>
        <childnode refid="39749" relation="include">
        </childnode>
        <childnode refid="39756" relation="include">
        </childnode>
        <childnode refid="39758" relation="include">
        </childnode>
        <childnode refid="39748" relation="include">
        </childnode>
      </node>
      <node id="39754">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="39701" relation="include">
        </childnode>
        <childnode refid="39755" relation="include">
        </childnode>
        <childnode refid="39756" relation="include">
        </childnode>
      </node>
      <node id="39715">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="39716" relation="include">
        </childnode>
        <childnode refid="39721" relation="include">
        </childnode>
        <childnode refid="39722" relation="include">
        </childnode>
        <childnode refid="39723" relation="include">
        </childnode>
        <childnode refid="39732" relation="include">
        </childnode>
        <childnode refid="39725" relation="include">
        </childnode>
      </node>
      <node id="39736">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="39727" relation="include">
        </childnode>
        <childnode refid="39722" relation="include">
        </childnode>
        <childnode refid="39735" relation="include">
        </childnode>
        <childnode refid="39731" relation="include">
        </childnode>
        <childnode refid="39732" relation="include">
        </childnode>
        <childnode refid="39737" relation="include">
        </childnode>
        <childnode refid="39738" relation="include">
        </childnode>
      </node>
      <node id="39738">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39739" relation="include">
        </childnode>
        <childnode refid="39736" relation="include">
        </childnode>
      </node>
      <node id="39713">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="39712" relation="include">
        </childnode>
      </node>
      <node id="39750">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="39751" relation="include">
        </childnode>
        <childnode refid="39729" relation="include">
        </childnode>
        <childnode refid="39699" relation="include">
        </childnode>
        <childnode refid="39752" relation="include">
        </childnode>
      </node>
      <node id="39718">
        <label>math.h</label>
      </node>
      <node id="39716">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="39717" relation="include">
        </childnode>
        <childnode refid="39721" relation="include">
        </childnode>
      </node>
      <node id="39714">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="39712" relation="include">
        </childnode>
      </node>
      <node id="39740">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="39717" relation="include">
        </childnode>
      </node>
      <node id="39744">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="39741">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="39742" relation="include">
        </childnode>
        <childnode refid="39743" relation="include">
        </childnode>
        <childnode refid="39738" relation="include">
        </childnode>
        <childnode refid="39745" relation="include">
        </childnode>
      </node>
      <node id="39727">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39728" relation="include">
        </childnode>
        <childnode refid="39731" relation="include">
        </childnode>
      </node>
      <node id="39728">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39708" relation="include">
        </childnode>
        <childnode refid="39729" relation="include">
        </childnode>
        <childnode refid="39712" relation="include">
        </childnode>
        <childnode refid="39730" relation="include">
        </childnode>
        <childnode refid="39724" relation="include">
        </childnode>
      </node>
      <node id="39710">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="39711" relation="include">
        </childnode>
        <childnode refid="39704" relation="include">
        </childnode>
      </node>
      <node id="39700">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="39701" relation="include">
        </childnode>
        <childnode refid="39734" relation="include">
        </childnode>
      </node>
      <node id="39743">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="39744" relation="include">
        </childnode>
        <childnode refid="39719" relation="include">
        </childnode>
        <childnode refid="39731" relation="include">
        </childnode>
      </node>
      <node id="39719">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39704" relation="include">
        </childnode>
        <childnode refid="39707" relation="include">
        </childnode>
        <childnode refid="39714" relation="include">
        </childnode>
      </node>
      <node id="39755">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="39701" relation="include">
        </childnode>
        <childnode refid="39734" relation="include">
        </childnode>
        <childnode refid="39724" relation="include">
        </childnode>
        <childnode refid="39741" relation="include">
        </childnode>
        <childnode refid="39723" relation="include">
        </childnode>
        <childnode refid="39725" relation="include">
        </childnode>
        <childnode refid="39750" relation="include">
        </childnode>
        <childnode refid="39699" relation="include">
        </childnode>
      </node>
      <node id="39753">
        <label>imagefind.h</label>
        <link refid="imagefind_8h"/>
        <childnode refid="39704" relation="include">
        </childnode>
      </node>
      <node id="39717">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39718" relation="include">
        </childnode>
        <childnode refid="39719" relation="include">
        </childnode>
        <childnode refid="39720" relation="include">
        </childnode>
      </node>
      <node id="39742">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="39710" relation="include">
        </childnode>
      </node>
      <node id="39726">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="39727" relation="include">
        </childnode>
      </node>
      <node id="39747">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="39704">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="39705" relation="include">
        </childnode>
      </node>
      <node id="39745">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="39702" relation="include">
        </childnode>
        <childnode refid="39742" relation="include">
        </childnode>
        <childnode refid="39731" relation="include">
        </childnode>
        <childnode refid="39746" relation="include">
        </childnode>
        <childnode refid="39747" relation="include">
        </childnode>
      </node>
      <node id="39756">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="39755" relation="include">
        </childnode>
        <childnode refid="39728" relation="include">
        </childnode>
        <childnode refid="39723" relation="include">
        </childnode>
        <childnode refid="39699" relation="include">
        </childnode>
      </node>
      <node id="39703">
        <label>stdio.h</label>
      </node>
      <node id="39731">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39709" relation="include">
        </childnode>
        <childnode refid="39705" relation="include">
        </childnode>
        <childnode refid="39710" relation="include">
        </childnode>
      </node>
      <node id="39730">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="39703" relation="include">
        </childnode>
        <childnode refid="39709" relation="include">
        </childnode>
      </node>
      <node id="39739">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="39740" relation="include">
        </childnode>
        <childnode refid="39707" relation="include">
        </childnode>
        <childnode refid="39710" relation="include">
        </childnode>
        <childnode refid="39723" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabvector.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Class<sp/>to<sp/>hold<sp/>a<sp/>near-vertical<sp/>vector<sp/>representing<sp/>a<sp/>tab-stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Apr<sp/>10<sp/>16:28:01<sp/>PST<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4244)<sp/><sp/>//<sp/>Conversion<sp/>warnings</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tabvector_8h" kindref="compound">tabvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="blobbox_8h" kindref="compound">blobbox.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colfind_8h" kindref="compound">colfind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitionset_8h" kindref="compound">colpartitionset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="detlinefit_8h" kindref="compound">detlinefit.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="statistc_8h" kindref="compound">statistc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Include<sp/>automatically<sp/>generated<sp/>configuration<sp/>file<sp/>if<sp/>running<sp/>autoconf.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;config_auto.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiple<sp/>of<sp/>height<sp/>used<sp/>as<sp/>a<sp/>gutter<sp/>for<sp/>evaluation<sp/>search.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a5e5c88d73de712626bb45049f05bf935" kindref="member">kGutterMultiple</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiple<sp/>of<sp/>neighbour<sp/>gap<sp/>that<sp/>we<sp/>expect<sp/>the<sp/>gutter<sp/>gap<sp/>to<sp/>be<sp/>at<sp/>minimum.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ae01d1c3ecd3191b3fd9b5df6fc7329c1" kindref="member">kGutterToNeighbourRatio</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pixel<sp/>distance<sp/>for<sp/>tab<sp/>vectors<sp/>to<sp/>be<sp/>considered<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a70fef17dce833d756ce25024339559ab" kindref="member">kSimilarVectorDist</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pixel<sp/>distance<sp/>for<sp/>ragged<sp/>tab<sp/>vectors<sp/>to<sp/>be<sp/>considered<sp/>the<sp/>same<sp/>if<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>nothing<sp/>in<sp/>the<sp/>overlap<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1afe209ead2031e46e5acc7e412edbb078" kindref="member">kSimilarRaggedDist</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Max<sp/>multiple<sp/>of<sp/>height<sp/>to<sp/>allow<sp/>filling<sp/>in<sp/>between<sp/>blobs<sp/>when<sp/>evaluating.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1ac71cf6db3acc20786941d1146f15bf2b" kindref="member">kMaxFillinMultiple</ref><sp/>=<sp/>11;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Min<sp/>fraction<sp/>of<sp/>mean<sp/>gutter<sp/>size<sp/>to<sp/>allow<sp/>a<sp/>gutter<sp/>on<sp/>a<sp/>good<sp/>tab<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1adde25237f36db6088af89a6a01a903df" kindref="member">kMinGutterFraction</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiple<sp/>of<sp/>1/n<sp/>lines<sp/>as<sp/>a<sp/>minimum<sp/>gutter<sp/>in<sp/>evaluation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aaa71fcc94da61f06092ac41c1000092b" kindref="member">kLineCountReciprocal</ref><sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constant<sp/>add-on<sp/>for<sp/>minimum<sp/>gutter<sp/>for<sp/>aligned<sp/>tabs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1e54ca6764ad8a50cdbc42ebe335784e" kindref="member">kMinAlignedGutter</ref><sp/>=<sp/>0.25;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Constant<sp/>add-on<sp/>for<sp/>minimum<sp/>gutter<sp/>for<sp/>ragged<sp/>tabs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a8a2e596e8a74bfa615969413f2059244" kindref="member">kMinRaggedGutter</ref><sp/>=<sp/>1.5;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="namespacetesseract_1a9539ddbb56bbf8225df264cef0d86417" kindref="member">double_VAR</ref>(textord_tabvector_vertical_gap_fraction,<sp/>0.5,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;max<sp/>fraction<sp/>of<sp/>mean<sp/>blob<sp/>width<sp/>allowed<sp/>for<sp/>vertical<sp/>gaps<sp/>in<sp/>vertical<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="namespacetesseract_1a9539ddbb56bbf8225df264cef0d86417" kindref="member">double_VAR</ref>(textord_tabvector_vertical_box_ratio,<sp/>0.5,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Fraction<sp/>of<sp/>box<sp/>matches<sp/>required<sp/>to<sp/>declare<sp/>a<sp/>line<sp/>vertical&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="namespacetesseract_1a3b71ccfcd667bca92d2e6435845a4c9b" kindref="member">ELISTIZE</ref>(TabConstraint)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>constraint<sp/>for<sp/>the<sp/>top<sp/>or<sp/>bottom<sp/>of<sp/>this<sp/>TabVector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">void<sp/>TabConstraint::CreateConstraint(TabVector*<sp/>vector,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_top)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>TabConstraint*<sp/>constraint<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TabConstraint(vector,<sp/>is_top);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>TabConstraint_LIST*<sp/>constraints<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TabConstraint_LIST;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>TabConstraint_IT<sp/>it(constraints);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>it.add_to_end(constraint);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_top)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;set_top_constraints(constraints);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;set_bottom_constraints(constraints);</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Test<sp/>to<sp/>see<sp/>if<sp/>the<sp/>constraints<sp/>are<sp/>compatible<sp/>enough<sp/>to<sp/>merge.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_constraint_1afed4c53827765cd37f19c19eef8c56bb" kindref="member">TabConstraint::CompatibleConstraints</ref>(TabConstraint_LIST*<sp/>list1,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabConstraint_LIST*<sp/>list2)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list1<sp/>==<sp/>list2)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_min<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_max<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>constraint<sp/>compatibility\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>GetConstraints(list1,<sp/>&amp;y_min,<sp/>&amp;y_max);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>GetConstraints(list2,<sp/>&amp;y_min,<sp/>&amp;y_max);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Resulting<sp/>range<sp/>=<sp/>[%d,%d]\n&quot;</highlight><highlight class="normal">,<sp/>y_min,<sp/>y_max);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>y_max<sp/>&gt;=<sp/>y_min;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merge<sp/>the<sp/>lists<sp/>of<sp/>constraints<sp/>and<sp/>update<sp/>the<sp/>TabVector<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>list<sp/>is<sp/>deleted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_constraint_1aa0800603fcb709406c0641e77cad6bfd" kindref="member">TabConstraint::MergeConstraints</ref>(TabConstraint_LIST*<sp/>list1,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabConstraint_LIST*<sp/>list2)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list1<sp/>==<sp/>list2)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>TabConstraint_IT<sp/>it(list2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Merging<sp/>constraints\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>vectors<sp/>of<sp/>all<sp/>constraints<sp/>on<sp/>list2<sp/>are<sp/>now<sp/>going<sp/>to<sp/>be<sp/>on<sp/>list1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1ab385d0b05f6dd4e88f7924cfdc03be39" kindref="member">TabConstraint</ref>*<sp/>constraint<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind&gt;<sp/>3)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;vector_-&gt;Print(</highlight><highlight class="stringliteral">&quot;Merge&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraint-&gt;is_top_)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;vector_-&gt;set_top_constraints(list1);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;vector_-&gt;set_bottom_constraints(list1);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>it<sp/>=<sp/>list1;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>it.add_list_before(list2);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>list2;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>all<sp/>the<sp/>tops<sp/>and<sp/>bottoms<sp/>as<sp/>appropriate<sp/>to<sp/>a<sp/>mean<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constrained<sp/>range.<sp/>Delete<sp/>all<sp/>the<sp/>constraints<sp/>and<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_constraint_1a491c6bb6d99ecfc63c495912756f11fe" kindref="member">TabConstraint::ApplyConstraints</ref>(TabConstraint_LIST*<sp/>constraints)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_min<sp/>=<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_max<sp/>=<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>GetConstraints(constraints,<sp/>&amp;y_min,<sp/>&amp;y_max);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(y_min<sp/>+<sp/>y_max)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>TabConstraint_IT<sp/>it(constraints);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1ab385d0b05f6dd4e88f7924cfdc03be39" kindref="member">TabConstraint</ref>*<sp/>constraint<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector*<sp/>v<sp/>=<sp/>constraint-&gt;vector_;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(constraint-&gt;is_top_)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;SetYEnd(y);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;set_top_constraints(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;SetYStart(y);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;set_bottom_constraints(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>constraints;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><ref refid="classtesseract_1_1_tab_constraint_1ab385d0b05f6dd4e88f7924cfdc03be39" kindref="member">TabConstraint::TabConstraint</ref>(TabVector*<sp/>vector,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_top)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>:<sp/>vector_(vector),<sp/>is_top_(is_top)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_top)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>y_min_<sp/>=<sp/>vector-&gt;endpt().y();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>y_max_<sp/>=<sp/>vector-&gt;extended_ymax();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>y_max_<sp/>=<sp/>vector-&gt;startpt().y();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>y_min_<sp/>=<sp/>vector-&gt;extended_ymin();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>max<sp/>of<sp/>the<sp/>mins<sp/>and<sp/>the<sp/>min<sp/>of<sp/>the<sp/>maxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabConstraint::GetConstraints(TabConstraint_LIST*<sp/>constraints,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>y_min,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>y_max)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>TabConstraint_IT<sp/>it(constraints);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1ab385d0b05f6dd4e88f7924cfdc03be39" kindref="member">TabConstraint</ref>*<sp/>constraint<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Constraint<sp/>is<sp/>[%d,%d]&quot;</highlight><highlight class="normal">,<sp/>constraint-&gt;y_min_,<sp/>constraint-&gt;y_max_);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>constraint-&gt;vector_-&gt;Print(</highlight><highlight class="stringliteral">&quot;<sp/>for&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>*y_min<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(*y_min,<sp/>constraint-&gt;y_min_);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>*y_max<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(*y_max,<sp/>constraint-&gt;y_max_);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="elst2_8h_1a574b9d080e6a413d915407cea6ac0243" kindref="member">ELIST2IZE</ref>(TabVector)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="clst_8h_1a721c1e0acc4a882f9ea934613aee64be" kindref="member">CLISTIZE</ref>(TabVector)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>constructor<sp/>is<sp/>private.<sp/>See<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>file...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">TabVector::~TabVector()<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Public<sp/>factory<sp/>to<sp/>build<sp/>a<sp/>TabVector<sp/>from<sp/>a<sp/>list<sp/>of<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>TabVector<sp/>will<sp/>be<sp/>of<sp/>the<sp/>given<sp/>alignment<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>input<sp/>vertical<sp/>vector<sp/>is<sp/>used<sp/>in<sp/>fitting,<sp/>and<sp/>the<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vertical_x,<sp/>vertical_y<sp/>have<sp/>the<sp/>resulting<sp/>line<sp/>vector<sp/>added<sp/>to<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>alignment<sp/>is<sp/>not<sp/>ragged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>extended_start_y<sp/>and<sp/>extended_end_y<sp/>are<sp/>the<sp/>maximum<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extension<sp/>to<sp/>the<sp/>line<sp/>segment<sp/>that<sp/>can<sp/>be<sp/>used<sp/>to<sp/>align<sp/>with<sp/>others.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>input<sp/>CLIST<sp/>of<sp/>BLOBNBOX<sp/>good_points<sp/>is<sp/>consumed<sp/>and<sp/>taken<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">TabVector*<sp/><ref refid="classtesseract_1_1_tab_vector_1a66c3cdb82a3378aba8c0838d4fb64805" kindref="member">TabVector::FitVector</ref>(<ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822" kindref="member">TabAlignment</ref><sp/>alignment,<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>vertical,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>extended_start_y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extended_end_y,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BLOBNBOX_CLIST*<sp/>good_points,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>vertical_y)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>vector<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>(extended_start_y,<sp/>extended_end_y,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alignment,<sp/>good_points);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vector-&gt;Fit(vertical,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>vector;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vector-&gt;IsRagged())<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>vertical<sp/>=<sp/>vector-&gt;endpt_<sp/>-<sp/>vector-&gt;startpt_;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weight<sp/>=<sp/>vector-&gt;BoxCount();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>*vertical_x<sp/>+=<sp/>vertical.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>*vertical_y<sp/>+=<sp/>vertical.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>*<sp/>weight;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>ragged<sp/>TabVector<sp/>by<sp/>copying<sp/>another&apos;s<sp/>direction,<sp/>shifting<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>match<sp/>the<sp/>given<sp/>blob,<sp/>and<sp/>making<sp/>its<sp/>initial<sp/>extent<sp/>the<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>blob,<sp/>but<sp/>its<sp/>extended<sp/>bounds<sp/>from<sp/>the<sp/>bounds<sp/>of<sp/>the<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector::TabVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TabVector&amp;<sp/>src,<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822" kindref="member">TabAlignment</ref><sp/>alignment,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>vertical_skew,<sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>:<sp/>extended_ymin_(src.extended_ymin_),<sp/>extended_ymax_(src.extended_ymax_),</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_key_(0),<sp/>percent_score_(0),<sp/>mean_width_(0),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>needs_refit_(true),<sp/>needs_evaluation_(true),<sp/>intersects_other_lines_(false),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>alignment_(alignment),</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>top_constraints_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>bottom_constraints_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>it.add_to_end(blob);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLeftTab())<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>startpt_<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a9f46d9e51b8b69c5cb6d031e9ac34978" kindref="member">botleft</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>endpt_<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1ad6f19fe78e5fcc3a824310d3f75ad358" kindref="member">topleft</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>startpt_<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a24d69d48b18162bf1c8e9e62ec00ecfe" kindref="member">botright</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>endpt_<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a02511fc69b598b332ac1f4af6c943f8f" kindref="member">topright</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>sort_key_<sp/>=<sp/>SortKey(vertical_skew,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(startpt_.x()<sp/>+<sp/>endpt_.x())<sp/>/<sp/>2,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(startpt_.y()<sp/>+<sp/>endpt_.y())<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>Print(</highlight><highlight class="stringliteral">&quot;Constructed<sp/>a<sp/>new<sp/>tab<sp/>vector:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>basic<sp/>attributes<sp/>of<sp/>a<sp/>tab<sp/>vector<sp/>for<sp/>simple<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>things<sp/>such<sp/>startpt,<sp/>endpt,<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Does<sp/>not<sp/>copy<sp/>things<sp/>such<sp/>as<sp/>partners,<sp/>boxes,<sp/>or<sp/>constraints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>if<sp/>you<sp/>only<sp/>need<sp/>vector<sp/>information<sp/>for<sp/>processing,<sp/>such</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>in<sp/>the<sp/>table<sp/>detection<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">TabVector*<sp/><ref refid="classtesseract_1_1_tab_vector_1a85e97aea6221fdd65f7dc490655942e1" kindref="member">TabVector::ShallowCopy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>copy<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>copy-&gt;startpt_<sp/>=<sp/>startpt_;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>copy-&gt;endpt_<sp/>=<sp/>endpt_;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>copy-&gt;alignment_<sp/>=<sp/>alignment_;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>copy-&gt;extended_ymax_<sp/>=<sp/>extended_ymax_;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>copy-&gt;extended_ymin_<sp/>=<sp/>extended_ymin_;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>copy-&gt;intersects_other_lines_<sp/>=<sp/>intersects_other_lines_;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>this<sp/>vector<sp/>to<sp/>include<sp/>the<sp/>supplied<sp/>blob<sp/>if<sp/>it<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>already<sp/>have<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1afd7bac6069bf5e24a1c89717e0e054ea" kindref="member">TabVector::ExtendToBox</ref>(<ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>new_blob)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>new_box<sp/>=<sp/>new_blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.empty())<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!it.at_last()<sp/>&amp;&amp;<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&lt;=<sp/>new_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blob<sp/>==<sp/>new_blob)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>it<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.forward();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blob<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&gt;=<sp/>new_box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>())<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.add_before_stay_put(new_blob);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>needs_refit_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>needs_refit_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>it.add_after_stay_put(new_blob);</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>ycoord<sp/>of<sp/>the<sp/>start<sp/>and<sp/>move<sp/>the<sp/>xcoord<sp/>to<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a86cf064d37b9834f5e241e5cf293d388" kindref="member">TabVector::SetYStart</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_y)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(<ref refid="classtesseract_1_1_tab_vector_1ae9a41b6a0ecc21d4ed94e4c8da804e0d" kindref="member">XAtY</ref>(start_y));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(start_y);</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>ycoord<sp/>of<sp/>the<sp/>end<sp/>and<sp/>move<sp/>the<sp/>xcoord<sp/>to<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a76be89fae1a8849259da4d5c24744e3a" kindref="member">TabVector::SetYEnd</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_y)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(<ref refid="classtesseract_1_1_tab_vector_1ae9a41b6a0ecc21d4ed94e4c8da804e0d" kindref="member">XAtY</ref>(end_y));</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(end_y);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotate<sp/>the<sp/>ends<sp/>by<sp/>the<sp/>given<sp/>vector.<sp/>Auto<sp/>flip<sp/>start<sp/>and<sp/>end<sp/>if<sp/>needed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a1131bcd14051ea7b18db72e535d60572" kindref="member">TabVector::Rotate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref>&amp;<sp/>rotation)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1aaedd825587ccb78583bbd6717793faea" kindref="member">rotate</ref>(rotation);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1aaedd825587ccb78583bbd6717793faea" kindref="member">rotate</ref>(rotation);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx<sp/>=<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>-<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy<sp/>=<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>-<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dy<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>abs(dy)<sp/>&gt;<sp/>abs(dx))<sp/>||<sp/>(dx<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>abs(dx)<sp/>&gt;<sp/>abs(dy)))<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>flip<sp/>start/end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>tmp<sp/>=<sp/>startpt_;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>startpt_<sp/>=<sp/>endpt_;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>endpt_<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>initial<sp/>constraints,<sp/>being<sp/>the<sp/>limits<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>vector<sp/>and<sp/>the<sp/>extended<sp/>ends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a0c401c7eee27c5a36d683b703ef8eb36" kindref="member">TabVector::SetupConstraints</ref>()<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1a2da3803f652487ceef7080fcf4f9263d" kindref="member">TabConstraint::CreateConstraint</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1a2da3803f652487ceef7080fcf4f9263d" kindref="member">TabConstraint::CreateConstraint</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>constraints<sp/>between<sp/>the<sp/>partners<sp/>of<sp/>this<sp/>TabVector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a756544b2573cf01eb7ed70a75d29a1e1" kindref="member">TabVector::SetupPartnerConstraints</ref>()<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>the<sp/>first<sp/>and<sp/>last<sp/>partner,<sp/>we<sp/>want<sp/>a<sp/>common<sp/>bottom<sp/>and<sp/>top,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>respectively,<sp/>and<sp/>for<sp/>each<sp/>change<sp/>of<sp/>partner,<sp/>we<sp/>want<sp/>a<sp/>common</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>top<sp/>of<sp/>first<sp/>with<sp/>bottom<sp/>of<sp/>next.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>TabVector_C_IT<sp/>it(&amp;partners_);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>prev_partner<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>partner<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner-&gt;top_constraints_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;bottom_constraints_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;Print(</highlight><highlight class="stringliteral">&quot;Impossible:<sp/>has<sp/>no<sp/>constraints&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a8cfd3dfed67ed93c57f40f15bc724e1e" kindref="member">Print</ref>(</highlight><highlight class="stringliteral">&quot;This<sp/>vector<sp/>has<sp/>it<sp/>as<sp/>a<sp/>partner&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_partner<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>first<sp/>partner,<sp/>so<sp/>common<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_constraint_1afed4c53827765cd37f19c19eef8c56bb" kindref="member">TabConstraint::CompatibleConstraints</ref>(bottom_constraints_,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;bottom_constraints_))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1aa0800603fcb709406c0641e77cad6bfd" kindref="member">TabConstraint::MergeConstraints</ref>(bottom_constraints_,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;bottom_constraints_);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>prev<sp/>top<sp/>to<sp/>be<sp/>common<sp/>with<sp/>partner<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_constraint_1afed4c53827765cd37f19c19eef8c56bb" kindref="member">TabConstraint::CompatibleConstraints</ref>(prev_partner-&gt;top_constraints_,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;bottom_constraints_))</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1aa0800603fcb709406c0641e77cad6bfd" kindref="member">TabConstraint::MergeConstraints</ref>(prev_partner-&gt;top_constraints_,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;bottom_constraints_);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_partner<sp/>=<sp/>partner;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.at_last())<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>last<sp/>partner,<sp/>so<sp/>common<sp/>top.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_constraint_1afed4c53827765cd37f19c19eef8c56bb" kindref="member">TabConstraint::CompatibleConstraints</ref>(top_constraints_,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;top_constraints_))</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1aa0800603fcb709406c0641e77cad6bfd" kindref="member">TabConstraint::MergeConstraints</ref>(top_constraints_,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;top_constraints_);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>the<sp/>constraints<sp/>between<sp/>this<sp/>and<sp/>its<sp/>partner.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a756544b2573cf01eb7ed70a75d29a1e1" kindref="member">TabVector::SetupPartnerConstraints</ref>(TabVector*<sp/>partner)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_constraint_1afed4c53827765cd37f19c19eef8c56bb" kindref="member">TabConstraint::CompatibleConstraints</ref>(bottom_constraints_,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;bottom_constraints_))</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1aa0800603fcb709406c0641e77cad6bfd" kindref="member">TabConstraint::MergeConstraints</ref>(bottom_constraints_,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;bottom_constraints_);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_constraint_1afed4c53827765cd37f19c19eef8c56bb" kindref="member">TabConstraint::CompatibleConstraints</ref>(top_constraints_,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;top_constraints_))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1aa0800603fcb709406c0641e77cad6bfd" kindref="member">TabConstraint::MergeConstraints</ref>(top_constraints_,</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner-&gt;top_constraints_);</highlight></codeline>
<codeline lineno="351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>constraints<sp/>to<sp/>modify<sp/>the<sp/>top<sp/>and<sp/>bottom.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a775e3ee55dad5be906f6c359001e5755" kindref="member">TabVector::ApplyConstraints</ref>()<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_constraints_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1a491c6bb6d99ecfc63c495912756f11fe" kindref="member">TabConstraint::ApplyConstraints</ref>(top_constraints_);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottom_constraints_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_constraint_1a491c6bb6d99ecfc63c495912756f11fe" kindref="member">TabConstraint::ApplyConstraints</ref>(bottom_constraints_);</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Merge<sp/>close<sp/>tab<sp/>vectors<sp/>of<sp/>the<sp/>same<sp/>side<sp/>that<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a19795eab9036e3f6eb8a274d2c2b0179" kindref="member">TabVector::MergeSimilarTabVectors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>vertical,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabVector_LIST*<sp/>vectors,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlobGrid*<sp/>grid)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>TabVector_IT<sp/>it1(vectors);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it1.mark_cycle_pt();<sp/>!it1.cycled_list();<sp/>it1.forward())<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>v1<sp/>=<sp/>it1.data();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector_IT<sp/>it2(it1);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it2.forward();<sp/>!it2.at_first();<sp/>it2.forward())<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>v2<sp/>=<sp/>it2.data();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v2-&gt;SimilarTo(vertical,<sp/>*v1,<sp/>grid))<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>into<sp/>the<sp/>forward<sp/>one,<sp/>in<sp/>case<sp/>the<sp/>combined<sp/>vector<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlaps<sp/>one<sp/>in<sp/>between.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2-&gt;Print(</highlight><highlight class="stringliteral">&quot;Merging&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1-&gt;Print(</highlight><highlight class="stringliteral">&quot;by<sp/>deleting&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2-&gt;MergeWith(vertical,<sp/>it1.extract());</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2-&gt;Print(</highlight><highlight class="stringliteral">&quot;Producing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>merged_vector<sp/>=<sp/>v2-&gt;endpt();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged_vector<sp/>-=<sp/>v2-&gt;startpt();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&amp;&amp;<sp/>abs(merged_vector.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>())<sp/>&gt;<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2-&gt;Print(</highlight><highlight class="stringliteral">&quot;Garbage<sp/>result<sp/>of<sp/>merge?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>this<sp/>vector<sp/>is<sp/>the<sp/>same<sp/>side,<sp/>overlaps,<sp/>and<sp/>close</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enough<sp/>to<sp/>the<sp/>other<sp/>to<sp/>be<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1ae1fe124b8c5cadc5685542f0b651ed44" kindref="member">TabVector::SimilarTo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>vertical,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TabVector&amp;<sp/>other,<sp/>BlobGrid*<sp/>grid)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="classtesseract_1_1_tab_vector_1aca11c6133632349da7728b88f0301b86" kindref="member">IsRightTab</ref>()<sp/>&amp;&amp;<sp/>other.IsRightTab())<sp/>||</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="classtesseract_1_1_tab_vector_1a2f25166aafb6fc9931586f9643a93be9" kindref="member">IsLeftTab</ref>()<sp/>&amp;&amp;<sp/>other.IsLeftTab()))<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>they<sp/>don&apos;t<sp/>overlap,<sp/>at<sp/>least<sp/>in<sp/>extensions,<sp/>then<sp/>there<sp/>is<sp/>no<sp/>chance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_vector_1a61efaf38034838e0bff0b98f2399a868" kindref="member">ExtendedOverlap</ref>(other.extended_ymax_,<sp/>other.extended_ymin_)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>fast<sp/>approximation<sp/>to<sp/>the<sp/>scale<sp/>factor<sp/>of<sp/>the<sp/>sort_key_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_scale<sp/>=<sp/>abs(vertical.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>());</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v_scale<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>they<sp/>are<sp/>close<sp/>enough,<sp/>then<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sort_key_<sp/>+<sp/><ref refid="namespacetesseract_1a70fef17dce833d756ce25024339559ab" kindref="member">kSimilarVectorDist</ref><sp/>*<sp/>v_scale<sp/>&gt;=<sp/>other.sort_key_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_key_<sp/>-<sp/><ref refid="namespacetesseract_1a70fef17dce833d756ce25024339559ab" kindref="member">kSimilarVectorDist</ref><sp/>*<sp/>v_scale<sp/>&lt;=<sp/>other.sort_key_)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ragged<sp/>tabs<sp/>get<sp/>a<sp/>bigger<sp/>threshold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_tab_vector_1af6eb1115ca878c8634273fbd5c5b2508" kindref="member">IsRagged</ref>()<sp/>||<sp/>!other.IsRagged()<sp/>||</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_key_<sp/>+<sp/><ref refid="namespacetesseract_1afe209ead2031e46e5acc7e412edbb078" kindref="member">kSimilarRaggedDist</ref><sp/>*<sp/>v_scale<sp/>&lt;<sp/>other.sort_key_<sp/>||</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_key_<sp/>-<sp/><ref refid="namespacetesseract_1afe209ead2031e46e5acc7e412edbb078" kindref="member">kSimilarRaggedDist</ref><sp/>*<sp/>v_scale<sp/>&gt;<sp/>other.sort_key_)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(grid<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>nothing<sp/>else<sp/>to<sp/>test!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>nothing<sp/>in<sp/>the<sp/>rectangle<sp/>between<sp/>the<sp/>vector<sp/>that<sp/>is<sp/>going<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move,<sp/>and<sp/>the<sp/>place<sp/>it<sp/>is<sp/>moving<sp/>to,<sp/>then<sp/>they<sp/>can<sp/>be<sp/>merged.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>vertical<sp/>search<sp/>for<sp/>any<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>mover<sp/>=<sp/>(<ref refid="classtesseract_1_1_tab_vector_1aca11c6133632349da7728b88f0301b86" kindref="member">IsRightTab</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort_key_<sp/>&lt;<sp/>other.sort_key_)<sp/>?<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>:<sp/>&amp;other;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_y<sp/>=<sp/>mover-&gt;endpt_.y();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_y<sp/>=<sp/>mover-&gt;startpt_.y();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(mover-&gt;XAtY(top_y),<sp/>mover-&gt;XAtY(bottom_y));</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(mover-&gt;XAtY(top_y),<sp/>mover-&gt;XAtY(bottom_y));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift<sp/>=<sp/>abs(sort_key_<sp/>-<sp/>other.sort_key_)<sp/>/<sp/>v_scale;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_vector_1aca11c6133632349da7728b88f0301b86" kindref="member">IsRightTab</ref>())<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>+=<sp/>shift;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>-=<sp/>shift;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>GridSearch&lt;BLOBNBOX,<sp/>BLOBNBOX_CLIST,<sp/>BLOBNBOX_C_IT&gt;<sp/>vsearch(grid);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>vsearch.StartVerticalSearch(left,<sp/>right,<sp/>top_y);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>blob;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((blob<sp/>=<sp/>vsearch.NextVerticalSearch(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>blob-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>&gt;<sp/>bottom_y)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&lt;<sp/>top_y)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Doesn&apos;t<sp/>overlap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_at_box<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1ae9a41b6a0ecc21d4ed94e4c8da804e0d" kindref="member">XAtY</ref>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_at_box<sp/>=<sp/>left_at_box;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_vector_1aca11c6133632349da7728b88f0301b86" kindref="member">IsRightTab</ref>())</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_at_box<sp/>+=<sp/>shift;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_at_box<sp/>-=<sp/>shift;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(right_at_box,<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>&gt;<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(left_at_box,<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()))</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Eat<sp/>the<sp/>other<sp/>TabVector<sp/>into<sp/>this<sp/>and<sp/>delete<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1acc275c669c16667896f87596e0a0107d" kindref="member">TabVector::MergeWith</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>vertical,<sp/>TabVector*<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>extended_ymin_<sp/>=<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(extended_ymin_,<sp/>other-&gt;extended_ymin_);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>extended_ymax_<sp/>=<sp/><ref refid="ndminx_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(extended_ymax_,<sp/>other-&gt;extended_ymax_);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other-&gt;IsRagged())<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>alignment_<sp/>=<sp/>other-&gt;alignment_;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>sort<sp/>the<sp/>two<sp/>lists<sp/>of<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it1(&amp;boxes_);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it2(&amp;other-&gt;boxes_);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!it2.empty())<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox2<sp/>=<sp/>it2.extract();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>it2.forward();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box2<sp/>=<sp/>bbox2-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox1<sp/>=<sp/>it1.data();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box1<sp/>=<sp/>bbox1-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(box1.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&lt;<sp/>box2.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&amp;&amp;<sp/>!it1.at_last())<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it1.forward();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bbox1<sp/>=<sp/>it1.data();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box1<sp/>=<sp/>bbox1-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(box1.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&lt;<sp/>box2.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it1.add_to_end(bbox2);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox1<sp/>!=<sp/>bbox2)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it1.add_before_stay_put(bbox2);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a7f793af3c19f46e111b1329d0c0cd674" kindref="member">Fit</ref>(vertical,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>other-&gt;Delete(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>new<sp/>element<sp/>to<sp/>the<sp/>list<sp/>of<sp/>partner<sp/>TabVectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Partners<sp/>must<sp/>be<sp/>added<sp/>in<sp/>order<sp/>of<sp/>increasing<sp/>y<sp/>coordinate<sp/>of<sp/>the<sp/>text<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>makes<sp/>them<sp/>partners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Groups<sp/>of<sp/>identical<sp/>partners<sp/>are<sp/>merged<sp/>into<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a16dffdf4f1828cf1da05059c9ec8dbef" kindref="member">TabVector::AddPartner</ref>(TabVector*<sp/>partner)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_vector_1aa8cd2e76b103d984c5c71094c7a79a46" kindref="member">IsSeparator</ref>()<sp/>||<sp/>partner-&gt;IsSeparator())</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>TabVector_C_IT<sp/>it(&amp;partners_);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.empty())<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>it.move_to_last();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.data()<sp/>==<sp/>partner)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>it.add_after_then_move(partner);</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>other<sp/>is<sp/>a<sp/>partner<sp/>of<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a524f1135813dc6352cbd1a27994ace47" kindref="member">TabVector::IsAPartner</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TabVector*<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>TabVector_C_IT<sp/>it(&amp;partners_);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.data()<sp/>==<sp/>other)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>names<sp/>must<sp/>be<sp/>synced<sp/>with<sp/>the<sp/>TabAlignment<sp/>enum<sp/>in<sp/>tabvector.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacetesseract_1af634680a235b3605fbe0ff57bbdcc971" kindref="member">kAlignmentNames</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Left<sp/>Aligned&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Left<sp/>Ragged&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Center&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Right<sp/>Aligned&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Right<sp/>Ragged&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;Separator&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal">};</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Print<sp/>basic<sp/>information<sp/>about<sp/>this<sp/>tab<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a8cfd3dfed67ed93c57f40f15bc724e1e" kindref="member">TabVector::Print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>&lt;null&gt;\n&quot;</highlight><highlight class="normal">,<sp/>prefix);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;%s<sp/>%s<sp/>(%d,%d)-&gt;(%d,%d)<sp/>w=%d<sp/>s=%d,<sp/>sort<sp/>key=%d,<sp/>boxes=%d,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>partners=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,<sp/><ref refid="namespacetesseract_1af634680a235b3605fbe0ff57bbdcc971" kindref="member">kAlignmentNames</ref>[alignment_],</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>(),<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>(),</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean_width_,<sp/>percent_score_,<sp/>sort_key_,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes_.length(),<sp/>partners_.length());</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal">}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Print<sp/>basic<sp/>information<sp/>about<sp/>this<sp/>tab<sp/>vector<sp/>and<sp/>every<sp/>box<sp/>in<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1af20bbcdb7dbdc4b396f39d7cb66ff112" kindref="member">TabVector::Debug</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>prefix)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a8cfd3dfed67ed93c57f40f15bc724e1e" kindref="member">Print</ref>(prefix);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Box<sp/>at<sp/>(%d,%d)-&gt;(%d,%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Draw<sp/>this<sp/>tabvector<sp/>in<sp/>place<sp/>in<sp/>the<sp/>given<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1aab69893adef9b26d0607dab84a925d24" kindref="member">TabVector::Display</ref>(<ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>tab_win)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="554"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_printable)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a66e5117e4930fdd9a43bdb674d57a719" kindref="member">ScrollView::BLUE</ref>);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alignment_<sp/>==<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a4bb9e250c5358790a63ef5b71cb5a9d3" kindref="member">TA_LEFT_ALIGNED</ref>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a3312de9754e4e61d9a699f23528a059a" kindref="member">ScrollView::LIME_GREEN</ref>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alignment_<sp/>==<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a63f1e8bdcb518d39f915c4a6f51126c9" kindref="member">TA_LEFT_RAGGED</ref>)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8acf8b3fe79bd99f51b05b218a8b0c5ee5" kindref="member">ScrollView::DARK_GREEN</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alignment_<sp/>==<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a0dfc605a485921b4a7c1616e32019513" kindref="member">TA_RIGHT_ALIGNED</ref>)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8aee71d1b0400315f55f86c9723631a10e" kindref="member">ScrollView::PINK</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alignment_<sp/>==<sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822a3eb640025f235401fd86bf1bf01e4a49" kindref="member">TA_RIGHT_RAGGED</ref>)</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a9a954d0f0149ee883cbcc5e0a379b460" kindref="member">ScrollView::CORAL</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a0eab2b208fc9a5e2774f92cf3e768982" kindref="member">ScrollView::WHITE</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a2ba16f17fc401bb28be1a08160207e45" kindref="member">Line</ref>(startpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>(),<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>());</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a79855c525ec660b452382e9813d2edb5" kindref="member">Pen</ref>(<ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8a7bba33cbbab6aaa71dce1aad46ecc3a5" kindref="member">ScrollView::GREY</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a2ba16f17fc401bb28be1a08160207e45" kindref="member">Line</ref>(startpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>(),<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>extended_ymin_);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a2ba16f17fc401bb28be1a08160207e45" kindref="member">Line</ref>(endpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>extended_ymax_,<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>());</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>score_buf[64];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>snprintf(score_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(score_buf),<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>percent_score_);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a2e1d3849b95cecdcb2026b48d8f38cde" kindref="member">TextAttributes</ref>(</highlight><highlight class="stringliteral">&quot;Times&quot;</highlight><highlight class="normal">,<sp/>50,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>tab_win-&gt;<ref refid="class_scroll_view_1a4c5cb55d6eab9d7d996d25ed8922593d" kindref="member">Text</ref>(startpt_.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>(),<sp/>score_buf);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="575"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Refit<sp/>the<sp/>line<sp/>and/or<sp/>re-evaluate<sp/>the<sp/>vector<sp/>if<sp/>the<sp/>dirty<sp/>flags<sp/>are<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1aa3d019d70d1ef7eed1eebaddb307fad8" kindref="member">TabVector::FitAndEvaluateIfNeeded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>vertical,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TabFind*<sp/>finder)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needs_refit_)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a7f793af3c19f46e111b1329d0c0cd674" kindref="member">Fit</ref>(vertical,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needs_evaluation_)</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a6ef8a5de35325f8c91bcc0670474cbdb" kindref="member">Evaluate</ref>(vertical,<sp/>finder);</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Evaluate<sp/>the<sp/>vector<sp/>in<sp/>terms<sp/>of<sp/>coverage<sp/>of<sp/>its<sp/>length<sp/>by<sp/>good-looking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//<sp/>box<sp/>edges.<sp/>A<sp/>good<sp/>looking<sp/>box<sp/>is<sp/>one<sp/>where<sp/>its<sp/>nearest<sp/>neighbour<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="comment">//<sp/>inside<sp/>is<sp/>nearer<sp/>than<sp/>half<sp/>the<sp/>distance<sp/>its<sp/>nearest<sp/>neighbour<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">//<sp/>outside<sp/>of<sp/>the<sp/>putative<sp/>column.<sp/>Bad<sp/>boxes<sp/>are<sp/>removed<sp/>from<sp/>the<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>second<sp/>pass<sp/>then<sp/>further<sp/>filters<sp/>boxes<sp/>by<sp/>requiring<sp/>that<sp/>the<sp/>gutter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/>width<sp/>be<sp/>a<sp/>minimum<sp/>fraction<sp/>of<sp/>the<sp/>mean<sp/>gutter<sp/>along<sp/>the<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a6ef8a5de35325f8c91bcc0670474cbdb" kindref="member">TabVector::Evaluate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>vertical,<sp/>TabFind*<sp/>finder)<sp/>{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>needs_evaluation_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>-<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>0<sp/>||<sp/>boxes_.empty())<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>percent_score_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a8cfd3dfed67ed93c57f40f15bc724e1e" kindref="member">Print</ref>(</highlight><highlight class="stringliteral">&quot;Zero<sp/>length<sp/>in<sp/>evaluate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>mean<sp/>box<sp/>height.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mean_height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a8379d4bbc72bdbb1f069fc14790e632d" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_height<sp/>+=<sp/>height;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>++height_count;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>mean_height<sp/>/=<sp/>height_count;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_gutter<sp/>=<sp/><ref refid="namespacetesseract_1a5e5c88d73de712626bb45049f05bf935" kindref="member">kGutterMultiple</ref><sp/>*<sp/>mean_height;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_vector_1af6eb1115ca878c8634273fbd5c5b2508" kindref="member">IsRagged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ragged<sp/>edges<sp/>face<sp/>a<sp/>tougher<sp/>test<sp/>in<sp/>that<sp/>the<sp/>gap<sp/>must<sp/>always<sp/>be<sp/>within</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>height<sp/>of<sp/>the<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/>max_gutter<sp/>=<sp/><ref refid="namespacetesseract_1ae01d1c3ecd3191b3fd9b5df6fc7329c1" kindref="member">kGutterToNeighbourRatio</ref><sp/>*<sp/>mean_height;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>gutters(0,<sp/>max_gutter<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>the<sp/>boxes<sp/>for<sp/>their<sp/>goodness,<sp/>calculating<sp/>the<sp/>coverage<sp/>as<sp/>we<sp/>go.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>boxes<sp/>that<sp/>are<sp/>not<sp/>good<sp/>and<sp/>shorten<sp/>the<sp/>list<sp/>to<sp/>the<sp/>first<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>last<sp/>good<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_deleted_boxes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>text_on_image<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>good_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>*<sp/>prev_good_box<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_y<sp/>=<sp/>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/><ref refid="classtesseract_1_1_tab_vector_1ae9a41b6a0ecc21d4ed94e4c8da804e0d" kindref="member">XAtY</ref>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!debug)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;After<sp/>already<sp/>deleting<sp/>%d<sp/>boxes,<sp/>&quot;</highlight><highlight class="normal">,<sp/>num_deleted_boxes);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a8cfd3dfed67ed93c57f40f15bc724e1e" kindref="member">Print</ref>(</highlight><highlight class="stringliteral">&quot;Starting<sp/>evaluation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>debug<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>good<sp/>box<sp/>is<sp/>one<sp/>where<sp/>the<sp/>nearest<sp/>neighbour<sp/>on<sp/>the<sp/>inside<sp/>is<sp/>closer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>than<sp/>half<sp/>the<sp/>distance<sp/>to<sp/>the<sp/>nearest<sp/>neighbour<sp/>on<sp/>the<sp/>outside</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(of<sp/>the<sp/>putative<sp/>column).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>left<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1a2f25166aafb6fc9931586f9643a93be9" kindref="member">IsLeftTab</ref>();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_x<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1ae9a41b6a0ecc21d4ed94e4c8da804e0d" kindref="member">XAtY</ref>(mid_y);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gutter_width;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_gap;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/>finder-&gt;GutterWidthAndNeighbourGap(tab_x,<sp/>mean_height,<sp/>max_gutter,<sp/>left,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox,<sp/>&amp;gutter_width,<sp/>&amp;neighbour_gap);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Box<sp/>(%d,%d)-&gt;(%d,%d)<sp/>has<sp/>gutter<sp/>%d,<sp/>ndist<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gutter_width,<sp/>neighbour_gap);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>can<sp/>make<sp/>the<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neighbour_gap<sp/>*<sp/><ref refid="namespacetesseract_1ae01d1c3ecd3191b3fd9b5df6fc7329c1" kindref="member">kGutterToNeighbourRatio</ref><sp/>&lt;=<sp/>gutter_width)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>good<sp/>box<sp/>contributes<sp/>its<sp/>height<sp/>to<sp/>the<sp/>good_length.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>good_length<sp/>+=<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>-<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gutters.add(gutter_width,<sp/>1);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Two<sp/>good<sp/>boxes<sp/>together<sp/>contribute<sp/>the<sp/>gap<sp/>between<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>good_length<sp/>as<sp/>well,<sp/>as<sp/>long<sp/>as<sp/>the<sp/>gap<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>big.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_good_box<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vertical_gap<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>-<sp/>prev_good_box-&gt;<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size1<sp/>=<sp/>sqrt(static_cast&lt;double&gt;(prev_good_box-&gt;<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()));</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size2<sp/>=<sp/>sqrt(static_cast&lt;double&gt;(box.<ref refid="class_t_b_o_x_1a46fca3df91dc271b30b69531e9d8178a" kindref="member">area</ref>()));</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertical_gap<sp/>&lt;<sp/><ref refid="namespacetesseract_1ac71cf6db3acc20786941d1146f15bf2b" kindref="member">kMaxFillinMultiple</ref><sp/>*<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(size1,<sp/>size2))</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good_length<sp/>+=<sp/>vertical_gap;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Box<sp/>and<sp/>prev<sp/>good,<sp/>gap=%d,<sp/>target<sp/>%g,<sp/>goodlength=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertical_gap,<sp/><ref refid="namespacetesseract_1ac71cf6db3acc20786941d1146f15bf2b" kindref="member">kMaxFillinMultiple</ref><sp/>*<sp/><ref refid="ndminx_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(size1,<sp/>size2),</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>good_length);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>start<sp/>to<sp/>the<sp/>first<sp/>good<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a86cf064d37b9834f5e241e5cf293d388" kindref="member">SetYStart</ref>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prev_good_box<sp/>=<sp/>&amp;box;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1afafe7113396a8cc27b882d622db46f05" kindref="member">flow</ref>()<sp/>==<sp/><ref refid="blobbox_8h_1aa72f1499398e9694bf46752e1cc895e1a1936f281ab87277e7ef0ba576920dc10" kindref="member">BTFT_TEXT_ON_IMAGE</ref>)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_on_image<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>boxes<sp/>that<sp/>are<sp/>not<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>Box<sp/>(%d,%d)-&gt;(%d,%d)<sp/>with<sp/>gutter<sp/>%d,<sp/>ndist<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gutter_width,<sp/>neighbour_gap);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++num_deleted_boxes;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a8cfd3dfed67ed93c57f40f15bc724e1e" kindref="member">Print</ref>(</highlight><highlight class="stringliteral">&quot;Evaluating:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>are<sp/>any<sp/>good<sp/>boxes,<sp/>do<sp/>it<sp/>again,<sp/>except<sp/>this<sp/>time<sp/>get<sp/>rid<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>boxes<sp/>that<sp/>have<sp/>a<sp/>gutter<sp/>that<sp/>is<sp/>a<sp/>small<sp/>fraction<sp/>of<sp/>the<sp/>mean<sp/>gutter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>filters<sp/>out<sp/>ends<sp/>that<sp/>run<sp/>into<sp/>a<sp/>coincidental<sp/>gap<sp/>in<sp/>the<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_top<sp/>=<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_bottom<sp/>=<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>median_gutter<sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(gutters.median());</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gutters.get_total()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_good_box<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid_y<sp/>=<sp/>(box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>good<sp/>box<sp/>is<sp/>one<sp/>where<sp/>the<sp/>gutter<sp/>width<sp/>is<sp/>at<sp/>least<sp/>some<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fraction<sp/>of<sp/>the<sp/>mean<sp/>gutter<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>left<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1a2f25166aafb6fc9931586f9643a93be9" kindref="member">IsLeftTab</ref>();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tab_x<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1ae9a41b6a0ecc21d4ed94e4c8da804e0d" kindref="member">XAtY</ref>(mid_y);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_gutter<sp/>=<sp/><ref refid="namespacetesseract_1a5e5c88d73de712626bb45049f05bf935" kindref="member">kGutterMultiple</ref><sp/>*<sp/>mean_height;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_vector_1af6eb1115ca878c8634273fbd5c5b2508" kindref="member">IsRagged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ragged<sp/>edges<sp/>face<sp/>a<sp/>tougher<sp/>test<sp/>in<sp/>that<sp/>the<sp/>gap<sp/>must<sp/>always<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>the<sp/>height<sp/>of<sp/>the<sp/>blob.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_gutter<sp/>=<sp/><ref refid="namespacetesseract_1ae01d1c3ecd3191b3fd9b5df6fc7329c1" kindref="member">kGutterToNeighbourRatio</ref><sp/>*<sp/>mean_height;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gutter_width;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neighbour_gap;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>finder-&gt;GutterWidthAndNeighbourGap(tab_x,<sp/>mean_height,<sp/>max_gutter,<sp/>left,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox,<sp/>&amp;gutter_width,<sp/>&amp;neighbour_gap);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>can<sp/>make<sp/>the<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gutter_width<sp/>&gt;=<sp/>median_gutter<sp/>*<sp/><ref refid="namespacetesseract_1adde25237f36db6088af89a6a01a903df" kindref="member">kMinGutterFraction</ref>)<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_good_box<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Adjust<sp/>the<sp/>start<sp/>to<sp/>the<sp/>first<sp/>good<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a86cf064d37b9834f5e241e5cf293d388" kindref="member">SetYStart</ref>(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_bottom<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_good_box<sp/>=<sp/>&amp;box;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>search_top<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>boxes<sp/>that<sp/>are<sp/>not<sp/>good.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Bad<sp/>Box<sp/>(%d,%d)-&gt;(%d,%d)<sp/>with<sp/>gutter<sp/>%d,<sp/>mean<sp/>gutter<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gutter_width,<sp/>median_gutter);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num_deleted_boxes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>has<sp/>been<sp/>a<sp/>good<sp/>box,<sp/>adjust<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_good_box<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a76be89fae1a8849259da4d5c24744e3a" kindref="member">SetYEnd</ref>(prev_good_box-&gt;<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>percentage<sp/>of<sp/>the<sp/>vector<sp/>that<sp/>is<sp/>occupied<sp/>by<sp/>good<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>-<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>percent_score_<sp/>=<sp/>100<sp/>*<sp/>good_length<sp/>/<sp/>length;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num_deleted_boxes<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>needs_refit_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1aa3d019d70d1ef7eed1eebaddb307fad8" kindref="member">FitAndEvaluateIfNeeded</ref>(vertical,<sp/>finder);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes_.empty())</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>the<sp/>gutter<sp/>over<sp/>the<sp/>whole<sp/>vector,<sp/>instead<sp/>of<sp/>just<sp/>at<sp/>the<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>required_shift;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(search_bottom<sp/>&gt;<sp/>search_top)<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_bottom<sp/>=<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>search_top<sp/>=<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_gutter_width<sp/>=<sp/><ref refid="namespacetesseract_1aaa71fcc94da61f06092ac41c1000092b" kindref="member">kLineCountReciprocal</ref><sp/>/<sp/>boxes_.length();</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>min_gutter_width<sp/>+=<sp/><ref refid="classtesseract_1_1_tab_vector_1af6eb1115ca878c8634273fbd5c5b2508" kindref="member">IsRagged</ref>()<sp/>?<sp/><ref refid="namespacetesseract_1a8a2e596e8a74bfa615969413f2059244" kindref="member">kMinRaggedGutter</ref><sp/>:<sp/><ref refid="namespacetesseract_1a1e54ca6764ad8a50cdbc42ebe335784e" kindref="member">kMinAlignedGutter</ref>;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>min_gutter_width<sp/>*=<sp/>mean_height;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_gutter_width<sp/>=<sp/><ref refid="helpers_8h_1ab60e4f82956a1f5fdb54d0d8303e95b7" kindref="member">IntCastRounded</ref>(min_gutter_width)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(median_gutter<sp/>&gt;<sp/>max_gutter_width)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max_gutter_width<sp/>=<sp/>median_gutter;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gutter_width<sp/>=<sp/>finder-&gt;GutterWidth(search_bottom,<sp/>search_top,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text_on_image,<sp/>max_gutter_width,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;required_shift);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gutter_width<sp/>&lt;<sp/>min_gutter_width)<sp/>{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Rejecting<sp/>bad<sp/>tab<sp/>Vector<sp/>with<sp/>%d<sp/>gutter<sp/>vs<sp/>%g<sp/>min\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gutter_width,<sp/>min_gutter_width);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boxes_.shallow_clear();</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>percent_score_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Final<sp/>gutter<sp/>%d,<sp/>vs<sp/>limit<sp/>of<sp/>%g,<sp/>required<sp/>shift<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gutter_width,<sp/>min_gutter_width,<sp/>required_shift);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>no<sp/>good<sp/>boxes<sp/>left,<sp/>so<sp/>score<sp/>is<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>percent_score_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a8cfd3dfed67ed93c57f40f15bc724e1e" kindref="member">Print</ref>(</highlight><highlight class="stringliteral">&quot;Evaluation<sp/>complete:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Re)Fit<sp/>a<sp/>line<sp/>to<sp/>the<sp/>stored<sp/>points.<sp/>Returns<sp/>false<sp/>if<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>degenerate.<sp/>Althougth<sp/>the<sp/>TabVector<sp/>code<sp/>mostly<sp/>doesn&apos;t<sp/>care<sp/>about<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">//<sp/>direction<sp/>of<sp/>lines,<sp/>XAtY<sp/>would<sp/>give<sp/>silly<sp/>results<sp/>for<sp/>a<sp/>horizontal<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>class<sp/>is<sp/>mostly<sp/>aimed<sp/>at<sp/>use<sp/>for<sp/>vertical<sp/>lines<sp/>representing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="comment">//<sp/>horizontal<sp/>tab<sp/>stops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_tab_vector_1a7f793af3c19f46e111b1329d0c0cd674" kindref="member">TabVector::Fit</ref>(<ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>vertical,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>force_parallel)<sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/>needs_refit_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(boxes_.empty())<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>refit<sp/>something<sp/>with<sp/>no<sp/>boxes,<sp/>as<sp/>that<sp/>only<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>Evaluate,<sp/>and<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>end<sp/>up<sp/>with<sp/>a<sp/>zero<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!force_parallel)</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>forcing<sp/>parallel,<sp/>then<sp/>we<sp/>just<sp/>need<sp/>to<sp/>set<sp/>the<sp/>sort_key_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>midpt<sp/>=<sp/>startpt_;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>midpt<sp/>+=<sp/>endpt_;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>midpt<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_key_<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1a0a7ad486360b4844a7816fec6ad5d870" kindref="member">SortKey</ref>(vertical,<sp/>midpt.<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>(),<sp/>midpt.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>());</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>!=<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!force_parallel<sp/>&amp;&amp;<sp/>!<ref refid="classtesseract_1_1_tab_vector_1af6eb1115ca878c8634273fbd5c5b2508" kindref="member">IsRagged</ref>())<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>fitted<sp/>line<sp/>as<sp/>the<sp/>vertical.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>DetLineFit<sp/>linepoints;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fit<sp/>a<sp/>line<sp/>to<sp/>all<sp/>the<sp/>boxes<sp/>in<sp/>the<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1aca11c6133632349da7728b88f0301b86" kindref="member">IsRightTab</ref>()<sp/>?<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>:<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>boxpt(x1,<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>linepoints.Add(boxpt);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.at_last())<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>top_pt(x1,<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linepoints.Add(top_pt);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>linepoints.Fit(&amp;startpt_,<sp/>&amp;endpt_);</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>()<sp/>!=<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>())<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertical<sp/>=<sp/>endpt_;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertical<sp/>-=<sp/>startpt_;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_y<sp/>=<sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_y<sp/>=<sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" kindref="member" tooltip="access_function ">y</ref>();</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/>sort_key_<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1a2f25166aafb6fc9931586f9643a93be9" kindref="member">IsLeftTab</ref>()<sp/>?<sp/><ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref><sp/>:<sp/>-<ref refid="host_8h_1aac62d87844689a18b6f5339a89ed6e7f" kindref="member">MAX_INT32</ref>;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Choose<sp/>a<sp/>line<sp/>parallel<sp/>to<sp/>the<sp/>vertical<sp/>such<sp/>that<sp/>all<sp/>boxes<sp/>are<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>correct<sp/>side<sp/>of<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/>mean_width_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_width_<sp/>+=<sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>++width_count;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1aca11c6133632349da7728b88f0301b86" kindref="member">IsRightTab</ref>()<sp/>?<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>()<sp/>:<sp/>box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>();</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>both<sp/>the<sp/>bottom<sp/>and<sp/>the<sp/>top,<sp/>as<sp/>one<sp/>will<sp/>be<sp/>more<sp/>extreme,<sp/>depending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>direction<sp/>of<sp/>skew.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top_y<sp/>=<sp/>box.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>();</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1a0a7ad486360b4844a7816fec6ad5d870" kindref="member">SortKey</ref>(vertical,<sp/>x1,<sp/>bottom_y);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_vector_1a2f25166aafb6fc9931586f9643a93be9" kindref="member">IsLeftTab</ref>()<sp/>==<sp/>(key<sp/>&lt;<sp/>sort_key_))<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sort_key_<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startpt_<sp/>=<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(x1,<sp/>bottom_y);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>key<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1a0a7ad486360b4844a7816fec6ad5d870" kindref="member">SortKey</ref>(vertical,<sp/>x1,<sp/>top_y);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_tab_vector_1a2f25166aafb6fc9931586f9643a93be9" kindref="member">IsLeftTab</ref>()<sp/>==<sp/>(key<sp/>&lt;<sp/>sort_key_))<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sort_key_<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>startpt_<sp/>=<sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>(x1,<sp/>top_y);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.at_first())</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start_y<sp/>=<sp/>bottom_y;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.at_last())</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_y<sp/>=<sp/>top_y;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width_count<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>mean_width_<sp/>=<sp/>(mean_width_<sp/>+<sp/>width_count<sp/>-<sp/>1)<sp/>/<sp/>width_count;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/>endpt_<sp/>=<sp/>startpt_<sp/>+<sp/>vertical;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>needs_evaluation_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_y<sp/>!=<sp/>end_y)<sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>ends<sp/>of<sp/>the<sp/>vector<sp/>to<sp/>fully<sp/>include<sp/>the<sp/>first<sp/>and<sp/>last<sp/>blobs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(<ref refid="classtesseract_1_1_tab_vector_1ae9a41b6a0ecc21d4ed94e4c8da804e0d" kindref="member">XAtY</ref>(vertical,<sp/>sort_key_,<sp/>start_y));</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>startpt_.<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(start_y);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" kindref="member" tooltip="rewrite function ">set_x</ref>(<ref refid="classtesseract_1_1_tab_vector_1ae9a41b6a0ecc21d4ed94e4c8da804e0d" kindref="member">XAtY</ref>(vertical,<sp/>sort_key_,<sp/>end_y));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>endpt_.<ref refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" kindref="member" tooltip="rewrite function ">set_y</ref>(end_y);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="876"><highlight class="normal">}</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>singleton<sp/>partner<sp/>if<sp/>there<sp/>is<sp/>one,<sp/>or<sp/>NULL<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal">TabVector*<sp/><ref refid="classtesseract_1_1_tab_vector_1af4be1ce3dec31f48a5938571315c808d" kindref="member">TabVector::GetSinglePartner</ref>()<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partners_.singleton())</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/>TabVector_C_IT<sp/>partner_it(&amp;partners_);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>partner<sp/>=<sp/>partner_it.data();</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>partner;</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>partner<sp/>of<sp/>this<sp/>TabVector<sp/>if<sp/>the<sp/>vector<sp/>qualifies<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment">//<sp/>being<sp/>a<sp/>vertical<sp/>text<sp/>line,<sp/>otherwise<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal">TabVector*<sp/><ref refid="classtesseract_1_1_tab_vector_1a6d8ee81ce56d1eb0dba752fe309c462f" kindref="member">TabVector::VerticalTextlinePartner</ref>()<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!partners_.singleton())</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/>TabVector_C_IT<sp/>partner_it(&amp;partners_);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>partner<sp/>=<sp/>partner_it.data();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>box_it1(&amp;boxes_);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>box_it2(&amp;partner-&gt;boxes_);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>how<sp/>many<sp/>boxes<sp/>are<sp/>also<sp/>in<sp/>the<sp/>other<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>the<sp/>same<sp/>time,<sp/>gather<sp/>the<sp/>mean<sp/>width<sp/>and<sp/>median<sp/>vertical<sp/>gap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a8cfd3dfed67ed93c57f40f15bc724e1e" kindref="member">Print</ref>(</highlight><highlight class="stringliteral">&quot;Testing<sp/>for<sp/>vertical<sp/>text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>partner-&gt;Print(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_matched<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_unmatched<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_widths<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/><ref refid="classtesseract_1_1_tab_vector_1a5ea7ff3de2abd864687769d4d56362a6" kindref="member">startpt</ref>().<ref refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" kindref="member" tooltip="access function ">x</ref>()<sp/>-<sp/>partner-&gt;startpt().x();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>width<sp/>=<sp/>-width;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_a_t_s" kindref="compound">STATS</ref><sp/>gaps(0,<sp/>width<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>prev_bbox<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>box_it2.mark_cycle_pt();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(box_it1.mark_cycle_pt();<sp/>!box_it1.cycled_list();<sp/>box_it1.forward())<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_b_l_o_b_n_b_o_x" kindref="compound">BLOBNBOX</ref>*<sp/>bbox<sp/>=<sp/>box_it1.data();</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref><sp/>box<sp/>=<sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>();</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prev_bbox<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gaps.add(box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>-<sp/>prev_bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>(),<sp/>1);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!box_it2.cycled_list()<sp/>&amp;&amp;<sp/>box_it2.data()<sp/>!=<sp/>bbox<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>box_it2.data()-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a7b97b8bc16b1473a28f9c44011522f4e" kindref="member">bounding_box</ref>().<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>()<sp/>&lt;<sp/>box.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>())<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>box_it2.forward();</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!box_it2.cycled_list()<sp/>&amp;&amp;<sp/>box_it2.data()<sp/>==<sp/>bbox<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bbox-&gt;<ref refid="class_b_l_o_b_n_b_o_x_1a9e7100e6d08c78cca5f9c0453e11565d" kindref="member">region_type</ref>()<sp/>&gt;=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(prev_bbox<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>prev_bbox-&gt;region_type()<sp/>&gt;=<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>))</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++num_matched;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++num_unmatched;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>total_widths<sp/>+=<sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>prev_bbox<sp/>=<sp/>bbox;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>avg_width<sp/>=<sp/>total_widths<sp/>*<sp/>1.0<sp/>/<sp/>(num_unmatched<sp/>+<sp/>num_matched);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_gap<sp/>=<sp/>textord_tabvector_vertical_gap_fraction<sp/>*<sp/>avg_width;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_box_match<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((num_matched<sp/>+<sp/>num_unmatched)<sp/>*</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textord_tabvector_vertical_box_ratio);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_vertical<sp/>=<sp/>(gaps.get_total()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_matched<sp/>&gt;=<sp/>min_box_match<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaps.median()<sp/>&lt;=<sp/>max_gap);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(textord_debug_tabfind<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;gaps=%d,<sp/>matched=%d,<sp/>unmatched=%d,<sp/>min_match=%d<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;median<sp/>gap=%.2f,<sp/>width=%.2f<sp/>max_gap=%.2f<sp/>Vertical=%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaps.get_total(),<sp/>num_matched,<sp/>num_unmatched,<sp/>min_box_match,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gaps.median(),<sp/>avg_width,<sp/>max_gap,<sp/>is_vertical?</highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(is_vertical)<sp/>?<sp/>partner<sp/>:<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>constructor<sp/>is<sp/>private.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector::TabVector</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extended_ymin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extended_ymax,</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a9661ffc0ba1d1cfbca95090649c79822" kindref="member">TabAlignment</ref><sp/>alignment,<sp/>BLOBNBOX_CLIST*<sp/>boxes)</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>:<sp/>extended_ymin_(extended_ymin),<sp/>extended_ymax_(extended_ymax),</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/>sort_key_(0),<sp/>percent_score_(0),<sp/>mean_width_(0),</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>needs_refit_(true),<sp/>needs_evaluation_(true),<sp/>alignment_(alignment),</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>top_constraints_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>),<sp/>bottom_constraints_(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>BLOBNBOX_C_IT<sp/>it(&amp;boxes_);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/>it.add_list_after(boxes);</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Delete<sp/>this,<sp/>but<sp/>first,<sp/>repoint<sp/>all<sp/>the<sp/>partners<sp/>to<sp/>point<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>replacement.<sp/>If<sp/>replacement<sp/>is<sp/>NULL,<sp/>then<sp/>partner<sp/>relationships</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>removed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TabVector::Delete(TabVector*<sp/>replacement)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/>TabVector_C_IT<sp/>it(&amp;partners_);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>partner<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>TabVector_C_IT<sp/>p_it(&amp;partner-&gt;partners_);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>partner<sp/>already<sp/>has<sp/>replacement<sp/>in<sp/>its<sp/>list,<sp/>then<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>replacement<sp/>null,<sp/>and<sp/>just<sp/>remove<sp/>this<sp/>TabVector<sp/>when<sp/>we<sp/>find<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>partner_replacement<sp/>=<sp/>replacement;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p_it.mark_cycle_pt();<sp/>!p_it.cycled_list();<sp/>p_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>p_partner<sp/>=<sp/>p_it.data();</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_partner<sp/>==<sp/>partner_replacement)<sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partner_replacement<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>all<sp/>references<sp/>to<sp/>this,<sp/>and<sp/>replace<sp/>with<sp/>replacement<sp/>if<sp/>not<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p_it.mark_cycle_pt();<sp/>!p_it.cycled_list();<sp/>p_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_tab_vector_1a56f63a225dac8123e3f96caae3b50f38" kindref="member">TabVector</ref>*<sp/>p_partner<sp/>=<sp/>p_it.data();</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p_partner<sp/>==<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_it.extract();</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner_replacement<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_it.add_before_stay_put(partner_replacement);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(partner_replacement<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>partner_replacement-&gt;AddPartner(partner);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/tabvector.cpp"/>
  </compounddef>
</doxygen>
