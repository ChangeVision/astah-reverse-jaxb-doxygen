<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="colpartitionset_8cpp" kind="file">
    <compoundname>colpartitionset.cpp</compoundname>
    <includes refid="colpartitionset_8h" local="yes">colpartitionset.h</includes>
    <includes refid="ndminx_8h" local="yes">ndminx.h</includes>
    <includes refid="workingpartset_8h" local="yes">workingpartset.h</includes>
    <includes refid="tablefind_8h" local="yes">tablefind.h</includes>
    <incdepgraph>
      <node id="37514">
        <label>blobbox.h</label>
        <link refid="blobbox_8h"/>
        <childnode refid="37482" relation="include">
        </childnode>
        <childnode refid="37515" relation="include">
        </childnode>
        <childnode refid="37516" relation="include">
        </childnode>
        <childnode refid="37521" relation="include">
        </childnode>
        <childnode refid="37528" relation="include">
        </childnode>
      </node>
      <node id="37531">
        <label>tabvector.h</label>
        <link refid="tabvector_8h"/>
        <childnode refid="37532" relation="include">
        </childnode>
        <childnode refid="37482" relation="include">
        </childnode>
        <childnode refid="37499" relation="include">
        </childnode>
        <childnode refid="37515" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
        <childnode refid="37481" relation="include">
        </childnode>
      </node>
      <node id="37504">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="37481">
        <label>bbgrid.h</label>
        <link refid="bbgrid_8h"/>
        <childnode refid="37482" relation="include">
        </childnode>
        <childnode refid="37495" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37513" relation="include">
        </childnode>
      </node>
      <node id="37528">
        <label>statistc.h</label>
        <link refid="statistc_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37484" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
      </node>
      <node id="37488">
        <label>stdlib.h</label>
      </node>
      <node id="37485">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="37486" relation="include">
        </childnode>
      </node>
      <node id="37535">
        <label>tablefind.h</label>
        <link refid="tablefind_8h"/>
        <childnode refid="37536" relation="include">
        </childnode>
        <childnode refid="37499" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
      </node>
      <node id="37512">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="37492" relation="include">
        </childnode>
      </node>
      <node id="37513">
        <label>allheaders.h</label>
      </node>
      <node id="37505">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
      </node>
      <node id="37487">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="37488" relation="include">
        </childnode>
        <childnode refid="37489" relation="include">
        </childnode>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37490" relation="include">
        </childnode>
        <childnode refid="37492" relation="include">
        </childnode>
        <childnode refid="37493" relation="include">
        </childnode>
      </node>
      <node id="37482">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37484" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
      </node>
      <node id="37517">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="37495" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
      </node>
      <node id="37491">
        <label>stddef.h</label>
      </node>
      <node id="37492">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="37484" relation="include">
        </childnode>
      </node>
      <node id="37526">
        <label>polyblk.h</label>
        <link refid="polyblk_8h"/>
        <childnode refid="37524" relation="include">
        </childnode>
        <childnode refid="37499" relation="include">
        </childnode>
        <childnode refid="37497" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37527" relation="include">
        </childnode>
      </node>
      <node id="37478">
        <label>textord/colpartitionset.cpp</label>
        <link refid="colpartitionset.cpp"/>
        <childnode refid="37479" relation="include">
        </childnode>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37534" relation="include">
        </childnode>
        <childnode refid="37535" relation="include">
        </childnode>
      </node>
      <node id="37486">
        <label>limits.h</label>
      </node>
      <node id="37530">
        <label>alignedblob.h</label>
        <link refid="alignedblob_8h"/>
        <childnode refid="37481" relation="include">
        </childnode>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37511" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
      </node>
      <node id="37500">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="37498" relation="include">
        </childnode>
      </node>
      <node id="37501">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="37497" relation="include">
        </childnode>
      </node>
      <node id="37515">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37484" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
      </node>
      <node id="37489">
        <label>string.h</label>
      </node>
      <node id="37503">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="37498" relation="include">
        </childnode>
        <childnode refid="37497" relation="include">
        </childnode>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37506" relation="include">
        </childnode>
      </node>
      <node id="37502">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="37484" relation="include">
        </childnode>
      </node>
      <node id="37533">
        <label>linefind.h</label>
        <link refid="linefind_8h"/>
      </node>
      <node id="37509">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="37484" relation="include">
        </childnode>
      </node>
      <node id="37536">
        <label>colpartitiongrid.h</label>
        <link refid="colpartitiongrid_8h"/>
        <childnode refid="37481" relation="include">
        </childnode>
        <childnode refid="37480" relation="include">
        </childnode>
        <childnode refid="37479" relation="include">
        </childnode>
      </node>
      <node id="37534">
        <label>workingpartset.h</label>
        <link refid="workingpartset_8h"/>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37480" relation="include">
        </childnode>
      </node>
      <node id="37495">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="37496" relation="include">
        </childnode>
        <childnode refid="37501" relation="include">
        </childnode>
        <childnode refid="37502" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
        <childnode refid="37512" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
      </node>
      <node id="37516">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="37507" relation="include">
        </childnode>
        <childnode refid="37502" relation="include">
        </childnode>
        <childnode refid="37515" relation="include">
        </childnode>
        <childnode refid="37511" relation="include">
        </childnode>
        <childnode refid="37512" relation="include">
        </childnode>
        <childnode refid="37517" relation="include">
        </childnode>
        <childnode refid="37518" relation="include">
        </childnode>
      </node>
      <node id="37518">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37519" relation="include">
        </childnode>
        <childnode refid="37516" relation="include">
        </childnode>
      </node>
      <node id="37493">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="37492" relation="include">
        </childnode>
      </node>
      <node id="37529">
        <label>tabfind.h</label>
        <link refid="tabfind_8h"/>
        <childnode refid="37530" relation="include">
        </childnode>
        <childnode refid="37509" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
        <childnode refid="37533" relation="include">
        </childnode>
      </node>
      <node id="37498">
        <label>math.h</label>
      </node>
      <node id="37496">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="37497" relation="include">
        </childnode>
        <childnode refid="37501" relation="include">
        </childnode>
      </node>
      <node id="37494">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="37492" relation="include">
        </childnode>
      </node>
      <node id="37520">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="37497" relation="include">
        </childnode>
      </node>
      <node id="37524">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="37521">
        <label>ocrblock.h</label>
        <link refid="ocrblock_8h"/>
        <childnode refid="37522" relation="include">
        </childnode>
        <childnode refid="37523" relation="include">
        </childnode>
        <childnode refid="37518" relation="include">
        </childnode>
        <childnode refid="37525" relation="include">
        </childnode>
      </node>
      <node id="37507">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37508" relation="include">
        </childnode>
        <childnode refid="37511" relation="include">
        </childnode>
      </node>
      <node id="37508">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37488" relation="include">
        </childnode>
        <childnode refid="37509" relation="include">
        </childnode>
        <childnode refid="37492" relation="include">
        </childnode>
        <childnode refid="37510" relation="include">
        </childnode>
        <childnode refid="37504" relation="include">
        </childnode>
      </node>
      <node id="37490">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="37491" relation="include">
        </childnode>
        <childnode refid="37484" relation="include">
        </childnode>
      </node>
      <node id="37532">
        <label>blobgrid.h</label>
        <link refid="blobgrid_8h"/>
        <childnode refid="37481" relation="include">
        </childnode>
        <childnode refid="37514" relation="include">
        </childnode>
      </node>
      <node id="37523">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="37524" relation="include">
        </childnode>
        <childnode refid="37499" relation="include">
        </childnode>
        <childnode refid="37511" relation="include">
        </childnode>
      </node>
      <node id="37499">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37484" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37494" relation="include">
        </childnode>
      </node>
      <node id="37480">
        <label>colpartition.h</label>
        <link refid="colpartition_8h"/>
        <childnode refid="37481" relation="include">
        </childnode>
        <childnode refid="37514" relation="include">
        </childnode>
        <childnode refid="37504" relation="include">
        </childnode>
        <childnode refid="37521" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
        <childnode refid="37505" relation="include">
        </childnode>
        <childnode refid="37529" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
      </node>
      <node id="37497">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37498" relation="include">
        </childnode>
        <childnode refid="37499" relation="include">
        </childnode>
        <childnode refid="37500" relation="include">
        </childnode>
      </node>
      <node id="37522">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="37490" relation="include">
        </childnode>
      </node>
      <node id="37506">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="37507" relation="include">
        </childnode>
      </node>
      <node id="37527">
        <label>hpddef.h</label>
        <link refid="hpddef_8h"/>
      </node>
      <node id="37484">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="37485" relation="include">
        </childnode>
      </node>
      <node id="37525">
        <label>pdblock.h</label>
        <link refid="pdblock_8h"/>
        <childnode refid="37482" relation="include">
        </childnode>
        <childnode refid="37522" relation="include">
        </childnode>
        <childnode refid="37511" relation="include">
        </childnode>
        <childnode refid="37526" relation="include">
        </childnode>
        <childnode refid="37527" relation="include">
        </childnode>
      </node>
      <node id="37479">
        <label>colpartitionset.h</label>
        <link refid="colpartitionset_8h"/>
        <childnode refid="37480" relation="include">
        </childnode>
        <childnode refid="37508" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
        <childnode refid="37531" relation="include">
        </childnode>
      </node>
      <node id="37483">
        <label>stdio.h</label>
      </node>
      <node id="37511">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37489" relation="include">
        </childnode>
        <childnode refid="37485" relation="include">
        </childnode>
        <childnode refid="37490" relation="include">
        </childnode>
      </node>
      <node id="37510">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="37483" relation="include">
        </childnode>
        <childnode refid="37489" relation="include">
        </childnode>
      </node>
      <node id="37519">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="37520" relation="include">
        </childnode>
        <childnode refid="37487" relation="include">
        </childnode>
        <childnode refid="37490" relation="include">
        </childnode>
        <childnode refid="37503" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colpartitionset.cpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>Class<sp/>to<sp/>hold<sp/>a<sp/>list<sp/>of<sp/>ColPartitions<sp/>of<sp/>the<sp/>page<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correspond<sp/>roughly<sp/>to<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>Ray<sp/>Smith</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>Thu<sp/>Aug<sp/>14<sp/>10:54:01<sp/>PDT<sp/>2008</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="colpartitionset_8h" kindref="compound">colpartitionset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ndminx_8h" kindref="compound">ndminx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="workingpartset_8h" kindref="compound">workingpartset.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tablefind_8h" kindref="compound">tablefind.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Minimum<sp/>width<sp/>of<sp/>a<sp/>column<sp/>to<sp/>be<sp/>interesting<sp/>as<sp/>a<sp/>multiple<sp/>of<sp/>resolution.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aa5d3fda875a0c1990a5e99213d6dc942" kindref="member">kMinColumnWidth</ref><sp/>=<sp/>2.0<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="namespacetesseract_1a3b71ccfcd667bca92d2e6435845a4c9b" kindref="member">ELISTIZE</ref>(ColPartitionSet)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">ColPartitionSet::ColPartitionSet(ColPartition_LIST*<sp/>partitions)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>it.add_list_after(partitions);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>ComputeCoverage();</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="classtesseract_1_1_col_partition_set_1a96ae4c04676ab794a249bf4c8ae9d82b" kindref="member">ColPartitionSet::ColPartitionSet</ref>(ColPartition*<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>it.add_after_then_move(part);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>ComputeCoverage();</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="classtesseract_1_1_col_partition_set_1a40c51443b9abc135469fe23e7cf10f8f" kindref="member">ColPartitionSet::~ColPartitionSet</ref>()<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>element<sp/>of<sp/>the<sp/>parts_<sp/>list<sp/>from<sp/>its<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_set_1a4e4928726f63e6d53e67dc82007703e1" kindref="member">ColPartitionSet::GetColumnByIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>it.mark_cycle_pt();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>index<sp/>&amp;&amp;<sp/>!it.cycled_list();<sp/>++i,<sp/>it.forward());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.cycled_list())</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it.data();</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>ColPartition<sp/>that<sp/>contains<sp/>the<sp/>given<sp/>coords,<sp/>if<sp/>any,<sp/>else<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">ColPartition*<sp/><ref refid="classtesseract_1_1_col_partition_set_1a9a65bec02d946f263f18aa86a186c91c" kindref="member">ColPartitionSet::ColumnContaining</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;ColumnContains(x,<sp/>y))</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>part;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extract<sp/>all<sp/>the<sp/>parts<sp/>from<sp/>the<sp/>list,<sp/>relinquishing<sp/>ownership.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1ae221122d16d0eb0233029e524de378d6" kindref="member">ColPartitionSet::RelinquishParts</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!it.empty())<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>it.extract();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>it.forward();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>improve<sp/>this<sp/>by<sp/>adding<sp/>partitions<sp/>or<sp/>expanding<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1a772763e56afc044cc330bae623bc117a" kindref="member">ColPartitionSet::ImproveColumnCandidate</ref>(<ref refid="namespacetesseract_1add06f170e88dcbac90a80ff20c42cc0a" kindref="member">WidthCallback</ref>*<sp/>cb,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" kindref="member">PartSetVector</ref>*<sp/>src_sets)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_size<sp/>=<sp/>src_sets-&gt;size();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>provided<sp/>column<sp/>sets,<sp/>as<sp/>each<sp/>one<sp/>may<sp/>have<sp/>something</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>improve<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>set_size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_set_1a96ae4c04676ab794a249bf4c8ae9d82b" kindref="member">ColPartitionSet</ref>*<sp/>column_set<sp/>=<sp/>src_sets-&gt;get(i);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column_set<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>the<sp/>parts<sp/>in<sp/>this<sp/>and<sp/>column_set,<sp/>adding<sp/>bigger<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>parts<sp/>in<sp/>column_set<sp/>to<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>part_it(&amp;parts_);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(!part_it.empty());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prev_right<sp/>=<sp/><ref refid="host_8h_1ae6f88d5bb15e97510f484289f2fc89fd" kindref="member">MIN_INT32</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>part_it.mark_cycle_pt();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>col_it(&amp;column_set-&gt;parts_);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col_it.mark_cycle_pt();<sp/>!col_it.cycled_list();<sp/>col_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>col_part<sp/>=<sp/>col_it.data();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_part-&gt;blob_type()<sp/>&lt;<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>image<sp/>partitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_left<sp/>=<sp/>col_part-&gt;left_key();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_right<sp/>=<sp/>col_part-&gt;right_key();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sync-up<sp/>part_it<sp/>(in<sp/>this)<sp/>so<sp/>it<sp/>matches<sp/>the<sp/>col_part<sp/>in<sp/>column_set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>part_it.data();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!part_it.at_last()<sp/>&amp;&amp;<sp/>part-&gt;right_key()<sp/>&lt;<sp/>col_left)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_right<sp/>=<sp/>part-&gt;right_key();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.forward();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>=<sp/>part_it.data();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part_left<sp/>=<sp/>part-&gt;left_key();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>part_right<sp/>=<sp/>part-&gt;right_key();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part_right<sp/>&lt;<sp/>col_left<sp/>||<sp/>col_right<sp/>&lt;<sp/>part_left)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>no<sp/>overlap<sp/>so<sp/>this<sp/>is<sp/>a<sp/>new<sp/>partition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddPartition(col_part-&gt;ShallowCopy(),<sp/>&amp;part_it);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>edges<sp/>of<sp/>col_part<sp/>to<sp/>see<sp/>if<sp/>they<sp/>can<sp/>improve<sp/>part.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>part_width_ok<sp/>=<sp/>cb-&gt;Run(part-&gt;KeyWidth(part_left,<sp/>part_right));</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_left<sp/>&lt;<sp/>part_left<sp/>&amp;&amp;<sp/>col_left<sp/>&gt;<sp/>prev_right)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>left<sp/>edge<sp/>of<sp/>the<sp/>column<sp/>is<sp/>better<sp/>and<sp/>it<sp/>doesn&apos;t<sp/>overlap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>can<sp/>potentially<sp/>expand<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_box_left<sp/>=<sp/>col_part-&gt;BoxLeftKey();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_width_ok<sp/>=<sp/>cb-&gt;Run(part-&gt;KeyWidth(col_left,<sp/>part_right));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>box_width_ok<sp/>=<sp/>cb-&gt;Run(part-&gt;KeyWidth(col_box_left,<sp/>part_right));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_width_ok<sp/>||<sp/>(!part_width_ok<sp/>))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>tab<sp/>is<sp/>leaving<sp/>the<sp/>good<sp/>column<sp/>metric<sp/>at<sp/>least<sp/>as<sp/>good<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>was<sp/>before,<sp/>so<sp/>use<sp/>the<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;CopyLeftTab(*col_part,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SetColumnGoodness(cb);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_box_left<sp/>&lt;<sp/>part_left<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(box_width_ok<sp/>||<sp/>!part_width_ok))<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>box<sp/>is<sp/>leaving<sp/>the<sp/>good<sp/>column<sp/>metric<sp/>at<sp/>least<sp/>as<sp/>good<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>was<sp/>before,<sp/>so<sp/>use<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;CopyLeftTab(*col_part,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SetColumnGoodness(cb);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_left<sp/>=<sp/>part-&gt;left_key();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_right<sp/>&gt;<sp/>part_right<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(part_it.at_last()<sp/>||</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part_it.data_relative(1)-&gt;left_key()<sp/>&gt;<sp/>col_right))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>right<sp/>edge<sp/>is<sp/>better,<sp/>so<sp/>we<sp/>can<sp/>possibly<sp/>expand<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_box_right<sp/>=<sp/>col_part-&gt;BoxRightKey();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>tab_width_ok<sp/>=<sp/>cb-&gt;Run(part-&gt;KeyWidth(part_left,<sp/>col_right));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>box_width_ok<sp/>=<sp/>cb-&gt;Run(part-&gt;KeyWidth(part_left,<sp/>col_box_right));</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab_width_ok<sp/>||<sp/>(!part_width_ok<sp/>))<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>tab<sp/>is<sp/>leaving<sp/>the<sp/>good<sp/>column<sp/>metric<sp/>at<sp/>least<sp/>as<sp/>good<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>was<sp/>before,<sp/>so<sp/>use<sp/>the<sp/>tab.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;CopyRightTab(*col_part,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SetColumnGoodness(cb);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_box_right<sp/>&gt;<sp/>part_right<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(box_width_ok<sp/>||<sp/>!part_width_ok))<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>box<sp/>is<sp/>leaving<sp/>the<sp/>good<sp/>column<sp/>metric<sp/>at<sp/>least<sp/>as<sp/>good<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>was<sp/>before,<sp/>so<sp/>use<sp/>the<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;CopyRightTab(*col_part,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;SetColumnGoodness(cb);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>ComputeCoverage();</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>set<sp/>is<sp/>good<sp/>enough<sp/>to<sp/>represent<sp/>a<sp/>new<sp/>partitioning<sp/>into<sp/>columns,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>add<sp/>it<sp/>to<sp/>the<sp/>vector<sp/>of<sp/>sets,<sp/>otherwise<sp/>delete<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1a2bc71914f948cda279ea34f6d34a5cbe" kindref="member">ColPartitionSet::AddToColumnSetsIfUnique</ref>(<ref refid="namespacetesseract_1ac7c94c636a9ec34725da6565ad1fc57a" kindref="member">PartSetVector</ref>*<sp/>column_sets,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1add06f170e88dcbac90a80ff20c42cc0a" kindref="member">WidthCallback</ref>*<sp/>cb)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/><ref refid="classtesseract_1_1_aligned_blob_1a357ff9e1d9bac2b1d88fb0d335fa7f3e" kindref="member">TabFind::WithinTestRegion</ref>(2,<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Considering<sp/>new<sp/>column<sp/>candidate:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_set_1a51f3aa3845b8ea00943fac4ca72e905f" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classtesseract_1_1_col_partition_set_1a9d821d919ed86c9e7eafeda711c2e33d" kindref="member">LegalColumnCandidate</ref>())<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Not<sp/>a<sp/>legal<sp/>column<sp/>candidate:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_set_1a51f3aa3845b8ea00943fac4ca72e905f" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>column_sets-&gt;size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_set_1a96ae4c04676ab794a249bf4c8ae9d82b" kindref="member">ColPartitionSet</ref>*<sp/>columns<sp/>=<sp/>column_sets-&gt;get(i);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>ordering<sp/>the<sp/>column<sp/>set<sp/>candidates,<sp/>good_coverage_<sp/>is<sp/>king,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>followed<sp/>by<sp/>good_column_count_<sp/>and<sp/>then<sp/>bad_coverage_.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>better<sp/>=<sp/>good_coverage_<sp/>&gt;<sp/>columns-&gt;good_coverage_;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(good_coverage_<sp/>==<sp/>columns-&gt;good_coverage_)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>better<sp/>=<sp/>good_column_count_<sp/>&gt;<sp/>columns-&gt;good_column_count_;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(good_column_count_<sp/>==<sp/>columns-&gt;good_column_count_)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>better<sp/>=<sp/>bad_coverage_<sp/>&gt;<sp/>columns-&gt;bad_coverage_;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(better)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>new<sp/>one<sp/>is<sp/>better<sp/>so<sp/>add<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Good<sp/>one\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>column_sets-&gt;insert(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(columns-&gt;CompatibleColumns(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>cb))<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Duplicate\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>not<sp/>unique.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Added<sp/>to<sp/>end\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>column_sets-&gt;push_back(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>the<sp/>partitions<sp/>in<sp/>other<sp/>are<sp/>all<sp/>compatible<sp/>with<sp/>the<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1a473a52c7a5b02694be17c9864d61ada0" kindref="member">ColPartitionSet::CompatibleColumns</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug,<sp/>ColPartitionSet*<sp/>other,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1add06f170e88dcbac90a80ff20c42cc0a" kindref="member">WidthCallback</ref>*<sp/>cb)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;CompatibleColumns<sp/>testing<sp/>compatibility\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_col_partition_set_1a51f3aa3845b8ea00943fac4ca72e905f" kindref="member">Print</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>other-&gt;Print();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other-&gt;parts_.empty())<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;CompatibleColumns<sp/>true<sp/>due<sp/>to<sp/>empty<sp/>other\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;other-&gt;parts_);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;blob_type()<sp/>&lt;<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;CompatibleColumns<sp/>ignoring<sp/>image<sp/>partition\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Image<sp/>partitions<sp/>are<sp/>irrelevant<sp/>to<sp/>column<sp/>compatibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>part-&gt;MidY();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>part-&gt;bounding_box().left();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>part-&gt;bounding_box().right();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>left_col<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_set_1a9a65bec02d946f263f18aa86a186c91c" kindref="member">ColumnContaining</ref>(left,<sp/>y);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>right_col<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_set_1a9a65bec02d946f263f18aa86a186c91c" kindref="member">ColumnContaining</ref>(right,<sp/>y);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_col<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>left_col<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;CompatibleColumns<sp/>false<sp/>due<sp/>to<sp/>partition<sp/>edge<sp/>outside\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>partition<sp/>edge<sp/>lies<sp/>outside<sp/>of<sp/>all<sp/>columns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_col<sp/>!=<sp/>left_col<sp/>&amp;&amp;<sp/>cb-&gt;Run(right<sp/>-<sp/>left))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;CompatibleColumns<sp/>false<sp/>due<sp/>to<sp/>good<sp/>width<sp/>in<sp/>multiple<sp/>cols\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Partition<sp/>with<sp/>a<sp/>good<sp/>width<sp/>must<sp/>be<sp/>in<sp/>a<sp/>single<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition_IT<sp/>it2=<sp/>it;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!it2.at_last())<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it2.forward();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>next_part<sp/>=<sp/>it2.data();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_b_l_o_b_n_b_o_x_1a07444bc838d7efe7c41f8b00913447ac" kindref="member">BLOBNBOX::IsTextType</ref>(next_part-&gt;blob_type()))</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Non-text<sp/>partitions<sp/>are<sp/>irrelevant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_left<sp/>=<sp/>next_part-&gt;bounding_box().left();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_left<sp/>==<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>They<sp/>share<sp/>the<sp/>same<sp/>edge,<sp/>so<sp/>one<sp/>must<sp/>be<sp/>a<sp/>pull-out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>to<sp/>see<sp/>if<sp/>right<sp/>and<sp/>next_left<sp/>fall<sp/>within<sp/>a<sp/>single<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>next_left_col<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_set_1a9a65bec02d946f263f18aa86a186c91c" kindref="member">ColumnContaining</ref>(next_left,<sp/>y);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_col<sp/>==<sp/>next_left_col)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>a<sp/>column<sp/>break<sp/>in<sp/>this<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>be<sp/>due<sp/>to<sp/>a<sp/>figure<sp/>caption<sp/>within<sp/>a<sp/>column,<sp/>a<sp/>pull-out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block,<sp/>or<sp/>a<sp/>simple<sp/>broken<sp/>textline<sp/>that<sp/>remains<sp/>to<sp/>be<sp/>merged:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>allowed,<sp/>or<sp/>a<sp/>change<sp/>in<sp/>column<sp/>layout:<sp/>not<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>both<sp/>partitions<sp/>are<sp/>of<sp/>good<sp/>width,<sp/>then<sp/>it<sp/>is<sp/>likely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>change<sp/>in<sp/>column<sp/>layout,<sp/>otherwise<sp/>probably<sp/>an<sp/>allowed<sp/>situation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;good_width()<sp/>&amp;&amp;<sp/>next_part-&gt;good_width())<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>next_right<sp/>=<sp/>next_part-&gt;bounding_box().right();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;CompatibleColumns<sp/>false<sp/>due<sp/>to<sp/>2<sp/>parts<sp/>of<sp/>good<sp/>width\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;part1<sp/>%d-%d,<sp/>part2<sp/>%d-%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left,<sp/>right,<sp/>next_left,<sp/>next_right);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_col-&gt;Print();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;CompatibleColumns<sp/>true!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>total<sp/>width<sp/>of<sp/>all<sp/>blobs<sp/>in<sp/>the<sp/>part_set<sp/>that<sp/>do<sp/>not<sp/>lie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>within<sp/>an<sp/>approved<sp/>column.<sp/>Used<sp/>as<sp/>a<sp/>cost<sp/>measure<sp/>for<sp/>using<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">//<sp/>column<sp/>set<sp/>over<sp/>another<sp/>that<sp/>might<sp/>be<sp/>compatible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1ae2ac889a0a2b3d8297a7c52667f5d6f4" kindref="member">ColPartitionSet::UnmatchedWidth</ref>(ColPartitionSet*<sp/>part_set)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>total_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;part_set-&gt;parts_);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_b_l_o_b_n_b_o_x_1a07444bc838d7efe7c41f8b00913447ac" kindref="member">BLOBNBOX::IsTextType</ref>(part-&gt;blob_type()))<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Non-text<sp/>partitions<sp/>are<sp/>irrelevant<sp/>to<sp/>column<sp/>compatibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>part-&gt;MidY();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>BLOBNBOX_C_IT<sp/>box_it(part-&gt;boxes());</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(box_it.mark_cycle_pt();<sp/>!box_it.cycled_list();<sp/>box_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>&amp;<sp/>box<sp/>=<sp/>it.data()-&gt;bounding_box();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>that<sp/>the<sp/>whole<sp/>blob<sp/>is<sp/>outside<sp/>any<sp/>column<sp/>iff<sp/>its<sp/>x-middle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>outside.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(box.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>()<sp/>+<sp/>box.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>())<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>col<sp/>=<sp/><ref refid="classtesseract_1_1_col_partition_set_1a9a65bec02d946f263f18aa86a186c91c" kindref="member">ColumnContaining</ref>(x,<sp/>y);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_width<sp/>+=<sp/>box.<ref refid="class_t_b_o_x_1af95494a2ccacc70cc2b83820b2948619" kindref="member">width</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>total_width;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>this<sp/>ColPartitionSet<sp/>makes<sp/>a<sp/>legal<sp/>column<sp/>candidate<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>having<sp/>legal<sp/>individual<sp/>partitions<sp/>and<sp/>non-overlapping<sp/>adjacent<sp/>pairs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1a9d821d919ed86c9e7eafeda711c2e33d" kindref="member">ColPartitionSet::LegalColumnCandidate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.empty())</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>any_text_parts<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_b_l_o_b_n_b_o_x_1a07444bc838d7efe7c41f8b00913447ac" kindref="member">BLOBNBOX::IsTextType</ref>(part-&gt;blob_type()))<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!part-&gt;IsLegal())</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Individual<sp/>partition<sp/>is<sp/>illegal.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>any_text_parts<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.at_last())<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>next_part<sp/>=<sp/>it.data_relative(1);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_part-&gt;left_key()<sp/>&lt;<sp/>part-&gt;right_key())<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>any_text_parts;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>copy<sp/>of<sp/>this.<sp/>If<sp/>good_only<sp/>will<sp/>only<sp/>copy<sp/>the<sp/>Good<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal">ColPartitionSet*<sp/><ref refid="classtesseract_1_1_col_partition_set_1a99232d52ed5fd8b56f165923562a9cab" kindref="member">ColPartitionSet::Copy</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>good_only)<sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>ColPartition_LIST<sp/>copy_parts;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>src_it(&amp;parts_);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>dest_it(&amp;copy_parts);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(src_it.mark_cycle_pt();<sp/>!src_it.cycled_list();<sp/>src_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>src_it.data();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_b_l_o_b_n_b_o_x_1a07444bc838d7efe7c41f8b00913447ac" kindref="member">BLOBNBOX::IsTextType</ref>(part-&gt;blob_type())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!good_only<sp/>||<sp/>part-&gt;good_width()<sp/>||<sp/>part-&gt;good_column()))</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest_it.add_after_then_move(part-&gt;ShallowCopy());</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest_it.empty())</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1a96ae4c04676ab794a249bf4c8ae9d82b" kindref="member">ColPartitionSet</ref>(&amp;copy_parts);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>bounding<sp/>boxes<sp/>of<sp/>columns<sp/>at<sp/>the<sp/>given<sp/>y-range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1ae48258575cffe3725081778e493cfa04" kindref="member">ColPartitionSet::GetColumnBoxes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_bottom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_top,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColSegment_LIST<sp/>*segments)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>ColSegment_IT<sp/>col_it(segments);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>col_it.move_to_last();</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>bot_left(part-&gt;LeftAtY(y_top),<sp/>y_bottom);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref><sp/>top_right(part-&gt;RightAtY(y_bottom),<sp/>y_top);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>ColSegment<sp/>*col_seg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ColSegment();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>col_seg-&gt;InsertBox(<ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>(bot_left,<sp/>top_right));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>col_it.add_after_then_move(col_seg);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Display<sp/>the<sp/>edges<sp/>of<sp/>the<sp/>columns<sp/>at<sp/>the<sp/>given<sp/>y<sp/>coords.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1a36859fa1a9497c3b0e52834a90d0acd5" kindref="member">ColPartitionSet::DisplayColumnEdges</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_bottom,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y_top,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_scroll_view" kindref="compound">ScrollView</ref>*<sp/>win)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1a2ba16f17fc401bb28be1a08160207e45" kindref="member">Line</ref>(part-&gt;LeftAtY(y_top),<sp/>y_top,<sp/>part-&gt;LeftAtY(y_bottom),<sp/>y_bottom);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>win-&gt;<ref refid="class_scroll_view_1a2ba16f17fc401bb28be1a08160207e45" kindref="member">Line</ref>(part-&gt;RightAtY(y_top),<sp/>y_top,<sp/>part-&gt;RightAtY(y_bottom),<sp/>y_bottom);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif<sp/><sp/>//<sp/>GRAPHICS_DISABLED</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>ColumnSpanningType<sp/>that<sp/>best<sp/>explains<sp/>the<sp/>columns<sp/>overlapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>given<sp/>coords(left,right,y),<sp/>with<sp/>the<sp/>given<sp/>margins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Also<sp/>return<sp/>the<sp/>first<sp/>and<sp/>last<sp/>column<sp/>index<sp/>touched<sp/>by<sp/>the<sp/>coords<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>leftmost<sp/>spanned<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Column<sp/>indices<sp/>are<sp/>2n<sp/>+<sp/>1<sp/>for<sp/>real<sp/>columns<sp/>(0<sp/>based)<sp/>and<sp/>even<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>represent<sp/>the<sp/>gaps<sp/>in<sp/>between<sp/>columns,<sp/>with<sp/>0<sp/>being<sp/>left<sp/>of<sp/>the<sp/>leftmost.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>resolution<sp/>refers<sp/>to<sp/>the<sp/>ppi<sp/>resolution<sp/>of<sp/>the<sp/>image.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06a" kindref="member">ColumnSpanningType</ref><sp/><ref refid="classtesseract_1_1_col_partition_set_1a71afe4ff3ef968e65fb729c7a1a1fd0c" kindref="member">ColPartitionSet::SpanningType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_margin,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right_margin,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>first_col,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>last_col,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>first_spanned_col)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>*first_col<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>*last_col<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>*first_spanned_col<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>margin_columns<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col_index<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward(),<sp/>col_index<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;ColumnContains(left,<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>default<sp/>case,<sp/>first_col<sp/>is<sp/>set,<sp/>but<sp/>columns_spanned<sp/>remains</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero,<sp/>so<sp/>first_col<sp/>will<sp/>get<sp/>reset<sp/>in<sp/>the<sp/>first<sp/>column<sp/>genuinely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spanned,<sp/>but<sp/>we<sp/>can<sp/>tell<sp/>the<sp/>difference<sp/>from<sp/>a<sp/>noise<sp/>partition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>touches<sp/>no<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*first_col<sp/>=<sp/>col_index;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;ColumnContains(right,<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>within<sp/>a<sp/>single<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*last_col<sp/>=<sp/>col_index;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa53dd9af51c333b786fe51bd5f01543d6" kindref="member">CST_FLOWING</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_margin<sp/>&lt;=<sp/>part-&gt;LeftAtY(y))<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>completely<sp/>spans<sp/>this<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*first_spanned_col<sp/>=<sp/>col_index;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margin_columns<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part-&gt;ColumnContains(right,<sp/>y))<sp/>{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first_col<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>started<sp/>in-between.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*first_col<sp/>=<sp/>col_index<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_margin<sp/>&gt;=<sp/>part-&gt;RightAtY(y))<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>completely<sp/>spans<sp/>this<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(margin_columns<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*first_spanned_col<sp/>=<sp/>col_index;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++margin_columns;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*last_col<sp/>=<sp/>col_index;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left<sp/>&lt;<sp/>part-&gt;LeftAtY(y)<sp/>&amp;&amp;<sp/>right<sp/>&gt;<sp/>part-&gt;RightAtY(y))<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neither<sp/>left<sp/>nor<sp/>right<sp/>are<sp/>contained<sp/>within,<sp/>so<sp/>it<sp/>spans<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first_col<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>started<sp/>in<sp/>between<sp/>the<sp/>previous<sp/>column<sp/>and<sp/>the<sp/>current<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*first_col<sp/>=<sp/>col_index<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(margin_columns<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*first_spanned_col<sp/>=<sp/>col_index;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*last_col<sp/>=<sp/>col_index;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right<sp/>&lt;<sp/>part-&gt;LeftAtY(y))<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>gone<sp/>past<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*last_col<sp/>=<sp/>col_index<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first_col<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>must<sp/>lie<sp/>completely<sp/>between<sp/>columns<sp/>=&gt;noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*first_col<sp/>=<sp/>col_index<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first_col<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>*first_col<sp/>=<sp/>col_index<sp/>-<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>last<sp/>in-between.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*last_col<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>*last_col<sp/>=<sp/>col_index<sp/>-<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>last<sp/>in-between.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(*first_col<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>*last_col<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><ref refid="errcode_8h_1a93a603f4063a6b9403d81caa245a583b" kindref="member">ASSERT_HOST</ref>(*first_col<sp/>&lt;=<sp/>*last_col);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*first_col<sp/>==<sp/>*last_col<sp/>&amp;&amp;<sp/>right<sp/>-<sp/>left<sp/>&lt;<sp/><ref refid="namespacetesseract_1aa5d3fda875a0c1990a5e99213d6dc942" kindref="member">kMinColumnWidth</ref><sp/>*<sp/>resolution)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neither<sp/>end<sp/>was<sp/>in<sp/>a<sp/>column,<sp/>and<sp/>it<sp/>didn&apos;t<sp/>span<sp/>any,<sp/>so<sp/>it<sp/>lies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entirely<sp/>between<sp/>columns,<sp/>therefore<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aad17bb659c6735f37306a6161f4013416" kindref="member">CST_NOISE</ref>;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(margin_columns<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>exception<sp/>for<sp/>headings<sp/>that<sp/>stick<sp/>outside<sp/>of<sp/>single-column<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(margin_columns<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>parts_.singleton())<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aacf3616b52ca15a43ddfd40b9c91c9cd5" kindref="member">CST_HEADING</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>a<sp/>pullout,<sp/>as<sp/>left<sp/>and<sp/>right<sp/>were<sp/>not<sp/>in<sp/>the<sp/>same<sp/>column,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>doesn&apos;t<sp/>go<sp/>to<sp/>the<sp/>edge<sp/>of<sp/>its<sp/>start<sp/>and<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aa8c1a2f43d95cbf09416204e1f5e04163" kindref="member">CST_PULLOUT</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Its<sp/>margins<sp/>went<sp/>to<sp/>the<sp/>edges<sp/>of<sp/>first<sp/>and<sp/>last<sp/>columns<sp/>=&gt;<sp/>heading.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1a1c442f32007891bd4ea6e885b34cc06aacf3616b52ca15a43ddfd40b9c91c9cd5" kindref="member">CST_HEADING</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>column_set<sp/>has<sp/>changed.<sp/>Close<sp/>down<sp/>all<sp/>in-progress<sp/>WorkingPartSets<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>columns<sp/>that<sp/>do<sp/>not<sp/>match<sp/>and<sp/>start<sp/>new<sp/>ones<sp/>for<sp/>the<sp/>new<sp/>columns<sp/>in<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>As<sp/>ColPartitions<sp/>are<sp/>turned<sp/>into<sp/>BLOCKs,<sp/>the<sp/>used<sp/>ones<sp/>are<sp/>put<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used_parts,<sp/>as<sp/>they<sp/>still<sp/>need<sp/>to<sp/>be<sp/>referenced<sp/>in<sp/>the<sp/>grid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1a77f3363ca10aa193d51e1f8f45ceb41e" kindref="member">ColPartitionSet::ChangeWorkColumns</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>bleft,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_i_c_o_o_r_d" kindref="compound" tooltip="integer coordinate ">ICOORD</ref>&amp;<sp/>tright,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_LIST*<sp/>used_parts,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WorkingPartSet_LIST*<sp/>working_set_list)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>input<sp/>list<sp/>to<sp/>a<sp/>temporary<sp/>location<sp/>so<sp/>we<sp/>can<sp/>delete<sp/>its<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>we<sp/>add<sp/>them<sp/>to<sp/>the<sp/>output<sp/>working_set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>WorkingPartSet_LIST<sp/>work_src;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>WorkingPartSet_IT<sp/>src_it(&amp;work_src);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>src_it.add_list_after(working_set_list);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>src_it.move_to_first();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>WorkingPartSet_IT<sp/>dest_it(working_set_list);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Completed<sp/>blocks<sp/>and<sp/>to_blocks<sp/>are<sp/>accumulated<sp/>and<sp/>given<sp/>to<sp/>the<sp/>first<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/><sp/>whenever<sp/>we<sp/>keep<sp/>a<sp/>column,<sp/>or<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>BLOCK_LIST<sp/>completed_blocks;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>TO_BLOCK_LIST<sp/>to_blocks;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>WorkingPartSet*<sp/>first_new_set<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>WorkingPartSet*<sp/>working_set<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>col_it(&amp;parts_);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col_it.mark_cycle_pt();<sp/>!col_it.cycled_list();<sp/>col_it.forward())<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>column<sp/>=<sp/>col_it.data();</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>existing<sp/>column<sp/>to<sp/>the<sp/>left<sp/>of<sp/>column<sp/>is<sp/>completed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!src_it.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((working_set<sp/>=<sp/>src_it.data())-&gt;column()<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>working_set-&gt;column()-&gt;right_key()<sp/>&lt;=<sp/>column-&gt;left_key()))<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src_it.extract();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>working_set-&gt;ExtractCompletedBlocks(bleft,<sp/>tright,<sp/>resolution,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used_parts,<sp/>&amp;completed_blocks,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;to_blocks);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>working_set;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src_it.forward();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>new<sp/>between-column<sp/>WorkingSet<sp/>for<sp/>before<sp/>the<sp/>current<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>working_set<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WorkingPartSet(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>dest_it.add_after_then_move(working_set);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_new_set<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first_new_set<sp/>=<sp/>working_set;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>matching<sp/>column<sp/>gets<sp/>to<sp/>stay,<sp/>and<sp/>first_new_set<sp/>gets<sp/>all<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>completed_sets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>working_set<sp/>=<sp/>src_it.empty()<sp/>?<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>:<sp/>src_it.data();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(working_set<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>working_set-&gt;column()-&gt;MatchingColumns(*column))<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>working_set-&gt;set_column(column);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest_it.add_after_then_move(src_it.extract());</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src_it.forward();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first_new_set-&gt;InsertCompletedBlocks(&amp;completed_blocks,<sp/>&amp;to_blocks);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>first_new_set<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>make<sp/>a<sp/>new<sp/>working<sp/>set<sp/>for<sp/>the<sp/>current<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>working_set<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WorkingPartSet(column);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest_it.add_after_then_move(working_set);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Complete<sp/>any<sp/>remaining<sp/>src<sp/>working<sp/>sets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!src_it.empty())<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>working_set<sp/>=<sp/>src_it.extract();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>working_set-&gt;ExtractCompletedBlocks(bleft,<sp/>tright,<sp/>resolution,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>used_parts,<sp/>&amp;completed_blocks,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;to_blocks);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>working_set;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>src_it.forward();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>new<sp/>between-column<sp/>WorkingSet<sp/>for<sp/>after<sp/>the<sp/>last<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/>working_set<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>WorkingPartSet(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>dest_it.add_after_then_move(working_set);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_new_set<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>first_new_set<sp/>=<sp/>working_set;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first_new_set<sp/>now<sp/>gets<sp/>any<sp/>accumulated<sp/>completed_parts/blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>first_new_set-&gt;InsertCompletedBlocks(&amp;completed_blocks,<sp/>&amp;to_blocks);</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Accumulate<sp/>the<sp/>widths<sp/>and<sp/>gaps<sp/>into<sp/>the<sp/>given<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1a2269c86ba6ee44b5be119493e7b2246e" kindref="member">ColPartitionSet::AccumulateColumnWidthsAndGaps</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>total_width,</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>width_samples,</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>total_gap,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>gap_samples)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>*total_width<sp/>+=<sp/>part-&gt;ColumnWidth();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>++*width_samples;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it.at_last())<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition*<sp/>next_part<sp/>=<sp/>it.data_relative(1);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gap<sp/>=<sp/>part-&gt;KeyWidth(part-&gt;right_key(),<sp/>next_part-&gt;left_key());</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*total_gap<sp/>+=<sp/>gap;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++*gap_samples;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Provide<sp/>debug<sp/>output<sp/>for<sp/>this<sp/>ColPartitionSet<sp/>and<sp/>all<sp/>the<sp/>ColPartitions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_col_partition_set_1a51f3aa3845b8ea00943fac4ca72e905f" kindref="member">ColPartitionSet::Print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Partition<sp/>set<sp/>of<sp/>%d<sp/>parts,<sp/>%d<sp/>good,<sp/>coverage=%d+%d&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/>(%d,%d)-&gt;(%d,%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.length(),<sp/>good_column_count_,<sp/>good_coverage_,<sp/>bad_coverage_,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a724fabf566586b663577dfa944ffbc61" kindref="member">left</ref>(),<sp/>bounding_box_.<ref refid="class_t_b_o_x_1a4451d237f1cd18c4982d63fe36a11fc3" kindref="member">bottom</ref>(),</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bounding_box_.<ref refid="class_t_b_o_x_1a8703081c1a1c26db3a4dddaca1028e34" kindref="member">right</ref>(),<sp/>bounding_box_.<ref refid="class_t_b_o_x_1adf92e9fdac1bdf11c10d1c4d1178791a" kindref="member">top</ref>());</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>part-&gt;Print();</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRIVATE<sp/>CODE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Add<sp/>the<sp/>given<sp/>partition<sp/>to<sp/>the<sp/>list<sp/>in<sp/>the<sp/>appropriate<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionSet::AddPartition(ColPartition*<sp/>new_part,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColPartition_IT*<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/>AddPartitionCoverageAndBox(*new_part);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>new_right<sp/>=<sp/>new_part-&gt;right_key();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;data()-&gt;left_key()<sp/>&gt;=<sp/>new_right)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>it-&gt;add_before_stay_put(new_part);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>it-&gt;add_after_stay_put(new_part);</highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compute<sp/>the<sp/>coverage<sp/>and<sp/>good<sp/>column<sp/>count.<sp/>Coverage<sp/>is<sp/>the<sp/>amount<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="comment">//<sp/>width<sp/>of<sp/>the<sp/>page<sp/>(in<sp/>pixels)<sp/>that<sp/>is<sp/>covered<sp/>by<sp/>ColPartitions,<sp/>which<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>provide<sp/>candidate<sp/>column<sp/>layouts.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Coverage<sp/>is<sp/>split<sp/>into<sp/>good<sp/>and<sp/>bad.<sp/>Good<sp/>coverage<sp/>is<sp/>provided<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColPartitions<sp/>of<sp/>a<sp/>frequent<sp/>width<sp/>(according<sp/>to<sp/>the<sp/>callback<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">//<sp/>provided<sp/>by<sp/>TabFinder::WidthCB,<sp/>which<sp/>accesses<sp/>stored<sp/>statistics<sp/>on<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">//<sp/>widths<sp/>of<sp/>ColParititions)<sp/>and<sp/>bad<sp/>coverage<sp/>is<sp/>provided<sp/>by<sp/>all<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ColPartitions,<sp/>even<sp/>if<sp/>they<sp/>have<sp/>tab<sp/>vectors<sp/>at<sp/>both<sp/>sides.<sp/>Thus:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|-----------------------------------------------------------------|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double<sp/><sp/><sp/><sp/><sp/>width<sp/><sp/><sp/><sp/>heading<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|-----------------------------------------------------------------|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|-------------------------------|<sp/>|-------------------------------|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|<sp/><sp/><sp/>Common<sp/>width<sp/>ColParition<sp/><sp/><sp/><sp/>|<sp/>|<sp/><sp/>Common<sp/>width<sp/>ColPartition<sp/><sp/><sp/><sp/>|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">//<sp/>|-------------------------------|<sp/>|-------------------------------|</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>layout<sp/>with<sp/>two<sp/>common-width<sp/>columns<sp/>has<sp/>better<sp/>coverage<sp/>than<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">//<sp/>double<sp/>width<sp/>heading,<sp/>because<sp/>the<sp/>coverage<sp/>is<sp/>&quot;good,&quot;<sp/>even<sp/>though<sp/>less<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment">//<sp/>total<sp/>coverage<sp/>than<sp/>the<sp/>heading,<sp/>because<sp/>the<sp/>heading<sp/>coverage<sp/>is<sp/>&quot;bad.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionSet::ComputeCoverage()<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>the<sp/>number<sp/>of<sp/>good<sp/>columns<sp/>and<sp/>sum<sp/>their<sp/>width.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>ColPartition_IT<sp/>it(&amp;parts_);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>good_column_count_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>good_coverage_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>bad_coverage_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>bounding_box_<sp/>=<sp/><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref>();</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it.mark_cycle_pt();<sp/>!it.cycled_list();<sp/>it.forward())<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>ColPartition*<sp/>part<sp/>=<sp/>it.data();</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/>AddPartitionCoverageAndBox(*part);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal">}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adds<sp/>the<sp/>coverage,<sp/>column<sp/>count<sp/>and<sp/>box<sp/>for<sp/>a<sp/>single<sp/>partition,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="comment">//<sp/>without<sp/>adding<sp/>it<sp/>to<sp/>the<sp/>list.<sp/>(Helper<sp/>factored<sp/>from<sp/>ComputeCoverage.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ColPartitionSet::AddPartitionCoverageAndBox(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ColPartition&amp;<sp/>part)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>bounding_box_<sp/>+=<sp/>part.bounding_box();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coverage<sp/>=<sp/>part.ColumnWidth();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part.good_width())<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>good_coverage_<sp/>+=<sp/>coverage;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>good_column_count_<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part.blob_type()<sp/>&lt;<sp/><ref refid="blobbox_8h_1aebfaf711760a99b60c297d1d619df575a8a98863f18016aa4ccfd2d07dbb092a4" kindref="member">BRT_UNKNOWN</ref>)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>coverage<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(part.good_column())</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++good_column_count_;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>bad_coverage_<sp/>+=<sp/>coverage;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/textord/colpartitionset.cpp"/>
  </compounddef>
</doxygen>
