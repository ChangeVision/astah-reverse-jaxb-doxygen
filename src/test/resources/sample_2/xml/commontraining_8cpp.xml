<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="commontraining_8cpp" kind="file">
    <compoundname>commontraining.cpp</compoundname>
    <includes refid="commontraining_8h" local="yes">commontraining.h</includes>
    <includes local="yes">base/init_google.h</includes>
    <includes local="yes">base/commandlineflags.h</includes>
    <includes local="yes">allheaders.h</includes>
    <includes refid="ccutil_8h" local="yes">ccutil.h</includes>
    <includes refid="classify_8h" local="yes">classify.h</includes>
    <includes refid="oldlist_8h" local="yes">oldlist.h</includes>
    <includes refid="globals_8h" local="yes">globals.h</includes>
    <includes refid="mf_8h" local="yes">mf.h</includes>
    <includes refid="clusttool_8h" local="yes">clusttool.h</includes>
    <includes refid="cluster_8h" local="yes">cluster.h</includes>
    <includes refid="tessopt_8h" local="yes">tessopt.h</includes>
    <includes refid="efio_8h" local="yes">efio.h</includes>
    <includes refid="emalloc_8h" local="yes">emalloc.h</includes>
    <includes refid="featdefs_8h" local="yes">featdefs.h</includes>
    <includes refid="fontinfo_8h" local="yes">fontinfo.h</includes>
    <includes refid="intfeaturespace_8h" local="yes">intfeaturespace.h</includes>
    <includes refid="mastertrainer_8h" local="yes">mastertrainer.h</includes>
    <includes refid="tessdatamanager_8h" local="yes">tessdatamanager.h</includes>
    <includes refid="tprintf_8h" local="yes">tprintf.h</includes>
    <includes refid="freelist_8h" local="yes">freelist.h</includes>
    <includes refid="params_8h" local="yes">params.h</includes>
    <includes refid="shapetable_8h" local="yes">shapetable.h</includes>
    <includes refid="unicity__table_8h" local="yes">unicity_table.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="41243">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="41244" relation="include">
        </childnode>
        <childnode refid="41257" relation="include">
        </childnode>
        <childnode refid="41240" relation="include">
        </childnode>
      </node>
      <node id="41310">
        <label>globals.h</label>
        <link refid="globals_8h"/>
        <childnode refid="41257" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
        <childnode refid="41240" relation="include">
        </childnode>
        <childnode refid="41227" relation="include">
        </childnode>
      </node>
      <node id="41284">
        <label>image.h</label>
        <link refid="image_8h"/>
      </node>
      <node id="41302">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41240" relation="include">
        </childnode>
      </node>
      <node id="41288">
        <label>assert.h</label>
      </node>
      <node id="41281">
        <label>classify.h</label>
        <link refid="classify_8h"/>
        <childnode refid="41282" relation="include">
        </childnode>
        <childnode refid="41283" relation="include">
        </childnode>
        <childnode refid="41281" relation="include">
        </childnode>
        <childnode refid="41285" relation="include">
        </childnode>
        <childnode refid="41277" relation="include">
        </childnode>
        <childnode refid="41305" relation="include">
        </childnode>
        <childnode refid="41306" relation="include">
        </childnode>
        <childnode refid="41308" relation="include">
        </childnode>
        <childnode refid="41307" relation="include">
        </childnode>
        <childnode refid="41287" relation="include">
        </childnode>
        <childnode refid="41260" relation="include">
        </childnode>
        <childnode refid="41276" relation="include">
        </childnode>
      </node>
      <node id="41239">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="41257">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="41229">
        <label>stdlib.h</label>
      </node>
      <node id="41231">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="41232" relation="include">
        </childnode>
      </node>
      <node id="41275">
        <label>bitvec.h</label>
        <link refid="bitvec_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
      </node>
      <node id="41258">
        <label>cluster.h</label>
        <link refid="cluster_8h"/>
        <childnode refid="41259" relation="include">
        </childnode>
        <childnode refid="41225" relation="include">
        </childnode>
      </node>
      <node id="41223">
        <label>training/commontraining.cpp</label>
        <link refid="commontraining.cpp"/>
        <childnode refid="41224" relation="include">
        </childnode>
        <childnode refid="41279" relation="include">
        </childnode>
        <childnode refid="41278" relation="include">
        </childnode>
        <childnode refid="41280" relation="include">
        </childnode>
        <childnode refid="41244" relation="include">
        </childnode>
        <childnode refid="41281" relation="include">
        </childnode>
        <childnode refid="41225" relation="include">
        </childnode>
        <childnode refid="41310" relation="include">
        </childnode>
        <childnode refid="41311" relation="include">
        </childnode>
        <childnode refid="41312" relation="include">
        </childnode>
        <childnode refid="41258" relation="include">
        </childnode>
        <childnode refid="41313" relation="include">
        </childnode>
        <childnode refid="41314" relation="include">
        </childnode>
        <childnode refid="41315" relation="include">
        </childnode>
        <childnode refid="41277" relation="include">
        </childnode>
        <childnode refid="41305" relation="include">
        </childnode>
        <childnode refid="41317" relation="include">
        </childnode>
        <childnode refid="41318" relation="include">
        </childnode>
        <childnode refid="41254" relation="include">
        </childnode>
        <childnode refid="41233" relation="include">
        </childnode>
        <childnode refid="41327" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
        <childnode refid="41321" relation="include">
        </childnode>
        <childnode refid="41276" relation="include">
        </childnode>
        <childnode refid="41264" relation="include">
        </childnode>
      </node>
      <node id="41293">
        <label>blckerr.h</label>
        <link refid="blckerr_8h"/>
        <childnode refid="41237" relation="include">
        </childnode>
      </node>
      <node id="41244">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="41245" relation="include">
        </childnode>
        <childnode refid="41237" relation="include">
        </childnode>
        <childnode refid="41240" relation="include">
        </childnode>
        <childnode refid="41254" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
        <childnode refid="41255" relation="include">
        </childnode>
        <childnode refid="41256" relation="include">
        </childnode>
      </node>
      <node id="41280">
        <label>allheaders.h</label>
      </node>
      <node id="41267">
        <label>scrollview.h</label>
        <link refid="scrollview_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
      </node>
      <node id="41247">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="41229" relation="include">
        </childnode>
        <childnode refid="41228" relation="include">
        </childnode>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41241" relation="include">
        </childnode>
        <childnode refid="41237" relation="include">
        </childnode>
        <childnode refid="41248" relation="include">
        </childnode>
      </node>
      <node id="41262">
        <label>clst.h</label>
        <link refid="clst_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41247" relation="include">
        </childnode>
        <childnode refid="41249" relation="include">
        </childnode>
      </node>
      <node id="41326">
        <label>bitvector.h</label>
        <link refid="bitvector_8h"/>
        <childnode refid="41288" relation="include">
        </childnode>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
      </node>
      <node id="41273">
        <label>baseline.h</label>
        <link refid="baseline_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41261" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
      </node>
      <node id="41311">
        <label>mf.h</label>
        <link refid="mf_8h"/>
        <childnode refid="41260" relation="include">
        </childnode>
        <childnode refid="41261" relation="include">
        </childnode>
      </node>
      <node id="41317">
        <label>intfeaturespace.h</label>
        <link refid="intfeaturespace_8h"/>
        <childnode refid="41235" relation="include">
        </childnode>
        <childnode refid="41269" relation="include">
        </childnode>
      </node>
      <node id="41283">
        <label>ccstruct.h</label>
        <link refid="ccstruct_8h"/>
        <childnode refid="41226" relation="include">
        </childnode>
        <childnode refid="41284" relation="include">
        </childnode>
      </node>
      <node id="41294">
        <label>stepblob.h</label>
        <link refid="stepblob_8h"/>
        <childnode refid="41295" relation="include">
        </childnode>
        <childnode refid="41263" relation="include">
        </childnode>
      </node>
      <node id="41303">
        <label>trie.h</label>
        <link refid="trie_8h"/>
        <childnode refid="41286" relation="include">
        </childnode>
        <childnode refid="41226" relation="include">
        </childnode>
        <childnode refid="41235" relation="include">
        </childnode>
      </node>
      <node id="41287">
        <label>ratngs.h</label>
        <link refid="ratngs_8h"/>
        <childnode refid="41288" relation="include">
        </childnode>
        <childnode refid="41262" relation="include">
        </childnode>
        <childnode refid="41235" relation="include">
        </childnode>
        <childnode refid="41289" relation="include">
        </childnode>
        <childnode refid="41250" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
        <childnode refid="41290" relation="include">
        </childnode>
      </node>
      <node id="41242">
        <label>stddef.h</label>
      </node>
      <node id="41251">
        <label>memory.h</label>
      </node>
      <node id="41309">
        <label>cutoffs.h</label>
        <link refid="cutoffs_8h"/>
        <childnode refid="41270" relation="include">
        </childnode>
      </node>
      <node id="41272">
        <label>fpoint.h</label>
        <link refid="fpoint_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41264" relation="include">
        </childnode>
      </node>
      <node id="41316">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="41288" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
        <childnode refid="41250" relation="include">
        </childnode>
      </node>
      <node id="41237">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
      </node>
      <node id="41270">
        <label>matchdefs.h</label>
        <link refid="matchdefs_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41250" relation="include">
        </childnode>
      </node>
      <node id="41312">
        <label>clusttool.h</label>
        <link refid="clusttool_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41258" relation="include">
        </childnode>
        <childnode refid="41227" relation="include">
        </childnode>
      </node>
      <node id="41232">
        <label>limits.h</label>
      </node>
      <node id="41259">
        <label>kdtree.h</label>
        <link refid="kdtree_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41226" relation="include">
        </childnode>
        <childnode refid="41260" relation="include">
        </childnode>
      </node>
      <node id="41321">
        <label>shapetable.h</label>
        <link refid="shapetable_8h"/>
        <childnode refid="41235" relation="include">
        </childnode>
        <childnode refid="41308" relation="include">
        </childnode>
      </node>
      <node id="41306">
        <label>intfx.h</label>
        <link refid="intfx_8h"/>
        <childnode refid="41261" relation="include">
        </childnode>
        <childnode refid="41269" relation="include">
        </childnode>
        <childnode refid="41307" relation="include">
        </childnode>
        <childnode refid="41264" relation="include">
        </childnode>
      </node>
      <node id="41314">
        <label>efio.h</label>
        <link refid="efio_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
      </node>
      <node id="41285">
        <label>dict.h</label>
        <link refid="dict_8h"/>
        <childnode refid="41245" relation="include">
        </childnode>
        <childnode refid="41286" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41284" relation="include">
        </childnode>
        <childnode refid="41225" relation="include">
        </childnode>
        <childnode refid="41287" relation="include">
        </childnode>
        <childnode refid="41301" relation="include">
        </childnode>
        <childnode refid="41303" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
        <childnode refid="41304" relation="include">
        </childnode>
      </node>
      <node id="41266">
        <label>ipoints.h</label>
        <link refid="ipoints_8h"/>
        <childnode refid="41264" relation="include">
        </childnode>
      </node>
      <node id="41297">
        <label>mod128.h</label>
        <link refid="mod128_8h"/>
        <childnode refid="41265" relation="include">
        </childnode>
      </node>
      <node id="41292">
        <label>elst2.h</label>
        <link refid="elst2_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41247" relation="include">
        </childnode>
        <childnode refid="41249" relation="include">
        </childnode>
      </node>
      <node id="41255">
        <label>pthread.h</label>
      </node>
      <node id="41320">
        <label>intfeaturemap.h</label>
        <link refid="intfeaturemap_8h"/>
        <childnode refid="41317" relation="include">
        </childnode>
        <childnode refid="41319" relation="include">
        </childnode>
        <childnode refid="41269" relation="include">
        </childnode>
      </node>
      <node id="41228">
        <label>string.h</label>
      </node>
      <node id="41253">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="41250" relation="include">
        </childnode>
      </node>
      <node id="41250">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="41251" relation="include">
        </childnode>
        <childnode refid="41228" relation="include">
        </childnode>
      </node>
      <node id="41226">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41228" relation="include">
        </childnode>
        <childnode refid="41229" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41233" relation="include">
        </childnode>
        <childnode refid="41243" relation="include">
        </childnode>
      </node>
      <node id="41263">
        <label>rect.h</label>
        <link refid="rect_8h"/>
        <childnode refid="41264" relation="include">
        </childnode>
        <childnode refid="41265" relation="include">
        </childnode>
        <childnode refid="41239" relation="include">
        </childnode>
        <childnode refid="41267" relation="include">
        </childnode>
        <childnode refid="41233" relation="include">
        </childnode>
      </node>
      <node id="41291">
        <label>bits16.h</label>
        <link refid="bits16_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
      </node>
      <node id="41236">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
      </node>
      <node id="41256">
        <label>semaphore.h</label>
      </node>
      <node id="41278">
        <label>base/commandlineflags.h</label>
      </node>
      <node id="41295">
        <label>coutln.h</label>
        <link refid="coutln_8h"/>
        <childnode refid="41296" relation="include">
        </childnode>
        <childnode refid="41297" relation="include">
        </childnode>
        <childnode refid="41291" relation="include">
        </childnode>
        <childnode refid="41263" relation="include">
        </childnode>
        <childnode refid="41293" relation="include">
        </childnode>
        <childnode refid="41267" relation="include">
        </childnode>
      </node>
      <node id="41290">
        <label>werd.h</label>
        <link refid="werd_8h"/>
        <childnode refid="41234" relation="include">
        </childnode>
        <childnode refid="41291" relation="include">
        </childnode>
        <childnode refid="41292" relation="include">
        </childnode>
        <childnode refid="41240" relation="include">
        </childnode>
        <childnode refid="41293" relation="include">
        </childnode>
        <childnode refid="41294" relation="include">
        </childnode>
        <childnode refid="41298" relation="include">
        </childnode>
      </node>
      <node id="41298">
        <label>ocrrow.h</label>
        <link refid="ocrrow_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41299" relation="include">
        </childnode>
        <childnode refid="41290" relation="include">
        </childnode>
      </node>
      <node id="41248">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="41237" relation="include">
        </childnode>
      </node>
      <node id="41271">
        <label>mfoutline.h</label>
        <link refid="mfoutline_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41225" relation="include">
        </childnode>
        <childnode refid="41272" relation="include">
        </childnode>
        <childnode refid="41273" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
      </node>
      <node id="41245">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="41246" relation="include">
        </childnode>
        <childnode refid="41233" relation="include">
        </childnode>
        <childnode refid="41250" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
        <childnode refid="41235" relation="include">
        </childnode>
      </node>
      <node id="41276">
        <label>unicity_table.h</label>
        <link refid="unicity__table_8h"/>
        <childnode refid="41236" relation="include">
        </childnode>
        <childnode refid="41237" relation="include">
        </childnode>
        <childnode refid="41235" relation="include">
        </childnode>
      </node>
      <node id="41279">
        <label>base/init_google.h</label>
      </node>
      <node id="41296">
        <label>crakedge.h</label>
        <link refid="crakedge_8h"/>
        <childnode refid="41265" relation="include">
        </childnode>
        <childnode refid="41297" relation="include">
        </childnode>
      </node>
      <node id="41264">
        <label>math.h</label>
      </node>
      <node id="41249">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="41237" relation="include">
        </childnode>
      </node>
      <node id="41313">
        <label>tessopt.h</label>
        <link refid="tessopt_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41289" relation="include">
        </childnode>
      </node>
      <node id="41325">
        <label>trainingsampleset.h</label>
        <link refid="trainingsampleset_8h"/>
        <childnode refid="41326" relation="include">
        </childnode>
        <childnode refid="41235" relation="include">
        </childnode>
        <childnode refid="41319" relation="include">
        </childnode>
        <childnode refid="41323" relation="include">
        </childnode>
        <childnode refid="41321" relation="include">
        </childnode>
        <childnode refid="41322" relation="include">
        </childnode>
      </node>
      <node id="41324">
        <label>picofeat.h</label>
        <link refid="picofeat_8h"/>
        <childnode refid="41260" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
      </node>
      <node id="41300">
        <label>quadratc.h</label>
        <link refid="quadratc_8h"/>
        <childnode refid="41265" relation="include">
        </childnode>
      </node>
      <node id="41315">
        <label>emalloc.h</label>
        <link refid="emalloc_8h"/>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41316" relation="include">
        </childnode>
      </node>
      <node id="41268">
        <label>vecfuncs.h</label>
        <link refid="vecfuncs_8h"/>
        <childnode refid="41264" relation="include">
        </childnode>
        <childnode refid="41261" relation="include">
        </childnode>
      </node>
      <node id="41225">
        <label>oldlist.h</label>
        <link refid="oldlist_8h"/>
        <childnode refid="41226" relation="include">
        </childnode>
        <childnode refid="41236" relation="include">
        </childnode>
      </node>
      <node id="41260">
        <label>ocrfeatures.h</label>
        <link refid="ocrfeatures_8h"/>
        <childnode refid="41261" relation="include">
        </childnode>
        <childnode refid="41227" relation="include">
        </childnode>
      </node>
      <node id="41234">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41235" relation="include">
        </childnode>
        <childnode refid="41240" relation="include">
        </childnode>
      </node>
      <node id="41235">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41229" relation="include">
        </childnode>
        <childnode refid="41236" relation="include">
        </childnode>
        <childnode refid="41237" relation="include">
        </childnode>
        <childnode refid="41238" relation="include">
        </childnode>
        <childnode refid="41239" relation="include">
        </childnode>
      </node>
      <node id="41301">
        <label>stopper.h</label>
        <link refid="stopper_8h"/>
        <childnode refid="41235" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
        <childnode refid="41287" relation="include">
        </childnode>
        <childnode refid="41302" relation="include">
        </childnode>
        <childnode refid="41250" relation="include">
        </childnode>
      </node>
      <node id="41241">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="41242" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
      </node>
      <node id="41274">
        <label>protos.h</label>
        <link refid="protos_8h"/>
        <childnode refid="41275" relation="include">
        </childnode>
        <childnode refid="41226" relation="include">
        </childnode>
        <childnode refid="41250" relation="include">
        </childnode>
        <childnode refid="41276" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
      </node>
      <node id="41322">
        <label>trainingsample.h</label>
        <link refid="trainingsample_8h"/>
        <childnode refid="41246" relation="include">
        </childnode>
        <childnode refid="41277" relation="include">
        </childnode>
        <childnode refid="41306" relation="include">
        </childnode>
        <childnode refid="41308" relation="include">
        </childnode>
        <childnode refid="41323" relation="include">
        </childnode>
        <childnode refid="41311" relation="include">
        </childnode>
        <childnode refid="41324" relation="include">
        </childnode>
        <childnode refid="41321" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
      </node>
      <node id="41327">
        <label>freelist.h</label>
        <link refid="freelist_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
      </node>
      <node id="41277">
        <label>featdefs.h</label>
        <link refid="featdefs_8h"/>
        <childnode refid="41260" relation="include">
        </childnode>
      </node>
      <node id="41246">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41247" relation="include">
        </childnode>
        <childnode refid="41249" relation="include">
        </childnode>
      </node>
      <node id="41252">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="41237" relation="include">
        </childnode>
        <childnode refid="41238" relation="include">
        </childnode>
        <childnode refid="41240" relation="include">
        </childnode>
        <childnode refid="41236" relation="include">
        </childnode>
        <childnode refid="41250" relation="include">
        </childnode>
        <childnode refid="41253" relation="include">
        </childnode>
      </node>
      <node id="41286">
        <label>dawg.h</label>
        <link refid="dawg_8h"/>
        <childnode refid="41246" relation="include">
        </childnode>
        <childnode refid="41287" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
        <childnode refid="41236" relation="include">
        </childnode>
      </node>
      <node id="41224">
        <label>commontraining.h</label>
        <link refid="commontraining_8h"/>
        <childnode refid="41225" relation="include">
        </childnode>
        <childnode refid="41258" relation="include">
        </childnode>
        <childnode refid="41269" relation="include">
        </childnode>
        <childnode refid="41277" relation="include">
        </childnode>
        <childnode refid="41278" relation="include">
        </childnode>
      </node>
      <node id="41305">
        <label>fontinfo.h</label>
        <link refid="fontinfo_8h"/>
        <childnode refid="41235" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41250" relation="include">
        </childnode>
      </node>
      <node id="41265">
        <label>points.h</label>
        <link refid="points_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41264" relation="include">
        </childnode>
        <childnode refid="41246" relation="include">
        </childnode>
        <childnode refid="41266" relation="include">
        </childnode>
      </node>
      <node id="41282">
        <label>adaptive.h</label>
        <link refid="adaptive_8h"/>
        <childnode refid="41225" relation="include">
        </childnode>
        <childnode refid="41269" relation="include">
        </childnode>
        <childnode refid="41227" relation="include">
        </childnode>
      </node>
      <node id="41289">
        <label>notdll.h</label>
        <link refid="notdll_8h"/>
      </node>
      <node id="41233">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="41234" relation="include">
        </childnode>
      </node>
      <node id="41308">
        <label>intmatcher.h</label>
        <link refid="intmatcher_8h"/>
        <childnode refid="41234" relation="include">
        </childnode>
        <childnode refid="41269" relation="include">
        </childnode>
        <childnode refid="41309" relation="include">
        </childnode>
      </node>
      <node id="41230">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="41231" relation="include">
        </childnode>
      </node>
      <node id="41227">
        <label>stdio.h</label>
      </node>
      <node id="41319">
        <label>indexmapbidi.h</label>
        <link refid="indexmapbidi_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41235" relation="include">
        </childnode>
      </node>
      <node id="41323">
        <label>matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="41287" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
      </node>
      <node id="41269">
        <label>intproto.h</label>
        <link refid="intproto_8h"/>
        <childnode refid="41235" relation="include">
        </childnode>
        <childnode refid="41270" relation="include">
        </childnode>
        <childnode refid="41271" relation="include">
        </childnode>
        <childnode refid="41274" relation="include">
        </childnode>
        <childnode refid="41267" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
      </node>
      <node id="41254">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
        <childnode refid="41233" relation="include">
        </childnode>
      </node>
      <node id="41318">
        <label>mastertrainer.h</label>
        <link refid="mastertrainer_8h"/>
        <childnode refid="41281" relation="include">
        </childnode>
        <childnode refid="41258" relation="include">
        </childnode>
        <childnode refid="41306" relation="include">
        </childnode>
        <childnode refid="41246" relation="include">
        </childnode>
        <childnode refid="41277" relation="include">
        </childnode>
        <childnode refid="41305" relation="include">
        </childnode>
        <childnode refid="41319" relation="include">
        </childnode>
        <childnode refid="41317" relation="include">
        </childnode>
        <childnode refid="41320" relation="include">
        </childnode>
        <childnode refid="41308" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
        <childnode refid="41321" relation="include">
        </childnode>
        <childnode refid="41322" relation="include">
        </childnode>
        <childnode refid="41325" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
      </node>
      <node id="41307">
        <label>normalis.h</label>
        <link refid="normalis_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41230" relation="include">
        </childnode>
      </node>
      <node id="41240">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41228" relation="include">
        </childnode>
        <childnode refid="41231" relation="include">
        </childnode>
        <childnode refid="41241" relation="include">
        </childnode>
      </node>
      <node id="41261">
        <label>blobs.h</label>
        <link refid="blobs_8h"/>
        <childnode refid="41262" relation="include">
        </childnode>
        <childnode refid="41263" relation="include">
        </childnode>
        <childnode refid="41268" relation="include">
        </childnode>
      </node>
      <node id="41238">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="41227" relation="include">
        </childnode>
        <childnode refid="41228" relation="include">
        </childnode>
      </node>
      <node id="41304">
        <label>permute.h</label>
        <link refid="permute_8h"/>
        <childnode refid="41287" relation="include">
        </childnode>
        <childnode refid="41234" relation="include">
        </childnode>
        <childnode refid="41252" relation="include">
        </childnode>
      </node>
      <node id="41299">
        <label>quspline.h</label>
        <link refid="quspline_8h"/>
        <childnode refid="41300" relation="include">
        </childnode>
        <childnode refid="41247" relation="include">
        </childnode>
        <childnode refid="41241" relation="include">
        </childnode>
        <childnode refid="41263" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" prot="public" static="no" mutable="no">
        <type><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref></type>
        <definition>CLUSTERCONFIG Config</definition>
        <argsstring></argsstring>
        <name>Config</name>
        <initializer>= { <ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa39d32ff639641ca169c9729c58614459" kindref="member">elliptical</ref>, 0.625, 0.05, 1.0, 1e-6, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="53" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="commontraining_8cpp_1ac1e8179d7ded1e0ae4170780e168b5cc" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* kUsage</definition>
        <argsstring></argsstring>
        <name>kUsage</name>
        <initializer>= &quot;[flags] [ .tr files ... ]\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="71" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="commontraining_8cpp_1a7bbe652f7a8f769dd65d6442a8f004a9" prot="public" static="no" mutable="no">
        <type><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref></type>
        <definition>FEATURE_DEFS_STRUCT feature_defs</definition>
        <argsstring></argsstring>
        <name>feature_defs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="84" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="commontraining_8cpp_1acbe955bd3fe0e5af5ace2d4bb3c1fbe7" prot="public" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_c_c_util" kindref="compound">CCUtil</ref></type>
        <definition>CCUtil ccutil</definition>
        <argsstring></argsstring>
        <name>ccutil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="85" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="commontraining_8cpp_1a3eeae307a518ff234c09906077e0da82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_int32</definition>
        <argsstring>(debug_level, 0,&quot;Level of Trainer debugging&quot;)</argsstring>
        <name>DEFINE_int32</name>
        <param>
          <type>debug_level</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Level of Trainer debugging&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a73298d941c3cebccc85a3d44a08bd963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_int32</definition>
        <argsstring>(load_images, 0,&quot;Load images with tr files&quot;)</argsstring>
        <name>DEFINE_int32</name>
        <param>
          <type>load_images</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Load images with tr files&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a3a851af6f4fa1d5db9cb6a6d5499c1a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_string</definition>
        <argsstring>(configfile,&quot;&quot;,&quot;File to load more configs from&quot;)</argsstring>
        <name>DEFINE_string</name>
        <param>
          <type>configfile</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;File to load more configs from&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1ac5e1d0e0af65c9f15e68f4e252cc8406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_string</definition>
        <argsstring>(D,&quot;&quot;,&quot;Directory to write output files to&quot;)</argsstring>
        <name>DEFINE_string</name>
        <param>
          <type>D</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;Directory to write output files to&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a2cd4c23e2750fe037724a8ef004e9504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_string</definition>
        <argsstring>(F,&quot;font_properties&quot;,&quot;File listing font properties&quot;)</argsstring>
        <name>DEFINE_string</name>
        <param>
          <type>F</type>
        </param>
        <param>
          <type>&quot;font_properties&quot;</type>
        </param>
        <param>
          <type>&quot;File listing font properties&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1ab9d75c5232cf31517243e4d0d3724696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_string</definition>
        <argsstring>(X,&quot;&quot;,&quot;File listing font xheights&quot;)</argsstring>
        <name>DEFINE_string</name>
        <param>
          <type>X</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;File listing font xheights&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a797c367fd98807230c09f046000a07af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_string</definition>
        <argsstring>(U,&quot;unicharset&quot;,&quot;File to load unicharset from&quot;)</argsstring>
        <name>DEFINE_string</name>
        <param>
          <type>U</type>
        </param>
        <param>
          <type>&quot;unicharset&quot;</type>
        </param>
        <param>
          <type>&quot;File to load unicharset from&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a773c946f9ce425d38a8917b28af2fbda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_string</definition>
        <argsstring>(O,&quot;&quot;,&quot;File to write unicharset to&quot;)</argsstring>
        <name>DEFINE_string</name>
        <param>
          <type>O</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;File to write unicharset to&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a76f0949ace84fd6113f8efc87492fa33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_string</definition>
        <argsstring>(input_trainer,&quot;&quot;,&quot;File to load trainer from&quot;)</argsstring>
        <name>DEFINE_string</name>
        <param>
          <type>input_trainer</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;File to load trainer from&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1ad5234434d04f2cd5ce47d53192a23c0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_string</definition>
        <argsstring>(output_trainer,&quot;&quot;,&quot;File to write trainer to&quot;)</argsstring>
        <name>DEFINE_string</name>
        <param>
          <type>output_trainer</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;File to write trainer to&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a4919e882725127d92e728a35d2f75fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_string</definition>
        <argsstring>(test_ch,&quot;&quot;,&quot;UTF8 test character string&quot;)</argsstring>
        <name>DEFINE_string</name>
        <param>
          <type>test_ch</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;UTF8 test <ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref> string&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a5177d61ebf73a60571198cb6eaa753ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ParseArguments</definition>
        <argsstring>(int *argc, char ***argv)</argsstring>
        <name>ParseArguments</name>
        <param>
          <type>int *</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char ***</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="88" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="88" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1acc69f64ead8e1c64560ef259e5d87b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* GetNextFilename</definition>
        <argsstring>(int argc, const char *const *argv)</argsstring>
        <name>GetNextFilename</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>const char *const *</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="362" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="362" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a7acd4f2950ab3bd42ed87dc7b081be83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref></type>
        <definition>LABELEDLIST FindList</definition>
        <argsstring>(LIST List, char *Label)</argsstring>
        <name>FindList</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>List</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>Label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="385" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="385" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a83417b534a3cb0ea9e43eba33e37f1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref></type>
        <definition>LABELEDLIST NewLabeledList</definition>
        <argsstring>(const char *Label)</argsstring>
        <name>NewLabeledList</name>
        <param>
          <type>const char *</type>
          <declname>Label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="417" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="417" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a858311d0ef1820c6e83cc15ecc0e0e28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ReadTrainingSamples</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;feature_defs, const char *feature_name, int max_samples, UNICHARSET *unicharset, FILE *file, LIST *training_samples)</argsstring>
        <name>ReadTrainingSamples</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>feature_defs</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>feature_name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_samples</declname>
        </param>
        <param>
          <type><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> *</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> *</type>
          <declname>training_samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="448" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="448" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a2eb4d580c0984a25fea59c6ec1196cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeTrainingSamples</definition>
        <argsstring>(LIST CharList)</argsstring>
        <name>FreeTrainingSamples</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>CharList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="518" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="518" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a499ee1a13b378e272171053afca0de80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeLabeledList</definition>
        <argsstring>(LABELEDLIST LabeledList)</argsstring>
        <name>FreeLabeledList</name>
        <param>
          <type><ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref></type>
          <declname>LabeledList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="548" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="548" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1aeec0a66901e2f5ba2fba6c5023a6734e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref> *</type>
        <definition>CLUSTERER* SetUpForClustering</definition>
        <argsstring>(const FEATURE_DEFS_STRUCT &amp;FeatureDefs, LABELEDLIST char_sample, const char *program_feature_type)</argsstring>
        <name>SetUpForClustering</name>
        <param>
          <type>const <ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref> &amp;</type>
          <declname>FeatureDefs</declname>
        </param>
        <param>
          <type><ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref></type>
          <declname>char_sample</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>program_feature_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="567" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="567" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a9bd7631e2f9e44b661bf1c4edae4d270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MergeInsignificantProtos</definition>
        <argsstring>(LIST ProtoList, const char *label, CLUSTERER *Clusterer, CLUSTERCONFIG *Config)</argsstring>
        <name>MergeInsignificantProtos</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref> *</type>
          <declname>Clusterer</declname>
        </param>
        <param>
          <type><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref> *</type>
          <declname>Config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="618" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="618" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a561b5ddf89562dbf46af5ef6ce1e058e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CleanUpUnusedData</definition>
        <argsstring>(LIST ProtoList)</argsstring>
        <name>CleanUpUnusedData</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="683" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="683" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1aad49ec475f2a0dc40c789df41d101c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
        <definition>LIST RemoveInsignificantProtos</definition>
        <argsstring>(LIST ProtoList, BOOL8 KeepSigProtos, BOOL8 KeepInsigProtos, int N)</argsstring>
        <name>RemoveInsignificantProtos</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>KeepSigProtos</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>KeepInsigProtos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="710" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="710" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1aa89103a9b87cd5fe196c69787aacca2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" kindref="member">MERGE_CLASS</ref></type>
        <definition>MERGE_CLASS FindClass</definition>
        <argsstring>(LIST List, const char *Label)</argsstring>
        <name>FindClass</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>List</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="778" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="778" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1ad07aa0e45caed9a49158afcd82d9e825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" kindref="member">MERGE_CLASS</ref></type>
        <definition>MERGE_CLASS NewLabeledClass</definition>
        <argsstring>(const char *Label)</argsstring>
        <name>NewLabeledClass</name>
        <param>
          <type>const char *</type>
          <declname>Label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="795" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="795" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a0f90ef232622ab0d996654dd91a278e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeLabeledClassList</definition>
        <argsstring>(LIST ClassList)</argsstring>
        <name>FreeLabeledClassList</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ClassList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="809" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="809" bodyend="836"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1ae0ede748b48d1f73abdaeac0c2a1a000" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_STRUCT</ref> *</type>
        <definition>CLASS_STRUCT* SetUpForFloat2Int</definition>
        <argsstring>(const UNICHARSET &amp;unicharset, LIST LabeledClassList)</argsstring>
        <name>SetUpForFloat2Int</name>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>LabeledClassList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SetUpForFloat2Int </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="839" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="839" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a8959d42d4e9ba28a3e128aed3cefb479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Normalize</definition>
        <argsstring>(float *Values)</argsstring>
        <name>Normalize</name>
        <param>
          <type>float *</type>
          <declname>Values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="902" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="902" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a7a389fb9515f5942d514995b3dfb904c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FreeNormProtoList</definition>
        <argsstring>(LIST CharList)</argsstring>
        <name>FreeNormProtoList</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>CharList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="919" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="919" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1a19e1f0ede9842599275a9d0ffc67ef4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AddToNormProtosList</definition>
        <argsstring>(LIST *NormProtoList, LIST ProtoList, char *CharName)</argsstring>
        <name>AddToNormProtosList</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> *</type>
          <declname>NormProtoList</declname>
        </param>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>CharName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="935" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="935" bodyend="950"/>
      </memberdef>
      <memberdef kind="function" id="commontraining_8cpp_1abeba7db95e0009664b96ac0441e7dc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int NumberOfProtos</definition>
        <argsstring>(LIST ProtoList, BOOL8 CountSigProtos, BOOL8 CountInsigProtos)</argsstring>
        <name>NumberOfProtos</name>
        <param>
          <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
          <declname>ProtoList</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>CountSigProtos</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>CountInsigProtos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp" line="953" column="1" bodyfile="/Users/makoto/Desktop/trunk/training/commontraining.cpp" bodystart="953" bodyend="969"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2008<sp/>Google<sp/>Inc.<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>scharron@google.com<sp/>(Samuel<sp/>Charron)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="commontraining_8h" kindref="compound">commontraining.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_STD_NAMESPACE</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;base/init_google.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;base/commandlineflags.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;allheaders.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ccutil_8h" kindref="compound">ccutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="classify_8h" kindref="compound">classify.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="oldlist_8h" kindref="compound">oldlist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="globals_8h" kindref="compound">globals.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mf_8h" kindref="compound">mf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="clusttool_8h" kindref="compound">clusttool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cluster_8h" kindref="compound">cluster.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tessopt_8h" kindref="compound">tessopt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="efio_8h" kindref="compound">efio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emalloc_8h" kindref="compound">emalloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="featdefs_8h" kindref="compound">featdefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fontinfo_8h" kindref="compound">fontinfo.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="intfeaturespace_8h" kindref="compound">intfeaturespace.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mastertrainer_8h" kindref="compound">mastertrainer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tessdatamanager_8h" kindref="compound">tessdatamanager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tprintf_8h" kindref="compound">tprintf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freelist_8h" kindref="compound">freelist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="params_8h" kindref="compound">params.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shapetable_8h" kindref="compound">shapetable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unicity__table_8h" kindref="compound">unicity_table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_c_c_util" kindref="compound">tesseract::CCUtil</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structtesseract_1_1_font_info" kindref="compound">tesseract::FontInfo</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_int_feature_space" kindref="compound">tesseract::IntFeatureSpace</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_param_utils" kindref="compound">tesseract::ParamUtils</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">tesseract::ShapeTable</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>Variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>global<sp/>variable<sp/>to<sp/>hold<sp/>configuration<sp/>parameters<sp/>to<sp/>control<sp/>clustering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-M<sp/>0.625<sp/><sp/><sp/>-B<sp/>0.05<sp/><sp/><sp/>-I<sp/>1.0<sp/><sp/><sp/>-C<sp/>1e-6.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref><sp/><ref refid="commontraining_8cpp_1a1630a3dc82a9a7cef07bb6153df9eb9c" kindref="member">Config</ref><sp/>=<sp/>{<sp/><ref refid="cluster_8h_1a2bf647f23b4a059a559e4d991437c9eaa39d32ff639641ca169c9729c58614459" kindref="member">elliptical</ref>,<sp/>0.625,<sp/>0.05,<sp/>1.0,<sp/>1e-6,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="commontraining_8h_1ad748a6074d71dbad0eefb8e9f5a92bb0" kindref="member">INT_PARAM_FLAG</ref>(debug_level,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Level<sp/>of<sp/>Trainer<sp/>debugging&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="commontraining_8h_1ad748a6074d71dbad0eefb8e9f5a92bb0" kindref="member">INT_PARAM_FLAG</ref>(load_images,<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;Load<sp/>images<sp/>with<sp/>tr<sp/>files&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" kindref="member">STRING_PARAM_FLAG</ref>(configfile,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>to<sp/>load<sp/>more<sp/>configs<sp/>from&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" kindref="member">STRING_PARAM_FLAG</ref>(D,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Directory<sp/>to<sp/>write<sp/>output<sp/>files<sp/>to&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" kindref="member">STRING_PARAM_FLAG</ref>(F,<sp/></highlight><highlight class="stringliteral">&quot;font_properties&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>listing<sp/>font<sp/>properties&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" kindref="member">STRING_PARAM_FLAG</ref>(X,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>listing<sp/>font<sp/>xheights&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" kindref="member">STRING_PARAM_FLAG</ref>(U,<sp/></highlight><highlight class="stringliteral">&quot;unicharset&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>to<sp/>load<sp/>unicharset<sp/>from&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" kindref="member">STRING_PARAM_FLAG</ref>(O,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>to<sp/>write<sp/>unicharset<sp/>to&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" kindref="member">STRING_PARAM_FLAG</ref>(input_trainer,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>to<sp/>load<sp/>trainer<sp/>from&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" kindref="member">STRING_PARAM_FLAG</ref>(output_trainer,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>to<sp/>write<sp/>trainer<sp/>to&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="commontraining_8h_1ae27a3cb8977a05a660ea49ebece9f518" kindref="member">STRING_PARAM_FLAG</ref>(test_ch,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;UTF8<sp/>test<sp/>character<sp/>string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>usage<sp/>strings<sp/>are<sp/>different<sp/>as<sp/>the<sp/>DEFINE_*<sp/>flags<sp/>are<sp/>available<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>command<sp/>line,<sp/>but<sp/>the<sp/>*_VAR<sp/>flags<sp/>are<sp/>set<sp/>through<sp/>a<sp/>config<sp/>file<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>some<sp/>of<sp/>them<sp/>available<sp/>through<sp/>special<sp/>command-line<sp/>args.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_STD_NAMESPACE</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="commontraining_8cpp_1ac1e8179d7ded1e0ae4170780e168b5cc" kindref="member">kUsage</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[flags]<sp/>[<sp/>.tr<sp/>files<sp/>...<sp/>]\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="commontraining_8cpp_1ac1e8179d7ded1e0ae4170780e168b5cc" kindref="member">kUsage</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[-c<sp/>configfile]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t[-D<sp/>Directory]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t[-M<sp/>MinSamples]<sp/>[-B<sp/>MaxBad]<sp/>[-I<sp/>Independence]<sp/>[-C<sp/>Confidence]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t[-U<sp/>InputUnicharset]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t[-O<sp/>OutputUnicharset]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t[-F<sp/>FontInfoFile]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t[-X<sp/>InputXHeightsFile]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t[-S<sp/>InputShapeTable]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\t[<sp/>.tr<sp/>files<sp/>...<sp/>]\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/><ref refid="commontraining_8cpp_1a7bbe652f7a8f769dd65d6442a8f004a9" kindref="member">feature_defs</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="classtesseract_1_1_c_c_util" kindref="compound">CCUtil</ref><sp/><ref refid="commontraining_8cpp_1acbe955bd3fe0e5af5ace2d4bb3c1fbe7" kindref="member">ccutil</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a5177d61ebf73a60571198cb6eaa753ac" kindref="member">ParseArguments</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>***argv)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>argc<sp/><sp/><sp/><sp/>number<sp/>of<sp/>command<sp/>line<sp/>arguments<sp/>to<sp/>parse</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>argv<sp/><sp/><sp/><sp/>command<sp/>line<sp/>arguments</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>**<sp/>Globals:</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>ShowSignificantProtos<sp/><sp/><sp/>flag<sp/>controlling<sp/>proto<sp/>display</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>ShowInsignificantProtos<sp/>flag<sp/>controlling<sp/>proto<sp/>display</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Config<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>clustering<sp/>parameters</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>tessoptarg,<sp/>tessoptind<sp/><sp/><sp/><sp/><sp/><sp/>defined<sp/>by<sp/>tessopt<sp/>sys<sp/>call</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Argc,<sp/>Argv<sp/><sp/><sp/><sp/><sp/><sp/>global<sp/>copies<sp/>of<sp/>argc<sp/>and<sp/>argv</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>parses<sp/>the<sp/>command<sp/>line<sp/>arguments<sp/>that<sp/>were</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>passed<sp/>to<sp/>the<sp/>program.<sp/><sp/>The<sp/>legal<sp/>arguments<sp/>are<sp/>shown<sp/>in<sp/>the<sp/>usage</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>message<sp/>below:</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>Illegal<sp/>options<sp/>terminate<sp/>the<sp/>program.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>**<sp/>History:<sp/>7/24/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_STD_NAMESPACE</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>InitGoogle(<ref refid="commontraining_8cpp_1ac1e8179d7ded1e0ae4170780e168b5cc" kindref="member">kUsage</ref>,<sp/>argc,<sp/>argv,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="tessopt_8cpp_1aef382bc42a86adef688f3b7901cc9593" kindref="member">tessoptind</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>Option;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>ParametersRead;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><sp/>Error;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>Error<sp/>=<sp/><ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((Option<sp/>=<sp/><ref refid="tessopt_8cpp_1a810b696d632429d99dd1a92fbcfed32d" kindref="member">tessopt</ref>(*argc,<sp/>*argv,<sp/></highlight><highlight class="stringliteral">&quot;F:O:U:D:C:I:M:B:S:X:c:&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(Option)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParametersRead<sp/>=<sp/>sscanf(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%lf&quot;</highlight><highlight class="normal">,<sp/>&amp;(Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a4758d8ddf0644e204132b779a786b6fb" kindref="member">Confidence</ref>)<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ParametersRead<sp/>!=<sp/>1<sp/>)<sp/>Error<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a4758d8ddf0644e204132b779a786b6fb" kindref="member">Confidence</ref><sp/>&gt;<sp/>1<sp/>)<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a4758d8ddf0644e204132b779a786b6fb" kindref="member">Confidence</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a4758d8ddf0644e204132b779a786b6fb" kindref="member">Confidence</ref><sp/>&lt;<sp/>0<sp/>)<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a4758d8ddf0644e204132b779a786b6fb" kindref="member">Confidence</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParametersRead<sp/>=<sp/>sscanf(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;(Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a77c7d2361e92592098a3287cabc26a6d" kindref="member">Independence</ref>)<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ParametersRead<sp/>!=<sp/>1<sp/>)<sp/>Error<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a77c7d2361e92592098a3287cabc26a6d" kindref="member">Independence</ref><sp/>&gt;<sp/>1<sp/>)<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a77c7d2361e92592098a3287cabc26a6d" kindref="member">Independence</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a77c7d2361e92592098a3287cabc26a6d" kindref="member">Independence</ref><sp/>&lt;<sp/>0<sp/>)<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a77c7d2361e92592098a3287cabc26a6d" kindref="member">Independence</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParametersRead<sp/>=<sp/>sscanf(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;(Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a30f3f6f54aa8e9371a0398f04bca0de3" kindref="member">MinSamples</ref>)<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ParametersRead<sp/>!=<sp/>1<sp/>)<sp/>Error<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a30f3f6f54aa8e9371a0398f04bca0de3" kindref="member">MinSamples</ref><sp/>&gt;<sp/>1<sp/>)<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a30f3f6f54aa8e9371a0398f04bca0de3" kindref="member">MinSamples</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a30f3f6f54aa8e9371a0398f04bca0de3" kindref="member">MinSamples</ref><sp/>&lt;<sp/>0<sp/>)<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a30f3f6f54aa8e9371a0398f04bca0de3" kindref="member">MinSamples</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;B&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ParametersRead<sp/>=<sp/>sscanf(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%f&quot;</highlight><highlight class="normal">,<sp/>&amp;(Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1aaf0758a0e763d9525d6d7781db8ade14" kindref="member">MaxIllegal</ref>)<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ParametersRead<sp/>!=<sp/>1<sp/>)<sp/>Error<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1aaf0758a0e763d9525d6d7781db8ade14" kindref="member">MaxIllegal</ref><sp/>&gt;<sp/>1<sp/>)<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1aaf0758a0e763d9525d6d7781db8ade14" kindref="member">MaxIllegal</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1aaf0758a0e763d9525d6d7781db8ade14" kindref="member">MaxIllegal</ref><sp/>&lt;<sp/>0<sp/>)<sp/>Config.<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1aaf0758a0e763d9525d6d7781db8ade14" kindref="member">MaxIllegal</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;c&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_configfile.set_value(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_D.set_value(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_U.set_value(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;O&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_O.set_value(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_F.set_value(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;X&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_X.set_value(<ref refid="tessopt_8cpp_1ae2c7e7835346e9460d1534ecc3ba3f2f" kindref="member">tessoptarg</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Error<sp/>=<sp/><ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Error)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>(*argv)[0],<sp/><ref refid="commontraining_8cpp_1ac1e8179d7ded1e0ae4170780e168b5cc" kindref="member">kUsage</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(2);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>additional<sp/>parameters<sp/>from<sp/>config<sp/>file<sp/>if<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FLAGS_configfile.empty())<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_param_utils_1a0709ab180ade22613925bc317ddf34b7" kindref="member">tesseract::ParamUtils::ReadParamsFile</ref>(</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_configfile.c_str(),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a0fc9989588ecf8f236da49b58f96a6c5a713c7bc13788ed69eb16dd9e5f309d12" kindref="member">tesseract::SET_PARAM_CONSTRAINT_NON_INIT_ONLY</ref>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ccutil.<ref refid="classtesseract_1_1_c_c_util_1ac993425386ae1f73762107299ee8a114" kindref="member">params</ref>());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>ParseArguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>loads<sp/>shape<sp/>table<sp/>from<sp/>the<sp/>given<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>*<sp/><ref refid="namespacetesseract_1a1f150258bf03e986518efd91fb077322" kindref="member">LoadShapeTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/>file_prefix)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>*<sp/>shape_table<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>shape_table_file<sp/>=<sp/>file_prefix;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>shape_table_file<sp/>+=<sp/>kShapeTableFileSuffix;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>FILE*<sp/>shape_fp<sp/>=<sp/>fopen(shape_table_file.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_fp<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_table<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shape_table-&gt;<ref refid="classtesseract_1_1_shape_table_1adfba8cbf1c85a12b6b826d332614072f" kindref="member">DeSerialize</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>shape_fp))<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>shape_table;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape_table<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Failed<sp/>to<sp/>read<sp/>shape<sp/>table<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_table_file.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_shapes<sp/>=<sp/>shape_table-&gt;<ref refid="classtesseract_1_1_shape_table_1a924919daeadb48539e3d68c65013c173" kindref="member">NumShapes</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Read<sp/>shape<sp/>table<sp/>%s<sp/>of<sp/>%d<sp/>shapes\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_table_file.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/>num_shapes);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(shape_fp);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>No<sp/>shape<sp/>table<sp/>file<sp/>present:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_table_file.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_table;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>write<sp/>the<sp/>shape_table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1af6657e7cdbf17875a06df792c22cd28b" kindref="member">WriteShapeTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>&amp;<sp/>file_prefix,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>&amp;<sp/>shape_table)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>shape_table_file<sp/>=<sp/>file_prefix;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>shape_table_file<sp/>+=<sp/>kShapeTableFileSuffix;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>FILE*<sp/>fp<sp/>=<sp/>fopen(shape_table_file.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!shape_table.<ref refid="classtesseract_1_1_shape_table_1afba3bb1970bb5e5fe626d3259955a8d3" kindref="member">Serialize</ref>(fp))<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>writing<sp/>shape<sp/>table:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_table_file.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>shape<sp/>table:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_table_file.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>MasterTraininer<sp/>and<sp/>loads<sp/>the<sp/>training<sp/>data<sp/>into<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initializes<sp/>feature_defs<sp/>and<sp/>IntegerFX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Loads<sp/>the<sp/>shape_table<sp/>if<sp/>shape_table<sp/>!=<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Loads<sp/>initial<sp/>unicharset<sp/>from<sp/>-U<sp/>command-line<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>FLAGS_input_trainer<sp/>is<sp/>set,<sp/>loads<sp/>the<sp/>majority<sp/>of<sp/>data<sp/>from<sp/>there,<sp/>else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Loads<sp/>font<sp/>info<sp/>from<sp/>-F<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Loads<sp/>xheights<sp/>from<sp/>-X<sp/>option.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Loads<sp/>samples<sp/>from<sp/>.tr<sp/>files<sp/>in<sp/>remaining<sp/>command-line<sp/>args.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Deletes<sp/>outliers<sp/>and<sp/>computes<sp/>canonical<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>If<sp/>FLAGS_output_trainer<sp/>is<sp/>set,<sp/>saves<sp/>the<sp/>trainer<sp/>for<sp/>future<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Computes<sp/>canonical<sp/>and<sp/>cloud<sp/>features.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>shape_table<sp/>is<sp/>not<sp/>NULL,<sp/>but<sp/>failed<sp/>to<sp/>load,<sp/>make<sp/>a<sp/>fake<sp/>flat<sp/>one,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>shape<sp/>clustering<sp/>was<sp/>not<sp/>run.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">MasterTrainer*<sp/><ref refid="namespacetesseract_1a2af3b74c1139cfc070d17e947f212b58" kindref="member">LoadTrainingData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>argv,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>replication,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>**<sp/>shape_table,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>*<sp/>file_prefix)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="featdefs_8cpp_1a6e4c84ab01e39577e4a74d9ab1eff68b" kindref="member">InitFeatureDefs</ref>(&amp;feature_defs);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="intfx_8cpp_1a1281b17b87e56c99d53fe6bb1f7c2d55" kindref="member">InitIntegerFX</ref>();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>*file_prefix<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FLAGS_D.empty())<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>*file_prefix<sp/>+=<sp/>FLAGS_D.c_str();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>*file_prefix<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>shape<sp/>clustering<sp/>(NULL<sp/>shape_table)<sp/>or<sp/>we<sp/>successfully<sp/>load</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>shape_table<sp/>written<sp/>by<sp/>a<sp/>previous<sp/>shape<sp/>clustering,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shape_analysis<sp/>will<sp/>be<sp/>true,<sp/>meaning<sp/>that<sp/>the<sp/>MasterTrainer<sp/>will<sp/>replace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>some<sp/>members<sp/>of<sp/>the<sp/>unicharset<sp/>with<sp/>their<sp/>fragments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>shape_analysis<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>*shape_table<sp/>=<sp/><ref refid="namespacetesseract_1a1f150258bf03e986518efd91fb077322" kindref="member">LoadShapeTable</ref>(*file_prefix);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*shape_table<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape_analysis<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>shape_analysis<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>MasterTrainer*<sp/>trainer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>MasterTrainer(<ref refid="namespacetesseract_1ad3e7916f0120e26e7b4e0f830784194aa81bec0cd85211e03befb611fa7003180" kindref="member">NM_CHAR_ANISOTROPIC</ref>,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape_analysis,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replication,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_debug_level);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FLAGS_input_trainer.empty())<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>trainer-&gt;LoadUnicharset(FLAGS_U.c_str());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>basic<sp/>font<sp/>information<sp/>from<sp/>font_properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FLAGS_F.empty())<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trainer-&gt;LoadFontInfo(FLAGS_F.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>trainer;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FLAGS_X.empty())<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trainer-&gt;LoadXHeights(FLAGS_X.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>trainer;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_int_feature_space" kindref="compound">IntFeatureSpace</ref><sp/>fs;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>fs.<ref refid="classtesseract_1_1_int_feature_space_1a94b0e8e0953196dfad06f647f6e29e30" kindref="member">Init</ref>(<ref refid="intfeaturespace_8h_1a550dc4140b4554a9486c01d053542b07" kindref="member">kBoostXYBuckets</ref>,<sp/><ref refid="intfeaturespace_8h_1a550dc4140b4554a9486c01d053542b07" kindref="member">kBoostXYBuckets</ref>,<sp/><ref refid="intfeaturespace_8h_1a72ebc24f4eb671e8121fb54d9b6b5208" kindref="member">kBoostDirBuckets</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>trainer-&gt;SetFeatureSpace(fs);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>page_name;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>training<sp/>data<sp/>from<sp/>.tr<sp/>files<sp/>on<sp/>the<sp/>command<sp/>line.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((page_name<sp/>=<sp/><ref refid="commontraining_8cpp_1acc69f64ead8e1c64560ef259e5d87b5b" kindref="member">GetNextFilename</ref>(argc,<sp/>argv))<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Reading<sp/>%s<sp/>...\n&quot;</highlight><highlight class="normal">,<sp/>page_name);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/>fp<sp/>=<sp/><ref refid="efio_8cpp_1a1a07e904724c29e89b04235a34ded950" kindref="member">Efopen</ref>(page_name,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trainer-&gt;ReadTrainingSamples(fp,<sp/>feature_defs,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>a<sp/>file<sp/>with<sp/>[lang].[fontname].exp[num].fontinfo<sp/>present,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>font<sp/>spacing<sp/>information<sp/>in<sp/>to<sp/>fontinfo_table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pagename_len<sp/>=<sp/>strlen(page_name);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fontinfo_file_name<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[pagename_len<sp/>+<sp/>7];</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(fontinfo_file_name,<sp/>page_name,<sp/>pagename_len<sp/>-<sp/>2);<sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>&quot;tr&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(fontinfo_file_name<sp/>+<sp/>pagename_len<sp/>-<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;fontinfo&quot;</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>+&quot;fontinfo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trainer-&gt;AddSpacingInfo(fontinfo_file_name);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>fontinfo_file_name;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>images<sp/>into<sp/>memory<sp/>if<sp/>required<sp/>by<sp/>the<sp/>classifier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FLAGS_load_images)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>image_name<sp/>=<sp/>page_name;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chop<sp/>off<sp/>the<sp/>tr<sp/>and<sp/>replace<sp/>with<sp/>tif.<sp/>Extension<sp/>must<sp/>be<sp/>tif!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_name.<ref refid="class_s_t_r_i_n_g_1a0d5a6c456f8e3ef4b4a5077031573df8" kindref="member">truncate_at</ref>(image_name.<ref refid="class_s_t_r_i_n_g_1a168505a533eda60219c93e25adf4cdc5" kindref="member">length</ref>()<sp/>-<sp/>2);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_name<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;tif&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trainer-&gt;LoadPageImages(image_name.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>trainer-&gt;PostLoadCleanup();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>master<sp/>trainer<sp/>if<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FLAGS_output_trainer.empty())<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/>fp<sp/>=<sp/>fopen(FLAGS_output_trainer.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>create<sp/>saved<sp/>trainer<sp/>data!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trainer-&gt;Serialize(fp);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>master<sp/>trainer<sp/>from<sp/>file:%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_input_trainer.c_str());</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>fp<sp/>=<sp/>fopen(FLAGS_input_trainer.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>read<sp/>file<sp/>%s<sp/>to<sp/>initialize<sp/>master<sp/>trainer\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAGS_input_trainer.c_str());</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/>trainer-&gt;DeSerialize(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>fp);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Deserialize<sp/>of<sp/>master<sp/>trainer<sp/>failed!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>trainer;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/>trainer-&gt;PreTrainingSetup();</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FLAGS_O.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>!trainer-&gt;unicharset().save_to_file(FLAGS_O.c_str()))<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>save<sp/>unicharset<sp/>to<sp/>file<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>FLAGS_O.c_str());</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>trainer;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shape_table<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>previously<sp/>failed<sp/>to<sp/>load<sp/>a<sp/>shapetable,<sp/>then<sp/>shape<sp/>clustering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wasn&apos;t<sp/>run<sp/>so<sp/>make<sp/>a<sp/>flat<sp/>one<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*shape_table<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*shape_table<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_shape_table" kindref="compound">ShapeTable</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trainer-&gt;SetupFlatShapeTable(*shape_table);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Flat<sp/>shape<sp/>table<sp/>summary:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*shape_table)-&gt;SummaryStr().string());</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>(*shape_table)-&gt;set_unicharset(trainer-&gt;unicharset());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>trainer;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="commontraining_8cpp_1acc69f64ead8e1c64560ef259e5d87b5b" kindref="member">GetNextFilename</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>argv)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/>Parameters:<sp/>none</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/>Globals:</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>tessoptind<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined<sp/>by<sp/>tessopt<sp/>sys<sp/>call</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>returns<sp/>the<sp/>next<sp/>command<sp/>line<sp/>argument.<sp/><sp/>If</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>there<sp/>are<sp/>no<sp/>remaining<sp/>command<sp/>line<sp/>arguments,<sp/>it<sp/>returns</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL.<sp/><sp/>This<sp/>routine<sp/>should<sp/>only<sp/>be<sp/>called<sp/>after<sp/>all<sp/>option</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>arguments<sp/>have<sp/>been<sp/>parsed<sp/>and<sp/>removed<sp/>with<sp/>ParseArguments.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/>Return:<sp/>Next<sp/>command<sp/>line<sp/>argument<sp/>or<sp/>NULL.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/><sp/>History:<sp/>Fri<sp/>Aug<sp/>18<sp/>09:34:12<sp/>1989,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="tessopt_8cpp_1aef382bc42a86adef688f3b7901cc9593" kindref="member">tessoptind</ref><sp/>&lt;<sp/>argc)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>argv[<ref refid="tessopt_8cpp_1aef382bc42a86adef688f3b7901cc9593" kindref="member">tessoptind</ref>++];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GetNextFilename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/><ref refid="commontraining_8cpp_1a7acd4f2950ab3bd42ed87dc7b081be83" kindref="member">FindList</ref><sp/>(</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/>List,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*Label)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>List<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>to<sp/>search</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Label<sp/><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>to<sp/>search<sp/>for</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>searches<sp/>thru<sp/>a<sp/>list<sp/>of<sp/>labeled<sp/>lists<sp/>to<sp/>find</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>a<sp/>list<sp/>with<sp/>the<sp/>specified<sp/>label.<sp/><sp/>If<sp/>a<sp/>matching<sp/>labeled<sp/>list</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>cannot<sp/>be<sp/>found,<sp/>NULL<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>**<sp/>Return:<sp/>Labeled<sp/>list<sp/>with<sp/>the<sp/>specified<sp/>Label<sp/>or<sp/>NULL.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Aug<sp/>18<sp/>15:57:41<sp/>1989,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/><sp/><sp/>LabeledList;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref><sp/>(List)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>LabeledList<sp/>=<sp/>(<ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(List);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(LabeledList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1ad4701118c2e75f005c1f7e4c53abb35d" kindref="member">Label</ref>,<sp/>Label)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(LabeledList);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FindList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/><ref refid="commontraining_8cpp_1a83417b534a3cb0ea9e43eba33e37f1bc" kindref="member">NewLabeledList</ref><sp/>(</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*Label)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Label<sp/><sp/><sp/>label<sp/>for<sp/>new<sp/>list</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>allocates<sp/>a<sp/>new,<sp/>empty<sp/>labeled<sp/>list<sp/>and<sp/>gives</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>it<sp/>the<sp/>specified<sp/>label.</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>**<sp/>Return:<sp/>New,<sp/>empty<sp/>labeled<sp/>list.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Aug<sp/>18<sp/>16:08:46<sp/>1989,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/><sp/><sp/>LabeledList;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/>LabeledList<sp/>=<sp/>(<ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLISTNODE</ref>));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/>LabeledList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1ad4701118c2e75f005c1f7e4c53abb35d" kindref="member">Label</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(strlen<sp/>(Label)+1);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/>strcpy<sp/>(LabeledList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1ad4701118c2e75f005c1f7e4c53abb35d" kindref="member">Label</ref>,<sp/>Label);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>LabeledList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" kindref="member">List</ref><sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>LabeledList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1aab481329945e65c4aeee79b145e4de51" kindref="member">SampleCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>LabeledList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1af23335c4319e0c5f010380d9de8f5a6d" kindref="member">font_sample_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(LabeledList);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NewLabeledList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO(rays)<sp/>This<sp/>is<sp/>now<sp/>used<sp/>only<sp/>by<sp/>cntraining.<sp/>Convert<sp/>cntraining<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>new<sp/>method<sp/>or<sp/>get<sp/>rid<sp/>of<sp/>it<sp/>entirely.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a858311d0ef1820c6e83cc15ecc0e0e28" kindref="member">ReadTrainingSamples</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref>&amp;<sp/>feature_defs,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*feature_name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_samples,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>*<sp/>unicharset,</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/>file,<sp/><ref refid="structlist__rec" kindref="compound">LIST</ref>*<sp/>training_samples)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="453"><highlight class="comment">**<sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="454"><highlight class="comment">**<sp/><sp/><sp/><sp/>file<sp/><sp/><sp/><sp/>open<sp/>text<sp/>file<sp/>to<sp/>read<sp/>samples<sp/>from</highlight></codeline>
<codeline lineno="455"><highlight class="comment">**<sp/><sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="456"><highlight class="comment">**<sp/><sp/>Operation:</highlight></codeline>
<codeline lineno="457"><highlight class="comment">**<sp/><sp/><sp/><sp/>This<sp/>routine<sp/>reads<sp/>training<sp/>samples<sp/>from<sp/>a<sp/>file<sp/>and</highlight></codeline>
<codeline lineno="458"><highlight class="comment">**<sp/><sp/><sp/><sp/>places<sp/>them<sp/>into<sp/>a<sp/>data<sp/>structure<sp/>which<sp/>organizes<sp/>the</highlight></codeline>
<codeline lineno="459"><highlight class="comment">**<sp/><sp/><sp/><sp/>samples<sp/>by<sp/>FontName<sp/>and<sp/>CharName.<sp/><sp/>It<sp/>then<sp/>returns<sp/>this</highlight></codeline>
<codeline lineno="460"><highlight class="comment">**<sp/><sp/><sp/><sp/>data<sp/>structure.</highlight></codeline>
<codeline lineno="461"><highlight class="comment">**<sp/><sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="462"><highlight class="comment">**<sp/><sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="463"><highlight class="comment">**<sp/><sp/>History:<sp/>Fri<sp/>Aug<sp/>18<sp/>13:11:39<sp/>1989,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="464"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tue<sp/>May<sp/>17<sp/>1998<sp/>simplifications<sp/>to<sp/>structure,<sp/>illiminated</highlight></codeline>
<codeline lineno="465"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>font,<sp/>and<sp/>feature<sp/>specification<sp/>levels<sp/>of<sp/>structure.</highlight></codeline>
<codeline lineno="466"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[2048];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>unichar[<ref refid="unichar_8h_1a902bc40c9d89802bc063afe30ce9e708" kindref="member">UNICHAR_LEN</ref><sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/>char_sample;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t" kindref="compound">FEATURE_SET</ref><sp/>feature_samples;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t" kindref="compound">CHAR_DESC</ref><sp/>char_desc;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>feature_type<sp/>=<sp/><ref refid="featdefs_8cpp_1a46a09d60beb44b9c9156346595f352ee" kindref="member">ShortNameToFeatureType</ref>(feature_defs,<sp/>feature_name);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Zero<sp/>out<sp/>the<sp/>font_sample_count<sp/>for<sp/>all<sp/>the<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>it<sp/>=<sp/>*training_samples;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(it)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>char_sample<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(it));</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>char_sample-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1af23335c4319e0c5f010380d9de8f5a6d" kindref="member">font_sample_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(buffer,<sp/>2048,<sp/>file)<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>sscanf(buffer,<sp/></highlight><highlight class="stringliteral">&quot;%*s<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>unichar);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1a9f8861ffb917e7341c821928da5865f0" kindref="member">contains_unichar</ref>(unichar))<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ab5198816dde686850da3530a1f8261fe" kindref="member">unichar_insert</ref>(unichar);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicharset-&gt;<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>()<sp/>&gt;<sp/><ref refid="matchdefs_8h_1adcc52d7d059a8ca452172df64faa231c" kindref="member">MAX_NUM_CLASSES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Size<sp/>of<sp/>unicharset<sp/>in<sp/>training<sp/>is<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;greater<sp/>than<sp/>MAX_NUM_CLASSES\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>char_sample<sp/>=<sp/><ref refid="commontraining_8cpp_1a7acd4f2950ab3bd42ed87dc7b081be83" kindref="member">FindList</ref>(*training_samples,<sp/>unichar);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_sample<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>char_sample<sp/>=<sp/><ref refid="commontraining_8cpp_1a83417b534a3cb0ea9e43eba33e37f1bc" kindref="member">NewLabeledList</ref>(unichar);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*training_samples<sp/>=<sp/><ref refid="oldlist_8cpp_1a9c4294375af81ab4c133b6b5a3679a16" kindref="member">push</ref>(*training_samples,<sp/>char_sample);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>char_desc<sp/>=<sp/><ref refid="featdefs_8cpp_1ae1558f5d4119a9e651a85e10887be9f3" kindref="member">ReadCharDescription</ref>(feature_defs,<sp/>file);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>feature_samples<sp/>=<sp/>char_desc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[feature_type];</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_sample-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1af23335c4319e0c5f010380d9de8f5a6d" kindref="member">font_sample_count</ref><sp/>&lt;<sp/>max_samples<sp/>||<sp/>max_samples<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>char_sample-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" kindref="member">List</ref><sp/>=<sp/><ref refid="oldlist_8cpp_1a9c4294375af81ab4c133b6b5a3679a16" kindref="member">push</ref>(char_sample-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" kindref="member">List</ref>,<sp/>feature_samples);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>char_sample-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1aab481329945e65c4aeee79b145e4de51" kindref="member">SampleCount</ref>++;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>char_sample-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1af23335c4319e0c5f010380d9de8f5a6d" kindref="member">font_sample_count</ref>++;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1a72b29c3d875eb9a2241385b1f1388b2d" kindref="member">FreeFeatureSet</ref>(feature_samples);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>char_desc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a44c9d1024eb43636b98d19c92f4e4b0f" kindref="member">NumFeatureSets</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(feature_type<sp/>!=<sp/>i)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1a72b29c3d875eb9a2241385b1f1388b2d" kindref="member">FreeFeatureSet</ref>(char_desc-&gt;<ref refid="struct_c_h_a_r___d_e_s_c___s_t_r_u_c_t_1a6ea4bb711032c00fa724f8413e49d1a4" kindref="member">FeatureSets</ref>[i]);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>free(char_desc);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>ReadTrainingSamples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a2eb4d580c0984a25fea59c6ec1196cec" kindref="member">FreeTrainingSamples</ref>(<ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>CharList)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>FontList<sp/><sp/><sp/><sp/>list<sp/>of<sp/>all<sp/>fonts<sp/>in<sp/>document</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>deallocates<sp/>all<sp/>of<sp/>the<sp/>space<sp/>allocated<sp/>to</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>the<sp/>specified<sp/>list<sp/>of<sp/>training<sp/>samples.</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Aug<sp/>18<sp/>17:44:27<sp/>1989,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/>char_sample;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t" kindref="compound">FEATURE_SET</ref><sp/>FeatureSet;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>FeatureList;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(CharList)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>iterate<sp/>thru<sp/>all<sp/>of<sp/>the<sp/>fonts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>char_sample<sp/>=<sp/>(<ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(CharList);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>FeatureList<sp/>=<sp/>char_sample-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" kindref="member">List</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(FeatureList)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>iterate<sp/>thru<sp/>all<sp/>of<sp/>the<sp/>classes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FeatureSet<sp/>=<sp/>(<ref refid="ocrfeatures_8h_1ac0c2f756ba2c7f34a21efbe13a49ac39" kindref="member">FEATURE_SET</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(FeatureList);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ocrfeatures_8cpp_1a72b29c3d875eb9a2241385b1f1388b2d" kindref="member">FreeFeatureSet</ref>(FeatureSet);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="commontraining_8cpp_1a499ee1a13b378e272171053afca0de80" kindref="member">FreeLabeledList</ref>(char_sample);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a338e68bdadcbdf51db4c7268c4529409" kindref="member">destroy</ref>(CharList);</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeTrainingSamples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a499ee1a13b378e272171053afca0de80" kindref="member">FreeLabeledList</ref>(<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/>LabeledList)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>LabeledList<sp/>labeled<sp/>list<sp/>to<sp/>be<sp/>freed</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>deallocates<sp/>all<sp/>of<sp/>the<sp/>memory<sp/>consumed<sp/>by</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>a<sp/>labeled<sp/>list.<sp/><sp/>It<sp/>does<sp/>not<sp/>free<sp/>any<sp/>memory<sp/>which<sp/>may<sp/>be</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>consumed<sp/>by<sp/>the<sp/>items<sp/>in<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Aug<sp/>18<sp/>17:52:45<sp/>1989,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a338e68bdadcbdf51db4c7268c4529409" kindref="member">destroy</ref>(LabeledList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" kindref="member">List</ref>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>free(LabeledList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1ad4701118c2e75f005c1f7e4c53abb35d" kindref="member">Label</ref>);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>free(LabeledList);</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeLabeledList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref><sp/>*<ref refid="commontraining_8cpp_1aeec0a66901e2f5ba2fba6c5023a6734e" kindref="member">SetUpForClustering</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t" kindref="compound">FEATURE_DEFS_STRUCT</ref><sp/>&amp;FeatureDefs,</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/>char_sample,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>program_feature_type)<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>char_sample:<sp/>LABELEDLIST<sp/>that<sp/>holds<sp/>all<sp/>the<sp/>feature<sp/>information<sp/>for<sp/>a</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>given<sp/>character.</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>**<sp/>Globals:</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>reads<sp/>samples<sp/>from<sp/>a<sp/>LABELEDLIST<sp/>and<sp/>enters</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>those<sp/>samples<sp/>into<sp/>a<sp/>clusterer<sp/>data<sp/>structure.<sp/><sp/>This</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>data<sp/>structure<sp/>is<sp/>then<sp/>returned<sp/>to<sp/>the<sp/>caller.</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>**<sp/>Return:</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>new<sp/>clusterer<sp/>data<sp/>structure.</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>**<sp/>Exceptions:</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>**<sp/>History:</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>8/16/89,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref><sp/>N;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*Sample<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref><sp/>*Clusterer;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref><sp/>CharID;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>FeatureList<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t" kindref="compound">FEATURE_SET</ref><sp/>FeatureSet<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desc_index<sp/>=<sp/><ref refid="featdefs_8cpp_1a46a09d60beb44b9c9156346595f352ee" kindref="member">ShortNameToFeatureType</ref>(FeatureDefs,<sp/>program_feature_type);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>N<sp/>=<sp/>FeatureDefs.<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1a6c85dba3393ddc9311e59b515fd7cf82" kindref="member">FeatureDesc</ref>[desc_index]-&gt;<ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t_1a0edbab02900ae01549f742582236eb6d" kindref="member">NumParams</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>Clusterer<sp/>=<sp/><ref refid="cluster_8cpp_1a93e53684b74358b68adf48b2ee32b042" kindref="member">MakeClusterer</ref>(N,<sp/>FeatureDefs.<ref refid="struct_f_e_a_t_u_r_e___d_e_f_s___s_t_r_u_c_t_1a6c85dba3393ddc9311e59b515fd7cf82" kindref="member">FeatureDesc</ref>[desc_index]-&gt;<ref refid="struct_f_e_a_t_u_r_e___d_e_s_c___s_t_r_u_c_t_1acc46f9f5b3cded3ca8e7de3e94407c58" kindref="member">ParamDesc</ref>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/>FeatureList<sp/>=<sp/>char_sample-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" kindref="member">List</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>CharID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(FeatureList)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>FeatureSet<sp/>=<sp/>(<ref refid="ocrfeatures_8h_1ac0c2f756ba2c7f34a21efbe13a49ac39" kindref="member">FEATURE_SET</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref>(FeatureList);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>FeatureSet-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a929fdddbb7cb689f66b59e06d51aee46" kindref="member">MaxNumFeatures</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Sample<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sample<sp/>=<sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>N;<sp/>j++)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sample[j]<sp/>=<sp/>FeatureSet-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_e_t___s_t_r_u_c_t_1a4664d6a22a9d12f4011de4d877664c45" kindref="member">Features</ref>[i]-&gt;<ref refid="struct_f_e_a_t_u_r_e___s_t_r_u_c_t_1ace52f36cfcba955504f4a24f86a897b4" kindref="member">Params</ref>[j];</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cluster_8cpp_1ab3cc5ee277d4a2cf4000668b1ffbcf4a" kindref="member">MakeSample</ref><sp/>(Clusterer,<sp/>Sample,<sp/>CharID);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>CharID++;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Sample<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)<sp/>free(<sp/>Sample<sp/>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>Clusterer<sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SetUpForClustering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a9bd7631e2f9e44b661bf1c4edae4d270" kindref="member">MergeInsignificantProtos</ref>(<ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>ProtoList,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>label,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_l_u_s_t_e_r_e_r" kindref="compound">CLUSTERER</ref><sp/>*Clusterer,<sp/><ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g" kindref="compound">CLUSTERCONFIG</ref><sp/>*Config)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*Prototype;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/>strcmp(FLAGS_test_ch.c_str(),<sp/>label)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>pProtoList<sp/>=<sp/>ProtoList;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(pProtoList)<sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>Prototype<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(pProtoList);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>||<sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a8e04c7f378d30c248bc6e55703ac69a6" kindref="member">Merged</ref>)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>best_dist<sp/>=<sp/>0.125;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref>*<sp/>best_match<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>nearest<sp/>alive<sp/>prototype.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>list_it<sp/>=<sp/>ProtoList;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(list_it)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref>*<sp/>test_p<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(list_it);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_p<sp/>!=<sp/>Prototype<sp/>&amp;&amp;<sp/>!test_p-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a8e04c7f378d30c248bc6e55703ac69a6" kindref="member">Merged</ref>)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>dist<sp/>=<sp/><ref refid="kdtree_8cpp_1abc92dabbfb9cb69dd9a8375f20c68da1" kindref="member">ComputeDistance</ref>(Clusterer-&gt;<ref refid="struct_c_l_u_s_t_e_r_e_r_1ac78a1d40ce4bac0a156a21e2d987f394" kindref="member">SampleSize</ref>,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Clusterer-&gt;<ref refid="struct_c_l_u_s_t_e_r_e_r_1af44850047e9f5b3648871d7517c04316" kindref="member">ParamDesc</ref>,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>,<sp/>test_p-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dist<sp/>&lt;<sp/>best_dist)<sp/>{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_match<sp/>=<sp/>test_p;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_dist<sp/>=<sp/>dist;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_match<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>!best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref>)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Merging<sp/>red<sp/>clusters<sp/>(%d+%d)<sp/>at<sp/>%g,%g<sp/>and<sp/>%g,%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref>,<sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref>,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[0],<sp/>best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[1],</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[0],<sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[1]);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref><sp/>=<sp/><ref refid="cluster_8cpp_1a13004a2cbbcf26c3d95fd207274823c9" kindref="member">MergeClusters</ref>(Clusterer-&gt;<ref refid="struct_c_l_u_s_t_e_r_e_r_1ac78a1d40ce4bac0a156a21e2d987f394" kindref="member">SampleSize</ref>,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Clusterer-&gt;<ref refid="struct_c_l_u_s_t_e_r_e_r_1af44850047e9f5b3648871d7517c04316" kindref="member">ParamDesc</ref>,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref>,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref>,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>,<sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a8e04c7f378d30c248bc6e55703ac69a6" kindref="member">Merged</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_match<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Red<sp/>proto<sp/>at<sp/>%g,%g<sp/>matched<sp/>a<sp/>green<sp/>one<sp/>at<sp/>%g,%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[0],<sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[1],</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[0],<sp/>best_match-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[1]);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a8e04c7f378d30c248bc6e55703ac69a6" kindref="member">Merged</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>significant<sp/>those<sp/>that<sp/>now<sp/>have<sp/>enough<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_samples<sp/>=<sp/>(<ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref>)<sp/>(Config-&gt;<ref refid="struct_c_l_u_s_t_e_r_c_o_n_f_i_g_1a30f3f6f54aa8e9371a0398f04bca0de3" kindref="member">MinSamples</ref><sp/>*<sp/>Clusterer-&gt;<ref refid="struct_c_l_u_s_t_e_r_e_r_1aa4a7b4654dcb4918ac9a282d976b72d9" kindref="member">NumChar</ref>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/>pProtoList<sp/>=<sp/>ProtoList;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(pProtoList)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>Prototype<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(pProtoList);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>insignificant<sp/>protos<sp/>that<sp/>do<sp/>not<sp/>match<sp/>a<sp/>green<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>&amp;&amp;<sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref><sp/>&gt;=<sp/>min_samples<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a8e04c7f378d30c248bc6e55703ac69a6" kindref="member">Merged</ref>)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="tprintf_8cpp_1a91c3e3cd802b72db376635e0e989a4b0" kindref="member">tprintf</ref>(</highlight><highlight class="stringliteral">&quot;Red<sp/>proto<sp/>at<sp/>%g,%g<sp/>becoming<sp/>green\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[0],<sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[1]);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MergeInsignificantProtos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a561b5ddf89562dbf46af5ef6ce1e058e" kindref="member">CleanUpUnusedData</ref>(</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>ProtoList)</highlight></codeline>
<codeline lineno="685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref>*<sp/>Prototype;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(ProtoList)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>Prototype<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(ProtoList);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="freelist_8cpp_1ab462a857e5edf360ae4881bcc92a0bcf" kindref="member">memfree</ref>(Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="freelist_8cpp_1ab462a857e5edf360ae4881bcc92a0bcf" kindref="member">memfree</ref>(Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="freelist_8cpp_1ab462a857e5edf360ae4881bcc92a0bcf" kindref="member">memfree</ref>(Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Prototype-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><ref refid="commontraining_8cpp_1aad49ec475f2a0dc40c789df41d101c94" kindref="member">RemoveInsignificantProtos</ref>(</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>ProtoList,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/>KeepSigProtos,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/>KeepInsigProtos,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>NewProtoList<sp/>=<sp/><ref refid="oldlist_8h_1ae212530ca629c67513698e988c705a5a" kindref="member">NIL_LIST</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>pProtoList;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref>*<sp/>Proto;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref>*<sp/>NewProto;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/>pProtoList<sp/>=<sp/>ProtoList;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(pProtoList)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(pProtoList);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>&amp;&amp;<sp/>KeepSigProtos)<sp/>||</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>&amp;&amp;<sp/>KeepInsigProtos))</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref>));</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref><sp/>=<sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref>;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aad81f08b6e171698866b445c0b3d4b35" kindref="member">Style</ref><sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aad81f08b6e171698866b445c0b3d4b35" kindref="member">Style</ref>;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref><sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a2ba6bfd64f308a26cdd0a75c52e002f5" kindref="member">NumSamples</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aff59384612de343b799b92a5d80282b7" kindref="member">Cluster</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1ae53408c33cdd473a9ed1f028e8172b0b" kindref="member">Distrib</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[i]<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af9c4f61cdbf39f6494b4691799bd4fa6" kindref="member">Mean</ref>[i];</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i];</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a35cf2e2dd8cc8b0e9476ad49f36abd24" kindref="member">Variance</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//---------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i];</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a0b016afed9c049598aa41feb3770fc15" kindref="member">Magnitude</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/>(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref><sp/>*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref>(N<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref>));</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i]<sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref>[i];</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1af202ff952380614068536ea0b504285e" kindref="member">Weight</ref>.<ref refid="union_f_l_o_a_t_u_n_i_o_n_1a4b36c5b636aac27041dd340386f3801f" kindref="member">Elliptical</ref><sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref><sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a40a4a7e28d83ad5ad3c64e54734104be" kindref="member">TotalMagnitude</ref>;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aefd3ba15fc4dd0029aa9cda07092382b" kindref="member">LogMagnitude</ref><sp/>=<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1aefd3ba15fc4dd0029aa9cda07092382b" kindref="member">LogMagnitude</ref>;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProtoList<sp/>=<sp/><ref refid="oldlist_8cpp_1a1019c2e1108695bb4f33f83e02ee62ad" kindref="member">push_last</ref>(NewProtoList,<sp/>NewProto);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><ref refid="cluster_8cpp_1a7e5357920f0bded023b15d29ddf15ebf" kindref="member">FreeProtoList</ref>(&amp;ProtoList);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(NewProtoList);</highlight></codeline>
<codeline lineno="775"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RemoveInsignificantProtos<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS</ref><sp/><ref refid="commontraining_8cpp_1aa89103a9b87cd5fe196c69787aacca2f" kindref="member">FindClass</ref><sp/>(</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/>List,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*Label)</highlight></codeline>
<codeline lineno="781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS</ref><sp/><sp/><sp/>MergeClass;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref><sp/>(List)</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>MergeClass<sp/>=<sp/>(<ref refid="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" kindref="member">MERGE_CLASS</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(List);</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp<sp/>(MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a748285b0d7014218f0b335dcb0513168" kindref="member">Label</ref>,<sp/>Label)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MergeClass);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FindClass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS</ref><sp/><ref refid="commontraining_8cpp_1ad07aa0e45caed9a49158afcd82d9e825" kindref="member">NewLabeledClass</ref><sp/>(</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/>*Label)</highlight></codeline>
<codeline lineno="797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS</ref><sp/><sp/><sp/>MergeClass;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/>MergeClass<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS_NODE</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a748285b0d7014218f0b335dcb0513168" kindref="member">Label</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(strlen<sp/>(Label)+1);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/>strcpy<sp/>(MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a748285b0d7014218f0b335dcb0513168" kindref="member">Label</ref>,<sp/>Label);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/>MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a1c7b735de8e1caa16763adf0cfc95593" kindref="member">Class</ref><sp/>=<sp/><ref refid="protos_8cpp_1ae1b779964924a618a307d8d6f0ec6dff" kindref="member">NewClass</ref><sp/>(<ref refid="intproto_8h_1a3e890a5d21d8456ad197510fd7caf277" kindref="member">MAX_NUM_PROTOS</ref>,<sp/><ref refid="intproto_8h_1a5f9a45f938cb06ecc0f9dbdc144155b1" kindref="member">MAX_NUM_CONFIGS</ref>);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(MergeClass);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NewLabeledClass<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a0f90ef232622ab0d996654dd91a278e2" kindref="member">FreeLabeledClassList</ref><sp/>(</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/>ClassList)</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/>**<sp/>Parameters:</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>FontList<sp/><sp/><sp/><sp/>list<sp/>of<sp/>all<sp/>fonts<sp/>in<sp/>document</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/>**<sp/>Globals:<sp/>none</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/>**<sp/>Operation:</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>This<sp/>routine<sp/>deallocates<sp/>all<sp/>of<sp/>the<sp/>space<sp/>allocated<sp/>to</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/>**<sp/><sp/><sp/><sp/><sp/>the<sp/>specified<sp/>list<sp/>of<sp/>training<sp/>samples.</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/>**<sp/>Return:<sp/>none</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>**<sp/>Exceptions:<sp/>none</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>**<sp/>History:<sp/>Fri<sp/>Aug<sp/>18<sp/>17:44:27<sp/>1989,<sp/>DSJ,<sp/>Created.</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS</ref><sp/><sp/><sp/>MergeClass;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref><sp/>(ClassList)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iterate<sp/>thru<sp/>all<sp/>of<sp/>the<sp/>fonts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>MergeClass<sp/>=<sp/>(<ref refid="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" kindref="member">MERGE_CLASS</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(ClassList);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>free<sp/>(MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a748285b0d7014218f0b335dcb0513168" kindref="member">Label</ref>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="protos_8cpp_1a751a34c0eb8b7dcba1439287dd3eb3d5" kindref="member">FreeClass</ref>(MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a1c7b735de8e1caa16763adf0cfc95593" kindref="member">Class</ref>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>MergeClass;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a338e68bdadcbdf51db4c7268c4529409" kindref="member">destroy</ref><sp/>(ClassList);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>FreeLabeledClassList<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_STRUCT</ref>*<sp/><ref refid="commontraining_8cpp_1ae0ede748b48d1f73abdaeac0c2a1a000" kindref="member">SetUpForFloat2Int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref>&amp;<sp/>unicharset,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>LabeledClassList)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e" kindref="compound">MERGE_CLASS</ref><sp/><sp/><sp/>MergeClass;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_TYPE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Class;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumProtos;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumConfigs;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumWords;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Values[3];</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewProto;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OldProto;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewConfig;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OldConfig;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>printf(&quot;Float2Int<sp/>...\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_STRUCT</ref>*<sp/>float_classes<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_c_l_a_s_s___s_t_r_u_c_t" kindref="compound">CLASS_STRUCT</ref>[unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1aa3e8073ebaf3e0022654c45f27135032" kindref="member">size</ref>()];</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(LabeledClassList)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_unicity_table_eq_eq" kindref="compound">UnicityTableEqEq&lt;int&gt;</ref><sp/><sp/><sp/>font_set;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>MergeClass<sp/>=<sp/>(<ref refid="commontraining_8h_1a04868818ab7f00c7b35f7f978dca7852" kindref="member">MERGE_CLASS</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(LabeledClassList);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>Class<sp/>=<sp/>&amp;float_classes[unicharset.<ref refid="class_u_n_i_c_h_a_r_s_e_t_1ae786fa834962ef4d6dbf8300c6c5d456" kindref="member">unichar_to_id</ref>(MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a748285b0d7014218f0b335dcb0513168" kindref="member">Label</ref>)];</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>NumProtos<sp/>=<sp/>MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a1c7b735de8e1caa16763adf0cfc95593" kindref="member">Class</ref>-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref>;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>NumConfigs<sp/>=<sp/>MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a1c7b735de8e1caa16763adf0cfc95593" kindref="member">Class</ref>-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>font_set.<ref refid="class_unicity_table_1a18c8fc9ccbd7c0befdae1ab65bafdb12" kindref="member">move</ref>(&amp;MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a1c7b735de8e1caa16763adf0cfc95593" kindref="member">Class</ref>-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a42fd551c9f2ee48e5873ae7308df64b4" kindref="member">font_set</ref>);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1aed122893fec98b9ebccee234bbb00292" kindref="member">NumProtos</ref><sp/>=<sp/>NumProtos;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ae5646d21fd1609343ad276deac642757" kindref="member">MaxNumProtos</ref><sp/>=<sp/>NumProtos;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1add1a2c4f7b02eb438c377242495013ef" kindref="member">Prototypes</ref><sp/>=<sp/>(<ref refid="protos_8h_1a04b1cd7341d318ccc4e679aec5cfad0e" kindref="member">PROTO</ref>)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t" kindref="compound">PROTO_STRUCT</ref>)<sp/>*<sp/>NumProtos);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i<sp/>&lt;<sp/>NumProtos;<sp/>i++)</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto<sp/>=<sp/><ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref>(Class,<sp/>i);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OldProto<sp/>=<sp/><ref refid="protos_8h_1a3def7bc87c3ad9ad793128f0dc5b8fce" kindref="member">ProtoIn</ref>(MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a1c7b735de8e1caa16763adf0cfc95593" kindref="member">Class</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Values[0]<sp/>=<sp/>OldProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Values[1]<sp/>=<sp/>OldProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Values[2]<sp/>=<sp/>OldProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref>;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="commontraining_8cpp_1a8959d42d4e9ba28a3e128aed3cefb479" kindref="member">Normalize</ref>(Values);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref><sp/>=<sp/>OldProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a54dd1cca86a1fd5c9ead8499cba99784" kindref="member">X</ref>;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref><sp/>=<sp/>OldProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a8dcd81037c1bc672e97ef7a54306dd93" kindref="member">Y</ref>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref><sp/>=<sp/>OldProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1aa29d8aaab147327320e2bc94a821aad1" kindref="member">Length</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref><sp/>=<sp/>OldProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a6cc7458f385f9c4673e1ce9a6dc9e80a" kindref="member">Angle</ref>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1ae3211a725f109fbd40efc6cd154330f7" kindref="member">A</ref><sp/>=<sp/>Values[0];</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a884630c87acb7606ac02516d1ea4ea9e" kindref="member">B</ref><sp/>=<sp/>Values[1];</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewProto-&gt;<ref refid="struct_p_r_o_t_o___s_t_r_u_c_t_1a09d1e20c0a8362582127fa3554bb83ae" kindref="member">C</ref><sp/>=<sp/>Values[2];</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a452c42efe7ec87439ef16f1e51d57f2c" kindref="member">NumConfigs</ref><sp/>=<sp/>NumConfigs;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a35830ba1f40d31ef5bb3ad9d4e4596dc" kindref="member">MaxNumConfigs</ref><sp/>=<sp/>NumConfigs;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1a42fd551c9f2ee48e5873ae7308df64b4" kindref="member">font_set</ref>.<ref refid="class_unicity_table_1a18c8fc9ccbd7c0befdae1ab65bafdb12" kindref="member">move</ref>(&amp;font_set);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref><sp/>=<sp/>(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref>*)<sp/><ref refid="emalloc_8cpp_1a55f2088f1a7b3333bb5c7275ab726bba" kindref="member">Emalloc</ref><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref>)<sp/>*<sp/>NumConfigs);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>NumWords<sp/>=<sp/><ref refid="bitvec_8h_1a905ff9b6c51cb231dd8baf1713a3c9b8" kindref="member">WordsInVectorOfSize</ref>(NumProtos);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i<sp/>&lt;<sp/>NumConfigs;<sp/>i++)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewConfig<sp/>=<sp/><ref refid="bitvec_8cpp_1a502314dc3ee4b178df067713b324b868" kindref="member">NewBitVector</ref>(NumProtos);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OldConfig<sp/>=<sp/>MergeClass-&gt;<ref refid="struct_m_e_r_g_e___c_l_a_s_s___n_o_d_e_1a1c7b735de8e1caa16763adf0cfc95593" kindref="member">Class</ref>-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[i];</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j<sp/>&lt;<sp/>NumWords;<sp/>j++)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NewConfig[j]<sp/>=<sp/>OldConfig[j];</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Class-&gt;<ref refid="struct_c_l_a_s_s___s_t_r_u_c_t_1ac5524279d10e5bafe306355d72309b69" kindref="member">Configurations</ref>[i]<sp/>=<sp/>NewConfig;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>float_classes;</highlight></codeline>
<codeline lineno="899"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>SetUpForFloat2Int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a8959d42d4e9ba28a3e128aed3cefb479" kindref="member">Normalize</ref><sp/>(</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>*Values)</highlight></codeline>
<codeline lineno="904"><highlight class="normal">{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Slope;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Intercept;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>Normalizer;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/>Slope<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>tan<sp/>(Values<sp/>[2]<sp/>*<sp/>2<sp/>*<sp/><ref refid="const_8h_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>Intercept<sp/><sp/>=<sp/>Values<sp/>[1]<sp/>-<sp/>Slope<sp/>*<sp/>Values<sp/>[0];</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/>Normalizer<sp/>=<sp/>1<sp/>/<sp/>sqrt<sp/>(Slope<sp/>*<sp/>Slope<sp/>+<sp/>1.0);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/>Values<sp/>[0]<sp/>=<sp/>Slope<sp/>*<sp/>Normalizer;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/>Values<sp/>[1]<sp/>=<sp/>-<sp/>Normalizer;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/>Values<sp/>[2]<sp/>=<sp/>Intercept<sp/>*<sp/>Normalizer;</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>Normalize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="comment">/*-------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a7a389fb9515f5942d514995b3dfb904c" kindref="member">FreeNormProtoList</ref><sp/>(</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/><sp/><sp/><sp/>CharList)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/><sp/><sp/>char_sample;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref><sp/>(CharList)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>iterate<sp/>thru<sp/>all<sp/>of<sp/>the<sp/>fonts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>char_sample<sp/>=<sp/>(<ref refid="commontraining_8h_1af49d04c90ffcf9376c7a1e1db99182cb" kindref="member">LABELEDLIST</ref>)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(CharList);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="commontraining_8cpp_1a499ee1a13b378e272171053afca0de80" kindref="member">FreeLabeledList</ref><sp/>(char_sample);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8cpp_1a338e68bdadcbdf51db4c7268c4529409" kindref="member">destroy</ref><sp/>(CharList);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FreeNormProtoList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1a19e1f0ede9842599275a9d0ffc67ef4a" kindref="member">AddToNormProtosList</ref>(</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref>*<sp/>NormProtoList,</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>ProtoList,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>CharName)</highlight></codeline>
<codeline lineno="939"><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref>*<sp/>Proto;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e" kindref="compound">LABELEDLIST</ref><sp/>LabeledProtoList;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/>LabeledProtoList<sp/>=<sp/><ref refid="commontraining_8cpp_1a83417b534a3cb0ea9e43eba33e37f1bc" kindref="member">NewLabeledList</ref>(CharName);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(ProtoList)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(ProtoList);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>LabeledProtoList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" kindref="member">List</ref><sp/>=<sp/><ref refid="oldlist_8cpp_1a9c4294375af81ab4c133b6b5a3679a16" kindref="member">push</ref>(LabeledProtoList-&gt;<ref refid="struct_l_a_b_e_l_e_d_l_i_s_t_n_o_d_e_1a848ab6ee611dbc860f80a47ecef2faa7" kindref="member">List</ref>,<sp/>Proto);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/>*NormProtoList<sp/>=<sp/><ref refid="oldlist_8cpp_1a9c4294375af81ab4c133b6b5a3679a16" kindref="member">push</ref>(*NormProtoList,<sp/>LabeledProtoList);</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="commontraining_8cpp_1abeba7db95e0009664b96ac0441e7dc16" kindref="member">NumberOfProtos</ref>(</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlist__rec" kindref="compound">LIST</ref><sp/>ProtoList,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><sp/><sp/>CountSigProtos,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref><sp/><sp/><sp/>CountInsigProtos)</highlight></codeline>
<codeline lineno="957"><highlight class="normal">{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*Proto;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><ref refid="oldlist_8h_1a2cf19ba78be6b54f66823d58f34f2a53" kindref="member">iterate</ref>(ProtoList)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>Proto<sp/>=<sp/>(<ref refid="struct_p_r_o_t_o_t_y_p_e" kindref="compound">PROTOTYPE</ref><sp/>*)<sp/><ref refid="oldlist_8h_1a69547be764424f18b0be535400747978" kindref="member">first_node</ref><sp/>(<sp/>ProtoList<sp/>);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>&amp;&amp;<sp/>CountSigProtos<sp/>)<sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>!<sp/>Proto-&gt;<ref refid="struct_p_r_o_t_o_t_y_p_e_1a5d94887aaa0acd7e4a0c04c420af5670" kindref="member">Significant</ref><sp/>&amp;&amp;<sp/>CountInsigProtos<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>N++;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(N);</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/training/commontraining.cpp"/>
  </compounddef>
</doxygen>
