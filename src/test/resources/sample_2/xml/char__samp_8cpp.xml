<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="char__samp_8cpp" kind="file">
    <compoundname>char_samp.cpp</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">string</includes>
    <includes refid="char__samp_8h" local="yes">char_samp.h</includes>
    <includes refid="cube__utils_8h" local="yes">cube_utils.h</includes>
    <incdepgraph>
      <node id="28951">
        <label>cube/char_samp.cpp</label>
        <link refid="char_samp.cpp"/>
        <childnode refid="28952" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28954" relation="include">
        </childnode>
        <childnode refid="28963" relation="include">
        </childnode>
      </node>
      <node id="28977">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="28965">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="28955">
        <label>stdlib.h</label>
      </node>
      <node id="28969">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="28970" relation="include">
        </childnode>
      </node>
      <node id="28964">
        <label>allheaders.h</label>
      </node>
      <node id="28953">
        <label>string</label>
      </node>
      <node id="28980">
        <label>stddef.h</label>
      </node>
      <node id="28983">
        <label>memory.h</label>
      </node>
      <node id="28975">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="28968" relation="include">
        </childnode>
      </node>
      <node id="28970">
        <label>limits.h</label>
      </node>
      <node id="28954">
        <label>char_samp.h</label>
        <link refid="char__samp_8h"/>
        <childnode refid="28955" relation="include">
        </childnode>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28957" relation="include">
        </childnode>
        <childnode refid="28960" relation="include">
        </childnode>
      </node>
      <node id="28966">
        <label>char_set.h</label>
        <link refid="char__set_8h"/>
        <childnode refid="28952" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28961" relation="include">
        </childnode>
        <childnode refid="28960" relation="include">
        </childnode>
        <childnode refid="28967" relation="include">
        </childnode>
        <childnode refid="28981" relation="include">
        </childnode>
        <childnode refid="28985" relation="include">
        </childnode>
      </node>
      <node id="28952">
        <label>string.h</label>
      </node>
      <node id="28984">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="28982" relation="include">
        </childnode>
      </node>
      <node id="28982">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="28983" relation="include">
        </childnode>
        <childnode refid="28952" relation="include">
        </childnode>
      </node>
      <node id="28963">
        <label>cube_utils.h</label>
        <link refid="cube__utils_8h"/>
        <childnode refid="28962" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28964" relation="include">
        </childnode>
        <childnode refid="28965" relation="include">
        </childnode>
        <childnode refid="28966" relation="include">
        </childnode>
        <childnode refid="28954" relation="include">
        </childnode>
        <childnode refid="28986" relation="include">
        </childnode>
      </node>
      <node id="28962">
        <label>vector</label>
      </node>
      <node id="28974">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="28968" relation="include">
        </childnode>
      </node>
      <node id="28972">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28973" relation="include">
        </childnode>
        <childnode refid="28978" relation="include">
        </childnode>
      </node>
      <node id="28973">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28955" relation="include">
        </childnode>
        <childnode refid="28974" relation="include">
        </childnode>
        <childnode refid="28975" relation="include">
        </childnode>
        <childnode refid="28976" relation="include">
        </childnode>
        <childnode refid="28977" relation="include">
        </childnode>
      </node>
      <node id="28979">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="28980" relation="include">
        </childnode>
        <childnode refid="28968" relation="include">
        </childnode>
      </node>
      <node id="28957">
        <label>bmp_8.h</label>
        <link refid="bmp__8_8h"/>
        <childnode refid="28955" relation="include">
        </childnode>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28958" relation="include">
        </childnode>
        <childnode refid="28959" relation="include">
        </childnode>
      </node>
      <node id="28958">
        <label>con_comp.h</label>
        <link refid="con__comp_8h"/>
      </node>
      <node id="28981">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="28975" relation="include">
        </childnode>
        <childnode refid="28976" relation="include">
        </childnode>
        <childnode refid="28978" relation="include">
        </childnode>
        <childnode refid="28974" relation="include">
        </childnode>
        <childnode refid="28982" relation="include">
        </childnode>
        <childnode refid="28984" relation="include">
        </childnode>
      </node>
      <node id="28985">
        <label>cube_const.h</label>
        <link refid="cube__const_8h"/>
      </node>
      <node id="28986">
        <label>img.h</label>
        <link refid="img_8h"/>
        <childnode refid="28979" relation="include">
        </childnode>
      </node>
      <node id="28971">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="28972" relation="include">
        </childnode>
      </node>
      <node id="28961">
        <label>algorithm</label>
      </node>
      <node id="28968">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="28969" relation="include">
        </childnode>
      </node>
      <node id="28959">
        <label>cached_file.h</label>
        <link refid="cached__file_8h"/>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
      </node>
      <node id="28956">
        <label>stdio.h</label>
      </node>
      <node id="28960">
        <label>string_32.h</label>
        <link refid="string__32_8h"/>
        <childnode refid="28952" relation="include">
        </childnode>
        <childnode refid="28953" relation="include">
        </childnode>
        <childnode refid="28961" relation="include">
        </childnode>
        <childnode refid="28962" relation="include">
        </childnode>
      </node>
      <node id="28967">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28968" relation="include">
        </childnode>
        <childnode refid="28971" relation="include">
        </childnode>
      </node>
      <node id="28978">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28952" relation="include">
        </childnode>
        <childnode refid="28969" relation="include">
        </childnode>
        <childnode refid="28979" relation="include">
        </childnode>
      </node>
      <node id="28976">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="28956" relation="include">
        </childnode>
        <childnode refid="28952" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="char__samp_8cpp_1a09a3b394b8602092d58347b791158062" prot="public" static="no">
        <name>MAX_LINE_LEN</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/cube/char_samp.cpp" line="27" column="9" bodyfile="/Users/makoto/Desktop/trunk/cube/char_samp.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_samp.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Description:<sp/>Implementation<sp/>of<sp/>a<sp/>Character<sp/>Bitmap<sp/>Sample<sp/>Class</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/>Ahmad<sp/>Abdulkader</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/>2007</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>(C)<sp/>Copyright<sp/>2008,<sp/>Google<sp/>Inc.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="char__samp_8h" kindref="compound">char_samp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cube__utils_8h" kindref="compound">cube_utils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_LINE_LEN<sp/><sp/>1024</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp::CharSamp</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Bmp8(0,<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>left_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>top_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>label32_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>page_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp::CharSamp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hgt)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Bmp8(wid,<sp/>hgt)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>left_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>top_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>label32_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>page_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp::CharSamp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hgt)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Bmp8(wid,<sp/>hgt)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>left_(left)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>top_(top)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>label32_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>page_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="classtesseract_1_1_char_samp_1a484bb5304c3242a8e0acd7e363a950ce" kindref="member">CharSamp::~CharSamp</ref>()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label32_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]label32_;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>label32_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>a<sp/>UTF-8<sp/>version<sp/>of<sp/>the<sp/>string<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a4ce24f6e9ef0a6157d809d09ec15500b" kindref="member">CharSamp::stringLabel</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label32_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" kindref="member">string_32</ref><sp/>str32(label32_);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a30c20693fc79e49a67c9694700f1d0b5" kindref="member">CubeUtils::UTF32ToUTF8</ref>(str32.c_str(),<sp/>&amp;str);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>a<sp/>the<sp/>string<sp/>label<sp/>using<sp/>a<sp/>UTF<sp/>encoded<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a3e8a3e4e64de1edfd8ec3cae4a214cd4" kindref="member">CharSamp::SetLabel</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label32_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]label32_;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>label32_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1a5e51e225e3ac13c918ed9f77715fa041" kindref="member">string_32</ref><sp/>str32;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_cube_utils_1a911ee12931d18c46e7db79c6758a91cc" kindref="member">CubeUtils::UTF8ToUTF32</ref>(str.c_str(),<sp/>&amp;str32);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a3e8a3e4e64de1edfd8ec3cae4a214cd4" kindref="member">SetLabel</ref>(reinterpret_cast&lt;const<sp/>char_32<sp/>*&gt;(str32.c_str()));</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>creates<sp/>a<sp/>CharSamp<sp/>object<sp/>from<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">CharSamp<sp/>*<ref refid="classtesseract_1_1_char_samp_1a0e2ba1e2f91feb45c21734952fd2d1e5" kindref="member">CharSamp::FromCharDumpFile</ref>(CachedFile<sp/>*fp)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>top;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>page;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>first_char;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>last_char;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>norm_top;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>norm_bottom;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>norm_aspect_ratio;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val32;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*label32;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>and<sp/>check<sp/>32<sp/>bit<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;val32,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>!=<sp/>0xabd0fefe)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>label<sp/>length,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;val32,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32))<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>label<sp/>is<sp/>not<sp/>null<sp/>terminated<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>label32<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref>[val32<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label32<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(label32,<sp/>val32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*label32))<sp/>!=</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(val32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*label32)))<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>null<sp/>terminate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>label32[val32]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>label32<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;page,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(page))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(page))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;left,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(left))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(left))<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;top,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(top))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(top))<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;first_char,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(first_char))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(first_char))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;last_char,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(last_char))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(last_char))<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;norm_top,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_top))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_top))<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;norm_bottom,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_bottom))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_bottom))<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp-&gt;Read(&amp;norm_aspect_ratio,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_aspect_ratio))<sp/>!=</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_aspect_ratio))<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref><sp/>*char_samp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_samp<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>char_samp-&gt;label32_<sp/>=<sp/>label32;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>char_samp-&gt;page_<sp/>=<sp/>page;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>char_samp-&gt;left_<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>char_samp-&gt;top_<sp/>=<sp/>top;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>char_samp-&gt;first_char_<sp/>=<sp/>first_char;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>char_samp-&gt;last_char_<sp/>=<sp/>last_char;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>char_samp-&gt;norm_top_<sp/>=<sp/>norm_top;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>char_samp-&gt;norm_bottom_<sp/>=<sp/>norm_bottom;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>char_samp-&gt;norm_aspect_ratio_<sp/>=<sp/>norm_aspect_ratio;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>Bmp8<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_samp-&gt;LoadFromCharDumpFile(fp)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>char_samp;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_samp;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>a<sp/>Char<sp/>Samp<sp/>from<sp/>a<sp/>dump<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">CharSamp<sp/>*<ref refid="classtesseract_1_1_char_samp_1a0e2ba1e2f91feb45c21734952fd2d1e5" kindref="member">CharSamp::FromCharDumpFile</ref>(FILE<sp/>*fp)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>left;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>top;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>page;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>first_char;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>last_char;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>norm_top;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>norm_bottom;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>norm_aspect_ratio;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val32;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*label32;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>and<sp/>check<sp/>32<sp/>bit<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;val32,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32))<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>!=<sp/>0xabd0fefe)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>label<sp/>length,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;val32,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32))<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>label<sp/>is<sp/>not<sp/>null<sp/>terminated<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>label32<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref>[val32<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label32<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(label32,<sp/>1,<sp/>val32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*label32),<sp/>fp)<sp/>!=</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(val32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*label32)))<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>null<sp/>terminate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>label32[val32]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>label32<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;page,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(page),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(page))<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;left,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(left),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(left))<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;top,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(top),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(top))<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;first_char,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(first_char),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(first_char))<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;last_char,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(last_char),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(last_char))<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;norm_top,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_top),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_top))<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;norm_bottom,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_bottom),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_bottom))<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fread(&amp;norm_aspect_ratio,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_aspect_ratio),<sp/>fp)<sp/>!=</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_aspect_ratio))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref><sp/>*char_samp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_samp<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>char_samp-&gt;label32_<sp/>=<sp/>label32;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>char_samp-&gt;page_<sp/>=<sp/>page;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>char_samp-&gt;left_<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>char_samp-&gt;top_<sp/>=<sp/>top;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>char_samp-&gt;first_char_<sp/>=<sp/>first_char;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/>char_samp-&gt;last_char_<sp/>=<sp/>last_char;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>char_samp-&gt;norm_top_<sp/>=<sp/>norm_top;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>char_samp-&gt;norm_bottom_<sp/>=<sp/>norm_bottom;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>char_samp-&gt;norm_aspect_ratio_<sp/>=<sp/>norm_aspect_ratio;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>Bmp8<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_samp-&gt;LoadFromCharDumpFile(fp)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_samp;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>returns<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>charsamp<sp/>that<sp/>is<sp/>scaled<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specified<sp/>width<sp/>and<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">CharSamp<sp/>*<ref refid="classtesseract_1_1_char_samp_1ae487ef754f7b0cad136a96af9db992bc" kindref="member">CharSamp::Scale</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hgt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isotropic)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref><sp/>*scaled_samp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref>(wid,<sp/>hgt);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaled_samp<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scaled_samp-&gt;ScaleFrom(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>isotropic)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scaled_samp;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>scaled_samp-&gt;left_<sp/>=<sp/>left_;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>scaled_samp-&gt;top_<sp/>=<sp/>top_;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>scaled_samp-&gt;page_<sp/>=<sp/>page_;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>scaled_samp-&gt;SetLabel(label32_);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>scaled_samp-&gt;first_char_<sp/>=<sp/>first_char_;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>scaled_samp-&gt;last_char_<sp/>=<sp/>last_char_;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>scaled_samp-&gt;norm_top_<sp/>=<sp/>norm_top_;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>scaled_samp-&gt;norm_bottom_<sp/>=<sp/>norm_bottom_;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>scaled_samp-&gt;norm_aspect_ratio_<sp/>=<sp/>norm_aspect_ratio_;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scaled_samp;</highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>a<sp/>Char<sp/>Samp<sp/>from<sp/>a<sp/>dump<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal">CharSamp<sp/>*<ref refid="classtesseract_1_1_char_samp_1a6c14f9fa2793562c82515c4e99c34c92" kindref="member">CharSamp::FromRawData</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hgt,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref><sp/>*char_samp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref>(left,<sp/>top,<sp/>wid,<sp/>hgt);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_samp<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_samp-&gt;LoadFromRawData(data)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>char_samp;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_samp;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Saves<sp/>the<sp/>charsamp<sp/>to<sp/>a<sp/>dump<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1ad9f46aa90733c6f2682715edefbe70ac" kindref="member">CharSamp::Save2CharDumpFile</ref>(FILE<sp/>*fp)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val32;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>and<sp/>check<sp/>32<sp/>bit<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>val32<sp/>=<sp/>0xabd0fefe;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;val32,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32))<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>label<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>val32<sp/>=<sp/>(label32_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>?<sp/>0<sp/>:<sp/><ref refid="classtesseract_1_1_char_samp_1a145932fac1c12a682d41b28fb4e9d867" kindref="member">LabelLen</ref>(label32_);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;val32,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32))<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label32_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(label32_,<sp/>1,<sp/>val32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*label32_),<sp/>fp)<sp/>!=</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(val32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*label32_)))<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;page_,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(page_),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(page_))<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;left_,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(left_),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(left_))<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;top_,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(top_),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(top_))<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;first_char_,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(first_char_),<sp/>fp)<sp/>!=</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(first_char_))<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;last_char_,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(last_char_),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(last_char_))<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;norm_top_,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_top_),<sp/>fp)<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_top_))<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;norm_bottom_,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_bottom_),<sp/>fp)<sp/>!=</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_bottom_))<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fwrite(&amp;norm_aspect_ratio_,<sp/>1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_aspect_ratio_),<sp/>fp)<sp/>!=</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(norm_aspect_ratio_))<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classtesseract_1_1_bmp8_1acb33243c84fea596c9abf8aa3ee18825" kindref="member">SaveBmp2CharDumpFile</ref>(fp)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Crop<sp/>the<sp/>char<sp/>samp<sp/>such<sp/>that<sp/>there<sp/>are<sp/>no<sp/>white<sp/>spaces<sp/>on<sp/>any<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>norm_top_<sp/>and<sp/>norm_bottom_<sp/>fields<sp/>are<sp/>the<sp/>character<sp/>top/bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>respect<sp/>to<sp/>whatever<sp/>context<sp/>the<sp/>character<sp/>is<sp/>being<sp/>recognized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>(e.g.<sp/>word<sp/>bounding<sp/>box)<sp/>normalized<sp/>to<sp/>a<sp/>standard<sp/>size<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/>255.<sp/>Here<sp/>they<sp/>default<sp/>to<sp/>0<sp/>and<sp/>255<sp/>(word<sp/>box<sp/>boundaries),<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/>since<sp/>they<sp/>are<sp/>context<sp/>dependent,<sp/>they<sp/>may<sp/>need<sp/>to<sp/>be<sp/>reset<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calling<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal">CharSamp<sp/>*<ref refid="classtesseract_1_1_char_samp_1af54aab3c1893ba9aec816015a1a9c9a4" kindref="member">CharSamp::Crop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>dimesions<sp/>of<sp/>the<sp/>cropped<sp/>img</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cropped_left<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cropped_top<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cropped_wid<sp/>=<sp/><ref refid="classtesseract_1_1_bmp8_1aefc333b9afa85c20f0daed573021fedf" kindref="member">wid_</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cropped_hgt<sp/>=<sp/><ref refid="classtesseract_1_1_bmp8_1a62d633750ad515b99eda172efccc7b55" kindref="member">hgt_</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_bmp8_1a4ef0548a67b31f5622082cd40288605d" kindref="member">Bmp8::Crop</ref>(&amp;cropped_left,<sp/>&amp;cropped_top,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;cropped_wid,<sp/>&amp;cropped_hgt);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cropped_wid<sp/>==<sp/>0<sp/>||<sp/>cropped_hgt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>cropped<sp/>char<sp/>samp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref><sp/>*cropped_samp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref>(left_<sp/>+<sp/>cropped_left,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_<sp/>+<sp/>cropped_top,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cropped_wid,<sp/>cropped_hgt);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>cropped_samp-&gt;SetLabel(label32_);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>cropped_samp-&gt;SetFirstChar(first_char_);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>cropped_samp-&gt;SetLastChar(last_char_);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>following<sp/>3<sp/>fields<sp/>may/should<sp/>be<sp/>reset<sp/>by<sp/>the<sp/>calling<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>context<sp/>information,<sp/>i.e.,<sp/>location<sp/>of<sp/>character<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>w.r.t.<sp/>the<sp/>word<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>cropped_samp-&gt;SetNormAspectRatio(255<sp/>*</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cropped_wid<sp/>/<sp/>(cropped_wid<sp/>+<sp/>cropped_hgt));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/>cropped_samp-&gt;SetNormTop(0);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>cropped_samp-&gt;SetNormBottom(255);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>bitmap<sp/>to<sp/>the<sp/>cropped<sp/>img</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_bmp8_1aef4e553b550e2fc133fda73ce36a82bd" kindref="member">Copy</ref>(cropped_left,<sp/>cropped_top,<sp/>cropped_wid,<sp/>cropped_hgt,<sp/>cropped_samp);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cropped_samp;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>segment<sp/>the<sp/>char<sp/>samp<sp/>to<sp/>connected<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>based<sp/>on<sp/>contiguity<sp/>and<sp/>vertical<sp/>pixel<sp/>density<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal">ConComp<sp/>**<ref refid="classtesseract_1_1_char_samp_1a66d6ef340dd9d174b6f966bde9972498" kindref="member">CharSamp::Segment</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*segment_cnt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>right_2_left,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_hist_wnd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_con_comp_size)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>(*segment_cnt)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>concomp_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seg_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>concomps<sp/>of<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>ConComp<sp/>**concomp_array<sp/>=<sp/><ref refid="classtesseract_1_1_bmp8_1ab1da709401133a6b0d058d33c0108eae" kindref="member">FindConComps</ref>(&amp;concomp_cnt,<sp/>min_con_comp_size);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concomp_cnt<sp/>&lt;=<sp/>0<sp/>||<sp/>!concomp_array)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concomp_array)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]concomp_array;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>ConComp<sp/>**seg_array<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>segment<sp/>each<sp/>concomp<sp/>further<sp/>using<sp/>vertical<sp/>histogram</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>concomp<sp/>=<sp/>0;<sp/>concomp<sp/>&lt;<sp/>concomp_cnt;<sp/>concomp++)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>concomp_seg_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>segment<sp/>the<sp/>concomp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>ConComp<sp/>**concomp_seg_array<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>ConComp<sp/>**concomp_alloc_seg<sp/>=</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concomp_array[concomp]-&gt;Segment(max_hist_wnd,<sp/>&amp;concomp_seg_cnt);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>segments,<sp/>add<sp/>the<sp/>whole<sp/>concomp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concomp_alloc_seg<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>concomp_seg_cnt<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>concomp_seg_array<sp/>=<sp/>concomp_array<sp/>+<sp/>concomp;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>original<sp/>concomp,<sp/>we<sp/>no<sp/>longer<sp/>need<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>concomp_seg_array<sp/>=<sp/>concomp_alloc_seg;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>concomp_array[concomp];</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>resulting<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seg_idx<sp/>=<sp/>0;<sp/>seg_idx<sp/>&lt;<sp/>concomp_seg_cnt;<sp/>seg_idx++)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>too<sp/>small<sp/>of<sp/>a<sp/>segment:<sp/>ignore</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concomp_seg_array[seg_idx]-&gt;<ref refid="classtesseract_1_1_bmp8_1a4a21ea5a104d8c37e22c94b4cde2d462" kindref="member">Width</ref>()<sp/>&lt;<sp/>2<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concomp_seg_array[seg_idx]-&gt;<ref refid="classtesseract_1_1_bmp8_1ae9591eae7d79b924bfcac728cced4ff1" kindref="member">Height</ref>()<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>concomp_seg_array[seg_idx];</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>new<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extend<sp/>the<sp/>segment<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((seg_cnt<sp/>%<sp/><ref refid="classtesseract_1_1_bmp8_1abb90985ae39b699969e1fc4bce0cebf3" kindref="member">kConCompAllocChunk</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConComp<sp/>**temp_segm_array<sp/>=</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ConComp<sp/>*[seg_cnt<sp/>+<sp/><ref refid="classtesseract_1_1_bmp8_1abb90985ae39b699969e1fc4bce0cebf3" kindref="member">kConCompAllocChunk</ref>];</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(temp_segm_array<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Cube<sp/>ERROR<sp/>(CharSamp::Segment):<sp/>could<sp/>not<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;allocate<sp/>additional<sp/>connected<sp/>components\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]concomp_seg_array;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]concomp_array;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]seg_array;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg_cnt<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(temp_segm_array,<sp/>seg_array,<sp/>seg_cnt<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*seg_array));</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]seg_array;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg_array<sp/>=<sp/>temp_segm_array;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg_array[seg_cnt++]<sp/>=<sp/>concomp_seg_array[seg_idx];</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>segment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concomp_alloc_seg<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]concomp_alloc_seg;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>concomp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]concomp_array;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sort<sp/>the<sp/>concomps<sp/>from<sp/>Left2Right<sp/>or<sp/>Right2Left,<sp/>based<sp/>on<sp/>the<sp/>reading<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seg_cnt<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>seg_array<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort(seg_array,<sp/>seg_cnt,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*seg_array),<sp/>right_2_left<sp/>?</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classtesseract_1_1_con_comp_1ac85689fc81acd62cad011973ffb1d814" kindref="member">ConComp::Right2LeftComparer</ref><sp/>:<sp/><ref refid="classtesseract_1_1_con_comp_1a3e14bdb2d1e77560f0bc62e31bee05b4" kindref="member">ConComp::Left2RightComparer</ref>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/>(*segment_cnt)<sp/>=<sp/>seg_cnt;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seg_array;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>builds<sp/>a<sp/>char<sp/>samp<sp/>from<sp/>a<sp/>set<sp/>of<sp/>connected<sp/>components</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">CharSamp<sp/>*<ref refid="classtesseract_1_1_char_samp_1a9236e114544d03207eb3005e1602c68d" kindref="member">CharSamp::FromConComps</ref>(ConComp<sp/>**concomp_array,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>strt_concomp,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seg_flags_size,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*seg_flags,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*left_most,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*right_most,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>word_hgt)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>concomp;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_concomp;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>concomp_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>end_concomp<sp/>=<sp/>strt_concomp<sp/>+<sp/>seg_flags_size;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>ID<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>once<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_id<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(concomp<sp/>=<sp/>strt_concomp;<sp/>concomp<sp/>&lt;<sp/>end_concomp;<sp/>concomp++)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seg_flags<sp/>||<sp/>seg_flags[concomp<sp/>-<sp/>strt_concomp]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!once)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_id<sp/>=<sp/>concomp_array[concomp]-&gt;ID();</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_id<sp/>=<sp/>concomp_array[concomp]-&gt;ID();</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>once<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(concomp_array[concomp]-&gt;ID(),<sp/>&amp;min_id,<sp/>&amp;max_id);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>concomp_cnt++;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concomp_cnt<sp/>&lt;<sp/>1<sp/>||<sp/>!once<sp/>||<sp/>min_id<sp/>==<sp/>-1<sp/>||<sp/>max_id<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>alloc<sp/>memo<sp/>for<sp/>computing<sp/>leftmost<sp/>and<sp/>right<sp/>most<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>id_cnt<sp/>=<sp/>max_id<sp/>-<sp/>min_id<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*id_exist<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[id_cnt];</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*left_most_exist<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[id_cnt];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*right_most_exist<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">[id_cnt];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!id_exist<sp/>||<sp/>!left_most_exist<sp/>||<sp/>!right_most_exist)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>memset(id_exist,<sp/>0,<sp/>id_cnt<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*id_exist));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>memset(left_most_exist,<sp/>0,<sp/>id_cnt<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*left_most_exist));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>memset(right_most_exist,<sp/>0,<sp/>id_cnt<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*right_most_exist));</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>dimensions<sp/>of<sp/>the<sp/>charsamp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/>once<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unq_ids<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unq_left_most<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>unq_right_most<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(concomp<sp/>=<sp/>strt_concomp;<sp/>concomp<sp/>&lt;<sp/>end_concomp;<sp/>concomp++)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seg_flags<sp/>||<sp/>seg_flags[concomp<sp/>-<sp/>strt_concomp]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!once)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>concomp_array[concomp]-&gt;Left();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>concomp_array[concomp]-&gt;Right();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top<sp/>=<sp/>concomp_array[concomp]-&gt;Top();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>concomp_array[concomp]-&gt;Bottom();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>once<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(concomp_array[concomp]-&gt;<ref refid="classtesseract_1_1_char_samp_1a807191c8ad18f1cd5cc576a98e498f4f" kindref="member">Left</ref>(),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concomp_array[concomp]-&gt;<ref refid="classtesseract_1_1_char_samp_1aec21c7af6d5513052d75d6305c18cef7" kindref="member">Right</ref>(),<sp/>&amp;left,<sp/>&amp;right);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="helpers_8h_1a6eb00eb9bc5ed195953f334971c462ae" kindref="member">UpdateRange</ref>(concomp_array[concomp]-&gt;<ref refid="classtesseract_1_1_char_samp_1a7fd4126ace53942c55a9926faaf62756" kindref="member">Top</ref>(),</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>concomp_array[concomp]-&gt;<ref refid="classtesseract_1_1_char_samp_1a347842b37a6af68a7c53b99460706ee6" kindref="member">Bottom</ref>(),<sp/>&amp;top,<sp/>&amp;bottom);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>count<sp/>unq<sp/>ids,<sp/>unq<sp/>left<sp/>most<sp/>and<sp/>right<sp/>mosts<sp/>ids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>concomp_id<sp/>=<sp/>concomp_array[concomp]-&gt;ID()<sp/>-<sp/>min_id;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!id_exist[concomp_id])<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id_exist[concomp_id]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unq_ids++;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concomp_array[concomp]-&gt;LeftMost())<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left_most_exist[concomp_id]<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left_most_exist[concomp_id]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unq_left_most++;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(concomp_array[concomp]-&gt;RightMost())<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right_most_exist[concomp_id]<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right_most_exist[concomp_id]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unq_right_most++;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]id_exist;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]left_most_exist;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]right_most_exist;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!once<sp/>||<sp/>left<sp/>==<sp/>-1<sp/>||<sp/>top<sp/>==<sp/>-1<sp/>||<sp/>right<sp/>==<sp/>-1<sp/>||<sp/>bottom<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/>(*left_most)<sp/>=<sp/>(unq_left_most<sp/>&gt;=<sp/>unq_ids);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>(*right_most)<sp/>=<sp/>(unq_right_most<sp/>&gt;=<sp/>unq_ids);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>char<sp/>sample<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref><sp/>*samp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref>(left,<sp/>top,<sp/>right<sp/>-<sp/>left<sp/>+<sp/>1,<sp/>bottom<sp/>-<sp/>top<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!samp)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>foreground<sp/>pixels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(concomp<sp/>=<sp/>strt_concomp;<sp/>concomp<sp/>&lt;<sp/>end_concomp;<sp/>concomp++)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!seg_flags<sp/>||<sp/>seg_flags[concomp<sp/>-<sp/>strt_concomp]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ConCompPt<sp/>*pt_ptr<sp/>=<sp/>concomp_array[concomp]-&gt;Head();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pt_ptr)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samp-&gt;line_buff_[pt_ptr-&gt;y()<sp/>-<sp/>top][pt_ptr-&gt;x()<sp/>-<sp/>left]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_ptr<sp/>=<sp/>pt_ptr-&gt;Next();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samp;</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clones<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal">CharSamp<sp/>*<ref refid="classtesseract_1_1_char_samp_1aae24be60c2be99a00c76bbc6f102cecf" kindref="member">CharSamp::Clone</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>cropped<sp/>char<sp/>samp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref><sp/>*samp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref>(left_,<sp/>top_,<sp/><ref refid="classtesseract_1_1_bmp8_1aefc333b9afa85c20f0daed573021fedf" kindref="member">wid_</ref>,<sp/><ref refid="classtesseract_1_1_bmp8_1a62d633750ad515b99eda172efccc7b55" kindref="member">hgt_</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>samp-&gt;SetLabel(label32_);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>samp-&gt;SetFirstChar(first_char_);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>samp-&gt;SetLastChar(last_char_);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/>samp-&gt;SetNormTop(norm_top_);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/>samp-&gt;SetNormBottom(norm_bottom_);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>samp-&gt;SetNormAspectRatio(norm_aspect_ratio_);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>the<sp/>bitmap<sp/>to<sp/>the<sp/>cropped<sp/>img</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_bmp8_1aef4e553b550e2fc133fda73ce36a82bd" kindref="member">Copy</ref>(0,<sp/>0,<sp/><ref refid="classtesseract_1_1_bmp8_1aefc333b9afa85c20f0daed573021fedf" kindref="member">wid_</ref>,<sp/><ref refid="classtesseract_1_1_bmp8_1a62d633750ad515b99eda172efccc7b55" kindref="member">hgt_</ref>,<sp/>samp);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samp;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>a<sp/>Char<sp/>Samp<sp/>from<sp/>a<sp/>dump<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal">CharSamp<sp/>*<ref refid="classtesseract_1_1_char_samp_1a0e2ba1e2f91feb45c21734952fd2d1e5" kindref="member">CharSamp::FromCharDumpFile</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**raw_data_ptr)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val32;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref><sp/>*label32;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*raw_data<sp/>=<sp/>*raw_data_ptr;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>and<sp/>check<sp/>32<sp/>bit<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/>memcpy(&amp;val32,<sp/>raw_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32));</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>!=<sp/>0xabd0fefe)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>label<sp/>length,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>memcpy(&amp;val32,<sp/>raw_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32));</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(val32);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>label<sp/>is<sp/>not<sp/>null<sp/>terminated<sp/>in<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>label32<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacetesseract_1aea2c6172b0ca77907e29cd018595b425" kindref="member">char_32</ref>[val32<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(label32<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(label32,<sp/>raw_data,<sp/>val32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*label32));</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>raw_data<sp/>+=<sp/>(val32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*label32));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>null<sp/>terminate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>label32[val32]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/>label32<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref><sp/>*char_samp<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref>();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_samp<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>char_samp-&gt;label32_<sp/>=<sp/>label32;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/>memcpy(&amp;char_samp-&gt;page_,<sp/>raw_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;page_));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;page_);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>memcpy(&amp;char_samp-&gt;left_,<sp/>raw_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;left_));</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;left_);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/>memcpy(&amp;char_samp-&gt;top_,<sp/>raw_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;top_));</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;top_);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/>memcpy(&amp;char_samp-&gt;first_char_,<sp/>raw_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;first_char_));</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;first_char_);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/>memcpy(&amp;char_samp-&gt;last_char_,<sp/>raw_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;last_char_));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;last_char_);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/>memcpy(&amp;char_samp-&gt;norm_top_,<sp/>raw_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;norm_top_));</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;norm_top_);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>memcpy(&amp;char_samp-&gt;norm_bottom_,<sp/>raw_data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;norm_bottom_));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;norm_bottom_);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>memcpy(&amp;char_samp-&gt;norm_aspect_ratio_,<sp/>raw_data,</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;norm_aspect_ratio_));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>raw_data<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char_samp-&gt;norm_aspect_ratio_);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>the<sp/>Bmp8<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(char_samp-&gt;LoadFromCharDumpFile(&amp;raw_data)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>char_samp;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/>(*raw_data_ptr)<sp/>=<sp/>raw_data;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>char_samp;</highlight></codeline>
<codeline lineno="653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment">//<sp/>computes<sp/>the<sp/>features<sp/>corresponding<sp/>to<sp/>the<sp/>char<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtesseract_1_1_char_samp_1a947af06d45b0af633fefa5bb7fd0249c" kindref="member">CharSamp::ComputeFeatures</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>conv_grid_size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*features)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>scaled<sp/>BMP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><ref refid="classtesseract_1_1_char_samp_1a38afcea73865907b1b87ca836ea7992b" kindref="member">CharSamp</ref><sp/>*scaled_bmp<sp/>=<sp/><ref refid="classtesseract_1_1_char_samp_1ae487ef754f7b0cad136a96af9db992bc" kindref="member">Scale</ref>(conv_grid_size,<sp/>conv_grid_size);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scaled_bmp)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>prepare<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buff<sp/>=<sp/>scaled_bmp-&gt;RawData();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bitmap<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bmp_size<sp/>=<sp/>conv_grid_size<sp/>*<sp/>conv_grid_size;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(input<sp/>=<sp/>0;<sp/>input<sp/>&lt;<sp/>bmp_size;<sp/>input++)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>features[input]<sp/>=<sp/>255.0f<sp/>-<sp/>(1.0f<sp/>*<sp/>buff[input]);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>word<sp/>context<sp/>features</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/>features[input++]<sp/>=<sp/><ref refid="classtesseract_1_1_char_samp_1afd204abdb0c52a81e09a30d88bcf4109" kindref="member">FirstChar</ref>();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>features[input++]<sp/>=<sp/><ref refid="classtesseract_1_1_char_samp_1a91dc85f7e1c01ce837c6493838bad64d" kindref="member">LastChar</ref>();</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/>features[input++]<sp/>=<sp/><ref refid="classtesseract_1_1_char_samp_1a9e6cc2565ed9a4b37cc5f2485cc1d61a" kindref="member">NormTop</ref>();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>features[input++]<sp/>=<sp/><ref refid="classtesseract_1_1_char_samp_1af1259ad6f4037f67e442127945c6095f" kindref="member">NormBottom</ref>();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>features[input++]<sp/>=<sp/><ref refid="classtesseract_1_1_char_samp_1ab1b02918e3b38091bb616c818c131dd1" kindref="member">NormAspectRatio</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>scaled_bmp;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>tesseract</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/cube/char_samp.cpp"/>
  </compounddef>
</doxygen>
