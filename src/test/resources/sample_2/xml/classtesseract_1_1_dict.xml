<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="classtesseract_1_1_dict" kind="class" prot="public">
    <compoundname>tesseract::Dict</compoundname>
    <includes refid="dict_8h" local="no">dict.h</includes>
      <sectiondef kind="user-defined">
      <header>go_deeper_dawg_fxn</header>
      <description><para>If the choice being composed so far could be a dictionary word keep exploring choices.</para><para>There are two modes for deciding whether to go deeper: regular dawg permuter mode and the special ambigs mode. If *limit is &lt;= 0.0 the function switches to the ambigs mode (this is the case when <ref refid="classtesseract_1_1_dict_1ac787e92f677e96a926d0c79e46a15461" kindref="member">dawg_permute_and_select()</ref> function is called from NoDangerousAmbigs()) and only searches for the first choice that has a rating better than *limit (in this case ratings are fake, since the real ratings can not be &lt; 0). Modification of the hyphen state is turned off in the ambigs mode. When in the regular dawg permuter mode, the function explores all the possible words and chooses the one with the best rating. The letters with ratings that are far worse than the ones seen so far are pruned out. </para></description>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ac787e92f677e96a926d0c79e46a15461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE * tesseract::Dict::dawg_permute_and_select</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, float rating_limit, int sought_word_length, int end_char_choice_index)</argsstring>
        <name>dawg_permute_and_select</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rating_limit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sought_word_length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end_char_choice_index</declname>
          <defname>start_char_choice_index</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Recursively explore all the possible character combinations in the given char_choices. Use <ref refid="classtesseract_1_1_dict_1ad6dd8117fc7d3d6a2271a501955eb187" kindref="member">go_deeper_dawg_fxn()</ref> to explore all the dawgs in the dawgs_ vector in parallel and discard invalid words.</para><para>Allocate and return a <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> with the best valid word found.</para><para>dawg_permute_and_select</para><para>Recursively explore all the possible character combinations in the given char_choices. Use <ref refid="classtesseract_1_1_dict_1ad6dd8117fc7d3d6a2271a501955eb187" kindref="member">go_deeper_dawg_fxn()</ref> to search all the dawgs in the dawgs_ vector in parallel and discard invalid words.</para><para>If sought_word_length is not kAnyWordLength, the function only searches for a valid word formed by the given char_choices in one fixed length dawg (that contains words of length sought_word_length) starting at the start_char_choice_index.</para><para>Allocate and return a <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> with the best valid word found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="188" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permdawg.cpp" bodystart="263" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ad6dd8117fc7d3d6a2271a501955eb187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::go_deeper_dawg_fxn</definition>
        <argsstring>(const char *debug, const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, int char_choice_index, const CHAR_FRAGMENT_INFO *prev_char_frag_info, bool word_ending, WERD_CHOICE *word, float certainties[], float *limit, WERD_CHOICE *best_choice, int *attempts_left, void *void_more_args)</argsstring>
        <name>go_deeper_dawg_fxn</name>
        <param>
          <type>const char *</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>char_choice_index</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_h_a_r___f_r_a_g_m_e_n_t___i_n_f_o" kindref="compound">CHAR_FRAGMENT_INFO</ref> *</type>
          <declname>prev_char_frag_info</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>word_ending</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>float</type>
          <declname>certainties</declname>
          <array>[]</array>
        </param>
        <param>
          <type>float *</type>
          <declname>limit</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>attempts_left</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>void_more_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the choice being composed so far could be a dictionary word and we have not reached the end of the word keep exploring the char_choices further. Also: <ndash/> sets hyphen word if needed <ndash/> if word_ending is true and the word is better than best_choice, copies word to best_choice and logs new word choice </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="203" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permdawg.cpp" bodystart="67" bodyend="247"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>choose_il1</header>
      <description><para>Choose between the candidate il1 chars. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first_char</parametername>
</parameternamelist>
<parameterdescription>
<para>first choice </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second_char</parametername>
</parameternamelist>
<parameterdescription>
<para>second choice </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>third_char</parametername>
</parameternamelist>
<parameterdescription>
<para>third choice </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prev_char</parametername>
</parameternamelist>
<parameterdescription>
<para>prev in word </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>next_char</parametername>
</parameternamelist>
<parameterdescription>
<para>next in word </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>next_next_char</parametername>
</parameternamelist>
<parameterdescription>
<para>after next next in word </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></description>
      <memberdef kind="function" id="classtesseract_1_1_dict_1abd556d948d000e8eda51875b82ee4449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * tesseract::Dict::choose_il1</definition>
        <argsstring>(const char *first_char, const char *second_char, const char *third_char, const char *prev_char, const char *next_char, const char *next_next_char)</argsstring>
        <name>choose_il1</name>
        <param>
          <type>const char *</type>
          <declname>first_char</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>second_char</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>third_char</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prev_char</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>next_char</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>next_next_char</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="218" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="1163" bodyend="1256"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>fragment_state</header>
      <description><para>Given the current char choice and information about previously seen fragments, determines whether adjacent character fragments are present and whether they can be concatenated.</para><para>The given prev_char_frag_info contains:<itemizedlist>
<listitem><para>fragment: if not NULL contains information about immediately preceeding fragmented character choice</para></listitem><listitem><para>num_fragments: number of fragments that have been used so far to construct a character</para></listitem><listitem><para>certainty: certainty of the current choice or minimum certainty of all fragments concatenated so far</para></listitem><listitem><para>rating: rating of the current choice or sum of fragment ratings concatenated so far</para></listitem></itemizedlist>
</para><para>The output char_frag_info is filled in as follows:<itemizedlist>
<listitem><para>character: is set to be NULL if the choice is a non-matching or non-ending fragment piece; is set to unichar of the given choice if it represents a regular character or a matching ending fragment</para></listitem><listitem><para>fragment,num_fragments,certainty,rating are set as described above</para></listitem></itemizedlist>
</para><para><simplesect kind="return"><para>false if a non-matching fragment is discovered, true otherwise. </para></simplesect>
</para></description>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a632d8c752369e54bb548e0a35dd7e100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE * tesseract::Dict::top_fragments_permute_and_select</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, float rating_limit)</argsstring>
        <name>top_fragments_permute_and_select</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rating_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>top_fragments_permute_and_select</para><para>Creates a copy of character choices list that contain only fragments and the best non-fragmented character choice. Permutes character in this shortened list, builds characters from fragments if possible and returns a better choice if found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="264" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="1367" bodyend="1429"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a12cc7c10929b310dd23baee1ab1e972b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::go_deeper_top_fragments_fxn</definition>
        <argsstring>(const char *debug, const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, int char_choice_index, const CHAR_FRAGMENT_INFO *prev_char_frag_info, bool word_ending, WERD_CHOICE *word, float certainties[], float *limit, WERD_CHOICE *best_choice, int *attempts_left, void *more_args)</argsstring>
        <name>go_deeper_top_fragments_fxn</name>
        <param>
          <type>const char *</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>char_choice_index</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_h_a_r___f_r_a_g_m_e_n_t___i_n_f_o" kindref="compound">CHAR_FRAGMENT_INFO</ref> *</type>
          <declname>prev_char_frag_info</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>word_ending</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>float</type>
          <declname>certainties</declname>
          <array>[]</array>
        </param>
        <param>
          <type>float *</type>
          <declname>limit</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>attempts_left</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>more_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>While the choice being composed so far could be better than best_choice keeps exploring char_choices. If the end of the word is reached and the word is better than best_choice, copies word to best_choice and logs the new word choice.</para><para>go_deeper_top_fragments_fxn</para><para>While the choice being composed so far could be better than best_choice keeps exploring char_choices. If the end of the word is reached and the word is better than best_choice, copies word to best_choice and logs the new word choice. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="271" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="1538" bodyend="1563"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1af58a79352c0ac94a552a9b2136b1682a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::fragment_state_okay</definition>
        <argsstring>(UNICHAR_ID curr_unichar_id, float curr_rating, float curr_certainty, const CHAR_FRAGMENT_INFO *prev_char_frag_info, const char *debug, int word_ending, CHAR_FRAGMENT_INFO *char_frag_info)</argsstring>
        <name>fragment_state_okay</name>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>curr_unichar_id</declname>
        </param>
        <param>
          <type>float</type>
          <declname>curr_rating</declname>
        </param>
        <param>
          <type>float</type>
          <declname>curr_certainty</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_h_a_r___f_r_a_g_m_e_n_t___i_n_f_o" kindref="compound">CHAR_FRAGMENT_INFO</ref> *</type>
          <declname>prev_char_frag_info</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>int</type>
          <declname>word_ending</declname>
        </param>
        <param>
          <type><ref refid="struct_c_h_a_r___f_r_a_g_m_e_n_t___i_n_f_o" kindref="compound">CHAR_FRAGMENT_INFO</ref> *</type>
          <declname>char_frag_info</declname>
        </param>
        <briefdescription>
<para>Semi-generic functions used by multiple permuters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="278" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="1283" bodyend="1358"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a0ceb12c3a410ba12fdb9a93df11d47e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::permute_choices</definition>
        <argsstring>(const char *debug, const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, int char_choice_index, const CHAR_FRAGMENT_INFO *prev_char_frag_info, WERD_CHOICE *word, float certainties[], float *limit, WERD_CHOICE *best_choice, int *attempts_left, void *more_args)</argsstring>
        <name>permute_choices</name>
        <param>
          <type>const char *</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>char_choice_index</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_h_a_r___f_r_a_g_m_e_n_t___i_n_f_o" kindref="compound">CHAR_FRAGMENT_INFO</ref> *</type>
          <declname>prev_char_frag_info</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>float</type>
          <declname>certainties</declname>
          <array>[]</array>
        </param>
        <param>
          <type>float *</type>
          <declname>limit</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>attempts_left</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>more_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>permute_choices</para><para>Call <ref refid="classtesseract_1_1_dict_1a1fd1f849b292727334cdbdee03d6cdfc" kindref="member">append_choices()</ref> for each <ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref> in BLOB_CHOICE_LIST with the given char_choice_index in char_choices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="283" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="1437" bodyend="1469"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a1fd1f849b292727334cdbdee03d6cdfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::append_choices</definition>
        <argsstring>(const char *debug, const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, const BLOB_CHOICE &amp;blob_choice, int char_choice_index, const CHAR_FRAGMENT_INFO *prev_char_frag_info, WERD_CHOICE *word, float certainties[], float *limit, WERD_CHOICE *best_choice, int *attempts_left, void *more_args)</argsstring>
        <name>append_choices</name>
        <param>
          <type>const char *</type>
          <declname>debug</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>const <ref refid="class_b_l_o_b___c_h_o_i_c_e" kindref="compound">BLOB_CHOICE</ref> &amp;</type>
          <declname>blob_choice</declname>
        </param>
        <param>
          <type>int</type>
          <declname>char_choice_index</declname>
        </param>
        <param>
          <type>const <ref refid="struct_c_h_a_r___f_r_a_g_m_e_n_t___i_n_f_o" kindref="compound">CHAR_FRAGMENT_INFO</ref> *</type>
          <declname>prev_char_frag_info</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>float</type>
          <declname>certainties</declname>
          <array>[]</array>
        </param>
        <param>
          <type>float *</type>
          <declname>limit</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>attempts_left</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>more_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>append_choices</para><para>Checks to see whether or not the next choice is worth appending to the word being generated. If so then keeps going deeper into the word.</para><para>This function assumes that <ref refid="classtesseract_1_1_dict_1a5f6572f1ce1ce687a367de82aec90557" kindref="member">Dict::go_deeper_fxn_</ref> is set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="295" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="1479" bodyend="1528"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a5f6572f1ce1ce687a367de82aec90557" prot="public" static="no" mutable="no">
        <type>void(Dict::*</type>
        <definition>void(Dict::* tesseract::Dict::go_deeper_fxn_)(const char *debug, const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, int char_choice_index, const CHAR_FRAGMENT_INFO *prev_char_frag_info, bool word_ending, WERD_CHOICE *word, float certainties[], float *limit, WERD_CHOICE *best_choice, int *attempts_left, void *void_more_args)</definition>
        <argsstring>)(const char *debug, const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, int char_choice_index, const CHAR_FRAGMENT_INFO *prev_char_frag_info, bool word_ending, WERD_CHOICE *word, float certainties[], float *limit, WERD_CHOICE *best_choice, int *attempts_left, void *void_more_args)</argsstring>
        <name>go_deeper_fxn_</name>
        <briefdescription>
<para>Pointer to go_deeper function that will be modified by various permuters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="308" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a802de385e07531ace182d16653e35f71" prot="public" static="no" mutable="no">
        <type>int(Dict::*</type>
        <definition>int(Dict::* tesseract::Dict::letter_is_okay_)(void *void_dawg_args, UNICHAR_ID unichar_id, bool word_end) const </definition>
        <argsstring>)(void *void_dawg_args, UNICHAR_ID unichar_id, bool word_end) const </argsstring>
        <name>letter_is_okay_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="560" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a7ac1496aaae5e9977a31a2781e7866f0" prot="public" static="no" mutable="no">
        <type>double(Dict::*</type>
        <definition>double(Dict::* tesseract::Dict::probability_in_context_)(const char *lang, const char *context, int context_bytes, const char *character, int character_bytes)</definition>
        <argsstring>)(const char *lang, const char *context, int context_bytes, const char *character, int character_bytes)</argsstring>
        <name>probability_in_context_</name>
        <briefdescription>
<para>Probability in context function used by the ngram permuter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="570" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a565bfbdd106f2aa51c21f453c40439e3" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_image" kindref="compound">Image</ref> *</type>
        <definition>Image* tesseract::Dict::image_ptr_</definition>
        <argsstring></argsstring>
        <name>image_ptr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private member variables. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="734" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="734" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a52fe937ceb54927a44b31d7954bac2d0" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_unichar_ambigs" kindref="compound">UnicharAmbigs</ref> *</type>
        <definition>UnicharAmbigs* tesseract::Dict::dang_ambigs_table_</definition>
        <argsstring></argsstring>
        <name>dang_ambigs_table_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Table that stores ambiguities computed during training (loaded when NoDangerousAmbigs() is called for the first time). Each entry i in the table stores a set of amibiguities whose wrong ngram starts with unichar id i. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="741" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="741" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1ac09faecb15e5389a743f7adbceda65e6" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_unichar_ambigs" kindref="compound">UnicharAmbigs</ref> *</type>
        <definition>UnicharAmbigs* tesseract::Dict::replace_ambigs_table_</definition>
        <argsstring></argsstring>
        <name>replace_ambigs_table_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as above, but for ambiguities with replace flag set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="743" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="743" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a0d2279a39b58a3d39adbe59877a3c0a5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tesseract::Dict::keep_word_choices_</definition>
        <argsstring></argsstring>
        <name>keep_word_choices_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag used to disable accumulation of word choices during compound word permutation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="748" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a4dac55cfd3ead4a6efedb5a1bdbc8f61" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 tesseract::Dict::reject_offset_</definition>
        <argsstring></argsstring>
        <name>reject_offset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Additional certainty padding allowed before a word is rejected. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="750" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="750" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1aab95bbe394edd1333464316df9507d22" prot="private" static="no" mutable="no">
        <type><ref refid="states_8h_1a0839f350416466cdb1b5d7df4c5f99d4" kindref="member">PIECES_STATE</ref></type>
        <definition>PIECES_STATE tesseract::Dict::current_segmentation_</definition>
        <argsstring></argsstring>
        <name>current_segmentation_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current word segmentation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="752" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a2b94db7d2ef81430029f8463712eb9b3" prot="private" static="no" mutable="no">
        <type><ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref></type>
        <definition>VIABLE_CHOICE tesseract::Dict::best_raw_choice_</definition>
        <argsstring></argsstring>
        <name>best_raw_choice_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Variables to keep track of best/raw word choices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="754" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="754" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a225009a9653f4a8a22d26d11e53c8871" prot="private" static="no" mutable="no">
        <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
        <definition>LIST tesseract::Dict::raw_choices_</definition>
        <argsstring></argsstring>
        <name>raw_choices_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="755" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="755" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1ad1fe896d44a963847e634454ee176860" prot="private" static="no" mutable="no">
        <type><ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref></type>
        <definition>LIST tesseract::Dict::best_choices_</definition>
        <argsstring></argsstring>
        <name>best_choices_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="756" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="756" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1af3e5407218cf6dbfe10f383e30bd5d9a" prot="private" static="no" mutable="no">
        <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
        <definition>UNICHAR_ID tesseract::Dict::hyphen_unichar_id_</definition>
        <argsstring></argsstring>
        <name>hyphen_unichar_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="758" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="758" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1add7cf0edcaf35287822940f62dc0ab0f" prot="private" static="no" mutable="no">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE* tesseract::Dict::hyphen_word_</definition>
        <argsstring></argsstring>
        <name>hyphen_word_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="759" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="759" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1ab9f138ed11377afdd0c63869c2914cb9" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_dawg_info_vector" kindref="compound">DawgInfoVector</ref></type>
        <definition>DawgInfoVector tesseract::Dict::hyphen_active_dawgs_</definition>
        <argsstring></argsstring>
        <name>hyphen_active_dawgs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="760" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a4563976a7ac6f34bcac6600c90f9ebde" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_dawg_info_vector" kindref="compound">DawgInfoVector</ref></type>
        <definition>DawgInfoVector tesseract::Dict::hyphen_constraints_</definition>
        <argsstring></argsstring>
        <name>hyphen_constraints_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="761" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a524dff1a716db9381da1738ab802ec28" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool tesseract::Dict::last_word_on_line_</definition>
        <argsstring></argsstring>
        <name>last_word_on_line_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="762" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="762" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a5f2f0ca244cafc4cf336377d3141cbf3" prot="private" static="no" mutable="no">
        <type><ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="class_generic_vector_eq_eq" kindref="compound">GenericVectorEqEq</ref>&lt; <ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref> &gt; &gt;</type>
        <definition>GenericVector&lt;GenericVectorEqEq&lt;UNICHAR_ID&gt; &gt; tesseract::Dict::equivalent_symbols_</definition>
        <argsstring></argsstring>
        <name>equivalent_symbols_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="767" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1aeb700127047ae6467b0cf5fe0e06032b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetesseract_1a8dc259fa09d9302b96f5b3d2aad10c9f" kindref="member">DawgVector</ref></type>
        <definition>DawgVector tesseract::Dict::dawgs_</definition>
        <argsstring></argsstring>
        <name>dawgs_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="769" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a8bc4e4cc1be25c5207c48a4f5d7c4a7b" prot="private" static="no" mutable="no">
        <type><ref refid="namespacetesseract_1a23c05b24ce05fdac89b62f2994eb95ee" kindref="member">SuccessorListsVector</ref></type>
        <definition>SuccessorListsVector tesseract::Dict::successors_</definition>
        <argsstring></argsstring>
        <name>successors_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="770" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="770" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a06e4ad02e18a82f4247f2a535297d14c" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_trie" kindref="compound">Trie</ref> *</type>
        <definition>Trie* tesseract::Dict::pending_words_</definition>
        <argsstring></argsstring>
        <name>pending_words_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="771" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a64d9ba19e5844b8a2c46c1f5677dd120" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
        <definition>Dawg* tesseract::Dict::bigram_dawg_</definition>
        <argsstring></argsstring>
        <name>bigram_dawg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="777" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a471b42f4989a1c6f30fd3e0d9a322c20" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
        <definition>Dawg* tesseract::Dict::freq_dawg_</definition>
        <argsstring></argsstring>
        <name>freq_dawg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The following pointers are only cached for convenience. The dawgs will be deleted when dawgs_ vector is destroyed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="782" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1ad4158fc1e763400167b05be094a28310" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
        <definition>Dawg* tesseract::Dict::unambig_dawg_</definition>
        <argsstring></argsstring>
        <name>unambig_dawg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="783" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="783" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a19475289a21fb627b77e532e508c7e65" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
        <definition>Dawg* tesseract::Dict::punc_dawg_</definition>
        <argsstring></argsstring>
        <name>punc_dawg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="784" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a4924b71f3d916bcab066643fa43cd845" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_trie" kindref="compound">Trie</ref> *</type>
        <definition>Trie* tesseract::Dict::document_words_</definition>
        <argsstring></argsstring>
        <name>document_words_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="785" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="785" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1ada5d84c57256d0afb5c93b11b2a4b48b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int tesseract::Dict::max_fixed_length_dawgs_wdlen_</definition>
        <argsstring></argsstring>
        <name>max_fixed_length_dawgs_wdlen_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maximum word length of fixed-length word dawgs. A value &lt; 1 indicates that no fixed-length dawgs are loaded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="788" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="788" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a60adf2a3eb954d58b13961d1c53fff8a" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float tesseract::Dict::wordseg_rating_adjust_factor_</definition>
        <argsstring></argsstring>
        <name>wordseg_rating_adjust_factor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current segmentation cost adjust factor for word rating. See comments in incorporate_segcost. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="791" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="791" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtesseract_1_1_dict_1a524e003dad1532fd722c29d95e002181" prot="private" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* tesseract::Dict::output_ambig_words_file_</definition>
        <argsstring></argsstring>
        <name>output_ambig_words_file_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="793" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="793" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtesseract_1_1_dict_1ac11f84cc25bbf53314c0acda453949df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::Dict</definition>
        <argsstring>(Image *image_ptr)</argsstring>
        <name>Dict</name>
        <param>
          <type><ref refid="classtesseract_1_1_image" kindref="compound">Image</ref> *</type>
          <declname>image_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="33" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ab471fe748aa77118175b04caaa4283df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::~Dict</definition>
        <argsstring>()</argsstring>
        <name>~Dict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="93" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a4acbe41544b8cdb7008d2ddacab10e57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesseract_1_1_image" kindref="compound">Image</ref> *</type>
        <definition>const Image* tesseract::Dict::getImage</definition>
        <argsstring>() const </argsstring>
        <name>getImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="94" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a00cf3c479c6090b94b513dbb44edc5e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtesseract_1_1_image" kindref="compound">Image</ref> *</type>
        <definition>Image* tesseract::Dict::getImage</definition>
        <argsstring>()</argsstring>
        <name>getImage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="97" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
        <definition>const UNICHARSET&amp; tesseract::Dict::getUnicharset</definition>
        <argsstring>() const </argsstring>
        <name>getUnicharset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="100" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1acef7ecc6e5fe567fe9646b733df02455" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
        <definition>UNICHARSET&amp; tesseract::Dict::getUnicharset</definition>
        <argsstring>()</argsstring>
        <name>getUnicharset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="103" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a4a886a86bc5d0d4405dd9da165b3e1fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesseract_1_1_unichar_ambigs" kindref="compound">UnicharAmbigs</ref> &amp;</type>
        <definition>const UnicharAmbigs&amp; tesseract::Dict::getUnicharAmbigs</definition>
        <argsstring>()</argsstring>
        <name>getUnicharAmbigs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="106" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aa07269a6929862317892af548dc6f78e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::compound_marker</definition>
        <argsstring>(UNICHAR_ID unichar_id)</argsstring>
        <name>compound_marker</name>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>unichar_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="110" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aebd1e3d92b2ec23c03807dd7ede45a40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::hyphenated</definition>
        <argsstring>() const </argsstring>
        <name>hyphenated</name>
        <briefdescription>
<para>Returns true if we&apos;ve recorded the beginning of a hyphenated word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="118" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a8431d26ec0e13f6d2a77d7ba3b1823ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::hyphen_base_size</definition>
        <argsstring>() const </argsstring>
        <name>hyphen_base_size</name>
        <briefdescription>
<para>Size of the base word (the part on the line before) of a hyphenated word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="122" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a673dcd602bce4530c4cc2fe875cbc2a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::copy_hyphen_info</definition>
        <argsstring>(WERD_CHOICE *word) const </argsstring>
        <name>copy_hyphen_info</name>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If this word is hyphenated copy the base word (the part on the line before) of a hyphenated word into the given word. This function assumes that word is not NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="128" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ab09707f3ebd6dbbc9eda8c1bc1ba2b32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::remove_hyphen_head</definition>
        <argsstring>(WERD_CHOICE *word) const </argsstring>
        <name>remove_hyphen_head</name>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Erase the unichar ids corresponding to the portion of the word from the previous line. The word is not changed if it is not split between lines and hyphenated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="137" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aad63b54f05d3faaee2b8caec2a5145d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::has_hyphen_end</definition>
        <argsstring>(UNICHAR_ID unichar_id, bool first_pos) const </argsstring>
        <name>has_hyphen_end</name>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>unichar_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>first_pos</declname>
        </param>
        <briefdescription>
<para>Check whether the word has a hyphen at the end. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="144" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1abc8dcda3db471510c7834edacac8cebd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::has_hyphen_end</definition>
        <argsstring>(const WERD_CHOICE &amp;word) const </argsstring>
        <name>has_hyphen_end</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>Same as above, but check the unichar at the end of the word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="149" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a6b7508e4459f295073316fff69a05ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::reset_hyphen_vars</definition>
        <argsstring>(bool last_word_on_line)</argsstring>
        <name>reset_hyphen_vars</name>
        <param>
          <type>bool</type>
          <declname>last_word_on_line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unless the previous word was the last one on the line, and the current one is not (thus it is the first one on the line), erase hyphen_word_, clear hyphen_active_dawgs_, hyphen_constraints_ update last_word_on_line_. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="156" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/hyphen.cpp" bodystart="32" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ad8bc29be3c9d8ae5bdb7ec972216ad28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::set_hyphen_word</definition>
        <argsstring>(const WERD_CHOICE &amp;word, const DawgInfoVector &amp;active_dawgs, const DawgInfoVector &amp;constraints)</argsstring>
        <name>set_hyphen_word</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_dawg_info_vector" kindref="compound">DawgInfoVector</ref> &amp;</type>
          <declname>active_dawgs</declname>
        </param>
        <param>
          <type>const <ref refid="classtesseract_1_1_dawg_info_vector" kindref="compound">DawgInfoVector</ref> &amp;</type>
          <declname>constraints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update hyphen_word_, and copy the given DawgInfoVectors into hyphen_active_dawgs_ and hyphen_constraints_. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="159" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/hyphen.cpp" bodystart="50" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a8aa52c89f34bc5158cc650699520b50b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::update_best_choice</definition>
        <argsstring>(const WERD_CHOICE &amp;word, WERD_CHOICE *best_choice)</argsstring>
        <name>update_best_choice</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copies word into best_choice if its rating is smaller than that of best_choice. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="166" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aeb0ba1d301def04d0ca191582f032c78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::init_active_dawgs</definition>
        <argsstring>(int sought_word_length, DawgInfoVector *active_dawgs, bool ambigs_mode) const </argsstring>
        <name>init_active_dawgs</name>
        <param>
          <type>int</type>
          <declname>sought_word_length</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_dawg_info_vector" kindref="compound">DawgInfoVector</ref> *</type>
          <declname>active_dawgs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ambigs_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill the given active_dawgs vector with dawgs that could contain the beginning of the word. If <ref refid="classtesseract_1_1_dict_1aebd1e3d92b2ec23c03807dd7ede45a40" kindref="member">hyphenated()</ref> returns true, copy the entries from hyphen_active_dawgs_ instead. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="173" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="643" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a7e44bdc5e2fe0dbb861dfd1522ef1cec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::init_constraints</definition>
        <argsstring>(DawgInfoVector *constraints) const </argsstring>
        <name>init_constraints</name>
        <param>
          <type><ref refid="classtesseract_1_1_dawg_info_vector" kindref="compound">DawgInfoVector</ref> *</type>
          <declname>constraints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If <ref refid="classtesseract_1_1_dict_1aebd1e3d92b2ec23c03807dd7ede45a40" kindref="member">hyphenated()</ref> returns true, copy the entries from hyphen_constraints_ into the given constraints vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="178" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="677" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a253fac24ccb5cb9d3b467b0a28c1c0f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::ambigs_mode</definition>
        <argsstring>(float rating_limit)</argsstring>
        <name>ambigs_mode</name>
        <param>
          <type>float</type>
          <declname>rating_limit</declname>
        </param>
        <briefdescription>
<para>Returns true if we are operating in ambigs mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="180" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aac6d42fd255de06ec27abf5d7ba086c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE* tesseract::Dict::dawg_permute_and_select</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, float rating_limit)</argsstring>
        <name>dawg_permute_and_select</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rating_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="191" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a8d9601c5bb5c5050ac8db64ecb1bf2d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE * tesseract::Dict::get_top_choice_word</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices)</argsstring>
        <name>get_top_choice_word</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the top choice for each character as the choice for the word. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="211" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="908" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1adfe046fdde238fd1802c5d1771be1671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE * tesseract::Dict::permute_top_choice</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, float *rating_limit, WERD_CHOICE *raw_choice, BOOL8 *any_alpha)</argsstring>
        <name>permute_top_choice</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>rating_limit</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>raw_choice</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref> *</type>
          <declname>any_alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>permute_top_choice</para><para>Return the top choice for each character as the choice for the word. In addition a choice is created for the best lower and upper case non-words. In each character position the best lower (or upper) case character is substituted for the best overall character. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="213" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="934" bodyend="1149"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a578f7cb1945a1ba71f6251065687b555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE * tesseract::Dict::permute_all</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, const WERD_CHOICE *best_choice, WERD_CHOICE *raw_choice)</argsstring>
        <name>permute_all</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>raw_choice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="224" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="331" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a2aeffdb2c4e3263a4684b4baff79f91f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::end_permute</definition>
        <argsstring>()</argsstring>
        <name>end_permute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a837f35af4dee4b03a43a85785af430bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::permute_subword</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, float rating_limit, int start, int end, WERD_CHOICE *current_word)</argsstring>
        <name>permute_subword</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rating_limit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>current_word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>permute_subword</para><para>Permute a part of a compound word this subword is bounded by hyphens and the start and end of the word. Call the standard word permute function on a set of choices covering only part of the original word. When it is done reclaim the memory that was used in the exercise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="228" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="859" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ab9c442c6c541ea1be7a0a132aea3af51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::permute_characters</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, WERD_CHOICE *best_choice, WERD_CHOICE *raw_choice)</argsstring>
        <name>permute_characters</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>best_choice</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>raw_choice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>permute_characters</para><para>Permute these characters together according to each of the different permuters that are enabled. Returns true if best_choice was updated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="233" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="765" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a2d718cec31b1cdfccab9f5ad720158ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE * tesseract::Dict::permute_compound_words</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, float rating_limit)</argsstring>
        <name>permute_compound_words</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rating_limit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>permute_compound_words</para><para>Return the top choice for each character as the choice for the word. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="236" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="799" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a28fc3691ebb3ad2911fdc703b3e31ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE * tesseract::Dict::permute_fixed_length_words</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, PermuterState *permuter_state)</argsstring>
        <name>permute_fixed_length_words</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_permuter_state" kindref="compound">PermuterState</ref> *</type>
          <declname>permuter_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find permutations matching a list of fixed-char-length dawgs The bestchoice based on this permuter alone is returned. Alternatively, non-conflicting changes can be combined through permuter_state.</para><para>Perform search on fixed-length dictionaries within a word. This is used for non-space delimited languages like CJK when a &quot;word&quot; corresponds to a &quot;phrase&quot; consisted of multiple short words. It iterates over every character position looking for longest matches against a set of fixed-length dawgs. Each dictionary hit is rewarded with a rating bonus. Note: this is very slow as it is performed on every segmentation state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="242" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="430" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a5b19c61706786b0609613fd0d73c6b42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::incorporate_segcost</definition>
        <argsstring>(WERD_CHOICE *word)</argsstring>
        <name>incorporate_segcost</name>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <briefdescription>
<para>Incoporate segmentation cost into word rating. </para>        </briefdescription>
        <detaileddescription>
<para>Incorporate segmentation cost into the word rating. This is done through a multiplier wordseg_rating_adjust_factor_ which is determined in <ref refid="bestfirst_8cpp" kindref="compound">bestfirst.cpp</ref> during state evaluation. This is not the cleanest way to do this. It would be better to reorganize the SEARCH_STATE to keep track of associated states, or do the rating adjustment outside the permuter in evalaute_state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="246" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="409" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a5de09395ec6b9c6436dcaa9266c78df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE * tesseract::Dict::permute_script_words</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, PermuterState *permuter_state)</argsstring>
        <name>permute_script_words</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_permuter_state" kindref="compound">PermuterState</ref> *</type>
          <declname>permuter_state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks for script-consistent permutations. Similar to fixed-length permuter, the best choice is returned by the function, but the combined changes are also recorded into permuter_state.</para><para>Try flipping characters in a word to get better script consistency. Similar to how upper/lower case checking is done in top_choice_permuter, this permuter tries to suggest a more script-consistent choice AND modifies the rating. So it combines both the case_ok check and adjust_non_word functionality. However, instead of penalizing an inconsistent word with a &gt; 1 multiplier, we reward the script-consistent choice with a &lt; 1 multiplier. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="250" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="669" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a692e057e716545e386097b40620d636a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
        <definition>WERD_CHOICE * tesseract::Dict::permute_chartype_words</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, PermuterState *permuter_state)</argsstring>
        <name>permute_chartype_words</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type><ref refid="classtesseract_1_1_permuter_state" kindref="compound">PermuterState</ref> *</type>
          <declname>permuter_state</declname>
        </param>
        <briefdescription>
<para>checks for consistency in character property (eg. alpah, digit, punct) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="254" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="542" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a49b7fbfcab4bd2783f9620a35e6a673b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char tesseract::Dict::top_word_chartype</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, char *pos_chartypes)</argsstring>
        <name>top_word_chartype</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>pos_chartypes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Look up the main chartype for each character position and store it in the given array. Also returns the dominant type from unambiguous top choices. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="261" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/permute.cpp" bodystart="512" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aef746918c09040cf417f831d07c97072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::NoDangerousAmbig</definition>
        <argsstring>(WERD_CHOICE *BestChoice, DANGERR *fixpt, bool fix_replaceable, BLOB_CHOICE_LIST_VECTOR *Choices, bool *modified_blobs)</argsstring>
        <name>NoDangerousAmbig</name>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>BestChoice</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1ab342921d3994b07a86ad1c5e4e8dd7c5" kindref="member">DANGERR</ref> *</type>
          <declname>fixpt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fix_replaceable</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>Choices</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>modified_blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="317" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="581" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a863f4f02d43f02f85d051d9e632c0c4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tesseract::Dict::StopperAmbigThreshold</definition>
        <argsstring>(double f1, double f2)</argsstring>
        <name>StopperAmbigThreshold</name>
        <param>
          <type>double</type>
          <declname>f1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>f2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="322" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ac6b70920a4f5f5e33bfd4be2600d3192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::FreeBadChoice</definition>
        <argsstring>(void *item1, void *item2)</argsstring>
        <name>FreeBadChoice</name>
        <param>
          <type>void *</type>
          <declname>item1</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>item2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="329" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="167" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a8309e93ec65d12110e6f8a1c9b00d7d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::ReplaceAmbig</definition>
        <argsstring>(int wrong_ngram_begin_index, int wrong_ngram_size, UNICHAR_ID correct_ngram_id, WERD_CHOICE *werd_choice, BLOB_CHOICE_LIST_VECTOR *blob_choices, bool *modified_blobs)</argsstring>
        <name>ReplaceAmbig</name>
        <param>
          <type>int</type>
          <declname>wrong_ngram_begin_index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>wrong_ngram_size</declname>
        </param>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>correct_ngram_id</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>werd_choice</declname>
        </param>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>blob_choices</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>modified_blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Replaces the corresponding wrong ngram in werd_choice with the correct one. We indicate that this newly inserted ngram unichar is composed from several fragments and modify the corresponding entries in blob_choices to contain fragments of the correct ngram unichar instead of the original unichars. Ratings and certainties of entries in blob_choices and werd_choice are unichaged. E.g. for werd_choice mystring&apos;&apos; and ambiguity &apos;&apos;-&gt;&quot;: werd_choice becomes mystring&quot;, first &apos; in blob_choices becomes |&quot;|0|2, second one is set to |&quot;|1|2. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="339" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="802" bodyend="876"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a9c4215da27d2ea4c117d1e6227c5b492" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::DisableChoiceAccum</definition>
        <argsstring>()</argsstring>
        <name>DisableChoiceAccum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="344" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="344" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a4edfbbb412d84258cc1ef255dfd527aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::EnableChoiceAccum</definition>
        <argsstring>()</argsstring>
        <name>EnableChoiceAccum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="345" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="345" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ab7b078ed83f6de9d5c767263a8a37070" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::ChoiceAccumEnabled</definition>
        <argsstring>()</argsstring>
        <name>ChoiceAccumEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="346" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="346" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a0e3e3f5f2bf54b5b2a0aec103c816cd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::LengthOfShortestAlphaRun</definition>
        <argsstring>(const WERD_CHOICE &amp;WordChoice)</argsstring>
        <name>LengthOfShortestAlphaRun</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>WordChoice</declname>
        </param>
        <briefdescription>
<para>Returns the length of the shortest alpha run in WordChoice. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="349" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="883" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1acc0a47c47ed3fe63f3fd4646ae5ddb80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref></type>
        <definition>VIABLE_CHOICE tesseract::Dict::NewViableChoice</definition>
        <argsstring>(const WERD_CHOICE &amp;WordChoice, FLOAT32 AdjustFactor, const float Certainties[])</argsstring>
        <name>NewViableChoice</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>WordChoice</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>AdjustFactor</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>Certainties</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocates a new viable choice data structure, copies WordChoice, Certainties, and current_segmentation_ into it, returns a pointer to the newly created VIABLE_CHOICE. WordChoice is a choice to be converted to a viable choice. AdjustFactor is a factor used to adjust ratings for WordChoice. Certainties contain certainty for each character in WordChoice. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="356" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="902" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ad5343f10220f5882ddaa461b5e89927c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::PrintViableChoice</definition>
        <argsstring>(FILE *File, const char *Label, VIABLE_CHOICE Choice)</argsstring>
        <name>PrintViableChoice</name>
        <param>
          <type>FILE *</type>
          <declname>File</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Label</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref></type>
          <declname>Choice</declname>
        </param>
        <briefdescription>
<para>Dumps a text representation of the specified Choice to File. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="360" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="912" bodyend="941"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a88ccbd663564a11a95cf9e592c69e8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::StringSameAs</definition>
        <argsstring>(const WERD_CHOICE &amp;WordChoice, VIABLE_CHOICE ViableChoice)</argsstring>
        <name>StringSameAs</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>WordChoice</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref></type>
          <declname>ViableChoice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares unichar ids in word_choice to those in viable_choice, returns true if they are the same. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="363" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="951" bodyend="965"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1adc54f2cdac1db76e5fa64039add57eea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::StringSameAs</definition>
        <argsstring>(const char *String, const char *String_lengths, VIABLE_CHOICE ViableChoice)</argsstring>
        <name>StringSameAs</name>
        <param>
          <type>const char *</type>
          <declname>String</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>String_lengths</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref></type>
          <declname>ViableChoice</declname>
        </param>
        <briefdescription>
<para>Compares String to ViableChoice and returns true if they are the same. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="366" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="967" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a2e14dd61f93ad13fafe4c2e2dae88631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::UniformCertainties</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;Choices, const WERD_CHOICE &amp;BestChoice)</argsstring>
        <name>UniformCertainties</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>Choices</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>BestChoice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the certainty of the BestChoice word is within a reasonable range of the average certainties for the best choices for each character in the segmentation. This test is used to catch words in which one character is much worse than the other characters in the word (i.e. false will be returned in that case). The algorithm computes the mean and std deviation of the certainties in the word with the worst certainty thrown out. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="376" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="986" bodyend="1038"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a45c6cdeae33daa4ca52a83ad5a59f2f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::AcceptableChoice</definition>
        <argsstring>(BLOB_CHOICE_LIST_VECTOR *Choices, WERD_CHOICE *BestChoice, DANGERR *fixpt, ACCEPTABLE_CHOICE_CALLER caller, bool *modified_blobs)</argsstring>
        <name>AcceptableChoice</name>
        <param>
          <type><ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>Choices</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>BestChoice</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1ab342921d3994b07a86ad1c5e4e8dd7c5" kindref="member">DANGERR</ref> *</type>
          <declname>fixpt</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1a1902ef46a46c64df98f9a99f6368e4f6" kindref="member">ACCEPTABLE_CHOICE_CALLER</ref></type>
          <declname>caller</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>modified_blobs</declname>
        </param>
        <briefdescription>
<para>Returns true if the given best_choice is good enough to stop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="379" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="191" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1acb222399feb6d3dba3f9c1ac50df1e96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::AcceptableResult</definition>
        <argsstring>(const WERD_CHOICE &amp;BestChoice)</argsstring>
        <name>AcceptableResult</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>BestChoice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns false if the best choice for the current word is questionable and should be tried again on the second pass or should be flagged to the user. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="387" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="254" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ace0e51938995068fdb1b115f6be61470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::ChoiceSameAs</definition>
        <argsstring>(const WERD_CHOICE &amp;WordChoice, VIABLE_CHOICE ViableChoice)</argsstring>
        <name>ChoiceSameAs</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>WordChoice</declname>
        </param>
        <param>
          <type><ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref></type>
          <declname>ViableChoice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares the corresponding strings of WordChoice and ViableChoice and returns true if they are the same. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="390" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="878" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a5d0400dc126a0dc472c3c28545da65a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::LogNewChoice</definition>
        <argsstring>(FLOAT32 AdjustFactor, const float Certainties[], bool raw_choice, WERD_CHOICE *WordChoice, const BLOB_CHOICE_LIST_VECTOR &amp;blob_choices)</argsstring>
        <name>LogNewChoice</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>AdjustFactor</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>Certainties</declname>
          <array>[]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>raw_choice</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>WordChoice</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>blob_choices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds Choice to ChoicesList if the adjusted certainty for Choice is within a reasonable range of the best choice in ChoicesList. The ChoicesList list is kept in sorted order by rating. Duplicates are removed. WordChoice is the new choice for current word. AdjustFactor is an adjustment factor which was applied to choice. Certainties are certainties for each char in new choice. raw_choice indicates whether WordChoice is a raw or best choice. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="398" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="484" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ace7f6baf4e425e1d50aac0d1383eb023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::EndDangerousAmbigs</definition>
        <argsstring>()</argsstring>
        <name>EndDangerousAmbigs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="403" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="778" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a2a0b6b5be811b039c04dd0cc09436f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::CurrentBestChoiceIs</definition>
        <argsstring>(const WERD_CHOICE &amp;WordChoice)</argsstring>
        <name>CurrentBestChoiceIs</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>WordChoice</declname>
        </param>
        <briefdescription>
<para>Returns true if WordChoice is the same as the current best choice. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="405" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a5de1b4b567459f520ce3b82b68c2c618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
        <definition>FLOAT32 tesseract::Dict::CurrentBestChoiceAdjustFactor</definition>
        <argsstring>()</argsstring>
        <name>CurrentBestChoiceAdjustFactor</name>
        <briefdescription>
<para>Returns the adjustment factor for the best choice for the current word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="407" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="316" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a0bec277d6338bed058f010f7be969d1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::CurrentWordAmbig</definition>
        <argsstring>()</argsstring>
        <name>CurrentWordAmbig</name>
        <briefdescription>
<para>Returns true if there are multiple good choices for the current word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="409" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ac3fda452853da426de36eecfe03d00bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::DebugWordChoices</definition>
        <argsstring>()</argsstring>
        <name>DebugWordChoices</name>
        <briefdescription>
<para>Prints the current choices for this word to stdout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="411" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="330" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1af8cbb8ac0beba656f8614f3e01efb601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::PrintAmbigAlternatives</definition>
        <argsstring>(FILE *file, const char *label, int label_num_unichars)</argsstring>
        <name>PrintAmbigAlternatives</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <param>
          <type>int</type>
          <declname>label_num_unichars</declname>
        </param>
        <briefdescription>
<para>Print all the choices in raw_choices_ list for non 1-1 ambiguities. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="413" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="358" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a7b67011e3b43ead95473e2b25798e0fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::FillViableChoice</definition>
        <argsstring>(const WERD_CHOICE &amp;WordChoice, FLOAT32 AdjustFactor, const float Certainties[], VIABLE_CHOICE ViableChoice)</argsstring>
        <name>FillViableChoice</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>WordChoice</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>AdjustFactor</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>Certainties</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref></type>
          <declname>ViableChoice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill ViableChoice with information from WordChoice, AChoice, AdjustFactor, and Certainties. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="417" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="943" bodyend="949"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a1f4a0951c1960208fab7c511c90e5477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::AlternativeChoicesWorseThan</definition>
        <argsstring>(FLOAT32 Threshold)</argsstring>
        <name>AlternativeChoicesWorseThan</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if there are no alternative choices for the current word or if all alternatives have an adjust factor worse than Threshold. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="422" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="299" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a9ac3719475ad0a39d464307e1bd74ae3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::FilterWordChoices</definition>
        <argsstring>()</argsstring>
        <name>FilterWordChoices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes from best_choices_ all choices which are not within a reasonable range of the best choice. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="425" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="375" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1af564403205ca1603825a3a2f59727089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::FindClassifierErrors</definition>
        <argsstring>(FLOAT32 MinRating, FLOAT32 MaxRating, FLOAT32 RatingMargin, FLOAT32 Thresholds[])</argsstring>
        <name>FindClassifierErrors</name>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>MinRating</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>MaxRating</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>RatingMargin</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a6a3da5f1db8d485c0d2f5a7ba526c4a0" kindref="member">FLOAT32</ref></type>
          <declname>Thresholds</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compares the best choice for the current word to the best raw choice to determine which characters were classified incorrectly by the classifier. Then places a separate threshold into Thresholds for each character in the word. If the classifier was correct, MaxRating is placed into Thresholds. If the classifier was incorrect, the avg. match rating (error percentage) of the classifier&apos;s incorrect choice minus some margin is placed into thresholds.This can then be used by the caller to try to create a new template for the desired class that will classify the character with a rating better than the threshold value. The match rating placed into Thresholds is never allowed to be below MinRating in order to prevent trying to make overly tight templates. MinRating limits how tight to make a template. MaxRating limits how loose to make a template. RatingMargin denotes the amount of margin to put in template. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="440" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="394" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a13fed9e3e317b901d4728a77f3396907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::InitChoiceAccum</definition>
        <argsstring>()</argsstring>
        <name>InitChoiceAccum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the data structures used to keep track the good word choices found for a word. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="446" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="435" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a4fc10a65be799fa59c39cae57379dc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::ClearBestChoiceAccum</definition>
        <argsstring>()</argsstring>
        <name>ClearBestChoiceAccum</name>
        <briefdescription>
<para>Clears best_choices_ list accumulated by the stopper. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="448" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a767d9d6e0095d70f2905dac7d48c32c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::LogNewSegmentation</definition>
        <argsstring>(PIECES_STATE BlobWidth)</argsstring>
        <name>LogNewSegmentation</name>
        <param>
          <type><ref refid="states_8h_1a0839f350416466cdb1b5d7df4c5f99d4" kindref="member">PIECES_STATE</ref></type>
          <declname>BlobWidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Updates the blob widths in current_segmentation_ to be the same as provided in BlobWidth. BlobWidth[] contains the number of chunks in each blob in the current segmentation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="452" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="463" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aa5ce917212da08cba99df7966c9e84cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::LogNewSplit</definition>
        <argsstring>(int Blob)</argsstring>
        <name>LogNewSplit</name>
        <param>
          <type>int</type>
          <declname>Blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given Blob (the index of the blob that was split), adds 1 chunk to the specified blob for each choice in best_choices_ and for best_raw_choice_. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="455" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="471" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a9c59eace80232070d11e04794078d7b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::AddNewChunk</definition>
        <argsstring>(VIABLE_CHOICE Choice, int Blob)</argsstring>
        <name>AddNewChunk</name>
        <param>
          <type><ref refid="stopper_8h_1a9c7e58acb827910c53c2db3c9d338a7a" kindref="member">VIABLE_CHOICE</ref></type>
          <declname>Choice</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increments the chunk count of the character in Choice which corresponds to Blob (index of the blob being split). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="458" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="788" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aec7160ce69f6f7d478110b95b729d523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::SettupStopperPass1</definition>
        <argsstring>()</argsstring>
        <name>SettupStopperPass1</name>
        <briefdescription>
<para>Sets up stopper variables in preparation for the first pass. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="460" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="780" bodyend="782"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a29f0c2e6c8a7b5fb44bb39ce47ceef84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::SettupStopperPass2</definition>
        <argsstring>()</argsstring>
        <name>SettupStopperPass2</name>
        <briefdescription>
<para>Sets up stopper variables in preparation for the second pass. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="462" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/stopper.cpp" bodystart="784" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a207372c8db41e16c13eda896c7e77665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::case_ok</definition>
        <argsstring>(const WERD_CHOICE &amp;word, const UNICHARSET &amp;unicharset)</argsstring>
        <name>case_ok</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <briefdescription>
<para>Check a string to see if it matches a set of lexical rules. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="465" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/context.cpp" bodystart="58" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ae9bc2b027bd999d646968aa445908efc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::absolute_garbage</definition>
        <argsstring>(const WERD_CHOICE &amp;word, const UNICHARSET &amp;unicharset)</argsstring>
        <name>absolute_garbage</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the word looks like an absolute garbage (e.g. image mistakenly recognized as text). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="468" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/context.cpp" bodystart="78" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a1cb09562db2f2c8951f8dc21cf7bc279" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::Load</definition>
        <argsstring>()</argsstring>
        <name>Load</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize <ref refid="classtesseract_1_1_dict" kindref="compound">Dict</ref> class - load dawgs from [lang].traineddata and user-specified wordlist and parttern list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="474" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="219" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a899e3d5588422e9dac68ac5049069dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::End</definition>
        <argsstring>()</argsstring>
        <name>End</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="475" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="335" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ab4147968ed69fe22a5acbebcff3472f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::ResetDocumentDictionary</definition>
        <argsstring>()</argsstring>
        <name>ResetDocumentDictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="478" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="478" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ae92c303dc7451b3836cc9669e80090c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::LoadEquivalenceList</definition>
        <argsstring>(const char *unichar_strings[])</argsstring>
        <name>LoadEquivalenceList</name>
        <param>
          <type>const char *</type>
          <declname>unichar_strings</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="488" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="354" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a57be0143dbad3201d0d2ce002ae9bce8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
        <definition>UNICHAR_ID tesseract::Dict::NormalizeUnicharIdForMatch</definition>
        <argsstring>(UNICHAR_ID unichar_id) const </argsstring>
        <name>NormalizeUnicharIdForMatch</name>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>unichar_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="492" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="368" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1acd45e378f915e3dd4bb18a8930e928c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::def_letter_is_okay</definition>
        <argsstring>(void *void_dawg_args, UNICHAR_ID unichar_id, bool word_end) const </argsstring>
        <name>def_letter_is_okay</name>
        <param>
          <type>void *</type>
          <declname>void_dawg_args</declname>
        </param>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>unichar_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>word_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the maximal permuter code (from <ref refid="ratngs_8h" kindref="compound">ccstruct/ratngs.h</ref>) if in light of the current state the letter at word_index in the given word is allowed according to at least one of the dawgs in dawgs_, otherwise returns NO_PERM.</para><para>The state is described by void_dawg_args, which are interpreted as <ref refid="structtesseract_1_1_dawg_args" kindref="compound">DawgArgs</ref> and contain two relevant input vectors: active_dawgs and constraints. Each entry in the active_dawgs vector contains an index into the dawgs_ vector and an EDGE_REF that indicates the last edge followed in the dawg. Each entry in the constraints vector contains an index into the dawgs_ vector and an EDGE_REF that indicates an edge in a pattern dawg followed to match a pattern. Currently constraints are used to save the state of punctuation dawgs after leading punctuation was found.</para><para>Input: At word_index 0 dawg_args-&gt;active_dawgs should contain an entry for each dawg whose type has a bit set in kBeginningDawgsType, dawg_args-&gt;constraints should be empty. EDGE_REFs in active_dawgs and constraints vectors should be initialized to NO_EDGE. If hyphen state needs to be applied, initial dawg_args-&gt;active_dawgs and dawg_args-&gt;constrains can be copied from the saved hyphen state (maintained by <ref refid="classtesseract_1_1_dict" kindref="compound">Dict</ref>). For word_index &gt; 0 the corresponding state (active_dawgs and constraints) can be obtained from dawg_args-&gt;updated_* passed to def_letter_is_okay for word_index-1. Note: the function assumes that active_dags, constraints and updated_* member variables of dawg_args are not NULL.</para><para>Output: The function fills in dawg_args-&gt;updated_active_dawgs vector with the entries for dawgs that contain the word up to the letter at word_index. The new constraints (if any) are added to dawg_args-&gt;updated_constraints, the constraints from dawg_args-&gt;constraints are also copied into it.</para><para>Detailed description: In order to determine whether the word is still valid after considering all the letters up to the one at word_index the following is done for each entry in dawg_args-&gt;active_dawgs:<itemizedlist>
<listitem><para>next starting node is obtained from entry.ref and edge_char_of() is called to obtain the next edge</para></listitem><listitem><para>if a valid edge is found, the function returns the updated permuter code true and an entry [entry.dawg_index, edge] is inserted in dawg_args-&gt;updated_active_dawgs otherwise:<itemizedlist>
<listitem><para>if we are dealing with dawg of type DAWG_TYPE_PUNCTUATION, edge_char_of() is called again, but now with kPatternUnicharID as unichar_id; if a valid edge is found it is recorded in dawg_args-&gt;updated_constraints</para></listitem><listitem><para>the function checks whether the word can end with the previous letter</para></listitem><listitem><para>each successor of the dawg (e.g. dawgs with type DAWG_TYPE_WORD could be successors to dawgs with type DAWG_TYPE_PUNCTUATION; the successors are defined by successors_ vector) is explored and if a letter is found in the successor dawg, a new entry is inserted into dawg_args-&gt;updated_active_dawgs with EDGE_REF being either NO_EDGE or an EDGE_REF recorded in constraints vector for the corresponding dawg index </para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="557" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="380" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ad6da76c8b85b90df51029d705590e1cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::LetterIsOkay</definition>
        <argsstring>(void *void_dawg_args, UNICHAR_ID unichar_id, bool word_end) const </argsstring>
        <name>LetterIsOkay</name>
        <param>
          <type>void *</type>
          <declname>void_dawg_args</declname>
        </param>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>unichar_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>word_end</declname>
        </param>
        <briefdescription>
<para>Calls letter_is_okay_ member function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="563" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1abc4cf75b1bd5f5cb0f733c92afeb5239" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tesseract::Dict::ProbabilityInContext</definition>
        <argsstring>(const char *context, int context_bytes, const char *character, int character_bytes)</argsstring>
        <name>ProbabilityInContext</name>
        <param>
          <type>const char *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>context_bytes</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>character_bytes</declname>
        </param>
        <briefdescription>
<para>Calls probability_in_context_ member function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="576" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="576" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a8f256b3bc0e806c492837ee0d8a0fc97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double tesseract::Dict::def_probability_in_context</definition>
        <argsstring>(const char *lang, const char *context, int context_bytes, const char *character, int character_bytes)</argsstring>
        <name>def_probability_in_context</name>
        <param>
          <type>const char *</type>
          <declname>lang</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>context_bytes</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>character_bytes</declname>
        </param>
        <briefdescription>
<para>Default (no-op) implementation of probability in context function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="587" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="587" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a895648f0134d56262368e64ee35a6b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double tesseract::Dict::ngram_probability_in_context</definition>
        <argsstring>(const char *lang, const char *context, int context_bytes, const char *character, int character_bytes)</argsstring>
        <name>ngram_probability_in_context</name>
        <param>
          <type>const char *</type>
          <declname>lang</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>int</type>
          <declname>context_bytes</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>character</declname>
        </param>
        <param>
          <type>int</type>
          <declname>character_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="596" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a0a380d8e3aa8e0d3827b18ad5355b258" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int</type>
        <definition>const int tesseract::Dict::NumDawgs</definition>
        <argsstring>() const </argsstring>
        <name>NumDawgs</name>
        <briefdescription>
<para>Return the number of dawgs in the dawgs_ vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="603" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="603" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a774c3a8e23c9e4f47412936b304dae03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
        <definition>const Dawg* tesseract::Dict::GetDawg</definition>
        <argsstring>(int index) const </argsstring>
        <name>GetDawg</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Return i-th dawg pointer recorded in the dawgs_ vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="605" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="605" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a7378d34b2d5ede5f2d40dcb8932bab9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
        <definition>const Dawg* tesseract::Dict::GetPuncDawg</definition>
        <argsstring>() const </argsstring>
        <name>GetPuncDawg</name>
        <briefdescription>
<para>Return the points to the punctuation dawg. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="607" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="607" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a805761b3e96514664545e7f0603c0627" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
        <definition>const Dawg* tesseract::Dict::GetUnambigDawg</definition>
        <argsstring>() const </argsstring>
        <name>GetUnambigDawg</name>
        <briefdescription>
<para>Return the points to the unambiguous words dawg. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="609" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="609" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a0e4f813ccf9441d2e7b90da31494fdc2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
        <definition>const Dawg* tesseract::Dict::GetFixedLengthDawg</definition>
        <argsstring>(int word_length) const </argsstring>
        <name>GetFixedLengthDawg</name>
        <param>
          <type>int</type>
          <declname>word_length</declname>
        </param>
        <briefdescription>
<para>Return the pointer to the <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> that contains words of length word_length. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="611" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="611" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a44c62a7904145157e4aa303fcf6ef923" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int</type>
        <definition>const int tesseract::Dict::GetMaxFixedLengthDawgIndex</definition>
        <argsstring>() const </argsstring>
        <name>GetMaxFixedLengthDawgIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="616" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="616" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a5de64b7d07afaeb33408ee296db75f5d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::ConstraintsOk</definition>
        <argsstring>(const DawgInfoVector &amp;constraints, int word_end, DawgType current_dawg_type) const </argsstring>
        <name>ConstraintsOk</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_dawg_info_vector" kindref="compound">DawgInfoVector</ref> &amp;</type>
          <declname>constraints</declname>
        </param>
        <param>
          <type>int</type>
          <declname>word_end</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151" kindref="member">DawgType</ref></type>
          <declname>current_dawg_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>At word ending make sure all the recorded constraints are satisfied. Each constraint signifies that we found a beginning pattern in a pattern dawg. Check that this pattern can end here (e.g. if some leading punctuation is found this would ensure that we are not expecting any particular trailing punctuation after the word). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="631" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="631" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a9e46362693e817dcc2f8265854679c80" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::ProcessPatternEdges</definition>
        <argsstring>(const Dawg *dawg, const DawgInfo &amp;info, UNICHAR_ID unichar_id, bool word_end, DawgArgs *dawg_args, PermuterType *current_permuter) const </argsstring>
        <name>ProcessPatternEdges</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
          <declname>dawg</declname>
        </param>
        <param>
          <type>const <ref refid="structtesseract_1_1_dawg_info" kindref="compound">DawgInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type><ref refid="unichar_8h_1a8578b19fa1ff5ca75080db1a18ecc32e" kindref="member">UNICHAR_ID</ref></type>
          <declname>unichar_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>word_end</declname>
        </param>
        <param>
          <type><ref refid="structtesseract_1_1_dawg_args" kindref="compound">DawgArgs</ref> *</type>
          <declname>dawg_args</declname>
        </param>
        <param>
          <type>PermuterType *</type>
          <declname>current_permuter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For each of the character classes of the given unichar_id (and the unichar_id itself) finds the corresponding outgoing node or self-loop in the given dawg and (after checking that it is valid) records it in dawg_args-&gt;updated_ative_dawgs. Updates current_permuter if any valid edges were found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="654" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="554" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a22a45cd03f5d2191d0aeba41e3b4f52f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::valid_word</definition>
        <argsstring>(const WERD_CHOICE &amp;word, bool numbers_ok) const </argsstring>
        <name>valid_word</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>numbers_ok</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="684" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="807" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aa62d7c85fe5c5dd756012fdc7a62316a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::valid_word</definition>
        <argsstring>(const WERD_CHOICE &amp;word) const </argsstring>
        <name>valid_word</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="685" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="685" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aa3ae4cee802f176e3dedb3b7231ad5f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::valid_word_or_number</definition>
        <argsstring>(const WERD_CHOICE &amp;word) const </argsstring>
        <name>valid_word_or_number</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="688" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="688" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a57bd14dfa9f7fb48e7de2ab463ae9f2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::valid_word</definition>
        <argsstring>(const char *string) const </argsstring>
        <name>valid_word</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>This function is used by api/tesseract_cube_combiner.cpp. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="692" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="692" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a562ac7b572107d301b4730dca4d89a57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::valid_bigram</definition>
        <argsstring>(const WERD_CHOICE &amp;word1, const WERD_CHOICE &amp;word2) const </argsstring>
        <name>valid_bigram</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word1</declname>
        </param>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="697" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="849" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aaed3895d9553f4110c693593c89650fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool tesseract::Dict::valid_punctuation</definition>
        <argsstring>(const WERD_CHOICE &amp;word)</argsstring>
        <name>valid_punctuation</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>word</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the word contains a valid punctuation pattern. Note: Since the domains of punctuation symbols and symblos used in numbers are not disjoint, a valid number might contain an invalid punctuation pattern (e.g. .99). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="702" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="879" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ac47e049c0ed569cd8cc1799ac2935f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::good_choice</definition>
        <argsstring>(const WERD_CHOICE &amp;choice)</argsstring>
        <name>good_choice</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>choice</declname>
        </param>
        <briefdescription>
<para>Returns true if a good answer is found for the unknown blob rating. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="704" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ad59baa4e54f780a492cebd8f8dc0b025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::add_document_word</definition>
        <argsstring>(const WERD_CHOICE &amp;best_choice)</argsstring>
        <name>add_document_word</name>
        <param>
          <type>const <ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> &amp;</type>
          <declname>best_choice</declname>
        </param>
        <briefdescription>
<para>Adds a word found on this document to the document specific dictionary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="706" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="690" bodyend="747"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a268a065cccec5814d412d7bde583cc3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int tesseract::Dict::get_top_word_script</definition>
        <argsstring>(const BLOB_CHOICE_LIST_VECTOR &amp;char_choices, const UNICHARSET &amp;unicharset)</argsstring>
        <name>get_top_word_script</name>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> &amp;</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>const <ref refid="class_u_n_i_c_h_a_r_s_e_t" kindref="compound">UNICHARSET</ref> &amp;</type>
          <declname>unicharset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="707" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="908" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a61963914ca2d287fea0db951104d6eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::adjust_word</definition>
        <argsstring>(WERD_CHOICE *word, float *certainty_array, const BLOB_CHOICE_LIST_VECTOR *char_choices, bool nonword, float additional_adjust, bool debug)</argsstring>
        <name>adjust_word</name>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>certainty_array</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nonword</declname>
        </param>
        <param>
          <type>float</type>
          <declname>additional_adjust</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
<para>Adjusts the rating of the given word. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="710" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="749" bodyend="805"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ad4908385c6cd2afa635d90e9589cb7dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::adjust_word</definition>
        <argsstring>(WERD_CHOICE *word, float *certainty_array, const BLOB_CHOICE_LIST_VECTOR *char_choices, bool debug)</argsstring>
        <name>adjust_word</name>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>certainty_array</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="713" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="713" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aee01b74007e1fc5a172a5534c5ef3cae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::adjust_non_word</definition>
        <argsstring>(WERD_CHOICE *word, float *certainty_array, const BLOB_CHOICE_LIST_VECTOR *char_choices, bool debug)</argsstring>
        <name>adjust_non_word</name>
        <param>
          <type><ref refid="class_w_e_r_d___c_h_o_i_c_e" kindref="compound">WERD_CHOICE</ref> *</type>
          <declname>word</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>certainty_array</declname>
        </param>
        <param>
          <type>const <ref refid="ratngs_8h_1a78a6d74d56415802d31e350314b23e65" kindref="member">BLOB_CHOICE_LIST_VECTOR</ref> *</type>
          <declname>char_choices</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="719" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="719" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a1ed6ea4bcf2cb841fea2fef21ec656d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::SetWordsegRatingAdjustFactor</definition>
        <argsstring>(float f)</argsstring>
        <name>SetWordsegRatingAdjustFactor</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Set wordseg_rating_adjust_factor_ to the given value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="726" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="726" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ade61fd4f5d0ecf8fba10c99a4b224c8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="baseapi_8h_1aa200acf94add0e61783bfcd5965bb645" kindref="member">LIST</ref> &amp;</type>
        <definition>const LIST&amp; tesseract::Dict::getBestChoices</definition>
        <argsstring>()</argsstring>
        <name>getBestChoices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="730" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="730" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a1e71113fef2d45b8155906ab3d4930fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::STRING_VAR_H</definition>
        <argsstring>(user_words_suffix,&quot;&quot;,&quot;A list of user-provided words.&quot;)</argsstring>
        <name>STRING_VAR_H</name>
        <param>
          <type>user_words_suffix</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;A list of user-provided words.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Variable members. These have to be declared and initialized after image_ptr_, which contains the pointer to the params vector - the member of its base <ref refid="classtesseract_1_1_c_c_util" kindref="compound">CCUtil</ref> class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="799" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1acdbf3eaa2fb747970d60b3c1ba26bf74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::STRING_VAR_H</definition>
        <argsstring>(user_patterns_suffix,&quot;&quot;,&quot;A list of user-provided patterns.&quot;)</argsstring>
        <name>STRING_VAR_H</name>
        <param>
          <type>user_patterns_suffix</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;A list of user-provided patterns.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="800" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1af9d47a7a288c70126ced634f0fe22dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(load_system_dawg, true,&quot;Load system word dawg.&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>load_system_dawg</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>&quot;Load system word dawg.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="802" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a8fc294289bff355cd9dd0acb1cb93f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(load_freq_dawg, true,&quot;Load frequent word dawg.&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>load_freq_dawg</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>&quot;Load frequent word dawg.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="803" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ab2e3753c019cce5ad69baa00c1a0fa58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(load_unambig_dawg, true,&quot;Load unambiguous word dawg.&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>load_unambig_dawg</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>&quot;Load unambiguous word dawg.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="804" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a4346a9336d29659f739987a2342a96a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(load_punc_dawg, true,&quot;Load dawg with punctuation patterns.&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>load_punc_dawg</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>&quot;Load dawg with punctuation patterns.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="805" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a0c94718e1e23eda58f25c819877ecc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(load_number_dawg, true,&quot;Load dawg with number patterns.&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>load_number_dawg</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>&quot;Load dawg with number patterns.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="807" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a43c77e3f3fc9ec11e691b1a6913a45b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(load_fixed_length_dawgs, true,&quot;Load fixed length&quot;&quot; dawgs (e.g. for non-space delimited languages)&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>load_fixed_length_dawgs</type>
        </param>
        <param>
          <type>true</type>
        </param>
        <param>
          <type>&quot;Load fixed length&quot;&quot; dawgs (e.g. for non-space delimited languages)&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="808" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a9bbeaf6754c6724fde292d26b07b4d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(load_bigram_dawg, false,&quot;Load dawg with special word bigrams.&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>load_bigram_dawg</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Load dawg with special word bigrams.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="810" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a74fa9e30a851751371ca2bd2ad4ce5b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(segment_penalty_dict_frequent_word, 1.0,&quot;Score multiplier for word matches which have good case and&quot;&quot;are frequent in the given language (lower is better).&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segment_penalty_dict_frequent_word</type>
        </param>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Score multiplier for word matches which have good case and&quot;&quot;are frequent in the given language (lower is better).&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="812" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1af05257a8df31b2740b605c97b58a4f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(segment_penalty_dict_case_ok, 1.1,&quot;Score multiplier for word matches that have good case &quot;&quot;(lower is better).&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segment_penalty_dict_case_ok</type>
        </param>
        <param>
          <type>1.</type>
          <declname>1</declname>
        </param>
        <param>
          <type>&quot;Score multiplier for word matches that have good case &quot;&quot;(lower is better).&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="816" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ab3c822311826c8681360dce685f6140a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(segment_penalty_dict_case_bad, 1.3125,&quot;Default score multiplier for word matches, which may have &quot;&quot;case issues (lower is better).&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segment_penalty_dict_case_bad</type>
        </param>
        <param>
          <type>1.</type>
          <declname>3125</declname>
        </param>
        <param>
          <type>&quot;Default score multiplier for word</type>
          <declname>matches</declname>
        </param>
        <param>
          <type>which may have&quot;&quot;case issues(lower is better).&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="820" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a666acde98a38e20f737c3ba66489c7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(segment_penalty_ngram_best_choice, 1.24,&quot;Multipler to for the best choice from the ngram model.&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segment_penalty_ngram_best_choice</type>
        </param>
        <param>
          <type>1.</type>
          <declname>24</declname>
        </param>
        <param>
          <type>&quot;Multipler to for the best choice from the ngram model.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="825" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a6f11d11bebe986147aff394fe96a01fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(segment_penalty_dict_nonword, 1.25,&quot;Score multiplier for glyph fragment segmentations which &quot;&quot;do not match a dictionary word (lower is better).&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segment_penalty_dict_nonword</type>
        </param>
        <param>
          <type>1.</type>
          <declname>25</declname>
        </param>
        <param>
          <type>&quot;Score multiplier for glyph fragment segmentations which &quot;&quot;do not match a dictionary word (lower is better).&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="828" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1abbb49c866879c5a214263ec581a11fe6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(segment_penalty_garbage, 1.50,&quot;Score multiplier for poorly cased strings that are not in&quot;&quot; the dictionary and generally look like garbage (lower is&quot;&quot; better).&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segment_penalty_garbage</type>
        </param>
        <param>
          <type>1.</type>
          <declname>50</declname>
        </param>
        <param>
          <type>&quot;Score multiplier for poorly cased strings that are not in&quot;&quot; the dictionary and generally look like garbage (lower is&quot;&quot; better).&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="832" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a79eba186ce09f7070bb773f543c37c71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::STRING_VAR_H</definition>
        <argsstring>(output_ambig_words_file,&quot;&quot;,&quot;Output file for ambiguities found in the dictionary&quot;)</argsstring>
        <name>STRING_VAR_H</name>
        <param>
          <type>output_ambig_words_file</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;Output file for ambiguities found in the dictionary&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="836" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ae5d8e9cd38d9ab0dd71a977adf0f2736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::INT_VAR_H</definition>
        <argsstring>(dawg_debug_level, 0,&quot;Set to 1 for general debug info&quot;&quot;, to 2 for more details, to 3 to see all the debug messages&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>dawg_debug_level</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Set to 1 for general debug info&quot;&quot;</type>
        </param>
        <param>
          <type>to 2 for more</type>
          <declname>details</declname>
        </param>
        <param>
          <type>to 3 to see all the debug messages&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="838" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a54a5dda205d22ea2c21655ce7426b04b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::INT_VAR_H</definition>
        <argsstring>(hyphen_debug_level, 0,&quot;Debug level for hyphenated words.&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>hyphen_debug_level</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Debug level for <ref refid="classtesseract_1_1_dict_1aebd1e3d92b2ec23c03807dd7ede45a40" kindref="member">hyphenated</ref> words.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="840" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a1fdd1e299a291a9b4f53a5bf9073f16d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::INT_VAR_H</definition>
        <argsstring>(max_viterbi_list_size, 10,&quot;Maximum size of viterbi list.&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>max_viterbi_list_size</type>
        </param>
        <param>
          <type>10</type>
        </param>
        <param>
          <type>&quot;Maximum size of viterbi list.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="841" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a866ebbbdfa1596ed249a6040597c68b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(use_only_first_uft8_step, false,&quot;Use only the first UTF8 step of the given string&quot;&quot; when computing log probabilities.&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>use_only_first_uft8_step</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Use only the first UTF8 step of the given string&quot;&quot; when computing log probabilities.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="842" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a41dd6fa35af850b64ff67f6e57308f0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(certainty_scale, 20.0,&quot;Certainty scaling factor&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>certainty_scale</type>
        </param>
        <param>
          <type>20.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Certainty scaling factor&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="845" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ab64e273584ec12a393194c66e9210956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(stopper_nondict_certainty_base,-2.50,&quot;Certainty threshold for non-dict words&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>stopper_nondict_certainty_base</type>
        </param>
        <param>
          <type>-2.</type>
          <declname>50</declname>
        </param>
        <param>
          <type>&quot;Certainty threshold for non-dict words&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="846" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a28fcfa4f79e25bf9486c40783cceac87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(stopper_phase2_certainty_rejection_offset, 1.0,&quot;Reject certainty offset&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>stopper_phase2_certainty_rejection_offset</type>
        </param>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Reject certainty offset&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="848" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a4021fa864d09b4da7ac07570311fe98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::INT_VAR_H</definition>
        <argsstring>(stopper_smallword_size, 2,&quot;Size of dict word to be treated as non-dict word&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>stopper_smallword_size</type>
        </param>
        <param>
          <type>2</type>
        </param>
        <param>
          <type>&quot;Size of dict word to be treated as non-dict word&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="850" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1af1a535fde847030a3f64b3024bf6076b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(stopper_certainty_per_char,-0.50,&quot;Certainty to add for each dict char above small word size.&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>stopper_certainty_per_char</type>
        </param>
        <param>
          <type>-0.</type>
          <declname>50</declname>
        </param>
        <param>
          <type>&quot;Certainty to add for each dict char above small word size.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="852" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1afbe20c0d81e370b88513ab1412ec67c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(stopper_allowable_character_badness, 3.0,&quot;Max certaintly variation allowed in a word (in sigma)&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>stopper_allowable_character_badness</type>
        </param>
        <param>
          <type>3.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Max certaintly variation allowed in a word (in sigma)&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="854" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ac2b1945fe76a461ce3b0037b80c2b6ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::INT_VAR_H</definition>
        <argsstring>(stopper_debug_level, 0,&quot;Stopper debug level&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>stopper_debug_level</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Stopper debug level&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="856" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aa449956dc409689acb91750a4bd0b9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(stopper_no_acceptable_choices, false,&quot;Make AcceptableChoice() always return false. Useful&quot;&quot; when there is a need to explore all segmentations&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>stopper_no_acceptable_choices</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Make <ref refid="classtesseract_1_1_dict_1a45c6cdeae33daa4ca52a83ad5a59f2f9" kindref="member">AcceptableChoice</ref>() always return false. Useful&quot;&quot; when there is a need to explore all segmentations&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="857" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1adab6c72aae20e373480403b7a7e88a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(stopper_ambiguity_threshold_gain, 8.0,&quot;Gain factor for ambiguity threshold.&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>stopper_ambiguity_threshold_gain</type>
        </param>
        <param>
          <type>8.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Gain factor for ambiguity threshold.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="860" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ad33278db02adb1782bc0ee56ced79145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(stopper_ambiguity_threshold_offset, 1.5,&quot;Certainty offset for ambiguity threshold.&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>stopper_ambiguity_threshold_offset</type>
        </param>
        <param>
          <type>1.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>&quot;Certainty offset for ambiguity threshold.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="862" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ada8c93f16867707be6fbe14da6ad7c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(save_raw_choices, false,&quot;Save all explored raw choices&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>save_raw_choices</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Save all explored raw choices&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="864" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a69b098ef795c0e98fab6ffe21565aba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::INT_VAR_H</definition>
        <argsstring>(tessedit_truncate_wordchoice_log, 10,&quot;Max words to keep in list&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>tessedit_truncate_wordchoice_log</type>
        </param>
        <param>
          <type>10</type>
        </param>
        <param>
          <type>&quot;Max words to keep in list&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="865" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a87ebe4704b0c4cae442f4420261f9409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::STRING_VAR_H</definition>
        <argsstring>(word_to_debug,&quot;&quot;,&quot;Word for which stopper debug information&quot;&quot; should be printed to stdout&quot;)</argsstring>
        <name>STRING_VAR_H</name>
        <param>
          <type>word_to_debug</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;Word for which stopper debug information&quot;&quot; should be printed to stdout&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="866" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ae8ce68788c5ed66dd71b9ecdfa33dabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::STRING_VAR_H</definition>
        <argsstring>(word_to_debug_lengths,&quot;&quot;,&quot;Lengths of unichars in word_to_debug&quot;)</argsstring>
        <name>STRING_VAR_H</name>
        <param>
          <type>word_to_debug_lengths</type>
        </param>
        <param>
          <type>&quot;&quot;</type>
        </param>
        <param>
          <type>&quot;Lengths of unichars in word_to_debug&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="868" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ac506f149deab56151d2f74e75618ec40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::INT_VAR_H</definition>
        <argsstring>(fragments_debug, 0,&quot;Debug character fragments&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>fragments_debug</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Debug <ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref> fragments&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="870" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a2c50fc97629168c3270094a56331b7e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::INT_VAR_H</definition>
        <argsstring>(segment_debug, 0,&quot;Debug the whole segmentation process&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>segment_debug</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Debug the whole segmentation process&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="871" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a00565b64d3d61a510bea89756d2f5118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(permute_debug, 0,&quot;Debug char permutation process&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>permute_debug</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Debug char permutation process&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="872" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a5f06be316325212c5df58c49380ba847" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(bestrate_pruning_factor, 2.0,&quot;Multiplying factor of&quot;&quot; current best rate to prune other hypotheses&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>bestrate_pruning_factor</type>
        </param>
        <param>
          <type>2.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Multiplying factor of&quot;&quot; current best rate to prune other hypotheses&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="873" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a0bd5156a787b9c1362b5bd715b381725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(permute_script_word, 0,&quot;Turn on word script consistency permuter&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>permute_script_word</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Turn on word script consistency permuter&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="875" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a3b40c70deefb2e91949e7c289305b55e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(segment_segcost_rating, 0,&quot;incorporate segmentation cost in word rating?&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>segment_segcost_rating</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;incorporate segmentation cost in word rating?&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="877" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a2ca21c148462f57d3e4ed214f324dcaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(segment_nonalphabetic_script, false,&quot;Don&apos;t use any alphabetic-specific tricks.&quot;&quot;Set to true in the traineddata config file for&quot;&quot; scripts that are cursive or inherently fixed-pitch&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>segment_nonalphabetic_script</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Don&apos;t use any alphabetic-specific tricks.&quot;&quot;Set to true in the traineddata config file for&quot;&quot; scripts that are cursive or inherently fixed-pitch&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a1ef1bbaf5050aebc835c9c7447c317d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(segment_reward_script, 0.95,&quot;Score multipler for script consistency within a word. &quot;&quot;Being a &apos;reward&apos; factor, it should be &lt;= 1. &quot;&quot;Smaller value implies bigger reward.&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segment_reward_script</type>
        </param>
        <param>
          <type>0.</type>
          <declname>95</declname>
        </param>
        <param>
          <type>&quot;Score multipler for script consistency within a word. &quot;&quot;Being a &apos;reward&apos;</type>
          <declname>factor</declname>
        </param>
        <param>
          <type>it should be&lt;=1.&quot;&quot;Smaller value implies bigger reward.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="883" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1ac12ac923b6eca275d3cd95ba52de0621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(permute_fixed_length_dawg, 0,&quot;Turn on fixed-length phrasebook search permuter&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>permute_fixed_length_dawg</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Turn on fixed-length phrasebook <ref refid="oldlist_8h_1a67eeada788d8089e16bb36133ee8def1" kindref="member">search</ref> permuter&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="887" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a8004f4658034f01a8b4ccd8fa70f32d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(permute_chartype_word, 0,&quot;Turn on character type (property) consistency permuter&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>permute_chartype_word</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Turn on <ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref> type (property) consistency permuter&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="889" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aa13eb9decc110fc0f3dd04768b34af48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(segment_reward_chartype, 0.97,&quot;Score multipler for char type consistency within a word. &quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segment_reward_chartype</type>
        </param>
        <param>
          <type>0.</type>
          <declname>97</declname>
        </param>
        <param>
          <type>&quot;Score multipler for char type consistency within a word. &quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="891" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a042fbca47de403ac9a487323c1438fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(segment_reward_ngram_best_choice, 0.99,&quot;Score multipler for ngram permuter&apos;s best choice&quot;&quot; (only used in the Han script path).&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>segment_reward_ngram_best_choice</type>
        </param>
        <param>
          <type>0.</type>
          <declname>99</declname>
        </param>
        <param>
          <type>&quot;Score multipler for ngram permuter&apos;s best choice&quot;&quot; (only used in the Han script path).&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="894" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a275fc8ab18f7f190ffa04bdb2c10e1cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(save_doc_words, 0,&quot;Save Document Words&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>save_doc_words</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>&quot;Save Document Words&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="897" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a6436bca659556316ed9f9d21e2cc6dd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(doc_dict_enable, 1,&quot;Enable Document Dictionary &quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>doc_dict_enable</type>
        </param>
        <param>
          <type>1</type>
        </param>
        <param>
          <type>&quot;Enable Document Dictionary &quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="898" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1aa4ec3f0389939d5f070dee118fedb0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(doc_dict_pending_threshold, 0.0,&quot;Worst certainty for using pending dictionary&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>doc_dict_pending_threshold</type>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>&quot;Worst certainty for using pending dictionary&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="899" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a94cfcf6469b4ac90568a5c690eb3c2d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::double_VAR_H</definition>
        <argsstring>(doc_dict_certainty_threshold,-2.25,&quot;Worst certainty&quot;&quot; for words that can be inserted into the document dictionary&quot;)</argsstring>
        <name>double_VAR_H</name>
        <param>
          <type>doc_dict_certainty_threshold</type>
        </param>
        <param>
          <type>-2.</type>
          <declname>25</declname>
        </param>
        <param>
          <type>&quot;Worst certainty&quot;&quot; for words that can be inserted into the document dictionary&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="901" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a0c0905e536717146479a7988db03a81f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(ngram_permuter_activated, false,&quot;Activate character-level n-gram-based permuter&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type>ngram_permuter_activated</type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Activate <ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref>-level n-gram-based permuter&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="903" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a98de6fc6db09d9d823833668164eed80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::INT_VAR_H</definition>
        <argsstring>(max_permuter_attempts, 10000,&quot;Maximum number of different&quot;&quot; character choices to consider during permutation.&quot;&quot; This limit is especially useful when user patterns&quot;&quot; are specified, since overly generic patterns can result in&quot;&quot; dawg search exploring an overly large number of options.&quot;)</argsstring>
        <name>INT_VAR_H</name>
        <param>
          <type>max_permuter_attempts</type>
        </param>
        <param>
          <type>10000</type>
        </param>
        <param>
          <type>&quot;Maximum number of different&quot;&quot; <ref refid="mfoutline_8h_1a2a4b69f9a2827dc98bc4cbc233118865afa40ef3af4fea0001b535318130960b2" kindref="member">character</ref> choices to consider during permutation.&quot;&quot; This limit is especially useful when user patterns&quot;&quot; are</type>
          <declname>specified</declname>
        </param>
        <param>
          <type>since overly generic patterns can result in&quot;&quot;dawg <ref refid="oldlist_8h_1a67eeada788d8089e16bb36133ee8def1" kindref="member">search</ref> exploring an overly large number of options.&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="905" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a946313f6d50a2eaff11bcde52642c86a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tesseract::Dict::BOOL_VAR_H</definition>
        <argsstring>(permute_only_top, false,&quot;Run only the top choice permuter&quot;)</argsstring>
        <name>BOOL_VAR_H</name>
        <param>
          <type><ref refid="permute_8h_1a2ffffb529286008eb08e2cafac1e35ce" kindref="member">permute_only_top</ref></type>
        </param>
        <param>
          <type>false</type>
        </param>
        <param>
          <type>&quot;Run only the top choice permuter&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="910" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtesseract_1_1_dict_1aa98baea7a97174cb256643c407c81993" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dawg_8h_1ac76aca11806fd7167c274dc45b7f7fe8" kindref="member">NODE_REF</ref></type>
        <definition>static NODE_REF tesseract::Dict::GetStartingNode</definition>
        <argsstring>(const Dawg *dawg, EDGE_REF edge_ref)</argsstring>
        <name>GetStartingNode</name>
        <param>
          <type>const <ref refid="classtesseract_1_1_dawg" kindref="compound">Dawg</ref> *</type>
          <declname>dawg</declname>
        </param>
        <param>
          <type><ref refid="dawg_8h_1a178eb445f9820b58d062f0c988a6f54f" kindref="member">EDGE_REF</ref></type>
          <declname>edge_ref</declname>
        </param>
        <briefdescription>
<para>Returns the appropriate next node given the EDGE_REF. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="620" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="620" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a741bbc38aa86c057b2b431c716519cc8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::ReadFixedLengthDawgs</definition>
        <argsstring>(DawgType type, const STRING &amp;lang, PermuterType perm, int debug_level, FILE *file, DawgVector *dawg_vec, int *max_wdlen)</argsstring>
        <name>ReadFixedLengthDawgs</name>
        <param>
          <type><ref refid="namespacetesseract_1a07c41f251f1782c60df4e626c35d2151" kindref="member">DawgType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref> &amp;</type>
          <declname>lang</declname>
        </param>
        <param>
          <type>PermuterType</type>
          <declname>perm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="namespacetesseract_1a8dc259fa09d9302b96f5b3d2aad10c9f" kindref="member">DawgVector</ref> *</type>
          <declname>dawg_vec</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>max_wdlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read/Write/Access special purpose dawgs which contain words only of a certain length (used for phrase search for non-space-delimited languages). Reads a sequence of dawgs from the given file. Appends the constructed dawgs to the given dawg_vec. Fills the given table with indices of the dawgs in the dawg_vec corresponding to the dawgs with words of a particular length. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="668" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="592" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1a21f1ab419db2b1bb8f375bd9b5935ade" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tesseract::Dict::WriteFixedLengthDawgs</definition>
        <argsstring>(const GenericVector&lt; SquishedDawg * &gt; &amp;dawg_vec, int num_dawgs, int debug_level, FILE *output_file)</argsstring>
        <name>WriteFixedLengthDawgs</name>
        <param>
          <type>const <ref refid="class_generic_vector" kindref="compound">GenericVector</ref>&lt; <ref refid="classtesseract_1_1_squished_dawg" kindref="compound">SquishedDawg</ref> * &gt; &amp;</type>
          <declname>dawg_vec</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_dawgs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>debug_level</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>output_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes the dawgs in the dawgs_vec to a file. Updates the given table with the indices of dawgs in the dawg_vec for the corresponding word lengths. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="674" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.cpp" bodystart="626" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="classtesseract_1_1_dict_1af873650961191c2a844eed47c0829421" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool tesseract::Dict::valid_word_permuter</definition>
        <argsstring>(uinT8 perm, bool numbers_ok)</argsstring>
        <name>valid_word_permuter</name>
        <param>
          <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
          <declname>perm</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>numbers_ok</declname>
        </param>
        <briefdescription>
<para>Check all the DAWGs to see if this word is in any of them. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="679" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="679" bodyend="683"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/dict/dict.h" line="90" column="1" bodyfile="/Users/makoto/Desktop/trunk/dict/dict.h" bodystart="90" bodyend="911"/>
    <listofallmembers>
      <member refid="classtesseract_1_1_dict_1ae9bc2b027bd999d646968aa445908efc" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>absolute_garbage</name></member>
      <member refid="classtesseract_1_1_dict_1a45c6cdeae33daa4ca52a83ad5a59f2f9" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>AcceptableChoice</name></member>
      <member refid="classtesseract_1_1_dict_1acb222399feb6d3dba3f9c1ac50df1e96" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>AcceptableResult</name></member>
      <member refid="classtesseract_1_1_dict_1ad59baa4e54f780a492cebd8f8dc0b025" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>add_document_word</name></member>
      <member refid="classtesseract_1_1_dict_1a9c59eace80232070d11e04794078d7b8" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>AddNewChunk</name></member>
      <member refid="classtesseract_1_1_dict_1aee01b74007e1fc5a172a5534c5ef3cae" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>adjust_non_word</name></member>
      <member refid="classtesseract_1_1_dict_1a61963914ca2d287fea0db951104d6eac" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>adjust_word</name></member>
      <member refid="classtesseract_1_1_dict_1ad4908385c6cd2afa635d90e9589cb7dd" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>adjust_word</name></member>
      <member refid="classtesseract_1_1_dict_1a1f4a0951c1960208fab7c511c90e5477" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>AlternativeChoicesWorseThan</name></member>
      <member refid="classtesseract_1_1_dict_1a253fac24ccb5cb9d3b467b0a28c1c0f3" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ambigs_mode</name></member>
      <member refid="classtesseract_1_1_dict_1a1fd1f849b292727334cdbdee03d6cdfc" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>append_choices</name></member>
      <member refid="classtesseract_1_1_dict_1ad1fe896d44a963847e634454ee176860" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>best_choices_</name></member>
      <member refid="classtesseract_1_1_dict_1a2b94db7d2ef81430029f8463712eb9b3" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>best_raw_choice_</name></member>
      <member refid="classtesseract_1_1_dict_1a64d9ba19e5844b8a2c46c1f5677dd120" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>bigram_dawg_</name></member>
      <member refid="classtesseract_1_1_dict_1af9d47a7a288c70126ced634f0fe22dbb" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a8fc294289bff355cd9dd0acb1cb93f4a" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1ab2e3753c019cce5ad69baa00c1a0fa58" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a4346a9336d29659f739987a2342a96a0" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a0c94718e1e23eda58f25c819877ecc31" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a43c77e3f3fc9ec11e691b1a6913a45b9" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a9bbeaf6754c6724fde292d26b07b4d26" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a866ebbbdfa1596ed249a6040597c68b8" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1aa449956dc409689acb91750a4bd0b9b1" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1ada8c93f16867707be6fbe14da6ad7c98" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a00565b64d3d61a510bea89756d2f5118" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a0bd5156a787b9c1362b5bd715b381725" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a3b40c70deefb2e91949e7c289305b55e" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a2ca21c148462f57d3e4ed214f324dcaf" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1ac12ac923b6eca275d3cd95ba52de0621" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a8004f4658034f01a8b4ccd8fa70f32d2" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a275fc8ab18f7f190ffa04bdb2c10e1cc" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a6436bca659556316ed9f9d21e2cc6dd1" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a0c0905e536717146479a7988db03a81f" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a946313f6d50a2eaff11bcde52642c86a" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>BOOL_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a207372c8db41e16c13eda896c7e77665" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>case_ok</name></member>
      <member refid="classtesseract_1_1_dict_1ab7b078ed83f6de9d5c767263a8a37070" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ChoiceAccumEnabled</name></member>
      <member refid="classtesseract_1_1_dict_1ace0e51938995068fdb1b115f6be61470" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ChoiceSameAs</name></member>
      <member refid="classtesseract_1_1_dict_1abd556d948d000e8eda51875b82ee4449" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>choose_il1</name></member>
      <member refid="classtesseract_1_1_dict_1a4fc10a65be799fa59c39cae57379dc17" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ClearBestChoiceAccum</name></member>
      <member refid="classtesseract_1_1_dict_1aa07269a6929862317892af548dc6f78e" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>compound_marker</name></member>
      <member refid="classtesseract_1_1_dict_1a5de64b7d07afaeb33408ee296db75f5d" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ConstraintsOk</name></member>
      <member refid="classtesseract_1_1_dict_1a673dcd602bce4530c4cc2fe875cbc2a9" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>copy_hyphen_info</name></member>
      <member refid="classtesseract_1_1_dict_1aab95bbe394edd1333464316df9507d22" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>current_segmentation_</name></member>
      <member refid="classtesseract_1_1_dict_1a5de1b4b567459f520ce3b82b68c2c618" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>CurrentBestChoiceAdjustFactor</name></member>
      <member refid="classtesseract_1_1_dict_1a2a0b6b5be811b039c04dd0cc09436f25" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>CurrentBestChoiceIs</name></member>
      <member refid="classtesseract_1_1_dict_1a0bec277d6338bed058f010f7be969d1e" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>CurrentWordAmbig</name></member>
      <member refid="classtesseract_1_1_dict_1a52fe937ceb54927a44b31d7954bac2d0" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>dang_ambigs_table_</name></member>
      <member refid="classtesseract_1_1_dict_1ac787e92f677e96a926d0c79e46a15461" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>dawg_permute_and_select</name></member>
      <member refid="classtesseract_1_1_dict_1aac6d42fd255de06ec27abf5d7ba086c6" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>dawg_permute_and_select</name></member>
      <member refid="classtesseract_1_1_dict_1aeb700127047ae6467b0cf5fe0e06032b" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>dawgs_</name></member>
      <member refid="classtesseract_1_1_dict_1ac3fda452853da426de36eecfe03d00bc" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>DebugWordChoices</name></member>
      <member refid="classtesseract_1_1_dict_1acd45e378f915e3dd4bb18a8930e928c9" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>def_letter_is_okay</name></member>
      <member refid="classtesseract_1_1_dict_1a8f256b3bc0e806c492837ee0d8a0fc97" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>def_probability_in_context</name></member>
      <member refid="classtesseract_1_1_dict_1ac11f84cc25bbf53314c0acda453949df" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>Dict</name></member>
      <member refid="classtesseract_1_1_dict_1a9c4215da27d2ea4c117d1e6227c5b492" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>DisableChoiceAccum</name></member>
      <member refid="classtesseract_1_1_dict_1a4924b71f3d916bcab066643fa43cd845" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>document_words_</name></member>
      <member refid="classtesseract_1_1_dict_1a74fa9e30a851751371ca2bd2ad4ce5b5" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1af05257a8df31b2740b605c97b58a4f40" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1ab3c822311826c8681360dce685f6140a" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a666acde98a38e20f737c3ba66489c7be" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a6f11d11bebe986147aff394fe96a01fd" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1abbb49c866879c5a214263ec581a11fe6" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a41dd6fa35af850b64ff67f6e57308f0a" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1ab64e273584ec12a393194c66e9210956" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a28fcfa4f79e25bf9486c40783cceac87" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1af1a535fde847030a3f64b3024bf6076b" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1afbe20c0d81e370b88513ab1412ec67c8" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1adab6c72aae20e373480403b7a7e88a6b" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1ad33278db02adb1782bc0ee56ced79145" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a5f06be316325212c5df58c49380ba847" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a1ef1bbaf5050aebc835c9c7447c317d1" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1aa13eb9decc110fc0f3dd04768b34af48" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a042fbca47de403ac9a487323c1438fb6" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1aa4ec3f0389939d5f070dee118fedb0c6" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a94cfcf6469b4ac90568a5c690eb3c2d4" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>double_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a4edfbbb412d84258cc1ef255dfd527aa" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>EnableChoiceAccum</name></member>
      <member refid="classtesseract_1_1_dict_1a899e3d5588422e9dac68ac5049069dd4" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>End</name></member>
      <member refid="classtesseract_1_1_dict_1a2aeffdb2c4e3263a4684b4baff79f91f" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>end_permute</name></member>
      <member refid="classtesseract_1_1_dict_1ace7f6baf4e425e1d50aac0d1383eb023" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>EndDangerousAmbigs</name></member>
      <member refid="classtesseract_1_1_dict_1a5f2f0ca244cafc4cf336377d3141cbf3" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>equivalent_symbols_</name></member>
      <member refid="classtesseract_1_1_dict_1a7b67011e3b43ead95473e2b25798e0fe" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>FillViableChoice</name></member>
      <member refid="classtesseract_1_1_dict_1a9ac3719475ad0a39d464307e1bd74ae3" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>FilterWordChoices</name></member>
      <member refid="classtesseract_1_1_dict_1af564403205ca1603825a3a2f59727089" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>FindClassifierErrors</name></member>
      <member refid="classtesseract_1_1_dict_1af58a79352c0ac94a552a9b2136b1682a" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>fragment_state_okay</name></member>
      <member refid="classtesseract_1_1_dict_1ac6b70920a4f5f5e33bfd4be2600d3192" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>FreeBadChoice</name></member>
      <member refid="classtesseract_1_1_dict_1a471b42f4989a1c6f30fd3e0d9a322c20" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>freq_dawg_</name></member>
      <member refid="classtesseract_1_1_dict_1a8d9601c5bb5c5050ac8db64ecb1bf2d5" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>get_top_choice_word</name></member>
      <member refid="classtesseract_1_1_dict_1a268a065cccec5814d412d7bde583cc3e" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>get_top_word_script</name></member>
      <member refid="classtesseract_1_1_dict_1ade61fd4f5d0ecf8fba10c99a4b224c8a" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>getBestChoices</name></member>
      <member refid="classtesseract_1_1_dict_1a774c3a8e23c9e4f47412936b304dae03" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>GetDawg</name></member>
      <member refid="classtesseract_1_1_dict_1a0e4f813ccf9441d2e7b90da31494fdc2" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>GetFixedLengthDawg</name></member>
      <member refid="classtesseract_1_1_dict_1a4acbe41544b8cdb7008d2ddacab10e57" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>getImage</name></member>
      <member refid="classtesseract_1_1_dict_1a00cf3c479c6090b94b513dbb44edc5e3" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>getImage</name></member>
      <member refid="classtesseract_1_1_dict_1a44c62a7904145157e4aa303fcf6ef923" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>GetMaxFixedLengthDawgIndex</name></member>
      <member refid="classtesseract_1_1_dict_1a7378d34b2d5ede5f2d40dcb8932bab9d" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>GetPuncDawg</name></member>
      <member refid="classtesseract_1_1_dict_1aa98baea7a97174cb256643c407c81993" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>GetStartingNode</name></member>
      <member refid="classtesseract_1_1_dict_1a805761b3e96514664545e7f0603c0627" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>GetUnambigDawg</name></member>
      <member refid="classtesseract_1_1_dict_1a4a886a86bc5d0d4405dd9da165b3e1fd" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>getUnicharAmbigs</name></member>
      <member refid="classtesseract_1_1_dict_1a635ce00ba9aa24247563d26ae26da631" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>getUnicharset</name></member>
      <member refid="classtesseract_1_1_dict_1acef7ecc6e5fe567fe9646b733df02455" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>getUnicharset</name></member>
      <member refid="classtesseract_1_1_dict_1ad6dd8117fc7d3d6a2271a501955eb187" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>go_deeper_dawg_fxn</name></member>
      <member refid="classtesseract_1_1_dict_1a5f6572f1ce1ce687a367de82aec90557" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>go_deeper_fxn_</name></member>
      <member refid="classtesseract_1_1_dict_1a12cc7c10929b310dd23baee1ab1e972b" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>go_deeper_top_fragments_fxn</name></member>
      <member refid="classtesseract_1_1_dict_1ac47e049c0ed569cd8cc1799ac2935f3d" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>good_choice</name></member>
      <member refid="classtesseract_1_1_dict_1aad63b54f05d3faaee2b8caec2a5145d7" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>has_hyphen_end</name></member>
      <member refid="classtesseract_1_1_dict_1abc8dcda3db471510c7834edacac8cebd" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>has_hyphen_end</name></member>
      <member refid="classtesseract_1_1_dict_1ab9f138ed11377afdd0c63869c2914cb9" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>hyphen_active_dawgs_</name></member>
      <member refid="classtesseract_1_1_dict_1a8431d26ec0e13f6d2a77d7ba3b1823ce" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>hyphen_base_size</name></member>
      <member refid="classtesseract_1_1_dict_1a4563976a7ac6f34bcac6600c90f9ebde" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>hyphen_constraints_</name></member>
      <member refid="classtesseract_1_1_dict_1af3e5407218cf6dbfe10f383e30bd5d9a" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>hyphen_unichar_id_</name></member>
      <member refid="classtesseract_1_1_dict_1add7cf0edcaf35287822940f62dc0ab0f" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>hyphen_word_</name></member>
      <member refid="classtesseract_1_1_dict_1aebd1e3d92b2ec23c03807dd7ede45a40" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>hyphenated</name></member>
      <member refid="classtesseract_1_1_dict_1a565bfbdd106f2aa51c21f453c40439e3" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>image_ptr_</name></member>
      <member refid="classtesseract_1_1_dict_1a5b19c61706786b0609613fd0d73c6b42" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>incorporate_segcost</name></member>
      <member refid="classtesseract_1_1_dict_1aeb0ba1d301def04d0ca191582f032c78" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>init_active_dawgs</name></member>
      <member refid="classtesseract_1_1_dict_1a7e44bdc5e2fe0dbb861dfd1522ef1cec" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>init_constraints</name></member>
      <member refid="classtesseract_1_1_dict_1a13fed9e3e317b901d4728a77f3396907" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>InitChoiceAccum</name></member>
      <member refid="classtesseract_1_1_dict_1ae5d8e9cd38d9ab0dd71a977adf0f2736" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a54a5dda205d22ea2c21655ce7426b04b" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a1fdd1e299a291a9b4f53a5bf9073f16d" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a4021fa864d09b4da7ac07570311fe98f" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1ac2b1945fe76a461ce3b0037b80c2b6ed" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a69b098ef795c0e98fab6ffe21565aba6" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1ac506f149deab56151d2f74e75618ec40" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a2c50fc97629168c3270094a56331b7e7" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a98de6fc6db09d9d823833668164eed80" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>INT_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a0d2279a39b58a3d39adbe59877a3c0a5" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>keep_word_choices_</name></member>
      <member refid="classtesseract_1_1_dict_1a524dff1a716db9381da1738ab802ec28" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>last_word_on_line_</name></member>
      <member refid="classtesseract_1_1_dict_1a0e3e3f5f2bf54b5b2a0aec103c816cd6" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>LengthOfShortestAlphaRun</name></member>
      <member refid="classtesseract_1_1_dict_1a802de385e07531ace182d16653e35f71" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>letter_is_okay_</name></member>
      <member refid="classtesseract_1_1_dict_1ad6da76c8b85b90df51029d705590e1cf" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>LetterIsOkay</name></member>
      <member refid="classtesseract_1_1_dict_1a1cb09562db2f2c8951f8dc21cf7bc279" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>Load</name></member>
      <member refid="classtesseract_1_1_dict_1ae92c303dc7451b3836cc9669e80090c0" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>LoadEquivalenceList</name></member>
      <member refid="classtesseract_1_1_dict_1a5d0400dc126a0dc472c3c28545da65a8" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>LogNewChoice</name></member>
      <member refid="classtesseract_1_1_dict_1a767d9d6e0095d70f2905dac7d48c32c5" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>LogNewSegmentation</name></member>
      <member refid="classtesseract_1_1_dict_1aa5ce917212da08cba99df7966c9e84cc" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>LogNewSplit</name></member>
      <member refid="classtesseract_1_1_dict_1ada5d84c57256d0afb5c93b11b2a4b48b" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>max_fixed_length_dawgs_wdlen_</name></member>
      <member refid="classtesseract_1_1_dict_1acc0a47c47ed3fe63f3fd4646ae5ddb80" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>NewViableChoice</name></member>
      <member refid="classtesseract_1_1_dict_1a895648f0134d56262368e64ee35a6b12" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ngram_probability_in_context</name></member>
      <member refid="classtesseract_1_1_dict_1aef746918c09040cf417f831d07c97072" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>NoDangerousAmbig</name></member>
      <member refid="classtesseract_1_1_dict_1a57be0143dbad3201d0d2ce002ae9bce8" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>NormalizeUnicharIdForMatch</name></member>
      <member refid="classtesseract_1_1_dict_1a0a380d8e3aa8e0d3827b18ad5355b258" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>NumDawgs</name></member>
      <member refid="classtesseract_1_1_dict_1a524e003dad1532fd722c29d95e002181" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>output_ambig_words_file_</name></member>
      <member refid="classtesseract_1_1_dict_1a06e4ad02e18a82f4247f2a535297d14c" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>pending_words_</name></member>
      <member refid="classtesseract_1_1_dict_1a578f7cb1945a1ba71f6251065687b555" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>permute_all</name></member>
      <member refid="classtesseract_1_1_dict_1ab9c442c6c541ea1be7a0a132aea3af51" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>permute_characters</name></member>
      <member refid="classtesseract_1_1_dict_1a692e057e716545e386097b40620d636a" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>permute_chartype_words</name></member>
      <member refid="classtesseract_1_1_dict_1a0ceb12c3a410ba12fdb9a93df11d47e2" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>permute_choices</name></member>
      <member refid="classtesseract_1_1_dict_1a2d718cec31b1cdfccab9f5ad720158ba" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>permute_compound_words</name></member>
      <member refid="classtesseract_1_1_dict_1a28fc3691ebb3ad2911fdc703b3e31ea0" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>permute_fixed_length_words</name></member>
      <member refid="classtesseract_1_1_dict_1a5de09395ec6b9c6436dcaa9266c78df8" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>permute_script_words</name></member>
      <member refid="classtesseract_1_1_dict_1a837f35af4dee4b03a43a85785af430bd" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>permute_subword</name></member>
      <member refid="classtesseract_1_1_dict_1adfe046fdde238fd1802c5d1771be1671" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>permute_top_choice</name></member>
      <member refid="classtesseract_1_1_dict_1af8cbb8ac0beba656f8614f3e01efb601" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>PrintAmbigAlternatives</name></member>
      <member refid="classtesseract_1_1_dict_1ad5343f10220f5882ddaa461b5e89927c" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>PrintViableChoice</name></member>
      <member refid="classtesseract_1_1_dict_1a7ac1496aaae5e9977a31a2781e7866f0" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>probability_in_context_</name></member>
      <member refid="classtesseract_1_1_dict_1abc4cf75b1bd5f5cb0f733c92afeb5239" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ProbabilityInContext</name></member>
      <member refid="classtesseract_1_1_dict_1a9e46362693e817dcc2f8265854679c80" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ProcessPatternEdges</name></member>
      <member refid="classtesseract_1_1_dict_1a19475289a21fb627b77e532e508c7e65" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>punc_dawg_</name></member>
      <member refid="classtesseract_1_1_dict_1a225009a9653f4a8a22d26d11e53c8871" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>raw_choices_</name></member>
      <member refid="classtesseract_1_1_dict_1a741bbc38aa86c057b2b431c716519cc8" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ReadFixedLengthDawgs</name></member>
      <member refid="classtesseract_1_1_dict_1a4dac55cfd3ead4a6efedb5a1bdbc8f61" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>reject_offset_</name></member>
      <member refid="classtesseract_1_1_dict_1ab09707f3ebd6dbbc9eda8c1bc1ba2b32" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>remove_hyphen_head</name></member>
      <member refid="classtesseract_1_1_dict_1ac09faecb15e5389a743f7adbceda65e6" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>replace_ambigs_table_</name></member>
      <member refid="classtesseract_1_1_dict_1a8309e93ec65d12110e6f8a1c9b00d7d4" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ReplaceAmbig</name></member>
      <member refid="classtesseract_1_1_dict_1a6b7508e4459f295073316fff69a05ee9" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>reset_hyphen_vars</name></member>
      <member refid="classtesseract_1_1_dict_1ab4147968ed69fe22a5acbebcff3472f0" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>ResetDocumentDictionary</name></member>
      <member refid="classtesseract_1_1_dict_1ad8bc29be3c9d8ae5bdb7ec972216ad28" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>set_hyphen_word</name></member>
      <member refid="classtesseract_1_1_dict_1aec7160ce69f6f7d478110b95b729d523" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>SettupStopperPass1</name></member>
      <member refid="classtesseract_1_1_dict_1a29f0c2e6c8a7b5fb44bb39ce47ceef84" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>SettupStopperPass2</name></member>
      <member refid="classtesseract_1_1_dict_1a1ed6ea4bcf2cb841fea2fef21ec656d4" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>SetWordsegRatingAdjustFactor</name></member>
      <member refid="classtesseract_1_1_dict_1a863f4f02d43f02f85d051d9e632c0c4e" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>StopperAmbigThreshold</name></member>
      <member refid="classtesseract_1_1_dict_1a1e71113fef2d45b8155906ab3d4930fb" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>STRING_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1acdbf3eaa2fb747970d60b3c1ba26bf74" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>STRING_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a79eba186ce09f7070bb773f543c37c71" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>STRING_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a87ebe4704b0c4cae442f4420261f9409" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>STRING_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1ae8ce68788c5ed66dd71b9ecdfa33dabb" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>STRING_VAR_H</name></member>
      <member refid="classtesseract_1_1_dict_1a88ccbd663564a11a95cf9e592c69e8be" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>StringSameAs</name></member>
      <member refid="classtesseract_1_1_dict_1adc54f2cdac1db76e5fa64039add57eea" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>StringSameAs</name></member>
      <member refid="classtesseract_1_1_dict_1a8bc4e4cc1be25c5207c48a4f5d7c4a7b" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>successors_</name></member>
      <member refid="classtesseract_1_1_dict_1a632d8c752369e54bb548e0a35dd7e100" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>top_fragments_permute_and_select</name></member>
      <member refid="classtesseract_1_1_dict_1a49b7fbfcab4bd2783f9620a35e6a673b" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>top_word_chartype</name></member>
      <member refid="classtesseract_1_1_dict_1ad4158fc1e763400167b05be094a28310" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>unambig_dawg_</name></member>
      <member refid="classtesseract_1_1_dict_1a2e14dd61f93ad13fafe4c2e2dae88631" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>UniformCertainties</name></member>
      <member refid="classtesseract_1_1_dict_1a8aa52c89f34bc5158cc650699520b50b" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>update_best_choice</name></member>
      <member refid="classtesseract_1_1_dict_1a562ac7b572107d301b4730dca4d89a57" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>valid_bigram</name></member>
      <member refid="classtesseract_1_1_dict_1aaed3895d9553f4110c693593c89650fa" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>valid_punctuation</name></member>
      <member refid="classtesseract_1_1_dict_1a22a45cd03f5d2191d0aeba41e3b4f52f" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>valid_word</name></member>
      <member refid="classtesseract_1_1_dict_1aa62d7c85fe5c5dd756012fdc7a62316a" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>valid_word</name></member>
      <member refid="classtesseract_1_1_dict_1a57bd14dfa9f7fb48e7de2ab463ae9f2f" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>valid_word</name></member>
      <member refid="classtesseract_1_1_dict_1aa3ae4cee802f176e3dedb3b7231ad5f0" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>valid_word_or_number</name></member>
      <member refid="classtesseract_1_1_dict_1af873650961191c2a844eed47c0829421" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>valid_word_permuter</name></member>
      <member refid="classtesseract_1_1_dict_1a60adf2a3eb954d58b13961d1c53fff8a" prot="private" virt="non-virtual"><scope>tesseract::Dict</scope><name>wordseg_rating_adjust_factor_</name></member>
      <member refid="classtesseract_1_1_dict_1a21f1ab419db2b1bb8f375bd9b5935ade" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>WriteFixedLengthDawgs</name></member>
      <member refid="classtesseract_1_1_dict_1ab471fe748aa77118175b04caaa4283df" prot="public" virt="non-virtual"><scope>tesseract::Dict</scope><name>~Dict</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
