<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_integer_matcher" kind="class" prot="public">
    <compoundname>IntegerMatcher</compoundname>
    <includes refid="intmatcher_8h" local="no">intmatcher.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_integer_matcher_1a88c2bf2659e8f9b3a8fb7de3e20b4586" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int IntegerMatcher::kIntThetaFudge</definition>
        <argsstring></argsstring>
        <name>kIntThetaFudge</name>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="93" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1a405d8797e28cafc6be50dd522d191031" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int IntegerMatcher::kEvidenceTableBits</definition>
        <argsstring></argsstring>
        <name>kEvidenceTableBits</name>
        <initializer>= 9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="95" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1a95f9b8220f07f5c258880fa2be8eeb48" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int IntegerMatcher::kIntEvidenceTruncBits</definition>
        <argsstring></argsstring>
        <name>kIntEvidenceTruncBits</name>
        <initializer>= 14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="97" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1a0187390be551f5e22adea437562a26c0" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float IntegerMatcher::kSEExponentialMultiplier</definition>
        <argsstring></argsstring>
        <name>kSEExponentialMultiplier</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="99" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1abf4850c047b5221fedbaeef45bffa208" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float IntegerMatcher::kSimilarityCenter</definition>
        <argsstring></argsstring>
        <name>kSimilarityCenter</name>
        <initializer>= 0.0075</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="101" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_integer_matcher_1a4a9860b430e59164a310c305f04e4479" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
        <definition>uinT8 IntegerMatcher::similarity_evidence_table_[512]</definition>
        <argsstring>[512]</argsstring>
        <name>similarity_evidence_table_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="191" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1a806f89122e8c355f9608c737de025a3f" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
        <definition>uinT32 IntegerMatcher::evidence_table_mask_</definition>
        <argsstring></argsstring>
        <name>evidence_table_mask_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="192" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1a59382e051ed4ade481e1a5ca25316a93" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
        <definition>uinT32 IntegerMatcher::mult_trunc_shift_bits_</definition>
        <argsstring></argsstring>
        <name>mult_trunc_shift_bits_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="193" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1a8cdc5009237cf27c55e3d230c45d5497" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
        <definition>uinT32 IntegerMatcher::table_trunc_shift_bits_</definition>
        <argsstring></argsstring>
        <name>table_trunc_shift_bits_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="194" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1a62d5884d42127d6883cd5b78b6a61711" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 IntegerMatcher::local_matcher_multiplier_</definition>
        <argsstring></argsstring>
        <name>local_matcher_multiplier_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="195" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1ab7350e91fd3f87106d373a4d47ac749e" prot="private" static="no" mutable="no">
        <type><ref refid="classtesseract_1_1_int_param" kindref="compound">tesseract::IntParam</ref> *</type>
        <definition>tesseract::IntParam* IntegerMatcher::classify_debug_level_</definition>
        <argsstring></argsstring>
        <name>classify_debug_level_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="196" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_integer_matcher_1a893bc6854ae946d26e90f8625c517591" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1afc8530b39ebe0b6df1e19159d2508d15" kindref="member">uinT32</ref></type>
        <definition>uinT32 IntegerMatcher::evidence_mult_mask_</definition>
        <argsstring></argsstring>
        <name>evidence_mult_mask_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="197" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_integer_matcher_1a8ae7dcd1236e8dc45ba660e8eadb1308" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IntegerMatcher::IntegerMatcher</definition>
        <argsstring>()</argsstring>
        <name>IntegerMatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="103" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1ac248b864f3f5effc9225c6f68d4b9e5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntegerMatcher::Init</definition>
        <argsstring>(tesseract::IntParam *classify_debug_level, int classify_integer_matcher_multiplier)</argsstring>
        <name>Init</name>
        <param>
          <type><ref refid="classtesseract_1_1_int_param" kindref="compound">tesseract::IntParam</ref> *</type>
          <declname>classify_debug_level</declname>
        </param>
        <param>
          <type>int</type>
          <declname>classify_integer_matcher_multiplier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="105" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="696" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1a30a627213fe38d7ae508cf6eaa946b41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntegerMatcher::SetBaseLineMatch</definition>
        <argsstring>()</argsstring>
        <name>SetBaseLineMatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="108" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="728" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1adff6fd8fca725fa346db25010b3be21e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntegerMatcher::SetCharNormMatch</definition>
        <argsstring>(int integer_matcher_multiplier)</argsstring>
        <name>SetCharNormMatch</name>
        <param>
          <type>int</type>
          <declname>integer_matcher_multiplier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="109" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="734" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1aa695d9a7ae69ab036bc6f2455e50e421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntegerMatcher::Match</definition>
        <argsstring>(INT_CLASS ClassTemplate, BIT_VECTOR ProtoMask, BIT_VECTOR ConfigMask, inT16 NumFeatures, const INT_FEATURE_STRUCT *Features, INT_RESULT Result, int AdaptFeatureThreshold, int Debug, bool SeparateDebugWindows)</argsstring>
        <name>Match</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>ClassTemplate</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ProtoMask</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ConfigMask</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>NumFeatures</declname>
        </param>
        <param>
          <type>const <ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref> *</type>
          <declname>Features</declname>
        </param>
        <param>
          <type><ref refid="intmatcher_8h_1aff4c44c8325e37c1bc68c45543e12119" kindref="member">INT_RESULT</ref></type>
          <declname>Result</declname>
        </param>
        <param>
          <type>int</type>
          <declname>AdaptFeatureThreshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Debug</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>SeparateDebugWindows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="111" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="460" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1ab943619d1ec5d510c5fd9a2ba7bbb55d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float IntegerMatcher::ApplyCNCorrection</definition>
        <argsstring>(float rating, int blob_length, int normalization_factor)</argsstring>
        <name>ApplyCNCorrection</name>
        <param>
          <type>float</type>
          <declname>rating</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blob_length</declname>
        </param>
        <param>
          <type>int</type>
          <declname>normalization_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="123" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="1285" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1aca707de9917b1cf3f19859aa94762ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IntegerMatcher::FindGoodProtos</definition>
        <argsstring>(INT_CLASS ClassTemplate, BIT_VECTOR ProtoMask, BIT_VECTOR ConfigMask, uinT16 BlobLength, inT16 NumFeatures, INT_FEATURE_ARRAY Features, PROTO_ID *ProtoArray, int AdaptProtoThreshold, int Debug)</argsstring>
        <name>FindGoodProtos</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>ClassTemplate</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ProtoMask</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ConfigMask</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>BlobLength</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>NumFeatures</declname>
        </param>
        <param>
          <type><ref refid="intproto_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref></type>
          <declname>Features</declname>
        </param>
        <param>
          <type><ref refid="matchdefs_8h_1ac80a5d84c2805bfd10ac129d949f8b80" kindref="member">PROTO_ID</ref> *</type>
          <declname>ProtoArray</declname>
        </param>
        <param>
          <type>int</type>
          <declname>AdaptProtoThreshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="126" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="546" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1a174bbfbb928c62b6e36c4f116e480de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IntegerMatcher::FindBadFeatures</definition>
        <argsstring>(INT_CLASS ClassTemplate, BIT_VECTOR ProtoMask, BIT_VECTOR ConfigMask, uinT16 BlobLength, inT16 NumFeatures, INT_FEATURE_ARRAY Features, FEATURE_ID *FeatureArray, int AdaptFeatureThreshold, int Debug)</argsstring>
        <name>FindBadFeatures</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>ClassTemplate</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ProtoMask</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ConfigMask</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1acb2dfad543247740dab87d31bb49dfff" kindref="member">uinT16</ref></type>
          <declname>BlobLength</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>NumFeatures</declname>
        </param>
        <param>
          <type><ref refid="intproto_8h_1afc188645dba6ff9f0eb7f056464fdd34" kindref="member">INT_FEATURE_ARRAY</ref></type>
          <declname>Features</declname>
        </param>
        <param>
          <type><ref refid="matchdefs_8h_1a2223404e7ad809dd36193cc195377f56" kindref="member">FEATURE_ID</ref> *</type>
          <declname>FeatureArray</declname>
        </param>
        <param>
          <type>int</type>
          <declname>AdaptFeatureThreshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="136" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="625" bodyend="692"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_integer_matcher_1a652b4dda93bbc40b1f69b0396324b02a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IntegerMatcher::UpdateTablesForFeature</definition>
        <argsstring>(INT_CLASS ClassTemplate, BIT_VECTOR ProtoMask, BIT_VECTOR ConfigMask, int FeatureNum, const INT_FEATURE_STRUCT *Feature, ScratchEvidence *evidence, int Debug)</argsstring>
        <name>UpdateTablesForFeature</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>ClassTemplate</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ProtoMask</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ConfigMask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>FeatureNum</declname>
        </param>
        <param>
          <type>const <ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref> *</type>
          <declname>Feature</declname>
        </param>
        <param>
          <type><ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref> *</type>
          <declname>evidence</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="147" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="807" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1a5766d556657986fa829ee95dc1c622c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IntegerMatcher::FindBestMatch</definition>
        <argsstring>(INT_CLASS ClassTemplate, const ScratchEvidence &amp;tables, INT_RESULT Result)</argsstring>
        <name>FindBestMatch</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>ClassTemplate</declname>
        </param>
        <param>
          <type>const <ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref> &amp;</type>
          <declname>tables</declname>
        </param>
        <param>
          <type><ref refid="intmatcher_8h_1aff4c44c8325e37c1bc68c45543e12119" kindref="member">INT_RESULT</ref></type>
          <declname>Result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="156" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="1237" bodyend="1281"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1a0ed950f435390b3e853f56e196b97f78" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntegerMatcher::DebugFeatureProtoError</definition>
        <argsstring>(INT_CLASS ClassTemplate, BIT_VECTOR ProtoMask, BIT_VECTOR ConfigMask, const ScratchEvidence &amp;tables, inT16 NumFeatures, int Debug)</argsstring>
        <name>DebugFeatureProtoError</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>ClassTemplate</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ProtoMask</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ConfigMask</declname>
        </param>
        <param>
          <type>const <ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref> &amp;</type>
          <declname>tables</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>NumFeatures</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="161" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="969" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1a20243fbd436f820cc086229cca6c724e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntegerMatcher::DisplayProtoDebugInfo</definition>
        <argsstring>(INT_CLASS ClassTemplate, BIT_VECTOR ProtoMask, BIT_VECTOR ConfigMask, const ScratchEvidence &amp;tables, bool SeparateDebugWindows)</argsstring>
        <name>DisplayProtoDebugInfo</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>ClassTemplate</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ProtoMask</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ConfigMask</declname>
        </param>
        <param>
          <type>const <ref refid="struct_scratch_evidence" kindref="compound">ScratchEvidence</ref> &amp;</type>
          <declname>tables</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>SeparateDebugWindows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="169" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="1095" bodyend="1133"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1a92593f44a597dc5b5f76bf24ab5bf3d9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntegerMatcher::DisplayFeatureDebugInfo</definition>
        <argsstring>(INT_CLASS ClassTemplate, BIT_VECTOR ProtoMask, BIT_VECTOR ConfigMask, inT16 NumFeatures, const INT_FEATURE_STRUCT *Features, int AdaptFeatureThreshold, int Debug, bool SeparateDebugWindows)</argsstring>
        <name>DisplayFeatureDebugInfo</name>
        <param>
          <type><ref refid="intproto_8h_1a8c3e30dcc19d515ce47bc6db3b02cf84" kindref="member">INT_CLASS</ref></type>
          <declname>ClassTemplate</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ProtoMask</declname>
        </param>
        <param>
          <type><ref refid="bitvec_8h_1a584fa1e33e36d105f97bc7e7288fb259" kindref="member">BIT_VECTOR</ref></type>
          <declname>ConfigMask</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>NumFeatures</declname>
        </param>
        <param>
          <type>const <ref refid="struct_i_n_t___f_e_a_t_u_r_e___s_t_r_u_c_t" kindref="compound">INT_FEATURE_STRUCT</ref> *</type>
          <declname>Features</declname>
        </param>
        <param>
          <type>int</type>
          <declname>AdaptFeatureThreshold</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Debug</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>SeparateDebugWindows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="176" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="1137" bodyend="1179"/>
      </memberdef>
      <memberdef kind="function" id="class_integer_matcher_1a28a146a1405f0cfd41ed24e6d56f5cc2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IntegerMatcher::DebugBestMatch</definition>
        <argsstring>(int BestMatch, INT_RESULT Result)</argsstring>
        <name>DebugBestMatch</name>
        <param>
          <type>int</type>
          <declname>BestMatch</declname>
        </param>
        <param>
          <type><ref refid="intmatcher_8h_1aff4c44c8325e37c1bc68c45543e12119" kindref="member">INT_RESULT</ref></type>
          <declname>Result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="186" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.cpp" bodystart="1295" bodyend="1300"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/makoto/Desktop/trunk/classify/intmatcher.h" line="90" column="1" bodyfile="/Users/makoto/Desktop/trunk/classify/intmatcher.h" bodystart="90" bodyend="198"/>
    <listofallmembers>
      <member refid="class_integer_matcher_1ab943619d1ec5d510c5fd9a2ba7bbb55d" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>ApplyCNCorrection</name></member>
      <member refid="class_integer_matcher_1ab7350e91fd3f87106d373a4d47ac749e" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>classify_debug_level_</name></member>
      <member refid="class_integer_matcher_1a28a146a1405f0cfd41ed24e6d56f5cc2" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>DebugBestMatch</name></member>
      <member refid="class_integer_matcher_1a0ed950f435390b3e853f56e196b97f78" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>DebugFeatureProtoError</name></member>
      <member refid="class_integer_matcher_1a92593f44a597dc5b5f76bf24ab5bf3d9" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>DisplayFeatureDebugInfo</name></member>
      <member refid="class_integer_matcher_1a20243fbd436f820cc086229cca6c724e" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>DisplayProtoDebugInfo</name></member>
      <member refid="class_integer_matcher_1a893bc6854ae946d26e90f8625c517591" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>evidence_mult_mask_</name></member>
      <member refid="class_integer_matcher_1a806f89122e8c355f9608c737de025a3f" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>evidence_table_mask_</name></member>
      <member refid="class_integer_matcher_1a174bbfbb928c62b6e36c4f116e480de0" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>FindBadFeatures</name></member>
      <member refid="class_integer_matcher_1a5766d556657986fa829ee95dc1c622c9" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>FindBestMatch</name></member>
      <member refid="class_integer_matcher_1aca707de9917b1cf3f19859aa94762ec8" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>FindGoodProtos</name></member>
      <member refid="class_integer_matcher_1ac248b864f3f5effc9225c6f68d4b9e5b" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>Init</name></member>
      <member refid="class_integer_matcher_1a8ae7dcd1236e8dc45ba660e8eadb1308" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>IntegerMatcher</name></member>
      <member refid="class_integer_matcher_1a405d8797e28cafc6be50dd522d191031" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>kEvidenceTableBits</name></member>
      <member refid="class_integer_matcher_1a95f9b8220f07f5c258880fa2be8eeb48" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>kIntEvidenceTruncBits</name></member>
      <member refid="class_integer_matcher_1a88c2bf2659e8f9b3a8fb7de3e20b4586" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>kIntThetaFudge</name></member>
      <member refid="class_integer_matcher_1a0187390be551f5e22adea437562a26c0" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>kSEExponentialMultiplier</name></member>
      <member refid="class_integer_matcher_1abf4850c047b5221fedbaeef45bffa208" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>kSimilarityCenter</name></member>
      <member refid="class_integer_matcher_1a62d5884d42127d6883cd5b78b6a61711" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>local_matcher_multiplier_</name></member>
      <member refid="class_integer_matcher_1aa695d9a7ae69ab036bc6f2455e50e421" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>Match</name></member>
      <member refid="class_integer_matcher_1a59382e051ed4ade481e1a5ca25316a93" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>mult_trunc_shift_bits_</name></member>
      <member refid="class_integer_matcher_1a30a627213fe38d7ae508cf6eaa946b41" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>SetBaseLineMatch</name></member>
      <member refid="class_integer_matcher_1adff6fd8fca725fa346db25010b3be21e" prot="public" virt="non-virtual"><scope>IntegerMatcher</scope><name>SetCharNormMatch</name></member>
      <member refid="class_integer_matcher_1a4a9860b430e59164a310c305f04e4479" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>similarity_evidence_table_</name></member>
      <member refid="class_integer_matcher_1a8cdc5009237cf27c55e3d230c45d5497" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>table_trunc_shift_bits_</name></member>
      <member refid="class_integer_matcher_1a652b4dda93bbc40b1f69b0396324b02a" prot="private" virt="non-virtual"><scope>IntegerMatcher</scope><name>UpdateTablesForFeature</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
