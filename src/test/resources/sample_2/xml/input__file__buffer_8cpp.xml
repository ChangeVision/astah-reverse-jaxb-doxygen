<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="input__file__buffer_8cpp" kind="file">
    <compoundname>input_file_buffer.cpp</compoundname>
    <includes local="no">string</includes>
    <includes refid="input__file__buffer_8h" local="yes">input_file_buffer.h</includes>
    <incdepgraph>
      <node id="36248">
        <label>string</label>
      </node>
      <node id="36247">
        <label>neural_networks/runtime/input_file_buffer.cpp</label>
        <link refid="input_file_buffer.cpp"/>
        <childnode refid="36248" relation="include">
        </childnode>
        <childnode refid="36249" relation="include">
        </childnode>
      </node>
      <node id="36250">
        <label>stdio.h</label>
      </node>
      <node id="36249">
        <label>input_file_buffer.h</label>
        <link refid="input__file__buffer_8h"/>
        <childnode refid="36250" relation="include">
        </childnode>
        <childnode refid="36248" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacetesseract">tesseract</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2008<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>Rights<sp/>Reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>ahmadab@google.com<sp/>(Ahmad<sp/>Abdulkader)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>input_file_buffer.h:<sp/>Declarations<sp/>of<sp/>a<sp/>class<sp/>for<sp/>an<sp/>object<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>represents<sp/>an<sp/>input<sp/>file<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="input__file__buffer_8h" kindref="compound">input_file_buffer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>default<sp/>and<sp/>only<sp/>contsructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="classtesseract_1_1_input_file_buffer_1aed86a5afb385810d1d0da8e437fc68f9" kindref="member">InputFileBuffer::InputFileBuffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;file_name)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>:<sp/>file_name_(file_name)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>fp_<sp/>=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>virtual<sp/>destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">InputFileBuffer::~InputFileBuffer()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp_<sp/>!=<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp_);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>specified<sp/>number<sp/>of<sp/>bytes<sp/>to<sp/>the<sp/>specified<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>InputFileBuffer::Read(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes_to_read)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>the<sp/>file<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>fp_<sp/>=<sp/>fopen(file_name_.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fp_<sp/>==<sp/><ref refid="host_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fread(buffer,<sp/>1,<sp/>bytes_to_read,<sp/>fp_);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/neural_networks/runtime/input_file_buffer.cpp"/>
  </compounddef>
</doxygen>
