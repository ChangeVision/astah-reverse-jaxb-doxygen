<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_i_c_o_o_r_d" kind="class" prot="public">
    <compoundname>ICOORD</compoundname>
    <derivedcompoundref refid="class_i_c_o_o_r_d_e_l_t" prot="public" virt="non-virtual">ICOORDELT</derivedcompoundref>
    <includes refid="points_8h" local="no">points.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1aee0ec96b56f138969beae84337f57640" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class FCOORD</definition>
        <argsstring></argsstring>
        <name>FCOORD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="32" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1a6920ed83b652f0bfc41b9881a04e6614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD operator!</definition>
        <argsstring>(const ICOORD &amp;)</argsstring>
        <name>operator!</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>src</defname>
        </param>
        <briefdescription>
<para>rotate 90 deg anti </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="110" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="32" bodyend="40"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1accf0afc79f4a7c8dca9c2dcafbd58028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD operator-</definition>
        <argsstring>(const ICOORD &amp;)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>src</defname>
        </param>
        <briefdescription>
<para>unary minus </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="112" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="50" bodyend="58"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1ad37d779b26849253e46e1a10b7588bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD operator+</definition>
        <argsstring>(const ICOORD &amp;, const ICOORD &amp;)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>add </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="114" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="68" bodyend="76"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1a5df23d19207ded41b99bb3ec1e86c775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
        <definition>ICOORD&amp; operator+=</definition>
        <argsstring>(ICOORD &amp;, const ICOORD &amp;)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>add </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="116" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="86" bodyend="92"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1a069d4ec67114d5761434ccf56ef0b724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD operator-</definition>
        <argsstring>(const ICOORD &amp;, const ICOORD &amp;)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>subtract </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="118" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="102" bodyend="110"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1a1ddaa32bd3eeea96468076b3f3277e63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
        <definition>ICOORD&amp; operator-=</definition>
        <argsstring>(ICOORD &amp;, const ICOORD &amp;)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>subtract </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="120" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1a460eaa8eb6ec567bdf1859f9c65ab618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 operator%</definition>
        <argsstring>(const ICOORD &amp;, const ICOORD &amp;)</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>scalar product </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="122" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1ae37ea1a94d1feb9839c90f7d0a9105cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="host_8h_1aba1f582fd0168f3ff9225d8c90fa9eb8" kindref="member">inT32</ref></type>
        <definition>inT32 operator*</definition>
        <argsstring>(const ICOORD &amp;, const ICOORD &amp;)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op2</defname>
        </param>
        <briefdescription>
<para>cross product </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="124" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1aeabb8bee8b0168b14825549a3498d46e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD operator*</definition>
        <argsstring>(const ICOORD &amp;, inT16)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <defname>scale</defname>
        </param>
        <briefdescription>
<para>multiply </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="127" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="162" bodyend="170"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1a1d751459fe629cc873ea3aafffc65c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD operator*</definition>
        <argsstring>(inT16, const ICOORD &amp;)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <defname>scale</defname>
        </param>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <briefdescription>
<para>multiply </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="130" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="173" bodyend="182"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1acd660889f51808793fda88e8f25bcd5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
        <definition>ICOORD&amp; operator*=</definition>
        <argsstring>(ICOORD &amp;, inT16)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <defname>scale</defname>
        </param>
        <briefdescription>
<para>multiply </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="133" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1a95fc0495ec136e4a3bdb35a31507bc13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
        <definition>ICOORD operator/</definition>
        <argsstring>(const ICOORD &amp;, inT16)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <defname>scale</defname>
        </param>
        <briefdescription>
<para>divide </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="135" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="208" bodyend="216"/>
      </memberdef>
      <memberdef kind="friend" id="class_i_c_o_o_r_d_1ac803f37f2f8fa461eb61ef2a4da75e2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
        <definition>ICOORD&amp; operator/=</definition>
        <argsstring>(ICOORD &amp;, inT16)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <defname>op1</defname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <defname>scale</defname>
        </param>
        <briefdescription>
<para>divide </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="137" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="226" bodyend="232"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" prot="protected" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 ICOORD::xcoord</definition>
        <argsstring></argsstring>
        <name>xcoord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="157" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" prot="protected" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 ICOORD::ycoord</definition>
        <argsstring></argsstring>
        <name>ycoord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="158" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_i_c_o_o_r_d_1af3b30f804139a9b9bc33970139f7975e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ICOORD::ICOORD</definition>
        <argsstring>()</argsstring>
        <name>ICOORD</name>
        <briefdescription>
<para>empty constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="36" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a95ef8c98f7bc08f8576be5a146d97ef1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ICOORD::ICOORD</definition>
        <argsstring>(inT16 xin, inT16 yin)</argsstring>
        <name>ICOORD</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>xin</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>yin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xin</parametername>
</parameternamelist>
<parameterdescription>
<para>x value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yin</parametername>
</parameternamelist>
<parameterdescription>
<para>y value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="42" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="42" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a1404719c43acf98086d189cbcac42b28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ICOORD::~ICOORD</definition>
        <argsstring>()</argsstring>
        <name>~ICOORD</name>
        <briefdescription>
<para>destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="48" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="48" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 ICOORD::x</definition>
        <argsstring>() const </argsstring>
        <name>x</name>
        <briefdescription>
<para>access function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="52" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 ICOORD::y</definition>
        <argsstring>() const </argsstring>
        <name>y</name>
        <briefdescription>
<para>access_function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="56" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ICOORD::set_x</definition>
        <argsstring>(inT16 xin)</argsstring>
        <name>set_x</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>xin</declname>
        </param>
        <briefdescription>
<para>rewrite function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="61" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ICOORD::set_y</definition>
        <argsstring>(inT16 yin)</argsstring>
        <name>set_y</name>
        <param>
          <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
          <declname>yin</declname>
        </param>
        <briefdescription>
<para>rewrite function </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="65" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a202dcd2920b28d85c2338d28dac8c5fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ICOORD::set_with_shrink</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>set_with_shrink</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Set from the given x,y, shrinking the vector to fit if needed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="70" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.cpp" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a447ebb622a6cedb5a856a30368472559" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ICOORD::sqlength</definition>
        <argsstring>() const </argsstring>
        <name>sqlength</name>
        <briefdescription>
<para>find sq length </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="73" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1afe51e3c6be6d553445db72851cf4c305" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ICOORD::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
<para>find length </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="78" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a1b9bc5e2b3ff9091cdd1400ed6f452d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ICOORD::pt_to_pt_sqdist</definition>
        <argsstring>(const ICOORD &amp;pt) const </argsstring>
        <name>pt_to_pt_sqdist</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>sq dist between pts </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="83" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a756694a7c93524a9bf75fd5ed8e2a3c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ICOORD::pt_to_pt_dist</definition>
        <argsstring>(const ICOORD &amp;pt) const </argsstring>
        <name>pt_to_pt_dist</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <declname>pt</declname>
        </param>
        <briefdescription>
<para>Distance between pts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="92" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a4e1fe920d8b75f4a66b04b723576d922" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float ICOORD::angle</definition>
        <argsstring>() const </argsstring>
        <name>angle</name>
        <briefdescription>
<para>find angle </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="97" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a2f317e15059ca2046518d0540858fd1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 ICOORD::operator==</definition>
        <argsstring>(const ICOORD &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>test equality </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="102" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a9d98a8359842e5c17b5582e825606926" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 ICOORD::operator!=</definition>
        <argsstring>(const ICOORD &amp;other) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>test inequality </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="106" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1aaedd825587ccb78583bbd6717793faea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ICOORD::rotate</definition>
        <argsstring>(const FCOORD &amp;vec)</argsstring>
        <name>rotate</name>
        <param>
          <type>const <ref refid="class_f_c_o_o_r_d" kindref="compound">FCOORD</ref> &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rotate <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec</parametername>
</parameternamelist>
<parameterdescription>
<para>by vector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="140" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ipoints.h" bodystart="241" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a5e71450225ed82a910bdec74a95a2c6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ICOORD::setup_render</definition>
        <argsstring>(ICOORD *major_step, ICOORD *minor_step, int *major, int *minor) const </argsstring>
        <name>setup_render</name>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> *</type>
          <declname>major_step</declname>
        </param>
        <param>
          <type><ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref> *</type>
          <declname>minor_step</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>major</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>minor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup for iterating over the pixels in a vector by the well-known Bresenham rendering algorithm. Starting with major/2 in the accumulator, on each step move by major_step, and then add minor to the accumulator. When accumulator &gt;= major subtract major and also move by minor_step. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="147" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.cpp" bodystart="83" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1a3159371d913e1b05860ae0c274fda0f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ICOORD::Serialize</definition>
        <argsstring>(FILE *fp) const </argsstring>
        <name>Serialize</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="151" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_i_c_o_o_r_d_1ae73dd714e26ceef74c3d1b552693c5a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ICOORD::DeSerialize</definition>
        <argsstring>(bool swap, FILE *fp)</argsstring>
        <name>DeSerialize</name>
        <param>
          <type>bool</type>
          <declname>swap</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="154" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.cpp" bodystart="67" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>integer coordinate </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1163">
        <label>ICOORDELT</label>
        <link refid="class_i_c_o_o_r_d_e_l_t"/>
        <childnode refid="1162" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1162">
        <label>ICOORD</label>
        <link refid="class_i_c_o_o_r_d"/>
      </node>
    </inheritancegraph>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/points.h" line="31" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/points.h" bodystart="30" bodyend="159"/>
    <listofallmembers>
      <member refid="class_i_c_o_o_r_d_1a4e1fe920d8b75f4a66b04b723576d922" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>angle</name></member>
      <member refid="class_i_c_o_o_r_d_1ae73dd714e26ceef74c3d1b552693c5a4" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>DeSerialize</name></member>
      <member refid="class_i_c_o_o_r_d_1aee0ec96b56f138969beae84337f57640" prot="private" virt="non-virtual"><scope>ICOORD</scope><name>FCOORD</name></member>
      <member refid="class_i_c_o_o_r_d_1af3b30f804139a9b9bc33970139f7975e" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>ICOORD</name></member>
      <member refid="class_i_c_o_o_r_d_1a95ef8c98f7bc08f8576be5a146d97ef1" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>ICOORD</name></member>
      <member refid="class_i_c_o_o_r_d_1afe51e3c6be6d553445db72851cf4c305" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>length</name></member>
      <member refid="class_i_c_o_o_r_d_1a6920ed83b652f0bfc41b9881a04e6614" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator!</name></member>
      <member refid="class_i_c_o_o_r_d_1a9d98a8359842e5c17b5582e825606926" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator!=</name></member>
      <member refid="class_i_c_o_o_r_d_1a460eaa8eb6ec567bdf1859f9c65ab618" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator%</name></member>
      <member refid="class_i_c_o_o_r_d_1ae37ea1a94d1feb9839c90f7d0a9105cf" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator*</name></member>
      <member refid="class_i_c_o_o_r_d_1aeabb8bee8b0168b14825549a3498d46e" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator*</name></member>
      <member refid="class_i_c_o_o_r_d_1a1d751459fe629cc873ea3aafffc65c0c" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator*</name></member>
      <member refid="class_i_c_o_o_r_d_1acd660889f51808793fda88e8f25bcd5b" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator*=</name></member>
      <member refid="class_i_c_o_o_r_d_1ad37d779b26849253e46e1a10b7588bb8" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator+</name></member>
      <member refid="class_i_c_o_o_r_d_1a5df23d19207ded41b99bb3ec1e86c775" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator+=</name></member>
      <member refid="class_i_c_o_o_r_d_1accf0afc79f4a7c8dca9c2dcafbd58028" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator-</name></member>
      <member refid="class_i_c_o_o_r_d_1a069d4ec67114d5761434ccf56ef0b724" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator-</name></member>
      <member refid="class_i_c_o_o_r_d_1a1ddaa32bd3eeea96468076b3f3277e63" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator-=</name></member>
      <member refid="class_i_c_o_o_r_d_1a95fc0495ec136e4a3bdb35a31507bc13" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator/</name></member>
      <member refid="class_i_c_o_o_r_d_1ac803f37f2f8fa461eb61ef2a4da75e2c" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator/=</name></member>
      <member refid="class_i_c_o_o_r_d_1a2f317e15059ca2046518d0540858fd1a" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>operator==</name></member>
      <member refid="class_i_c_o_o_r_d_1a756694a7c93524a9bf75fd5ed8e2a3c3" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>pt_to_pt_dist</name></member>
      <member refid="class_i_c_o_o_r_d_1a1b9bc5e2b3ff9091cdd1400ed6f452d6" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>pt_to_pt_sqdist</name></member>
      <member refid="class_i_c_o_o_r_d_1aaedd825587ccb78583bbd6717793faea" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>rotate</name></member>
      <member refid="class_i_c_o_o_r_d_1a3159371d913e1b05860ae0c274fda0f6" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>Serialize</name></member>
      <member refid="class_i_c_o_o_r_d_1a202dcd2920b28d85c2338d28dac8c5fe" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>set_with_shrink</name></member>
      <member refid="class_i_c_o_o_r_d_1a94c586039b3a003b35cf659b33b938f3" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>set_x</name></member>
      <member refid="class_i_c_o_o_r_d_1aa9fb418d1c602c0533e426759da43d67" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>set_y</name></member>
      <member refid="class_i_c_o_o_r_d_1a5e71450225ed82a910bdec74a95a2c6d" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>setup_render</name></member>
      <member refid="class_i_c_o_o_r_d_1a447ebb622a6cedb5a856a30368472559" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>sqlength</name></member>
      <member refid="class_i_c_o_o_r_d_1a59722a47c540007c58a539f0e35b3f33" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>x</name></member>
      <member refid="class_i_c_o_o_r_d_1a0bba3892d33e49115748480b986fdae8" prot="protected" virt="non-virtual"><scope>ICOORD</scope><name>xcoord</name></member>
      <member refid="class_i_c_o_o_r_d_1a66bba6ff8a5f060775e1c2ca511f7f29" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>y</name></member>
      <member refid="class_i_c_o_o_r_d_1a80ea51273376c5a171c6d0dcb5193b12" prot="protected" virt="non-virtual"><scope>ICOORD</scope><name>ycoord</name></member>
      <member refid="class_i_c_o_o_r_d_1a1404719c43acf98086d189cbcac42b28" prot="public" virt="non-virtual"><scope>ICOORD</scope><name>~ICOORD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
