<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="closed_8cpp" kind="file">
    <compoundname>closed.cpp</compoundname>
    <includes refid="freelist_8h" local="yes">freelist.h</includes>
    <includes refid="closed_8h" local="yes">closed.h</includes>
    <includes refid="cutil_8h" local="yes">cutil.h</includes>
    <includes refid="callcpp_8h" local="yes">callcpp.h</includes>
    <incdepgraph>
      <node id="43105">
        <label>cutil_class.h</label>
        <link refid="cutil__class_8h"/>
        <childnode refid="43106" relation="include">
        </childnode>
        <childnode refid="43119" relation="include">
        </childnode>
        <childnode refid="43092" relation="include">
        </childnode>
      </node>
      <node id="43088">
        <label>states.h</label>
        <link refid="states_8h"/>
        <childnode refid="43089" relation="include">
        </childnode>
        <childnode refid="43092" relation="include">
        </childnode>
      </node>
      <node id="43121">
        <label>assert.h</label>
      </node>
      <node id="43104">
        <label>ndminx.h</label>
        <link refid="ndminx_8h"/>
      </node>
      <node id="43119">
        <label>const.h</label>
        <link refid="const_8h"/>
      </node>
      <node id="43097">
        <label>stdlib.h</label>
      </node>
      <node id="43090">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="43091" relation="include">
        </childnode>
      </node>
      <node id="43106">
        <label>ccutil.h</label>
        <link refid="ccutil_8h"/>
        <childnode refid="43107" relation="include">
        </childnode>
        <childnode refid="43102" relation="include">
        </childnode>
        <childnode refid="43092" relation="include">
        </childnode>
        <childnode refid="43116" relation="include">
        </childnode>
        <childnode refid="43099" relation="include">
        </childnode>
        <childnode refid="43114" relation="include">
        </childnode>
        <childnode refid="43117" relation="include">
        </childnode>
        <childnode refid="43118" relation="include">
        </childnode>
      </node>
      <node id="43109">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="43097" relation="include">
        </childnode>
        <childnode refid="43093" relation="include">
        </childnode>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43094" relation="include">
        </childnode>
        <childnode refid="43102" relation="include">
        </childnode>
        <childnode refid="43110" relation="include">
        </childnode>
      </node>
      <node id="43095">
        <label>stddef.h</label>
      </node>
      <node id="43113">
        <label>memory.h</label>
      </node>
      <node id="43120">
        <label>callcpp.h</label>
        <link refid="callcpp_8h"/>
        <childnode refid="43121" relation="include">
        </childnode>
        <childnode refid="43089" relation="include">
        </childnode>
        <childnode refid="43099" relation="include">
        </childnode>
        <childnode refid="43112" relation="include">
        </childnode>
      </node>
      <node id="43102">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="43089" relation="include">
        </childnode>
      </node>
      <node id="43083">
        <label>wordrec/closed.cpp</label>
        <link refid="closed.cpp"/>
        <childnode refid="43084" relation="include">
        </childnode>
        <childnode refid="43086" relation="include">
        </childnode>
        <childnode refid="43096" relation="include">
        </childnode>
        <childnode refid="43120" relation="include">
        </childnode>
      </node>
      <node id="43091">
        <label>limits.h</label>
      </node>
      <node id="43117">
        <label>pthread.h</label>
      </node>
      <node id="43093">
        <label>string.h</label>
      </node>
      <node id="43115">
        <label>unicharmap.h</label>
        <link refid="unicharmap_8h"/>
        <childnode refid="43112" relation="include">
        </childnode>
      </node>
      <node id="43112">
        <label>unichar.h</label>
        <link refid="unichar_8h"/>
        <childnode refid="43113" relation="include">
        </childnode>
        <childnode refid="43093" relation="include">
        </childnode>
      </node>
      <node id="43096">
        <label>cutil.h</label>
        <link refid="cutil_8h"/>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43093" relation="include">
        </childnode>
        <childnode refid="43097" relation="include">
        </childnode>
        <childnode refid="43089" relation="include">
        </childnode>
        <childnode refid="43098" relation="include">
        </childnode>
        <childnode refid="43105" relation="include">
        </childnode>
      </node>
      <node id="43101">
        <label>tesscallback.h</label>
        <link refid="tesscallback_8h"/>
        <childnode refid="43089" relation="include">
        </childnode>
      </node>
      <node id="43118">
        <label>semaphore.h</label>
      </node>
      <node id="43110">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="43102" relation="include">
        </childnode>
      </node>
      <node id="43107">
        <label>ambigs.h</label>
        <link refid="ambigs_8h"/>
        <childnode refid="43108" relation="include">
        </childnode>
        <childnode refid="43098" relation="include">
        </childnode>
        <childnode refid="43112" relation="include">
        </childnode>
        <childnode refid="43114" relation="include">
        </childnode>
        <childnode refid="43100" relation="include">
        </childnode>
      </node>
      <node id="43087">
        <label>math.h</label>
      </node>
      <node id="43111">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="43102" relation="include">
        </childnode>
      </node>
      <node id="43086">
        <label>closed.h</label>
        <link refid="closed_8h"/>
        <childnode refid="43087" relation="include">
        </childnode>
        <childnode refid="43088" relation="include">
        </childnode>
      </node>
      <node id="43099">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43100" relation="include">
        </childnode>
        <childnode refid="43092" relation="include">
        </childnode>
      </node>
      <node id="43100">
        <label>genericvector.h</label>
        <link refid="genericvector_8h"/>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43097" relation="include">
        </childnode>
        <childnode refid="43101" relation="include">
        </childnode>
        <childnode refid="43102" relation="include">
        </childnode>
        <childnode refid="43103" relation="include">
        </childnode>
        <childnode refid="43104" relation="include">
        </childnode>
      </node>
      <node id="43094">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="43095" relation="include">
        </childnode>
        <childnode refid="43089" relation="include">
        </childnode>
      </node>
      <node id="43084">
        <label>freelist.h</label>
        <link refid="freelist_8h"/>
        <childnode refid="43085" relation="include">
        </childnode>
      </node>
      <node id="43108">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43089" relation="include">
        </childnode>
        <childnode refid="43109" relation="include">
        </childnode>
        <childnode refid="43111" relation="include">
        </childnode>
      </node>
      <node id="43114">
        <label>unicharset.h</label>
        <link refid="unicharset_8h"/>
        <childnode refid="43102" relation="include">
        </childnode>
        <childnode refid="43103" relation="include">
        </childnode>
        <childnode refid="43092" relation="include">
        </childnode>
        <childnode refid="43101" relation="include">
        </childnode>
        <childnode refid="43112" relation="include">
        </childnode>
        <childnode refid="43115" relation="include">
        </childnode>
      </node>
      <node id="43098">
        <label>tprintf.h</label>
        <link refid="tprintf_8h"/>
        <childnode refid="43099" relation="include">
        </childnode>
      </node>
      <node id="43089">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="43090" relation="include">
        </childnode>
      </node>
      <node id="43085">
        <label>stdio.h</label>
      </node>
      <node id="43116">
        <label>tessdatamanager.h</label>
        <link refid="tessdatamanager_8h"/>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43089" relation="include">
        </childnode>
        <childnode refid="43098" relation="include">
        </childnode>
      </node>
      <node id="43092">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43093" relation="include">
        </childnode>
        <childnode refid="43090" relation="include">
        </childnode>
        <childnode refid="43094" relation="include">
        </childnode>
      </node>
      <node id="43103">
        <label>helpers.h</label>
        <link refid="helpers_8h"/>
        <childnode refid="43085" relation="include">
        </childnode>
        <childnode refid="43093" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>hash_add</header>
      <description><para>Look in the hash table for a particular value. If it is not there then add it. </para></description>
      <memberdef kind="function" id="closed_8cpp_1ab1be117d24d6b3f8e426fd172588c274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hash_add</definition>
        <argsstring>(HASH_TABLE state_table, STATE *state)</argsstring>
        <name>hash_add</name>
        <param>
          <type><ref refid="closed_8h_1a8c58d81ec903d9b388b5d576c8e2fa49" kindref="member">HASH_TABLE</ref></type>
          <declname>state_table</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/closed.cpp" line="50" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/closed.cpp" bodystart="50" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>hash_lookup</header>
      <description><para>Look in the hash table for a particular value. If the value is there then return TRUE, FALSE otherwise. </para></description>
      <memberdef kind="function" id="closed_8cpp_1af42fdf0836fd4f40c478a4c46f4148c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hash_lookup</definition>
        <argsstring>(HASH_TABLE state_table, STATE *state)</argsstring>
        <name>hash_lookup</name>
        <param>
          <type><ref refid="closed_8h_1a8c58d81ec903d9b388b5d576c8e2fa49" kindref="member">HASH_TABLE</ref></type>
          <declname>state_table</declname>
        </param>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/closed.cpp" line="86" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/closed.cpp" bodystart="86" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>new_hash_table</header>
      <description><para>Create and initialize a hash table. </para></description>
      <memberdef kind="function" id="closed_8cpp_1aa74a9d96d39b412ec05403353ba7d5a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="closed_8h_1a8c58d81ec903d9b388b5d576c8e2fa49" kindref="member">HASH_TABLE</ref></type>
        <definition>HASH_TABLE new_hash_table</definition>
        <argsstring>()</argsstring>
        <name>new_hash_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/closed.cpp" line="120" column="1" bodyfile="/Users/makoto/Desktop/trunk/wordrec/closed.cpp" bodystart="120" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="closed_8cpp_1a032503e76d6f69bc67e99e909c8125da" prot="public" static="no">
        <name>TABLE_SIZE</name>
        <initializer>2000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/wordrec/closed.cpp" line="39" column="9" bodyfile="/Users/makoto/Desktop/trunk/wordrec/closed.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-C-*-</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>********************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closed.c<sp/><sp/>(Formerly<sp/>closed.c)</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Description:<sp/><sp/>Hash<sp/>table<sp/>for<sp/>closed<sp/>search<sp/>states.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mark<sp/>Seaman,<sp/>OCR<sp/>Technology</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Created:<sp/><sp/><sp/><sp/><sp/><sp/>Fri<sp/>Oct<sp/>16<sp/>14:37:00<sp/>1987</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Modified:<sp/><sp/><sp/><sp/><sp/>Fri<sp/>May<sp/>25<sp/>11:31:16<sp/>1990<sp/>(Mark<sp/>Seaman)<sp/>marks@hpgrlt</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Language:<sp/><sp/><sp/><sp/><sp/>C</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Package:<sp/><sp/><sp/><sp/><sp/><sp/>N/A</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>Status:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Reusable<sp/>Software<sp/>Component</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>(c)<sp/>Copyright<sp/>1987,<sp/>Hewlett-Packard<sp/>Company.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>**<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>**<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>**<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>**<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>**<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>**<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>**<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>**<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>**<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*********************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>n<sp/>c<sp/>l<sp/>u<sp/>d<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="27"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="freelist_8h" kindref="compound">freelist.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="closed_8h" kindref="compound">closed.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cutil_8h" kindref="compound">cutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="callcpp_8h" kindref="compound">callcpp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__UNIX__</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/>a<sp/>r<sp/>i<sp/>a<sp/>b<sp/>l<sp/>e<sp/>s</highlight></codeline>
<codeline lineno="38"><highlight class="comment">----------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_SIZE<sp/>2000</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>u<sp/>n<sp/>c<sp/>t<sp/>i<sp/>o<sp/>n<sp/>s</highlight></codeline>
<codeline lineno="43"><highlight class="comment">----------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="50"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="closed_8cpp_1ab1be117d24d6b3f8e426fd172588c274" kindref="member">hash_add</ref>(<ref refid="struct_s_t_a_t_e" kindref="compound">HASH_TABLE</ref><sp/>state_table,<sp/><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table_limit<sp/>=<sp/><ref refid="closed_8cpp_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref><sp/>%<sp/>table_limit;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>table_limit)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(0<sp/>&lt;=<sp/>x<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>table_limit);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Found<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((state_table[x].part2<sp/>==<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>(state_table[x].<ref refid="struct_s_t_a_t_e_1a2099a72d99d2ba5f828ad8538d328f4b" kindref="member">part1</ref><sp/>==<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a2099a72d99d2ba5f828ad8538d328f4b" kindref="member">part1</ref>))<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>in<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_table[x].part1<sp/>==<sp/><ref refid="closed_8h_1a854af682e4205dfeddb86f4fd4875495" kindref="member">NO_STATE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state_table[x].<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref><sp/>=<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state_table[x].<ref refid="struct_s_t_a_t_e_1a2099a72d99d2ba5f828ad8538d328f4b" kindref="member">part1</ref><sp/>=<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a2099a72d99d2ba5f828ad8538d328f4b" kindref="member">part1</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++x<sp/>&gt;=<sp/>table_limit)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref>(</highlight><highlight class="stringliteral">&quot;warning:<sp/>hash<sp/>table<sp/>is<sp/>full&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="closed_8cpp_1af42fdf0836fd4f40c478a4c46f4148c5" kindref="member">hash_lookup</ref>(<ref refid="struct_s_t_a_t_e" kindref="compound">HASH_TABLE</ref><sp/>state_table,<sp/><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>*state)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table_limit<sp/>=<sp/><ref refid="closed_8cpp_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>x<sp/>=<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref><sp/>%<sp/>table_limit;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>table_limit)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>assert<sp/>(0<sp/>&lt;=<sp/>x<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>table_limit);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Found<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((state_table[x].part2<sp/>==<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>(state_table[x].<ref refid="struct_s_t_a_t_e_1a2099a72d99d2ba5f828ad8538d328f4b" kindref="member">part1</ref><sp/>==<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a2099a72d99d2ba5f828ad8538d328f4b" kindref="member">part1</ref>))<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>in<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_table[x].part1<sp/>==<sp/><ref refid="closed_8h_1a854af682e4205dfeddb86f4fd4875495" kindref="member">NO_STATE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="capi_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++x<sp/>&gt;=<sp/>table_limit)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="callcpp_8cpp_1a21679e7fec2d69db23107348fa13c153" kindref="member">cprintf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;warning:<sp/>fell<sp/>off<sp/>end<sp/>of<sp/>hash<sp/>table<sp/><sp/>(%x)<sp/>%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref>,<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref><sp/>%<sp/>table_limit);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="struct_s_t_a_t_e" kindref="compound">HASH_TABLE</ref><sp/><ref refid="closed_8cpp_1aa74a9d96d39b412ec05403353ba7d5a4" kindref="member">new_hash_table</ref>()<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="struct_s_t_a_t_e" kindref="compound">HASH_TABLE</ref><sp/>ht;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>ht<sp/>=<sp/>(<ref refid="closed_8h_1a8c58d81ec903d9b388b5d576c8e2fa49" kindref="member">HASH_TABLE</ref>)<sp/><ref refid="freelist_8cpp_1a5898fbe61f6ffe4c1be71a107193cdfd" kindref="member">memalloc</ref><sp/>(<ref refid="closed_8cpp_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(<ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref>));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/><ref refid="closed_8cpp_1a032503e76d6f69bc67e99e909c8125da" kindref="member">TABLE_SIZE</ref>;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ht[x].<ref refid="struct_s_t_a_t_e_1a2099a72d99d2ba5f828ad8538d328f4b" kindref="member">part1</ref><sp/>=<sp/><ref refid="closed_8h_1a854af682e4205dfeddb86f4fd4875495" kindref="member">NO_STATE</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>ht[x].<ref refid="struct_s_t_a_t_e_1aa75ceb95132aecb5a8ae1e594a19733a" kindref="member">part2</ref><sp/>=<sp/><ref refid="closed_8h_1a854af682e4205dfeddb86f4fd4875495" kindref="member">NO_STATE</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ht);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/wordrec/closed.cpp"/>
  </compounddef>
</doxygen>
