<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="class_w_e_r_d" kind="class" prot="public">
    <compoundname>WERD</compoundname>
    <basecompoundref refid="class_e_l_i_s_t2___l_i_n_k" prot="public" virt="non-virtual">ELIST2_LINK</basecompoundref>
    <includes refid="werd_8h" local="no">werd.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_w_e_r_d_1a0a4cc342c1d1c730129810a182b56e31" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
        <definition>uinT8 WERD::blanks</definition>
        <argsstring></argsstring>
        <name>blanks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="159" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_w_e_r_d_1ab4083e53d5279a540403cdc30bd78612" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
        <definition>uinT8 WERD::dummy</definition>
        <argsstring></argsstring>
        <name>dummy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="160" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_w_e_r_d_1af671205f8362e0f19cee5051a83954c3" prot="private" static="no" mutable="no">
        <type><ref refid="class_b_i_t_s16" kindref="compound">BITS16</ref></type>
        <definition>BITS16 WERD::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="161" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_w_e_r_d_1aaf5d9beff545576987211365f90d7e94" prot="private" static="no" mutable="no">
        <type><ref refid="class_b_i_t_s16" kindref="compound">BITS16</ref></type>
        <definition>BITS16 WERD::disp_flags</definition>
        <argsstring></argsstring>
        <name>disp_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="162" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_w_e_r_d_1a18b22d3e9993525f8aff46e9db899910" prot="private" static="no" mutable="no">
        <type><ref refid="host_8h_1a8d41499d38c24d39b221ab0c158fe5a8" kindref="member">inT16</ref></type>
        <definition>inT16 WERD::script_id_</definition>
        <argsstring></argsstring>
        <name>script_id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="163" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_w_e_r_d_1a375bc5838da429df44516552c6781763" prot="private" static="no" mutable="no">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref></type>
        <definition>STRING WERD::correct</definition>
        <argsstring></argsstring>
        <name>correct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="164" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_w_e_r_d_1a79132c6f9e81d510a2997f80f6808004" prot="private" static="no" mutable="no">
        <type>C_BLOB_LIST</type>
        <definition>C_BLOB_LIST WERD::cblobs</definition>
        <argsstring></argsstring>
        <name>cblobs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="165" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_w_e_r_d_1ac3f9004642257ebd08a8fa34d864e4e8" prot="private" static="no" mutable="no">
        <type>C_BLOB_LIST</type>
        <definition>C_BLOB_LIST WERD::rej_cblobs</definition>
        <argsstring></argsstring>
        <name>rej_cblobs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="166" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_w_e_r_d_1aa66df1d975f49d11f68b86e31c379f39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>WERD::WERD</definition>
        <argsstring>()</argsstring>
        <name>WERD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="62" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1abc49f3a8e593d61578021011a004fac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WERD::WERD</definition>
        <argsstring>(C_BLOB_LIST *blob_list, uinT8 blanks, const char *text)</argsstring>
        <name>WERD</name>
        <param>
          <type>C_BLOB_LIST *</type>
          <declname>blob_list</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
          <declname>blanks</declname>
          <defname>blank_count</defname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1aa66df1d975f49d11f68b86e31c379f39" kindref="member">WERD::WERD</ref></para><para>Constructor to build a <ref refid="class_w_e_r_d" kindref="compound">WERD</ref> from a list of C_BLOBs. blob_list The C_BLOBs (in word order) are not copied; we take its elements and put them in our lists. blank_count blanks in front of the word text correct text, outlives this <ref refid="class_w_e_r_d" kindref="compound">WERD</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="67" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="49" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1aadcbcf1354c4f477bb850b4b32b0a5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WERD::WERD</definition>
        <argsstring>(C_BLOB_LIST *blob_list, WERD *clone)</argsstring>
        <name>WERD</name>
        <param>
          <type>C_BLOB_LIST *</type>
          <declname>blob_list</declname>
        </param>
        <param>
          <type><ref refid="class_w_e_r_d" kindref="compound">WERD</ref> *</type>
          <declname>clone</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1aa66df1d975f49d11f68b86e31c379f39" kindref="member">WERD::WERD</ref></para><para>Constructor to build a <ref refid="class_w_e_r_d" kindref="compound">WERD</ref> from a list of C_BLOBs. The C_BLOBs are not copied so the source list is emptied. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="72" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="123" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a31a5b8f16e1629362369ba56a23c7cee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d" kindref="compound">WERD</ref> *</type>
        <definition>WERD * WERD::ConstructFromSingleBlob</definition>
        <argsstring>(bool bol, bool eol, C_BLOB *blob)</argsstring>
        <name>ConstructFromSingleBlob</name>
        <param>
          <type>bool</type>
          <declname>bol</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>eol</declname>
        </param>
        <param>
          <type><ref refid="class_c___b_l_o_b" kindref="compound">C_BLOB</ref> *</type>
          <declname>blob</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="76" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a0085077a77a5fcc765ebcb69fd0a51b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>WERD::~WERD</definition>
        <argsstring>()</argsstring>
        <name>~WERD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="78" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="78" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a872b2e669f0445e9cdd9ffb8d8479d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d" kindref="compound">WERD</ref> &amp;</type>
        <definition>WERD &amp; WERD::operator=</definition>
        <argsstring>(const WERD &amp;source)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_w_e_r_d" kindref="compound">WERD</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1a872b2e669f0445e9cdd9ffb8d8479d31" kindref="member">WERD::operator=</ref></para><para>Assign a word, DEEP copying the blob list </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="82" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="359" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a025bce7764e4c2ef007e7d53d9a396f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d" kindref="compound">WERD</ref> *</type>
        <definition>WERD * WERD::ConstructWerdWithNewBlobs</definition>
        <argsstring>(C_BLOB_LIST *all_blobs, C_BLOB_LIST *orphan_blobs)</argsstring>
        <name>ConstructWerdWithNewBlobs</name>
        <param>
          <type>C_BLOB_LIST *</type>
          <declname>all_blobs</declname>
        </param>
        <param>
          <type>C_BLOB_LIST *</type>
          <declname>orphan_blobs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1a025bce7764e4c2ef007e7d53d9a396f8" kindref="member">WERD::ConstructWerdWithNewBlobs()</ref></para><para>This method returns a new werd constructed using the blobs in the input all_blobs list, which correspond to the blobs in this werd object. The blobs used to construct the new word are consumed and removed from the input all_blobs list. Returns NULL if the word couldn&apos;t be constructed. Returns original blobs for which no matches were found in the output list orphan_blobs (appends). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="91" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="402" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a0c26b86030e756d76e2425b1d2daf908" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>C_BLOB_LIST *</type>
        <definition>C_BLOB_LIST* WERD::rej_cblob_list</definition>
        <argsstring>()</argsstring>
        <name>rej_cblob_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="95" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a174baefaa99afbfdbf444e4199f3b529" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>C_BLOB_LIST *</type>
        <definition>C_BLOB_LIST* WERD::cblob_list</definition>
        <argsstring>()</argsstring>
        <name>cblob_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="100" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1ab2979974cf23f5c66f4e77cc51f2e189" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
        <definition>uinT8 WERD::space</definition>
        <argsstring>()</argsstring>
        <name>space</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="104" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a93ba22caf0b8b3b19a47fdf2c11f4bf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::set_blanks</definition>
        <argsstring>(uinT8 new_blanks)</argsstring>
        <name>set_blanks</name>
        <param>
          <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
          <declname>new_blanks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="107" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a55e5721d517dd78f563d465aabb36c80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int WERD::script_id</definition>
        <argsstring>() const </argsstring>
        <name>script_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="110" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a041e0101d1fda8025526f3c878b4e692" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::set_script_id</definition>
        <argsstring>(int id)</argsstring>
        <name>set_script_id</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="113" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_t_b_o_x" kindref="compound">TBOX</ref></type>
        <definition>TBOX WERD::bounding_box</definition>
        <argsstring>()</argsstring>
        <name>bounding_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" kindref="member">WERD::bounding_box</ref></para><para>Return the bounding box of the <ref refid="class_w_e_r_d" kindref="compound">WERD</ref>. This is quite a mess to compute! ORIGINALLY, REJECT CBLOBS WERE EXCLUDED, however, this led to bugs when the words on the row were re-sorted. The original words were built with reject blobs included. The FUZZY SPACE flags were set accordingly. If ALL the blobs in a word are rejected the BB for the word is NULL, causing the sort to screw up, leading to the erroneous possibility of the first word in a row being marked as FUZZY space. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="117" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="164" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1ae539e0a93fc08f95a6822bf23666c840" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* WERD::text</definition>
        <argsstring>() const </argsstring>
        <name>text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="119" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a5decd0b33533bf908c26ad4b10336fb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::set_text</definition>
        <argsstring>(const char *new_text)</argsstring>
        <name>set_text</name>
        <param>
          <type>const char *</type>
          <declname>new_text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="120" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a81edde8597a3d9fd8a664d703d332c41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 WERD::flag</definition>
        <argsstring>(WERD_FLAGS mask) const </argsstring>
        <name>flag</name>
        <param>
          <type><ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0be" kindref="member">WERD_FLAGS</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="122" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1aa42c9f53794ab51c95503cd277e89c60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::set_flag</definition>
        <argsstring>(WERD_FLAGS mask, BOOL8 value)</argsstring>
        <name>set_flag</name>
        <param>
          <type><ref refid="werd_8h_1ad6968adbf8f2cc44adf333ec96efb0be" kindref="member">WERD_FLAGS</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="123" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1af1e0f69a3d1af2a71479dad1999888a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
        <definition>BOOL8 WERD::display_flag</definition>
        <argsstring>(uinT8 flag) const </argsstring>
        <name>display_flag</name>
        <param>
          <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="125" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1ad52a35adab3f694e5998aa92fdf00557" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::set_display_flag</definition>
        <argsstring>(uinT8 flag, BOOL8 value)</argsstring>
        <name>set_display_flag</name>
        <param>
          <type><ref refid="host_8h_1a458fe97f82495945f8071bb3c18d1783" kindref="member">uinT8</ref></type>
          <declname>flag</declname>
        </param>
        <param>
          <type><ref refid="host_8h_1a7712a7e28433d0ade59219a129549b6f" kindref="member">BOOL8</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="126" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a338086c2fee2164c3bf82add310631b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_w_e_r_d" kindref="compound">WERD</ref> *</type>
        <definition>WERD * WERD::shallow_copy</definition>
        <argsstring>()</argsstring>
        <name>shallow_copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1a338086c2fee2164c3bf82add310631b4" kindref="member">WERD::shallow_copy()</ref></para><para>Make a shallow copy of a word </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="130" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="342" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1aff3b595b716acd7e25c6f4df518c84fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::move</definition>
        <argsstring>(const ICOORD vec)</argsstring>
        <name>move</name>
        <param>
          <type>const <ref refid="class_i_c_o_o_r_d" kindref="compound">ICOORD</ref></type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1aff3b595b716acd7e25c6f4df518c84fc" kindref="member">WERD::move</ref></para><para>Reposition <ref refid="class_w_e_r_d" kindref="compound">WERD</ref> by vector NOTE!! REJECT CBLOBS ARE NOT MOVED </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="133" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="188" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1ad856eb3b9230d14fe8f013bfd03d8828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::join_on</definition>
        <argsstring>(WERD *other)</argsstring>
        <name>join_on</name>
        <param>
          <type><ref refid="class_w_e_r_d" kindref="compound">WERD</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1ad856eb3b9230d14fe8f013bfd03d8828" kindref="member">WERD::join_on</ref></para><para>Join other word onto this one. Delete the old word. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="136" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="201" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1ac7ff7b4b07fa3252347f949395238aca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::copy_on</definition>
        <argsstring>(WERD *other)</argsstring>
        <name>copy_on</name>
        <param>
          <type><ref refid="class_w_e_r_d" kindref="compound">WERD</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1ac7ff7b4b07fa3252347f949395238aca" kindref="member">WERD::copy_on</ref></para><para>Copy blobs from other word onto this one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="139" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="224" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1a5a2d228e15200b7535fac2144109b677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::print</definition>
        <argsstring>()</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1a5a2d228e15200b7535fac2144109b677" kindref="member">WERD::print</ref></para><para>Display members </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="142" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="256" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1ae88f52597b2b6fffa9ca2f8be53908c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::plot</definition>
        <argsstring>(ScrollView *window, ScrollView::Color colour)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>window</declname>
        </param>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>colour</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1ae88f52597b2b6fffa9ca2f8be53908c4" kindref="member">WERD::plot</ref></para><para>Draw the <ref refid="class_w_e_r_d" kindref="compound">WERD</ref> in the given colour. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="146" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="287" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1ac6f328d2ebd8c59f38ac1c15f53073d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::plot</definition>
        <argsstring>(ScrollView *window)</argsstring>
        <name>plot</name>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1ae88f52597b2b6fffa9ca2f8be53908c4" kindref="member">WERD::plot</ref></para><para>Draw the <ref refid="class_w_e_r_d" kindref="compound">WERD</ref> in rainbow colours in window. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="152" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="309" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_w_e_r_d_1adc9c85b2475c4165e3d9ea984be5a0f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WERD::plot_rej_blobs</definition>
        <argsstring>(ScrollView *window)</argsstring>
        <name>plot_rej_blobs</name>
        <param>
          <type><ref refid="class_scroll_view" kindref="compound">ScrollView</ref> *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_w_e_r_d_1adc9c85b2475c4165e3d9ea984be5a0f2" kindref="member">WERD::plot_rej_blobs</ref></para><para>Draw the <ref refid="class_w_e_r_d" kindref="compound">WERD</ref> rejected blobs in window - ALWAYS GREY </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="155" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="327" bodyend="332"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_w_e_r_d_1a05865f2b7c0365adaf4c76dd06dd0626" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
        <definition>ScrollView::Color WERD::NextColor</definition>
        <argsstring>(ScrollView::Color colour)</argsstring>
        <name>NextColor</name>
        <param>
          <type><ref refid="class_scroll_view_1a100504544a5423a94222149ee9ed0fe8" kindref="member">ScrollView::Color</ref></type>
          <declname>colour</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="149" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.cpp" bodystart="296" bodyend="301"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2393">
        <label>WERD</label>
        <link refid="class_w_e_r_d"/>
        <childnode refid="2394" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2394">
        <label>ELIST2_LINK</label>
        <link refid="class_e_l_i_s_t2___l_i_n_k"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2395">
        <label>WERD</label>
        <link refid="class_w_e_r_d"/>
        <childnode refid="2396" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2396">
        <label>ELIST2_LINK</label>
        <link refid="class_e_l_i_s_t2___l_i_n_k"/>
      </node>
    </collaborationgraph>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/werd.h" line="60" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/werd.h" bodystart="60" bodyend="167"/>
    <listofallmembers>
      <member refid="class_w_e_r_d_1a0a4cc342c1d1c730129810a182b56e31" prot="private" virt="non-virtual"><scope>WERD</scope><name>blanks</name></member>
      <member refid="class_w_e_r_d_1a151bbfb39ecdef93ab1a14b0f9e4ac74" prot="public" virt="non-virtual"><scope>WERD</scope><name>bounding_box</name></member>
      <member refid="class_w_e_r_d_1a174baefaa99afbfdbf444e4199f3b529" prot="public" virt="non-virtual"><scope>WERD</scope><name>cblob_list</name></member>
      <member refid="class_w_e_r_d_1a79132c6f9e81d510a2997f80f6808004" prot="private" virt="non-virtual"><scope>WERD</scope><name>cblobs</name></member>
      <member refid="class_w_e_r_d_1a31a5b8f16e1629362369ba56a23c7cee" prot="public" virt="non-virtual"><scope>WERD</scope><name>ConstructFromSingleBlob</name></member>
      <member refid="class_w_e_r_d_1a025bce7764e4c2ef007e7d53d9a396f8" prot="public" virt="non-virtual"><scope>WERD</scope><name>ConstructWerdWithNewBlobs</name></member>
      <member refid="class_w_e_r_d_1ac7ff7b4b07fa3252347f949395238aca" prot="public" virt="non-virtual"><scope>WERD</scope><name>copy_on</name></member>
      <member refid="class_w_e_r_d_1a375bc5838da429df44516552c6781763" prot="private" virt="non-virtual"><scope>WERD</scope><name>correct</name></member>
      <member refid="class_w_e_r_d_1aaf5d9beff545576987211365f90d7e94" prot="private" virt="non-virtual"><scope>WERD</scope><name>disp_flags</name></member>
      <member refid="class_w_e_r_d_1af1e0f69a3d1af2a71479dad1999888a8" prot="public" virt="non-virtual"><scope>WERD</scope><name>display_flag</name></member>
      <member refid="class_w_e_r_d_1ab4083e53d5279a540403cdc30bd78612" prot="private" virt="non-virtual"><scope>WERD</scope><name>dummy</name></member>
      <member refid="class_e_l_i_s_t2___l_i_n_k_1a2a14fc7a515dec2edcb34179562f4a84" prot="public" virt="non-virtual"><scope>WERD</scope><name>ELIST2_LINK</name></member>
      <member refid="class_e_l_i_s_t2___l_i_n_k_1a72fdc625cf6856d8893733fbf0eb6f18" prot="public" virt="non-virtual"><scope>WERD</scope><name>ELIST2_LINK</name></member>
      <member refid="class_w_e_r_d_1a81edde8597a3d9fd8a664d703d332c41" prot="public" virt="non-virtual"><scope>WERD</scope><name>flag</name></member>
      <member refid="class_w_e_r_d_1af671205f8362e0f19cee5051a83954c3" prot="private" virt="non-virtual"><scope>WERD</scope><name>flags</name></member>
      <member refid="class_w_e_r_d_1ad856eb3b9230d14fe8f013bfd03d8828" prot="public" virt="non-virtual"><scope>WERD</scope><name>join_on</name></member>
      <member refid="class_w_e_r_d_1aff3b595b716acd7e25c6f4df518c84fc" prot="public" virt="non-virtual"><scope>WERD</scope><name>move</name></member>
      <member refid="class_w_e_r_d_1a05865f2b7c0365adaf4c76dd06dd0626" prot="public" virt="non-virtual"><scope>WERD</scope><name>NextColor</name></member>
      <member refid="class_w_e_r_d_1a872b2e669f0445e9cdd9ffb8d8479d31" prot="public" virt="non-virtual"><scope>WERD</scope><name>operator=</name></member>
      <member refid="class_e_l_i_s_t2___l_i_n_k_1a8405b0dd69c6c60c989c6c84f126aa61" prot="public" virt="non-virtual" ambiguityscope="ELIST2_LINK::"><scope>WERD</scope><name>operator=</name></member>
      <member refid="class_w_e_r_d_1ae88f52597b2b6fffa9ca2f8be53908c4" prot="public" virt="non-virtual"><scope>WERD</scope><name>plot</name></member>
      <member refid="class_w_e_r_d_1ac6f328d2ebd8c59f38ac1c15f53073d4" prot="public" virt="non-virtual"><scope>WERD</scope><name>plot</name></member>
      <member refid="class_w_e_r_d_1adc9c85b2475c4165e3d9ea984be5a0f2" prot="public" virt="non-virtual"><scope>WERD</scope><name>plot_rej_blobs</name></member>
      <member refid="class_w_e_r_d_1a5a2d228e15200b7535fac2144109b677" prot="public" virt="non-virtual"><scope>WERD</scope><name>print</name></member>
      <member refid="class_w_e_r_d_1a0c26b86030e756d76e2425b1d2daf908" prot="public" virt="non-virtual"><scope>WERD</scope><name>rej_cblob_list</name></member>
      <member refid="class_w_e_r_d_1ac3f9004642257ebd08a8fa34d864e4e8" prot="private" virt="non-virtual"><scope>WERD</scope><name>rej_cblobs</name></member>
      <member refid="class_w_e_r_d_1a55e5721d517dd78f563d465aabb36c80" prot="public" virt="non-virtual"><scope>WERD</scope><name>script_id</name></member>
      <member refid="class_w_e_r_d_1a18b22d3e9993525f8aff46e9db899910" prot="private" virt="non-virtual"><scope>WERD</scope><name>script_id_</name></member>
      <member refid="class_w_e_r_d_1a93ba22caf0b8b3b19a47fdf2c11f4bf6" prot="public" virt="non-virtual"><scope>WERD</scope><name>set_blanks</name></member>
      <member refid="class_w_e_r_d_1ad52a35adab3f694e5998aa92fdf00557" prot="public" virt="non-virtual"><scope>WERD</scope><name>set_display_flag</name></member>
      <member refid="class_w_e_r_d_1aa42c9f53794ab51c95503cd277e89c60" prot="public" virt="non-virtual"><scope>WERD</scope><name>set_flag</name></member>
      <member refid="class_w_e_r_d_1a041e0101d1fda8025526f3c878b4e692" prot="public" virt="non-virtual"><scope>WERD</scope><name>set_script_id</name></member>
      <member refid="class_w_e_r_d_1a5decd0b33533bf908c26ad4b10336fb0" prot="public" virt="non-virtual"><scope>WERD</scope><name>set_text</name></member>
      <member refid="class_w_e_r_d_1a338086c2fee2164c3bf82add310631b4" prot="public" virt="non-virtual"><scope>WERD</scope><name>shallow_copy</name></member>
      <member refid="class_w_e_r_d_1ab2979974cf23f5c66f4e77cc51f2e189" prot="public" virt="non-virtual"><scope>WERD</scope><name>space</name></member>
      <member refid="class_w_e_r_d_1ae539e0a93fc08f95a6822bf23666c840" prot="public" virt="non-virtual"><scope>WERD</scope><name>text</name></member>
      <member refid="class_w_e_r_d_1aa66df1d975f49d11f68b86e31c379f39" prot="public" virt="non-virtual"><scope>WERD</scope><name>WERD</name></member>
      <member refid="class_w_e_r_d_1abc49f3a8e593d61578021011a004fac9" prot="public" virt="non-virtual"><scope>WERD</scope><name>WERD</name></member>
      <member refid="class_w_e_r_d_1aadcbcf1354c4f477bb850b4b32b0a5cb" prot="public" virt="non-virtual"><scope>WERD</scope><name>WERD</name></member>
      <member refid="class_w_e_r_d_1a0085077a77a5fcc765ebcb69fd0a51b6" prot="public" virt="non-virtual"><scope>WERD</scope><name>~WERD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
