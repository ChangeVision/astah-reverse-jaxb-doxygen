<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="ocrpara_8cpp" kind="file">
    <compoundname>ocrpara.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="ocrpara_8h" local="yes">ocrpara.h</includes>
    <includes refid="host_8h" local="yes">host.h</includes>
    <incdepgraph>
      <node id="8971">
        <label>stdlib.h</label>
      </node>
      <node id="8962">
        <label>ccstruct/ocrpara.cpp</label>
        <link refid="ocrpara.cpp"/>
        <childnode refid="8963" relation="include">
        </childnode>
        <childnode refid="8964" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
      </node>
      <node id="8968">
        <label>platform.h</label>
        <link refid="platform_8h"/>
        <childnode refid="8969" relation="include">
        </childnode>
      </node>
      <node id="8970">
        <label>serialis.h</label>
        <link refid="serialis_8h"/>
        <childnode refid="8971" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
        <childnode refid="8963" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
        <childnode refid="8975" relation="include">
        </childnode>
        <childnode refid="8976" relation="include">
        </childnode>
      </node>
      <node id="8974">
        <label>stddef.h</label>
      </node>
      <node id="8975">
        <label>errcode.h</label>
        <link refid="errcode_8h"/>
        <childnode refid="8967" relation="include">
        </childnode>
      </node>
      <node id="8969">
        <label>limits.h</label>
      </node>
      <node id="8972">
        <label>string.h</label>
      </node>
      <node id="8976">
        <label>fileerr.h</label>
        <link refid="fileerr_8h"/>
        <childnode refid="8975" relation="include">
        </childnode>
      </node>
      <node id="8977">
        <label>lsterr.h</label>
        <link refid="lsterr_8h"/>
        <childnode refid="8975" relation="include">
        </childnode>
      </node>
      <node id="8965">
        <label>publictypes.h</label>
        <link refid="publictypes_8h"/>
      </node>
      <node id="8973">
        <label>memry.h</label>
        <link refid="memry_8h"/>
        <childnode refid="8974" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
      </node>
      <node id="8964">
        <label>ocrpara.h</label>
        <link refid="ocrpara_8h"/>
        <childnode refid="8965" relation="include">
        </childnode>
        <childnode refid="8966" relation="include">
        </childnode>
        <childnode refid="8978" relation="include">
        </childnode>
      </node>
      <node id="8966">
        <label>elst.h</label>
        <link refid="elst_8h"/>
        <childnode refid="8963" relation="include">
        </childnode>
        <childnode refid="8967" relation="include">
        </childnode>
        <childnode refid="8970" relation="include">
        </childnode>
        <childnode refid="8977" relation="include">
        </childnode>
      </node>
      <node id="8967">
        <label>host.h</label>
        <link refid="host_8h"/>
        <childnode refid="8968" relation="include">
        </childnode>
      </node>
      <node id="8963">
        <label>stdio.h</label>
      </node>
      <node id="8978">
        <label>strngs.h</label>
        <link refid="strngs_8h"/>
        <childnode refid="8963" relation="include">
        </childnode>
        <childnode refid="8972" relation="include">
        </childnode>
        <childnode refid="8968" relation="include">
        </childnode>
        <childnode refid="8973" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ocrpara_8cpp_1a6d7fc715c5f1ecf148c7e8991a19a207" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref></type>
        <definition>static STRING ParagraphJustificationToString</definition>
        <argsstring>(tesseract::ParagraphJustification justification)</argsstring>
        <name>ParagraphJustificationToString</name>
        <param>
          <type><ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1" kindref="member">tesseract::ParagraphJustification</ref></type>
          <declname>justification</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrpara.cpp" line="32" column="1" bodyfile="/Users/makoto/Desktop/trunk/ccstruct/ocrpara.cpp" bodystart="32" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>File:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ocrpara.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description:<sp/>OCR<sp/>Paragraph<sp/>Output<sp/>Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/><sp/><sp/><sp/><sp/><sp/>David<sp/>Eger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created:<sp/><sp/><sp/><sp/><sp/>2010-11-15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(C)<sp/>Copyright<sp/>2010,<sp/>Google<sp/>Inc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ocrpara_8h" kindref="compound">ocrpara.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="host_8h" kindref="compound">host.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>NearlyEqual()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><ref refid="elst_8h_1ab54325a3cfcd9bee58697d77e1902240" kindref="member">ELISTIZE</ref>(<ref refid="struct_p_a_r_a" kindref="compound">PARA</ref>)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">using<sp/><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref>::<ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a0141f695e0959de2dc43e0eb94023ff6" kindref="member">JUSTIFICATION_LEFT</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">using<sp/><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref>::<ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a93a23b19fec3ebdb587df6e0aa9e9fce" kindref="member">JUSTIFICATION_RIGHT</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">using<sp/><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref>::<ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1aa9a39d3bca308f650f8c75b0c14f6838" kindref="member">JUSTIFICATION_CENTER</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">using<sp/><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref>::<ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1a90150303905fef6037adc10dc2aa3689" kindref="member">JUSTIFICATION_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">static<sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>ParagraphJustificationToString(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetesseract-c__api-demo_1afed58feacb84df2de88bdd613cfdba6d" kindref="member">tesseract</ref>::<ref refid="namespacetesseract_1a550970d1662b3ac5830c6a28dba676b1" kindref="member">ParagraphJustification</ref><sp/>justification)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(justification)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JUSTIFICATION_LEFT:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;LEFT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JUSTIFICATION_RIGHT:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;RIGHT&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JUSTIFICATION_CENTER:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;CENTER&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;UNKNOWN&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model_1aac83726f552a7058fc552bac776fffd5" kindref="member">ParagraphModel::ValidFirstLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lmargin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lindent,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rindent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rmargin)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(justification_)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JUSTIFICATION_LEFT:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(lmargin<sp/>+<sp/>lindent,<sp/>margin_<sp/>+<sp/>first_indent_,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolerance_);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JUSTIFICATION_RIGHT:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(rmargin<sp/>+<sp/>rindent,<sp/>margin_<sp/>+<sp/>first_indent_,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolerance_);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JUSTIFICATION_CENTER:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(lindent,<sp/>rindent,<sp/>tolerance_<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model_1af1711b2d86cc61b7913d01e7a383209b" kindref="member">ParagraphModel::ValidBodyLine</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lmargin,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lindent,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rindent,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rmargin)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(justification_)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JUSTIFICATION_LEFT:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(lmargin<sp/>+<sp/>lindent,<sp/>margin_<sp/>+<sp/>body_indent_,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolerance_);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JUSTIFICATION_RIGHT:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(rmargin<sp/>+<sp/>rindent,<sp/>margin_<sp/>+<sp/>body_indent_,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolerance_);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JUSTIFICATION_CENTER:</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(lindent,<sp/>rindent,<sp/>tolerance_<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shouldn&apos;t<sp/>happen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model_1aac8329ca5408cc3636258390e80277f5" kindref="member">ParagraphModel::Comparable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model" kindref="compound">ParagraphModel</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(justification_<sp/>!=<sp/>other.justification_)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(justification_<sp/>==<sp/>JUSTIFICATION_CENTER<sp/>||</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>justification_<sp/>==<sp/>JUSTIFICATION_UNKNOWN)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_paragraph_model_1a5b8f05844a3320fb2a6ac0efd5b24045" kindref="member">tolerance</ref><sp/>=<sp/>(tolerance_<sp/>+<sp/>other.tolerance_)<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(margin_<sp/>+<sp/>first_indent_,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.margin_<sp/>+<sp/>other.first_indent_,<sp/>tolerance)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="host_8h_1a80998b3d098c50b53b1f275adeafe267" kindref="member">NearlyEqual</ref>(margin_<sp/>+<sp/>body_indent_,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.margin_<sp/>+<sp/>other.body_indent_,<sp/>tolerance);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/><ref refid="class_paragraph_model_1a602f01af8ff434945dc2a952aa874271" kindref="member">ParagraphModel::ToString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[200];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref><sp/>&amp;alignment<sp/>=<sp/>ParagraphJustificationToString(justification_);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>snprintf(buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buffer),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;margin:<sp/>%d,<sp/>first_indent:<sp/>%d,<sp/>body_indent:<sp/>%d,<sp/>alignment:<sp/>%s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margin_,<sp/>first_indent_,<sp/>body_indent_,<sp/>alignment.<ref refid="class_s_t_r_i_n_g_1a32beee43ecab1bed8bebc3466896ad6e" kindref="member">string</ref>());</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_s_t_r_i_n_g" kindref="compound">STRING</ref>(buffer);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/makoto/Desktop/trunk/ccstruct/ocrpara.cpp"/>
  </compounddef>
</doxygen>
